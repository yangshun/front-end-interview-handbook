{
  "description": "var Component=(()=>{var h=Object.create;var d=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),g=(t,e)=>{for(var o in e)d(t,o,{get:e[o],enumerable:!0})},c=(t,e,o,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of p(e))!v.call(t,i)&&i!==o&&d(t,i,{get:()=>e[i],enumerable:!(r=u(e,i))||r.enumerable});return t};var x=(t,e,o)=>(o=t!=null?h(m(t)):{},c(e||!t||!t.__esModule?d(o,\"default\",{value:t,enumerable:!0}):o,t)),j=t=>c(d({},\"__esModule\",{value:!0}),t);var s=f((E,l)=>{l.exports=_jsx_runtime});var _={};g(_,{default:()=>k,frontmatter:()=>O});var n=x(s()),O={title:\"useClickOutside\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u68C0\\u6D4B\\u6307\\u5B9A\\u5143\\u7D20\\u5916\\u90E8\\u70B9\\u51FB\\u7684 Hook\"};function a(t){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\",a:\"a\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A \",(0,n.jsx)(e.code,{children:\"useClickOutside\"}),\" Hook\\uFF0C\\u7528\\u4E8E\\u68C0\\u6D4B\\u6307\\u5B9A\\u5143\\u7D20\\u5916\\u90E8\\u7684\\u70B9\\u51FB\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`export default function Component() {\n  const target = useRef(null);\n  useClickOutside(target, () => console.log('Clicked outside'));\n\n  return (\n    <div>\n      <div ref={target}>Click outside me</div>\n      <div>Maybe here?</div>\n    </div>\n  );\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u53C2\\u6570\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"ref: RefObject<T>\"}),\": \\u8981\\u68C0\\u6D4B\\u5176\\u5916\\u90E8\\u70B9\\u51FB\\u7684\\u5143\\u7D20\\u7684 ref \\u5BF9\\u8C61\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"handler: (event) => void\"}),\": \\u5F53\\u68C0\\u6D4B\\u5230\\u5916\\u90E8\\u70B9\\u51FB\\u65F6\\u8981\\u8C03\\u7528\\u7684\\u4E8B\\u4EF6\\u5904\\u7406\\u51FD\\u6570\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"eventType: 'mousedown' | 'touchstart'\"}),\": \\u8981\\u76D1\\u542C\\u7684\\u4E8B\\u4EF6\\u7C7B\\u578B\\u3002\\u9ED8\\u8BA4\\u4E3A \",(0,n.jsx)(e.code,{children:\"'mousedown'\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"eventOptions: boolean | AddEventListenerOptions\"}),\":  \",(0,n.jsxs)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#options\",children:[(0,n.jsx)(e.code,{children:\"AddEventListenerOptions\"}),\" \\u9009\\u9879\\u5BF9\\u8C61\"]}),\"\\uFF0C\\u7528\\u4E8E\\u6307\\u5B9A\\u5173\\u4E8E\\u4E8B\\u4EF6\\u76D1\\u542C\\u5668\\u7684\\u7279\\u6027\\u3002\\u8FD9\\u662F\\u4E00\\u4E2A\\u53EF\\u9009\\u53C2\\u6570\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8FD4\\u56DE\\u503C\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u65E0\\u3002\"})]})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(a,t)})):a(t)}var k=C;return j(_);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/use-click-outside\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/use-click-outside.ts\",\n  \"dependencies\": {\n    \"@testing-library/react\": \"14.0.0\",\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"@types/react\": \"18.2.25\",\n    \"@types/react-dom\": \"18.2.10\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/use-click-outside.run.test.tsx": "import React from 'react';\nimport { act, fireEvent, render, renderHook } from '@testing-library/react';\n\nimport useClickOutside from './use-click-outside';\nimport { useRef } from 'react';\n\ndescribe('useClickOutside', () => {\n  test('return values', () => {\n    const { result } = renderHook(() => {\n      const ref = useRef<HTMLDivElement>(null);\n      return useClickOutside(ref, () => {});\n    });\n\n    expect(result.current).toBe(undefined);\n  });\n\n  test('click outside', () => {\n    const handler = jest.fn();\n\n    const Component = () => {\n      const ref = useRef<HTMLDivElement>(null);\n      useClickOutside(ref, handler);\n\n      return (\n        <main>\n          <div ref={ref} data-testid=\"target\">\n            target\n          </div>\n          <div data-testid=\"other\">something else</div>\n        </main>\n      );\n    };\n\n    const page = render(<Component />);\n    const target = page.getByTestId('target');\n    const other = page.getByTestId('other');\n\n    expect(handler).not.toHaveBeenCalled();\n\n    act(() => fireEvent.mouseDown(other));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n\n    act(() => fireEvent.mouseDown(target));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n  });\n});\n",
    "/src/use-click-outside.submit.test.tsx": "import React from 'react';\nimport { act, fireEvent, render, renderHook } from '@testing-library/react';\n\nimport useClickOutside from './use-click-outside';\nimport { useRef } from 'react';\n\ndescribe('useClickOutside', () => {\n  test('return values', () => {\n    const { result } = renderHook(() => {\n      const ref = useRef<HTMLDivElement>(null);\n      return useClickOutside(ref, () => {});\n    });\n\n    expect(result.current).toBe(undefined);\n  });\n\n  test('click outside', () => {\n    const handler = jest.fn();\n\n    const Component = () => {\n      const ref = useRef<HTMLDivElement>(null);\n      useClickOutside(ref, handler);\n\n      return (\n        <main>\n          <div ref={ref} data-testid=\"target\">\n            target\n          </div>\n          <div data-testid=\"other\">something else</div>\n        </main>\n      );\n    };\n\n    const page = render(<Component />);\n    const target = page.getByTestId('target');\n    const other = page.getByTestId('other');\n\n    expect(handler).not.toHaveBeenCalled();\n\n    act(() => fireEvent.mouseDown(other));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n\n    act(() => fireEvent.mouseDown(target));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n  });\n\n  test('options', () => {\n    const handler = jest.fn();\n\n    const Component = () => {\n      const ref = useRef<HTMLDivElement>(null);\n      useClickOutside(ref, handler, 'mousedown', { once: true });\n\n      return (\n        <main>\n          <div ref={ref} data-testid=\"target\">\n            target\n          </div>\n          <div data-testid=\"other\">something else</div>\n        </main>\n      );\n    };\n\n    const page = render(<Component />);\n    const target = page.getByTestId('target');\n    const other = page.getByTestId('other');\n\n    expect(handler).not.toHaveBeenCalled();\n\n    act(() => fireEvent.mouseDown(other));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n\n    act(() => fireEvent.mouseDown(other));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n\n    act(() => fireEvent.mouseDown(target));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n  });\n\n  test('remove listener on unmount', () => {\n    const handler = jest.fn();\n\n    const Component = () => {\n      const ref = useRef<HTMLDivElement>(null);\n      useClickOutside(ref, handler);\n\n      return (\n        <main>\n          <div ref={ref} data-testid=\"target\">\n            target\n          </div>\n          <div data-testid=\"other\">something else</div>\n        </main>\n      );\n    };\n\n    const page = render(<Component />);\n    const target = page.getByTestId('target');\n    const other = page.getByTestId('other');\n\n    expect(handler).not.toHaveBeenCalled();\n\n    act(() => fireEvent.mouseDown(other));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n\n    page.unmount();\n    act(() => fireEvent.mouseDown(other));\n    act(() => fireEvent.mouseDown(target));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n  });\n});\n",
    "/src/use-click-outside.ts": "import { RefObject, useEffect, useRef } from 'react';\n\nexport default function useClickOutside<T extends HTMLElement>(\n  ref: RefObject<T>,\n  handler: (event: MouseEvent | TouchEvent | FocusEvent) => void,\n  eventType: 'mousedown' | 'touchstart' = 'mousedown',\n  eventListenerOptions: boolean | AddEventListenerOptions = {},\n) {\n  const latestHandler = useRef(handler);\n  latestHandler.current = handler;\n\n  useEffect(() => {\n    const listener = (event: MouseEvent | TouchEvent | FocusEvent) => {\n      const target = event.target as Node;\n      if (!target || !target.isConnected) {\n        return;\n      }\n\n      const outside = ref.current && !ref.current.contains(target);\n      if (!outside) {\n        return;\n      }\n\n      latestHandler.current(event);\n    };\n\n    window.addEventListener(eventType, listener, eventListenerOptions);\n\n    return () => {\n      window.removeEventListener(eventType, listener, eventListenerOptions);\n    };\n  }, [ref, eventType, eventListenerOptions]);\n}\n"
  },
  "info": {
    "excerpt": "实现一个检测指定元素外部点击的 Hook",
    "title": "useClickOutside"
  },
  "metadata": {
    "access": "premium",
    "author": "phillmont",
    "companies": [],
    "created": 1742169600,
    "difficulty": "medium",
    "duration": 15,
    "featured": false,
    "format": "javascript",
    "frameworkDefault": "react",
    "frameworks": [
      {
        "framework": "react",
        "href": "/questions/javascript/use-click-outside"
      }
    ],
    "href": "/questions/javascript/use-click-outside",
    "importance": "medium",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "use-click-anywhere"
    ],
    "slug": "use-click-outside",
    "subtitle": null,
    "topics": [
      "react-hooks"
    ]
  },
  "skeleton": {
    "js": "/**\n * @template T\n * @param {import(\"react\").RefObject<T>} ref\n * @param {(event) => void} handler\n * @param {'mousedown' | 'touchstart' | undefined} eventType\n * @param {boolean | AddEventListenerOptions | undefined} eventListenerOptions\n */\nexport default function useClickOutside(\n  ref,\n  handler,\n  eventType = 'mousedown',\n  eventListenerOptions = {},\n) {\n  throw 'Not implemented';\n}",
    "ts": "import { RefObject } from 'react';\n\nexport default function useClickOutside<T extends HTMLElement>(\n  ref: RefObject<T>,\n  handler: (event: MouseEvent | TouchEvent | FocusEvent) => void,\n  eventType: 'mousedown' | 'touchstart' = 'mousedown',\n  eventListenerOptions?: boolean | AddEventListenerOptions,\n) {\n  throw 'Not implemented';\n}"
  },
  "solution": "var Component=(()=>{var v=Object.create;var s=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,E=Object.prototype.hasOwnProperty;var O=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),g=(t,e)=>{for(var r in e)s(t,r,{get:e[r],enumerable:!0})},i=(t,e,r,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of p(e))!E.call(t,o)&&o!==r&&s(t,o,{get:()=>e[o],enumerable:!(c=h(e,o))||c.enumerable});return t};var x=(t,e,r)=>(r=t!=null?v(m(t)):{},i(e||!t||!t.__esModule?s(r,\"default\",{value:t,enumerable:!0}):r,t)),L=t=>i(s({},\"__esModule\",{value:!0}),t);var a=O((_,d)=>{d.exports=_jsx_runtime});var M={};g(M,{default:()=>C});var n=x(a());var l=MDXCodeBlock;var u=`import { RefObject, useEffect, useRef } from 'react';\n\nexport default function useClickOutside<T extends HTMLElement>(\n  ref: RefObject<T>,\n  handler: (event: MouseEvent | TouchEvent | FocusEvent) => void,\n  eventType: 'mousedown' | 'touchstart' = 'mousedown',\n  eventListenerOptions: boolean | AddEventListenerOptions = {},\n) {\n  const latestHandler = useRef(handler);\n  latestHandler.current = handler;\n\n  useEffect(() => {\n    const listener = (event: MouseEvent | TouchEvent | FocusEvent) => {\n      const target = event.target as Node;\n      if (!target || !target.isConnected) {\n        return;\n      }\n\n      const outside = ref.current && !ref.current.contains(target);\n      if (!outside) {\n        return;\n      }\n\n      latestHandler.current(event);\n    };\n\n    window.addEventListener(eventType, listener, eventListenerOptions);\n\n    return () => {\n      window.removeEventListener(eventType, listener, eventListenerOptions);\n    };\n  }, [ref, eventType, eventListenerOptions]);\n}\n`;function f(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",a:\"a\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"useClickOutside\"}),\" \\u94A9\\u5B50\\u53EF\\u4EE5\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"useEffect\"}),\" \\u5B9E\\u73B0\\uFF0C\\u4EE5\\u5206\\u522B\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"addEventListener\"}),\" \\u548C \",(0,n.jsx)(e.code,{children:\"removeEventListener\"}),\" \\u5C06\\u6211\\u4EEC\\u7684\\u5916\\u90E8\\u70B9\\u51FB\\u4E8B\\u4EF6\\u4FA6\\u542C\\u5668\\u9644\\u52A0\\u548C\\u5206\\u79BB\\u5230\\u6587\\u6863\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u8981\\u68C0\\u6D4B\\u70B9\\u51FB\\u662F\\u5426\\u5728\\u76EE\\u6807\\u5143\\u7D20\\u4E4B\\u5916\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u5728 \",(0,n.jsx)(e.code,{children:\"ref\"}),\" \\u5143\\u7D20\\u4E0A\\u4F7F\\u7528 \",(0,n.jsxs)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\",children:[(0,n.jsx)(e.code,{children:\"contains\"}),\" \\u65B9\\u6CD5\"]}),\" \\u6765\\u68C0\\u67E5 \",(0,n.jsx)(e.code,{children:\"event.target\"}),\" \\u662F\\u5426\\u662F\\u76EE\\u6807\\u5143\\u7D20\\u7684\\u540E\\u4EE3\\u3002\"]}),`\n`,(0,n.jsx)(l,{children:u})]})}function T(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(f,t)})):f(t)}var C=T;return L(M);})();\n;return Component;",
  "workspace": {
    "main": "/src/use-click-outside.ts",
    "run": "/src/use-click-outside.run.test.tsx",
    "submit": "/src/use-click-outside.submit.test.tsx"
  }
}