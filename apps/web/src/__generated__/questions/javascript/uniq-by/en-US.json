{
  "description": "var Component=(()=>{var s=Object.create;var t=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var f=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),x=(r,e)=>{for(var a in e)t(r,a,{get:e[a],enumerable:!0})},o=(r,e,a,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of m(e))!p.call(r,i)&&i!==a&&t(r,i,{get:()=>e[i],enumerable:!(c=u(e,i))||c.enumerable});return r};var g=(r,e,a)=>(a=r!=null?s(y(r)):{},o(e||!r||!r.__esModule?t(a,\"default\",{value:r,enumerable:!0}):a,r)),j=r=>o(t({},\"__esModule\",{value:!0}),r);var d=f((T,l)=>{l.exports=_jsx_runtime});var _={};x(_,{default:()=>B,frontmatter:()=>q});var n=g(d()),q={title:\"Unique By\",excerpt:\"Implement a function to remove all duplicate values from an array based on a specific criteria\"};function h(r){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\",em:\"em\",ul:\"ul\",a:\"a\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Implement a function \",(0,n.jsx)(e.code,{children:\"uniqBy\"}),\" that takes in an array and returns a duplicate-free version of \",(0,n.jsx)(e.code,{children:\"array\"}),\" where only the first occurrence of each element based on a function \",(0,n.jsx)(e.code,{children:\"iteratee\"}),\" is kept. The order of result values is determined by the order they occur in \",(0,n.jsx)(e.code,{children:\"array\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`uniqBy(array, iteratee);\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Arguments\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"array\"}),\" \",(0,n.jsx)(e.em,{children:\"(Array)\"}),\": The array to iterate over.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"iteratee\"}),\" \",(0,n.jsx)(e.em,{children:\"(Function)\"}),\": The iteratee invoked per element. The function is invoked with one argument: (value).\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Returns\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.em,{children:(0,n.jsx)(e.code,{children:\"(Array)\"})}),\": Returns the unique array.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Examples\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`uniqBy([2.1, 1.2, 2.3], Math.floor); // => [2.1, 1.2]\n\nuniqBy([{ x: 1 }, { x: 2 }, { x: 1 }], (o) => o.x); //\\xA0=>\\xA0[{\\xA0x:\\xA01\\xA0},\\xA0{\\xA0x:\\xA02\\xA0}]\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The function should return an empty array if \",(0,n.jsx)(e.code,{children:\"array\"}),\" is empty and leave the treat false values as-is.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`uniqBy([], (o) => o.m); // => []\n\nuniqBy([{ n: 1 }, { m: 2 }], (o) => o.m); // => [{ n: 1 }, { m: 2 }]\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://lodash.com/docs/#uniqBy\",children:[\"Lodash \",(0,n.jsx)(e.code,{children:\"_.uniqBy\"})]})}),`\n`]})]})}function v(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(h,r)})):h(r)}var B=v;return j(_);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/uniq-by\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/uniq-by.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/uniq-by.run.test.ts": "import uniqBy from './uniq-by';\n\ndescribe('uniqBy', () => {\n  test('empty array', () => {\n    expect(uniqBy([], (o: any) => o.m)).toEqual([]);\n  });\n\n  test('one value', () => {\n    expect(uniqBy([0])).toEqual([0]);\n  });\n\n  test('different values', () => {\n    expect(uniqBy([2.1, 1.2, 2.3], Math.floor)).toEqual([2.1, 1.2]);\n  });\n\n  test('duplicate values', () => {\n    expect(uniqBy([{ x: 1 }, { x: 2 }, { x: 1 }], (o: any) => o.x)).toEqual([\n      { x: 1 },\n      { x: 2 },\n    ]);\n  });\n});\n",
    "/src/uniq-by.submit.test.ts": "import uniqBy from './uniq-by';\n\ndescribe('uniqBy', () => {\n  test('empty array', () => {\n    expect(uniqBy([], (value: any) => value)).toEqual([]);\n  });\n\n  test('duplicate values', () => {\n    expect(uniqBy([2, 1, 2], (value: any) => value)).toEqual([2, 1]);\n    expect(uniqBy([2, 2, 1], (value: any) => value)).toEqual([2, 1]);\n    expect(uniqBy([2, 1, 2, 3], (value: any) => value)).toEqual([2, 1, 3]);\n  });\n\n  test('iteratee as a string', () => {\n    expect(uniqBy([{ n: 1 }, { n: 2 }, { n: 1 }], (o: any) => o.n)).toEqual([\n      { n: 1 },\n      { n: 2 },\n    ]);\n    expect(\n      uniqBy([{ age: 30 }, { age: 22 }, { age: 22 }], (o: any) => o.age),\n    ).toEqual([{ age: 30 }, { age: 22 }]);\n  });\n\n  test('iteratee as a function', () => {\n    expect(\n      uniqBy(\n        [{ data: { score: 10 } }, { data: { score: 10 } }],\n        (o: any) => o.data.score,\n      ),\n    ).toEqual([{ data: { score: 10 } }]);\n  });\n\n  test('strings comparison', () => {\n    expect(\n      uniqBy(['apple', 'pear', 'mango'], (fruit: any) => fruit.length),\n    ).toEqual(['apple', 'pear']);\n  });\n\n  test('non-existent property', () => {\n    expect(uniqBy([{ n: 1 }, { n: 2 }], (o: any) => o.m)).toEqual([{ n: 1 }]);\n    expect(uniqBy([{ n: 1 }, { m: 2 }], (o: any) => o.m)).toEqual([\n      { n: 1 },\n      { m: 2 },\n    ]);\n  });\n\n  test('mixed data types', () => {\n    expect(uniqBy([1, '2', 3], (item: any) => Number(item))).toEqual([\n      1,\n      '2',\n      3,\n    ]);\n  });\n});\n",
    "/src/uniq-by.ts": "export default function uniqBy<T>(\n  array: Array<T>,\n  iteratee: Function = (value: T) => value,\n): Array<T> {\n  const result: Array<T> = [];\n  const compare: Array<T> = [];\n\n  array.forEach((item) => {\n    if (!compare.includes(iteratee(item))) {\n      result.push(item);\n      compare.push(iteratee(item));\n    }\n  });\n  return result;\n}\n"
  },
  "info": {
    "excerpt": "Implement a function to remove all duplicate values from an array based on a specific criteria",
    "title": "Unique By"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [],
    "created": 1710806400,
    "difficulty": "medium",
    "duration": 15,
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/uniq-by",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": false,
    "ranking": 100,
    "similarQuestions": [
      "data-selection",
      "unique-array",
      "max-by"
    ],
    "slug": "uniq-by",
    "subtitle": null,
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per element.\n * @returns {Array} Returns the unique array.\n */\nexport default function uniqBy(array, iteratee = (value) => value) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function uniqBy<T>(\n  array: Array<T>,\n  iteratee: Function = (value: T) => value,\n): Array<T> {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var f=Object.create;var i=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,q=Object.prototype.hasOwnProperty;var k=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),v=(t,e)=>{for(var n in e)i(t,n,{get:e[n],enumerable:!0})},s=(t,e,n,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of g(e))!q.call(t,a)&&a!==n&&i(t,a,{get:()=>e[a],enumerable:!(c=x(e,a))||c.enumerable});return t};var A=(t,e,n)=>(n=t!=null?f(T(t)):{},s(e||!t||!t.__esModule?i(n,\"default\",{value:t,enumerable:!0}):n,t)),B=t=>s(i({},\"__esModule\",{value:!0}),t);var u=k((M,l)=>{l.exports=_jsx_runtime});var E={};v(E,{default:()=>C});var r=A(u());var o=MDXCodeBlock;var h=`/**\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per element.\n * @returns {Array} Returns the unique array.\n */\nexport default function uniqBy(array, iteratee = (value) => value) {\n  const result = [];\n  const compare = [];\n\n  array.forEach((item) => {\n    if (!compare.includes(iteratee(item))) {\n      result.push(item);\n      compare.push(iteratee(item));\n    }\n  });\n\n  return result;\n}\n`;var d=`export default function uniqBy<T>(\n  array: Array<T>,\n  iteratee: Function = (value: T) => value,\n): Array<T> {\n  const result: Array<T> = [];\n  const compare: Array<T> = [];\n\n  array.forEach((item) => {\n    if (!compare.includes(iteratee(item))) {\n      result.push(item);\n      compare.push(iteratee(item));\n    }\n  });\n  return result;\n}\n`;var m=`export default function uniqBy(array, iteratee = (value) => value) {\n  const compare = new Set();\n  const result = [];\n\n  array.forEach((item) => {\n    if (!compare.has(iteratee(item))) {\n      result.push(item);\n      compare.add(iteratee(item));\n    }\n  });\n\n  return result;\n}\n`;var p=`export default function uniqBy<T>(\n  array: Array<T>,\n  iteratee: Function = (value: T) => value,\n): Array<T> {\n  const result: Array<T> = [];\n  const compare = new Set<T>();\n\n  array.forEach((item) => {\n    if (!compare.has(iteratee(item))) {\n      result.push(item);\n      compare.add(iteratee(item));\n    }\n  });\n\n  return result;\n}\n`;function y(t){let e=Object.assign({h2:\"h2\",h3:\"h3\",ol:\"ol\",li:\"li\",code:\"code\",p:\"p\",ul:\"ul\",a:\"a\"},t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,r.jsx)(e.h3,{children:\"Approach 1: Using array to store unique key values\"}),`\n`,(0,r.jsxs)(e.ol,{children:[`\n`,(0,r.jsxs)(e.li,{children:[\"Create an empty \",(0,r.jsx)(e.code,{children:\"compare\"}),\" array to store the unique keys.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[\"Iterate through \",(0,r.jsx)(e.code,{children:\"array\"}),\" and determine the key for each element by calling \",(0,r.jsx)(e.code,{children:\"iteratee(element)\"}),\". If the key does not exist within \",(0,r.jsx)(e.code,{children:\"compare\"}),\", insert the key into \",(0,r.jsx)(e.code,{children:\"compare\"}),\". Next, append the element into \",(0,r.jsx)(e.code,{children:\"result\"}),\".\"]}),`\n`]}),`\n`,(0,r.jsx)(e.p,{children:\"Two variables are used:\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:\"result\"}),\": Tracks the unique elements from \",(0,r.jsx)(e.code,{children:\"array\"}),\".\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:\"compare\"}),\": Tracks the unique computed value of the elements through \",(0,r.jsx)(e.code,{children:\"iteratee\"}),\" to be used for comparison.\"]}),`\n`]}),`\n`,(0,r.jsx)(o,{languages:{jsx:h,tsx:d}}),`\n`,(0,r.jsxs)(e.h3,{children:[\"Approach 2: Using Set instead of array for \",(0,r.jsx)(e.code,{children:\"compare\"})]}),`\n`,(0,r.jsxs)(e.p,{children:[\"Alternatively, we can use a \",(0,r.jsx)(e.code,{children:\"Set\"}),\" to replace the \",(0,r.jsx)(e.code,{children:\"compare\"}),\" array to check for unique elements. A \",(0,r.jsx)(e.code,{children:\"Set\"}),\" can help in tracking uniqueness which ensures faster lookups (constant time complexity) for large datasets, making it more efficient than the previous code which uses an array (\",(0,r.jsx)(e.code,{children:\"compare.includes\"}),\") for tracking, resulting in slower (linear time complexity) lookups as the dataset grows.\"]}),`\n`,(0,r.jsx)(o,{languages:{jsx:m,tsx:p}}),`\n`,(0,r.jsx)(e.h2,{children:\"Edge cases\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"To handle mixed data types, the \",(0,r.jsx)(e.code,{children:\"iteratee\"}),\" function must be able to process them by either converting the elements to a common type or process them separately.\"]}),`\n`,(0,r.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:(0,r.jsxs)(e.a,{href:\"https://lodash.com/docs/4.17.15#uniqBy\",children:[\"Lodash \",(0,r.jsx)(e.code,{children:\"_.uniqBy\"})]})}),`\n`]})]})}function _(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(y,t)})):y(t)}var C=_;return B(E);})();\n;return Component;",
  "workspace": {
    "main": "/src/uniq-by.ts",
    "run": "/src/uniq-by.run.test.ts",
    "submit": "/src/uniq-by.submit.test.ts"
  }
}