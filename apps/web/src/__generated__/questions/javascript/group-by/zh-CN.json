{
  "description": "var Component=(()=>{var s=Object.create;var l=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var y=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),j=(r,e)=>{for(var c in e)l(r,c,{get:e[c],enumerable:!0})},o=(r,e,c,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let d of p(e))!g.call(r,d)&&d!==c&&l(r,d,{get:()=>e[d],enumerable:!(i=u(e,d))||i.enumerable});return r};var x=(r,e,c)=>(c=r!=null?s(m(r)):{},o(e||!r||!r.__esModule?l(c,\"default\",{value:r,enumerable:!0}):c,r)),f=r=>o(l({},\"__esModule\",{value:!0}),r);var a=y((N,t)=>{t.exports=_jsx_runtime});var b={};j(b,{default:()=>M,frontmatter:()=>B});var n=x(a()),B={title:\"\\u5206\\u7EC4\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u51FD\\u6570\\uFF0C\\u8BE5\\u51FD\\u6570\\u6839\\u636E\\u51FD\\u6570\\u6216\\u5C5E\\u6027\\u540D\\u79F0\\u5BF9\\u6570\\u7EC4\\u4E2D\\u7684\\u503C\\u8FDB\\u884C\\u5206\\u7EC4\"};function h(r){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\",em:\"em\",ul:\"ul\",a:\"a\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u51FD\\u6570 \",(0,n.jsx)(e.code,{children:\"groupBy(array, iteratee)\"}),\"\\uFF0C\\u5B83\\u63A5\\u53D7\\u4E00\\u4E2A\\u6570\\u7EC4\\u548C\\u4E00\\u4E2A \",(0,n.jsx)(e.code,{children:\"iteratee\"}),\" \\u51FD\\u6570\\uFF0C\\u5E76\\u6839\\u636E \",(0,n.jsx)(e.code,{children:\"iteratee\"}),\" \\u5BF9\\u6570\\u7EC4\\u4E2D\\u7684\\u503C\\u8FDB\\u884C\\u5206\\u7EC4\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`groupBy(array, iteratee);\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u53C2\\u6570\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"array\"}),\" \",(0,n.jsx)(e.em,{children:\"(Array)\"}),\": \\u8981\\u8FED\\u4EE3\\u7684\\u6570\\u7EC4\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"iteratee\"}),\" \",(0,n.jsx)(e.em,{children:\"(Function)\"}),\": \\u7528\\u4E8E\\u8F6C\\u6362\\u5143\\u7D20\\u7684 iteratee\\u3002\\u8BE5\\u51FD\\u6570\\u4F7F\\u7528\\u4E00\\u4E2A\\u53C2\\u6570\\u8C03\\u7528\\uFF1A(value)\\u3002\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8FD4\\u56DE\\u503C\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.em,{children:(0,n.jsx)(e.code,{children:\"(Object)\"})}),\": \\u8FD4\\u56DE\\u7EC4\\u5408\\u7684\\u805A\\u5408\\u5BF9\\u8C61\\u3002\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u4F8B\\u5B50\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`groupBy([6.1, 4.2, 6.3], Math.floor);\n// => { '4': [4.2], '6': [6.1, 6.3] }\n\ngroupBy([{ n: 3 }, { n: 5 }, { n: 3 }], (o) => o.n);\n// => { '3': [{ n: 3 }, { n: 3 }], '5': { n: 5 } }\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u5F53 \",(0,n.jsx)(e.code,{children:\"array\"}),\" \\u4E3A\\u7A7A\\u65F6\\uFF0C\\u8BE5\\u51FD\\u6570\\u5E94\\u8FD4\\u56DE \",(0,n.jsx)(e.code,{children:\"{}\"}),\"\\uFF0C\\u5E76\\u5728\\u901A\\u8FC7 \",(0,n.jsx)(e.code,{children:\"iteratee\"}),\" \\u540E\\u5C06 \",(0,n.jsx)(e.code,{children:\"null\"}),\" / \",(0,n.jsx)(e.code,{children:\"undefined\"}),\" \\u952E\\u89C6\\u4E3A\\u5176\\u672C\\u8EAB\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`groupBy([], (o) => o); // => {}\n\ngroupBy([{ n: 1 }, { n: 2 }], (o) => o.m); // => { undefined: [{ n: 1 }, { n: 2 }] }\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8D44\\u6E90\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://lodash.com/docs/#groupBy\",children:[\"Lodash \",(0,n.jsx)(e.code,{children:\"_.groupBy\"})]})}),`\n`]})]})}function _(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(h,r)})):h(r)}var M=_;return f(b);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/group-by\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/group-by.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"esnext\"],\n    \"jsx\": \"react-jsx\"\n  }\n}\n",
    "/src/group-by.run.test.ts": "import groupBy from './group-by';\n\ndescribe('groupBy', () => {\n  test('empty array', () => {\n    expect(groupBy([], (o: any) => o)).toEqual({});\n  });\n\n  test('function iteratees', () => {\n    expect(groupBy([6.1, 4.2, 6.3], Math.floor)).toEqual({\n      4: [4.2],\n      6: [6.1, 6.3],\n    });\n  });\n\n  test('multiple element arrays', () => {\n    expect(groupBy(['one', 'two', 'three'], (o: string) => o.length)).toEqual({\n      3: ['one', 'two'],\n      5: ['three'],\n    });\n  });\n});\n",
    "/src/group-by.submit.test.ts": "import groupBy from './group-by';\n\ndescribe('groupBy', () => {\n  test('empty array', () => {\n    expect(groupBy([], (o: any) => o)).toEqual({});\n  });\n\n  describe('function iteratees', () => {\n    test('single-element arrays', () => {\n      expect(groupBy([6.1], Math.floor)).toEqual({ 6: [6.1] });\n    });\n\n    test('two-element arrays', () => {\n      expect(groupBy([6.1, 4.2], Math.floor)).toEqual({ 4: [4.2], 6: [6.1] });\n    });\n\n    test('multiple element arrays', () => {\n      expect(groupBy([6.1, 4.2, 6.3], Math.floor)).toEqual({\n        4: [4.2],\n        6: [6.1, 6.3],\n      });\n    });\n\n    test('keys that are also properties', () => {\n      expect(groupBy(['one', 'two', 'three'], () => 'length')).toEqual({\n        length: ['one', 'two', 'three'],\n      });\n    });\n  });\n\n  describe('property iteratees', () => {\n    test('single-element arrays', () => {\n      expect(groupBy(['one'], (o: string) => o.length)).toEqual({ 3: ['one'] });\n    });\n\n    test('two-element arrays', () => {\n      expect(groupBy(['one', 'two'], (o: string) => o.length)).toEqual({\n        3: ['one', 'two'],\n      });\n    });\n\n    test('multiple element arrays', () => {\n      expect(groupBy(['one', 'two', 'three'], (o: string) => o.length)).toEqual(\n        {\n          3: ['one', 'two'],\n          5: ['three'],\n        },\n      );\n    });\n\n    test('groups elements of array of objects by a property', () => {\n      const users = [\n        { user: 'barney', age: 36 },\n        { user: 'fred', age: 40 },\n        { user: 'pebbles', age: 1 },\n      ];\n\n      expect(groupBy(users, (o: any) => o.age)).toEqual({\n        36: [{ user: 'barney', age: 36 }],\n        40: [{ user: 'fred', age: 40 }],\n        1: [{ user: 'pebbles', age: 1 }],\n      });\n    });\n  });\n\n  test('does not mutate the original array', () => {\n    const arr = ['one', 'two', 'three'];\n    const copy = arr.slice();\n    groupBy(arr, (o: string) => o.length);\n    expect(arr).toEqual(copy);\n  });\n\n  test('false values', () => {\n    expect(groupBy([{ n: 1 }, { n: 2 }], (o: any) => o.m)).toEqual({\n      undefined: [{ n: 1 }, { n: 2 }],\n    });\n  });\n});\n",
    "/src/group-by.ts": "export default function groupBy<T>(\n  array: Array<T>,\n  iteratee: (value: T) => number | string,\n): Record<string, Array<T>> {\n  const result: Record<string, Array<T>> = {};\n\n  for (const element of array) {\n    const key = iteratee(element);\n    if (!Object.prototype.hasOwnProperty.call(result, key)) {\n      result[key] = [];\n    }\n\n    result[key].push(element);\n  }\n\n  return result;\n}\n"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [
      "linkedin"
    ],
    "created": 1690502400,
    "difficulty": "medium",
    "duration": 15,
    "excerpt": "实现一个函数，该函数根据函数或属性名称对数组中的值进行分组",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/group-by",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "count-by"
    ],
    "slug": "group-by",
    "subtitle": null,
    "title": "分组",
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n */\nexport default function groupBy(array, iteratee) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function groupBy<T>(\n  array: Array<T>,\n  iteratee: (value: T) => number | string,\n): Record<string, Array<T>> {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var f=Object.create;var a=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var k=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var T=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=>{for(var n in e)a(t,n,{get:e[n],enumerable:!0})},c=(t,e,n,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of j(e))!x.call(t,o)&&o!==n&&a(t,o,{get:()=>e[o],enumerable:!(s=g(e,o))||s.enumerable});return t};var O=(t,e,n)=>(n=t!=null?f(k(t)):{},c(e||!t||!t.__esModule?a(n,\"default\",{value:t,enumerable:!0}):n,t)),B=t=>c(a({},\"__esModule\",{value:!0}),t);var i=T((X,u)=>{u.exports=_jsx_runtime});var D={};b(D,{default:()=>C});var r=O(i());var l=MDXCodeBlock;var d=`/**\n * @param {Array|Object} array The array to iterate over.\n * @param {Function} iteratee The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n */\nexport default function groupBy(array, iteratee) {\n  const result = {};\n\n  for (const element of array) {\n    const key = iteratee(element);\n    if (!Object.prototype.hasOwnProperty.call(result, key)) {\n      result[key] = [];\n    }\n\n    result[key].push(element);\n  }\n\n  return result;\n}\n`;var y=`export default function groupBy<T>(\n  array: Array<T>,\n  iteratee: (value: T) => number | string,\n): Record<string, Array<T>> {\n  const result: Record<string, Array<T>> = {};\n\n  for (const element of array) {\n    const key = iteratee(element);\n    if (!Object.prototype.hasOwnProperty.call(result, key)) {\n      result[key] = [];\n    }\n\n    result[key].push(element);\n  }\n\n  return result;\n}\n`;var h=`/**\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n */\nexport default function groupBy(array, iteratee) {\n  const result = Object.create(null);\n\n  for (const element of array) {\n    const key = iteratee(element);\n    result[key] ??= [];\n    result[key].push(element);\n  }\n\n  return result;\n}\n`;var p=`export default function groupBy<T>(\n  array: Array<T>,\n  iteratee: (value: T) => number | string,\n): Record<string, Array<T>> {\n  const result: Record<string, Array<T>> = Object.create(null);\n  for (const element of array) {\n    const key = iteratee(element);\n    result[key] ??= [];\n    result[key].push(element);\n  }\n  return result;\n}\n`;function m(t){let e=Object.assign({h2:\"h2\",h3:\"h3\",ol:\"ol\",li:\"li\",code:\"code\",p:\"p\",a:\"a\",ul:\"ul\"},t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,r.jsx)(e.h3,{children:\"\\u65B9\\u6CD5 1\\uFF1A\\u57FA\\u672C\\u51FD\\u6570\\u7684\\u6807\\u51C6\\u65B9\\u6CD5\"}),`\n`,(0,r.jsxs)(e.ol,{children:[`\n`,(0,r.jsxs)(e.li,{children:[\"\\u521B\\u5EFA\\u4E00\\u4E2A\\u7A7A\\u7684 \",(0,r.jsx)(e.code,{children:\"results\"}),\" \\u5BF9\\u8C61\\uFF0C\\u7528\\u4E8E\\u5B58\\u50A8\\u6BCF\\u4E2A\\u952E\\u7684\\u51FA\\u73B0\\u6B21\\u6570\\u7684\\u7EC4\\u3002\"]}),`\n`,(0,r.jsxs)(e.li,{children:[\"\\u904D\\u5386\\u6570\\u7EC4\\uFF0C\\u901A\\u8FC7\\u8C03\\u7528 \",(0,r.jsx)(e.code,{children:\"iteratee(element)\"}),\" \\u786E\\u5B9A\\u6BCF\\u4E2A\\u5143\\u7D20\\u7684\\u952E\\u3002\\u5982\\u679C\\u8BE5\\u952E\\u5728 \",(0,r.jsx)(e.code,{children:\"results\"}),\" \\u5BF9\\u8C61\\u4E2D\\u4E0D\\u5B58\\u5728\\uFF0C\\u5219\\u5C06\\u8BE5\\u952E\\u7684\\u503C\\u8BBE\\u7F6E\\u4E3A\\u4E00\\u4E2A\\u7A7A\\u6570\\u7EC4\\u3002\\u63A5\\u4E0B\\u6765\\uFF0C\\u5C06\\u8BE5\\u5143\\u7D20\\u8FFD\\u52A0\\u5230\\u8BE5\\u952E\\u4E2D\\u3002\"]}),`\n`]}),`\n`,(0,r.jsx)(l,{languages:{jsx:d,tsx:y}}),`\n`,(0,r.jsx)(e.h3,{children:\"\\u65B9\\u6CD5 2\\uFF1A\\u4F7F\\u7528\\u7A7A\\u503C\\u5408\\u5E76\\u8D4B\\u503C\\u8FD0\\u7B97\\u7B26\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"\\u521B\\u5EFA \",(0,r.jsx)(e.code,{children:\"result\"}),\" \\u5BF9\\u8C61\\u7684\\u53E6\\u4E00\\u79CD\\u65B9\\u6CD5\\u662F\\u4F7F\\u7528 \",(0,r.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_assignment\",children:\"\\u7A7A\\u503C\\u5408\\u5E76\\u8D4B\\u503C\\u8FD0\\u7B97\\u7B26\"}),\" \\u5C06\\u503C\\u8BBE\\u7F6E\\u4E3A \",(0,r.jsx)(e.code,{children:\"[]\"}),\"\\uFF0C\\u5982\\u679C \",(0,r.jsx)(e.code,{children:\"key\"}),\" \\u5728 \",(0,r.jsx)(e.code,{children:\"result\"}),\" \\u4E2D\\u4E0D\\u5B58\\u5728\\u3002\\u8BF7\\u6CE8\\u610F\\uFF0C\\u4F7F\\u7528\\u7A7A\\u503C\\u5408\\u5E76\\u8D4B\\u503C\\u8FD0\\u7B97\\u7B26\\u610F\\u5473\\u7740\\u60A8\\u53EF\\u80FD\\u6B63\\u5728\\u8BBF\\u95EE\\u7EE7\\u627F\\u7684\\u5C5E\\u6027\\uFF0C\\u8FD9\\u662F\\u4E0D\\u5E0C\\u671B\\u7684\\uFF0C\\u4F46\\u662F\\u7531\\u4E8E\\u5BF9\\u8C61\\u662F\\u901A\\u8FC7 \",(0,r.jsx)(e.code,{children:\"Object.create(null)\"}),\" \\u521B\\u5EFA\\u7684\\uFF0C\\u56E0\\u6B64\\u4E0D\\u4F1A\\u6709\\u7EE7\\u627F\\u7684\\u5C5E\\u6027\\uFF0C\\u53EF\\u4EE5\\u5B89\\u5168\\u4F7F\\u7528\\u3002\"]}),`\n`,(0,r.jsx)(l,{languages:{jsx:h,tsx:p}}),`\n`,(0,r.jsx)(e.h2,{children:\"\\u8D44\\u6E90\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:(0,r.jsxs)(e.a,{href:\"https://lodash.com/docs/#groupBy\",children:[\"Lodash \",(0,r.jsx)(e.code,{children:\"_.groupBy\"})]})}),`\n`]})]})}function M(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(m,t)})):m(t)}var C=M;return B(D);})();\n;return Component;",
  "workspace": {
    "main": "/src/group-by.ts",
    "run": "/src/group-by.run.test.ts",
    "submit": "/src/group-by.submit.test.ts"
  }
}