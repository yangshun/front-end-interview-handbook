{
  "description": "var Component=(()=>{var m=Object.create;var c=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var g=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),y=(i,e)=>{for(var r in e)c(i,r,{get:e[r],enumerable:!0})},l=(i,e,r,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of u(e))!f.call(i,t)&&t!==r&&c(i,t,{get:()=>e[t],enumerable:!(d=s(e,t))||d.enumerable});return i};var x=(i,e,r)=>(r=i!=null?m(p(i)):{},l(e||!i||!i.__esModule?c(r,\"default\",{value:i,enumerable:!0}):r,i)),j=i=>l(c({},\"__esModule\",{value:!0}),i);var o=g((b,h)=>{h.exports=_jsx_runtime});var w={};y(w,{default:()=>v,frontmatter:()=>_});var n=x(o()),_={title:\"Min By\",excerpt:\"Implement a function that finds the minimum element based on the specified criteria\"};function a(i){let e=Object.assign({p:\"p\",code:\"code\",h2:\"h2\",ol:\"ol\",li:\"li\",em:\"em\",pre:\"pre\",ul:\"ul\",a:\"a\"},i.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Implement a function \",(0,n.jsx)(e.code,{children:\"minBy(array, iteratee)\"}),\" that finds the element inside \",(0,n.jsx)(e.code,{children:\"array\"}),\" with the minimum value after going through \",(0,n.jsx)(e.code,{children:\"iteratee\"}),\".\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Arguments\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"array\"}),\" \",(0,n.jsx)(e.em,{children:\"(Array)\"}),\": The array to iterate over.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"iteratee\"}),\" \",(0,n.jsx)(e.em,{children:\"(Function)\"}),\": The iteratee invoked per element, which is a function that accepts one argument: \",(0,n.jsx)(e.em,{children:\"(value)\"}),\".\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Returns\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.em,{children:(0,n.jsx)(e.code,{children:\"(*)\"})}),\": Returns the minimum value.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Examples\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`minBy([2, 3, 1, 4], (num) => num); // => 1\n\nminBy([{ n: 1 }, { n: 2 }], (o) => o.n); // => { n: 1 }\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The function should ignore elements where \",(0,n.jsx)(e.code,{children:\"iteratee\"}),\" produces \",(0,n.jsx)(e.code,{children:\"null\"}),\" or \",(0,n.jsx)(e.code,{children:\"undefined\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`minBy([{ n: 1 }, { n: 2 }], (o) => o.m); // => undefined\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://lodash.com/docs/#minBy\",children:[\"Lodash \",(0,n.jsx)(e.code,{children:\"_.minBy\"})]})}),`\n`]})]})}function B(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,Object.assign({},i,{children:(0,n.jsx)(a,i)})):a(i)}var v=B;return j(w);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/min-by\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/min-by.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/min-by.run.test.ts": "import minBy from './min-by';\n\ndescribe('minBy', () => {\n  test('empty input array', () => {\n    expect(minBy([], () => {})).toEqual(undefined);\n  });\n\n  test('one element', () => {\n    expect(minBy([{ n: 1 }], (o) => o.n)).toEqual({ n: 1 });\n  });\n\n  test('two elements', () => {\n    expect(minBy([{ n: 1 }, { n: 2 }], (o) => o.n)).toEqual({ n: 1 });\n    expect(\n      minBy(\n        [{ data: { score: 20 } }, { data: { score: 10 } }],\n        (o) => o.data.score,\n      ),\n    ).toEqual({ data: { score: 10 } });\n  });\n});\n",
    "/src/min-by.submit.test.ts": "import minBy from './min-by';\n\ndescribe('minBy', () => {\n  test('empty input array', () => {\n    expect(minBy([], () => {})).toEqual(undefined);\n  });\n\n  test('one element', () => {\n    expect(minBy([{ n: 1 }], (o) => o.n)).toEqual({ n: 1 });\n  });\n\n  test('two elements', () => {\n    expect(minBy([{ n: 1 }, { n: 2 }], (o) => o.n)).toEqual({ n: 1 });\n    expect(\n      minBy(\n        [{ data: { score: 20 } }, { data: { score: 10 } }],\n        (o) => o.data.score,\n      ),\n    ).toEqual({ data: { score: 10 } });\n  });\n\n  test('multiple elements', () => {\n    expect(minBy([2, 3, 1, 4], (num) => num)).toEqual(1);\n    expect(minBy([{ n: 1 }, { n: 2 }, { n: 3 }], (o) => o.n)).toEqual({\n      n: 1,\n    });\n  });\n\n  test('strings comparison', () => {\n    expect(\n      minBy(['apricot', 'pear', 'apple', 'banana'], (fruit) => fruit),\n    ).toEqual('apple');\n    expect(minBy(['apple', 'pear', 'banana'], (fruit) => fruit.length)).toEqual(\n      'pear',\n    );\n  });\n\n  describe('non-existent property', () => {\n    test('no match', () => {\n      expect(minBy([{ n: 1 }, { n: 2 }], (o: any) => o.m)).toEqual(undefined);\n    });\n\n    test('partial match', () => {\n      expect(minBy([{ n: 1 }, { n: 2, m: 3 }, { m: 4 }], (o) => o.m)).toEqual({\n        n: 2,\n        m: 3,\n      });\n    });\n  });\n\n  test('first minimum occurrence', () => {\n    expect(\n      minBy(\n        [{ n: 1, m: 3 }, { n: 0, m: 2 }, { n: 2 }, { n: 0 }],\n        (o: any) => o.m,\n      ),\n    ).toEqual({ n: 0, m: 2 });\n  });\n\n  test('mixed data types', () => {\n    expect(minBy([1, '2', 3], (item) => Number(item))).toEqual(1);\n    expect(minBy([4, '2', 3, 2], (item) => Number(item))).toEqual('2');\n    expect(minBy(['1', 2, 3, '-1'], (item) => Number(item))).toEqual('-1');\n  });\n});\n",
    "/src/min-by.ts": "export default function minBy<T>(\n  array: Array<T>,\n  iteratee: (value: T) => any,\n): any {\n  let result, computed;\n\n  // Iterate through array to find the minimum `result`.\n  for (const value of array) {\n    const current = iteratee(value);\n    // Check whether `computed` is assigned any value yet then compare with `current`, else assign an initial value to `computed` where `current` is not `null`.\n    if (current != null && (computed === undefined || current < computed)) {\n      result = value;\n      computed = current; // Store the computed value of the current `result`.\n    }\n  }\n\n  return result;\n}\n"
  },
  "info": {
    "excerpt": "Implement a function that finds the minimum element based on the specified criteria",
    "title": "Min By"
  },
  "metadata": {
    "access": "standard",
    "author": null,
    "companies": [],
    "created": 1710720000,
    "difficulty": "easy",
    "duration": 10,
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/min-by",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "group-by",
      "max-by"
    ],
    "slug": "min-by",
    "subtitle": null,
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n */\nexport default function minBy(array, iteratee) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function minBy<T>(\n  array: Array<T>,\n  iteratee: (value: T) => any,\n): any {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var p=Object.create;var u=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var w=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),x=(r,e)=>{for(var n in e)u(r,n,{get:e[n],enumerable:!0})},i=(r,e,n,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of y(e))!g.call(r,a)&&a!==n&&u(r,a,{get:()=>e[a],enumerable:!(o=f(e,a))||o.enumerable});return r};var T=(r,e,n)=>(n=r!=null?p(v(r)):{},i(e||!r||!r.__esModule?u(n,\"default\",{value:r,enumerable:!0}):n,r)),k=r=>i(u({},\"__esModule\",{value:!0}),r);var l=w((D,c)=>{c.exports=_jsx_runtime});var C={};x(C,{default:()=>_});var t=T(l());var d=MDXCodeBlock;var h=`/**\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n */\nexport default function minBy(array, iteratee) {\n  let result, computed;\n\n  // Iterate through array to find the minimum \\`result\\`.\n  for (const value of array) {\n    const current = iteratee(value);\n    // Check whether \\`computed\\` is assigned any value yet then compare with \\`current\\`, else assign an initial value to \\`computed\\` where \\`current\\` is not \\`null\\`.\n    if (current != null && (computed === undefined || current < computed)) {\n      computed = current; // Store the calculated value of the current \\`result\\`.\n      result = value;\n    }\n  }\n\n  return result;\n}\n`;var s=`export default function minBy<T>(\n  array: Array<T>,\n  iteratee: (value: T) => any,\n): any {\n  let result, computed;\n\n  // Iterate through array to find the minimum \\`result\\`.\n  for (const value of array) {\n    const current = iteratee(value);\n    // Check whether \\`computed\\` is assigned any value yet then compare with \\`current\\`, else assign an initial value to \\`computed\\` where \\`current\\` is not \\`null\\`.\n    if (current != null && (computed === undefined || current < computed)) {\n      result = value;\n      computed = current; // Store the computed value of the current \\`result\\`.\n    }\n  }\n\n  return result;\n}\n`;function m(r){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",ul:\"ul\",li:\"li\",a:\"a\"},r.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Here's a solution that finds the minimum element in \",(0,t.jsx)(e.code,{children:\"array\"}),\" based on a given \",(0,t.jsx)(e.code,{children:\"iteratee\"}),\". It iterates through the \",(0,t.jsx)(e.code,{children:\"array\"}),\", calls the \",(0,t.jsx)(e.code,{children:\"iteratee\"}),\" function with the array element, and tracks the element that produces the minimum value.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Two variables are used:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"result\"}),\": Tracks the minimum element to return.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"computed\"}),\": Tracks the computed value of the current minimum element which will be used to compare with the computed values of subsequent elements.\"]}),`\n`]}),`\n`,(0,t.jsx)(d,{languages:{jsx:h,tsx:s}}),`\n`,(0,t.jsx)(e.h2,{children:\"Edge cases\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Because \",(0,t.jsx)(e.code,{children:\"iteratee\"}),\" is user-provided and can return a value of any type, we have to pay special attention to ignore computed values that cannot be compared, like \",(0,t.jsx)(e.code,{children:\"null\"}),\" and \",(0,t.jsx)(e.code,{children:\"undefined\"}),\". For such computed values, they should be ignored entirely.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"The function should also return the first occurrence of the element that produces the minimum computed value, even though many elements in the array can produce the same minimum computed value.\"}),`\n`,(0,t.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsxs)(e.a,{href:\"https://lodash.com/docs/#minBy\",children:[\"Lodash \",(0,t.jsx)(e.code,{children:\"_.minBy\"})]})}),`\n`]})]})}function j(r={}){let{wrapper:e}=r.components||{};return e?(0,t.jsx)(e,Object.assign({},r,{children:(0,t.jsx)(m,r)})):m(r)}var _=j;return k(C);})();\n;return Component;",
  "workspace": {
    "main": "/src/min-by.ts",
    "run": "/src/min-by.run.test.ts",
    "submit": "/src/min-by.submit.test.ts"
  }
}