{
  "description": "var Component=(()=>{var m=Object.create;var d=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var y=(l,e)=>()=>(e||l((e={exports:{}}).exports,e),e.exports),E=(l,e)=>{for(var c in e)d(l,c,{get:e[c],enumerable:!0})},o=(l,e,c,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of p(e))!u.call(l,r)&&r!==c&&d(l,r,{get:()=>e[r],enumerable:!(t=s(e,r))||t.enumerable});return l};var N=(l,e,c)=>(c=l!=null?m(g(l)):{},o(e||!l||!l.__esModule?d(c,\"default\",{value:l,enumerable:!0}):c,l)),b=l=>o(d({},\"__esModule\",{value:!0}),l);var a=y((D,i)=>{i.exports=_jsx_runtime});var x={};E(x,{default:()=>f,frontmatter:()=>B});var n=N(a()),B={title:\"getElementsByTagNameHierarchy\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u51FD\\u6570\\uFF0C\\u83B7\\u53D6\\u6240\\u6709\\u5339\\u914D\\u6807\\u7B7E\\u5C42\\u7EA7\\u7684 DOM \\u5143\\u7D20\"};function h(l){let e=Object.assign({p:\"p\",a:\"a\",code:\"code\",ul:\"ul\",li:\"li\",ol:\"ol\",h2:\"h2\",pre:\"pre\"},l.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByTagName\",children:(0,n.jsx)(e.code,{children:\"Document\"})}),\" \\u548C \",(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\",children:(0,n.jsx)(e.code,{children:\"Element\"})}),\" \\u5BF9\\u8C61\\u4E0A\\u5B58\\u5728 \",(0,n.jsx)(e.code,{children:\"getElementsByTagName()\"}),\" \\u65B9\\u6CD5\\uFF0C\\u8BE5\\u65B9\\u6CD5\\u8FD4\\u56DE\\u4E00\\u4E2A \",(0,n.jsx)(e.code,{children:\"HTMLCollection\"}),\"\\uFF0C\\u5176\\u4E2D\\u5305\\u542B\\u7ED9\\u5B9A\\u6807\\u7B7E\\u540D\\u79F0\\u7684 \",(0,n.jsx)(e.code,{children:\"Document\"}),\"/\",(0,n.jsx)(e.code,{children:\"Element\"}),\" \\u4E2D\\u7684\\u540E\\u4EE3\\u5143\\u7D20\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u67E5\\u627E\\u9075\\u5FAA\\u7279\\u5B9A\\u7956\\u5148\\u5C42\\u7EA7\\u7684\\u6807\\u7B7E\\u5C06\\u975E\\u5E38\\u6709\\u7528\\u3002\\u8FD9\\u5DF2\\u7ECF\\u53EF\\u4EE5\\u901A\\u8FC7\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"document.querySelectorAll()\"}),\" \\u6765\\u5B9E\\u73B0\\uFF0C\\u4F8B\\u5982 \",(0,n.jsx)(e.code,{children:\"document.querySelectorAll('div span')\"}),\"\\uFF0C\\u5B83\\u4F1A\\u67E5\\u627E \",(0,n.jsx)(e.code,{children:\"document\"}),\" \\u4E2D\\u4F5C\\u4E3A \",(0,n.jsx)(e.code,{children:\"<div>\"}),\" \\u540E\\u4EE3\\uFF08\\u4E0D\\u4E00\\u5B9A\\u662F\\u76F4\\u63A5\\u540E\\u4EE3\\uFF09\\u7684\\u6240\\u6709 \",(0,n.jsx)(e.code,{children:\"<span>\"}),\"\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u51FD\\u6570 \",(0,n.jsx)(e.code,{children:\"getElementsByTagNameHierarchy()\"}),\"\\uFF0C\\u5B83\\u5177\\u6709\\u7C7B\\u4F3C\\u7684\\u529F\\u80FD\\uFF0C\\u4F46\\u6709\\u4E00\\u4E9B\\u533A\\u522B\\uFF1A\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u4E00\\u4E2A\\u7EAF\\u51FD\\u6570\\uFF0C\\u5B83\\u63A5\\u53D7\\u4E24\\u4E2A\\u53C2\\u6570\\uFF1A\",`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u8981\\u5728\\u5176\\u4E2D\\u641C\\u7D22\\u7684 \",(0,n.jsx)(e.code,{children:\"document\"}),\" \\u5BF9\\u8C61\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u4E00\\u4E2A\\u7531\\u7A7A\\u683C\\u5206\\u9694\\u7684\\u6807\\u7B7E\\u5217\\u8868\\u7EC4\\u6210\\u7684\\u5B57\\u7B26\\u4E32\\u3002\\u8BF7\\u6CE8\\u610F\\uFF0C\\u6807\\u7B7E\\u7684\\u6570\\u91CF\\u53EF\\u4EE5\\u662F\\u4EFB\\u610F\\u7684\\u3002\\u5982\\u679C\\u53EA\\u6307\\u5B9A\\u4E86\\u4E00\\u4E2A\\u6807\\u7B7E\\uFF0C\\u5219\\u8BE5\\u51FD\\u6570\\u7684\\u884C\\u4E3A\\u7C7B\\u4F3C\\u4E8E \",(0,n.jsx)(e.code,{children:\"getElementByTagName()\"}),\"\\u3002\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u8FD4\\u56DE\\u4E00\\u4E2A \",(0,n.jsx)(e.code,{children:\"Element\"}),\" \\u6570\\u7EC4\\uFF0C\\u800C\\u4E0D\\u662F \",(0,n.jsx)(e.code,{children:\"Element\"}),\" \\u7684 \",(0,n.jsx)(e.code,{children:\"HTMLCollection\"}),\"\\u3002\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u4F8B\\u5982 \",(0,n.jsx)(e.code,{children:\"getElementsByTagNameHierarchy(document, 'div span')\"}),\"\\uFF0C\\u5E76\\u8FD4\\u56DE\\u4E0E \",(0,n.jsx)(e.code,{children:\"document\"}),\" \\u4E2D\\u8BE5\\u9009\\u62E9\\u5668\\u5339\\u914D\\u7684\\u5143\\u7D20\\u6570\\u7EC4\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u4E0D\\u8981\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"document.querySelectorAll()\"}),\"\\uFF0C\\u5426\\u5219\\u4F1A\\u4F7F\\u95EE\\u9898\\u53D8\\u5F97\\u5FAE\\u4E0D\\u8DB3\\u9053\\u3002\\u5728\\u5B9E\\u9645\\u9762\\u8BD5\\u4E2D\\uFF0C\\u60A8\\u5C06\\u4E0D\\u5141\\u8BB8\\u4F7F\\u7528\\u5B83\\u3002\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u793A\\u4F8B\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const doc = new DOMParser().parseFromString(\n  \\`<div>\n    <span id=\"foo\">\n      <span id=\"bar\">Bar</span>\n      Foo\n    </span>\n    <p>Paragraph</p>\n    <span id=\"baz\">Baz</span>\n  </div>\\`,\n  'text/html',\n);\n\ngetElementsByTagNameHierarchy(doc, 'div span');\n// [span#foo, span#bar, span#baz] <-- \\u8FD9\\u662F\\u4E00\\u4E2A\\u5143\\u7D20\\u6570\\u7EC4\\u3002\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8D44\\u6E90\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\",children:\"Document: querySelectorAll() method - Web APIs | MDN\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\",children:\"Element: getElementsByTagName() method - Web APIs | MDN\"})}),`\n`]})]})}function T(l={}){let{wrapper:e}=l.components||{};return e?(0,n.jsx)(e,Object.assign({},l,{children:(0,n.jsx)(h,l)})):h(l)}var f=T;return b(x);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/get-elements-by-tag-name-hierarchy\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/get-elements-by-tag-name-hierarchy.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/get-elements-by-tag-name-hierarchy.run.test.ts": "import getElementsByTagNameHierarchy from './get-elements-by-tag-name-hierarchy';\n\nfunction checkResults(expected: NodeListOf<Element>, received: Array<Element>) {\n  expect(received.length).toBe(expected.length);\n  // Inefficient O(n^2) check so that order doesn't matter.\n  for (let i = 0; i < expected.length; i++) {\n    expect(received.some((node) => node.isEqualNode(expected[i]))).toBe(true);\n  }\n}\n\ndescribe('getElementsByTagNameHierarchy()', () => {\n  test('empty tree', () => {\n    const doc = new DOMParser().parseFromString(``, 'text/html');\n    const els = getElementsByTagNameHierarchy(doc, 'div');\n    const expected = doc.querySelectorAll('div');\n\n    checkResults(expected, els);\n  });\n\n  test('single element with no nodes', () => {\n    const doc = new DOMParser().parseFromString(`<div></div>`, 'text/html');\n\n    const els = getElementsByTagNameHierarchy(doc, 'div');\n    const expected = doc.querySelectorAll('div');\n\n    checkResults(expected, els);\n  });\n\n  describe('single layer', () => {\n    test('single descendant node', () => {\n      const doc = new DOMParser().parseFromString(\n        `<div><span></span></div>`,\n        'text/html',\n      );\n\n      const els = getElementsByTagNameHierarchy(doc, 'div span');\n      const expected = doc.querySelectorAll('div span');\n\n      checkResults(expected, els);\n    });\n\n    test('multiple matching descendant nodes', () => {\n      const doc = new DOMParser().parseFromString(\n        `<div>\n          <span>Span</span>\n          <p>Paragraph</p>\n          <span>Span 2</span>\n        </div>`,\n        'text/html',\n      );\n\n      const els = getElementsByTagNameHierarchy(doc, 'div span');\n      const expected = doc.querySelectorAll('div span');\n\n      checkResults(expected, els);\n    });\n  });\n\n  test('non-existent tags', () => {\n    const doc = new DOMParser().parseFromString(\n      `<div>\n        <span>Span</span>\n        <p>Paragraph</p>\n        <div></div>\n      </div>`,\n      'text/html',\n    );\n\n    const els = getElementsByTagNameHierarchy(doc, 'img');\n    const expected = doc.querySelectorAll('img');\n\n    checkResults(expected, els);\n  });\n\n  test('ignores comment nodes', () => {\n    const doc = new DOMParser().parseFromString(\n      `<div>\n        <!-- Here's a comment -->\n        <div>Hello</div>\n      </div>`,\n      'text/html',\n    );\n\n    const els = getElementsByTagNameHierarchy(doc, 'div');\n    const expected = doc.querySelectorAll('div');\n\n    checkResults(expected, els);\n  });\n});\n",
    "/src/get-elements-by-tag-name-hierarchy.submit.test.ts": "import getElementsByTagNameHierarchy from './get-elements-by-tag-name-hierarchy';\n\nfunction checkResults(expected: NodeListOf<Element>, received: Array<Element>) {\n  expect(received.length).toBe(expected.length);\n  // Inefficient O(n^2) check so that order doesn't matter.\n  for (let i = 0; i < expected.length; i++) {\n    expect(received.some((node) => node.isEqualNode(expected[i]))).toBe(true);\n  }\n}\n\ndescribe('getElementsByTagNameHierarchy()', () => {\n  test('empty tree', () => {\n    const doc = new DOMParser().parseFromString(``, 'text/html');\n    const els = getElementsByTagNameHierarchy(doc, 'div');\n    const expected = doc.querySelectorAll('div');\n\n    checkResults(expected, els);\n  });\n\n  test('single element with no nodes', () => {\n    const doc = new DOMParser().parseFromString(`<div></div>`, 'text/html');\n\n    const els = getElementsByTagNameHierarchy(doc, 'div');\n    const expected = doc.querySelectorAll('div');\n\n    checkResults(expected, els);\n  });\n\n  describe('varying tag token length', () => {\n    describe('one tag', () => {\n      test('no match', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <span></span>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'p');\n        const expected = doc.querySelectorAll('p');\n        checkResults(expected, els);\n      });\n\n      test('one match', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <span></span>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'span');\n        const expected = doc.querySelectorAll('span');\n        checkResults(expected, els);\n      });\n\n      test('two matches', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <span></span>\n            <p></p>\n            <span></span>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'span');\n        const expected = doc.querySelectorAll('span');\n        checkResults(expected, els);\n      });\n\n      test('inner matches', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <span>\n              <span></span>\n            </span>\n            <p></p>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'span');\n        const expected = doc.querySelectorAll('span');\n        checkResults(expected, els);\n      });\n\n      test('inner matches deep', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <span>\n              <span></span>\n            </span>\n            <p>\n              <span>\n                <span></span>\n              </span>\n            </p>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'span');\n        const expected = doc.querySelectorAll('span');\n        checkResults(expected, els);\n      });\n    });\n\n    describe('two tags', () => {\n      test('no match', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <span></span>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'span div');\n        const expected = doc.querySelectorAll('span div');\n        checkResults(expected, els);\n      });\n\n      test('one match', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <span></span>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'div span');\n        const expected = doc.querySelectorAll('div span');\n        checkResults(expected, els);\n      });\n\n      test('two matches', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <span></span>\n            <p></p>\n            <span></span>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'div span');\n        const expected = doc.querySelectorAll('div span');\n        checkResults(expected, els);\n      });\n\n      test('inner matches', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <span>\n              <span></span>\n            </span>\n            <p></p>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'div span');\n        const expected = doc.querySelectorAll('div span');\n        checkResults(expected, els);\n      });\n\n      test('inner matches deep', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <span>\n              <span></span>\n            </span>\n            <p>\n              <span>\n                <span></span>\n              </span>\n            </p>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'p span');\n        const expected = doc.querySelectorAll('p span');\n        checkResults(expected, els);\n      });\n\n      test('inner matches deep same tag', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <span>\n              <span></span>\n            </span>\n            <p>\n              <span>\n                <span></span>\n              </span>\n            </p>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'span span');\n        const expected = doc.querySelectorAll('span span');\n        checkResults(expected, els);\n      });\n    });\n\n    describe('three tags', () => {\n      test('no match', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <p>\n              <span></span>\n            </p>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'div span p');\n        const expected = doc.querySelectorAll('div span p');\n        checkResults(expected, els);\n      });\n\n      test('one match', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <p>\n              <span></span>\n            </p>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'div p span');\n        const expected = doc.querySelectorAll('div p span');\n        checkResults(expected, els);\n      });\n\n      test('two matches', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <p>\n              <span></span>\n            </p>\n            <p>\n              <span></span>\n            </p>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'div p span');\n        const expected = doc.querySelectorAll('div p span');\n        checkResults(expected, els);\n      });\n\n      test('inner matches', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <span>\n              <span></span>\n            </span>\n            <p></p>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'div span span');\n        const expected = doc.querySelectorAll('div span span');\n        checkResults(expected, els);\n      });\n\n      test('inner matches deep', () => {\n        const doc = new DOMParser().parseFromString(\n          `<div>\n            <span>\n              <span></span>\n            </span>\n            <p>\n              <span>\n                <span></span>\n              </span>\n            </p>\n          </div>`,\n          'text/html',\n        );\n\n        const els = getElementsByTagNameHierarchy(doc, 'div p span');\n        const expected = doc.querySelectorAll('div p span');\n        checkResults(expected, els);\n      });\n    });\n  });\n\n  test('huge DOM tree', () => {\n    const doc = new DOMParser().parseFromString(\n      `<div>\n        <span>Span</span>\n        <p>Paragraph</p>\n        <div>\n          <div>\n            <p>\n              <div>\n                <div>\n                  <span></span>\n                  <div>\n                    <div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </p>\n          </div>\n        </div>\n        <div>\n          <div>\n            <div>\n              <p>\n                <div>\n                  <span></span>\n                  <div>\n                    <div>\n                      <div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </p>\n            </div>\n          </div>\n        </div>`,\n      'text/html',\n    );\n\n    checkResults(\n      doc.querySelectorAll('div div'),\n      getElementsByTagNameHierarchy(doc, 'div div'),\n    );\n    checkResults(\n      doc.querySelectorAll('span'),\n      getElementsByTagNameHierarchy(doc, 'span'),\n    );\n    checkResults(\n      doc.querySelectorAll('div p'),\n      getElementsByTagNameHierarchy(doc, 'div p'),\n    );\n    checkResults(\n      doc.querySelectorAll('div p span'),\n      getElementsByTagNameHierarchy(doc, 'div p span'),\n    );\n    checkResults(\n      doc.querySelectorAll('div div span'),\n      getElementsByTagNameHierarchy(doc, 'div div span'),\n    );\n    checkResults(\n      doc.querySelectorAll('p span'),\n      getElementsByTagNameHierarchy(doc, 'p span'),\n    );\n    checkResults(\n      doc.querySelectorAll('div p div span'),\n      getElementsByTagNameHierarchy(doc, 'div p div span'),\n    );\n  });\n\n  test('ignores comment nodes', () => {\n    const doc = new DOMParser().parseFromString(\n      `<div>\n        <!-- Here's a comment -->\n        <div>Hello</div>\n      </div>`,\n      'text/html',\n    );\n\n    const els = getElementsByTagNameHierarchy(doc, 'div');\n    const expected = doc.querySelectorAll('div');\n\n    checkResults(expected, els);\n  });\n\n  test('mixed case tag names', () => {\n    const doc = new DOMParser().parseFromString(\n      `<div>\n          <span>Span</span>\n          <p>Paragraph</p>\n          <div>\n            <div>\n              <span>Hello</span>\n            </div>\n          </div>\n        </div>\n        <div>Hello</div>`,\n      'text/html',\n    );\n\n    const divs = getElementsByTagNameHierarchy(doc, 'DIV div');\n    const expectedDivs = doc.querySelectorAll('DIV div'.toLocaleLowerCase());\n    checkResults(expectedDivs, divs);\n\n    const spans = getElementsByTagNameHierarchy(doc, 'div P sPaN');\n    const expectedSpans = doc.querySelectorAll(\n      'div P sPaN'.toLocaleLowerCase(),\n    );\n    checkResults(expectedSpans, spans);\n  });\n});\n",
    "/src/get-elements-by-tag-name-hierarchy.ts": "export default function getElementsByTagNameHierarchy(\n  document: Document,\n  tagNames: string,\n): Array<Element> {\n  const results: Array<Element> = [];\n  const tagTokens = tagNames.toUpperCase().trim().split(/\\s+/);\n  const lastIndex = tagTokens.length - 1;\n\n  if (tagTokens.length === 0) {\n    return results;\n  }\n\n  function traverse(el: Element, tagTokenIndex: number) {\n    if (el == null) {\n      return;\n    }\n\n    const currentTagToken = tagTokens[tagTokenIndex];\n    const elementMatchesCurrentTag = el.tagName === currentTagToken;\n    const isLastTag = tagTokenIndex === lastIndex;\n\n    if (elementMatchesCurrentTag && isLastTag) {\n      results.push(el);\n    }\n\n    const nextIndex = elementMatchesCurrentTag\n      ? Math.min(tagTokenIndex + 1, lastIndex) // So as not to increment past the last index.\n      : tagTokenIndex;\n\n    for (const child of el.children) {\n      traverse(child, nextIndex);\n    }\n  }\n\n  traverse(document.body, 0);\n\n  return results;\n}\n"
  },
  "info": {
    "excerpt": "实现一个函数，获取所有匹配标签层级的 DOM 元素",
    "title": "getElementsByTagNameHierarchy"
  },
  "metadata": {
    "access": "premium",
    "author": "yangshun",
    "companies": [
      "dropbox"
    ],
    "created": 1723766400,
    "difficulty": "hard",
    "duration": 30,
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/get-elements-by-tag-name-hierarchy",
    "importance": "low",
    "languages": [
      "html",
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "get-elements-by-class-name",
      "get-elements-by-style",
      "get-elements-by-tag-name"
    ],
    "slug": "get-elements-by-tag-name-hierarchy",
    "subtitle": null,
    "topics": [
      "web-api"
    ]
  },
  "skeleton": {
    "js": "/**\n * @param {Document} document\n * @param {string} tagNames\n * @return {Array<Element>}\n */\nexport default function getElementsByTagNameHierarchy(document, tagNames) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function getElementsByTagNameHierarchy(\n  document: Document,\n  tagNames: string,\n): Array<Element> {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var p=Object.create;var c=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var E=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=>{for(var r in e)c(t,r,{get:e[r],enumerable:!0})},o=(t,e,r,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of N(e))!k.call(t,l)&&l!==r&&c(t,l,{get:()=>e[l],enumerable:!(i=f(e,l))||i.enumerable});return t};var I=(t,e,r)=>(r=t!=null?p(x(t)):{},o(e||!t||!t.__esModule?c(r,\"default\",{value:t,enumerable:!0}):r,t)),A=t=>o(c({},\"__esModule\",{value:!0}),t);var d=E((S,s)=>{s.exports=_jsx_runtime});var j={};y(j,{default:()=>v});var n=I(d());var a=MDXCodeBlock;var h=`/**\n * @param {Document} document\n * @param {string} tagNames\n * @return {Array<Element>}\n */\nexport default function getElementsByTagNameHierarchy(document, tagNames) {\n  const results = [];\n  const tagTokens = tagNames.toUpperCase().trim().split(/\\\\s+/);\n  const lastIndex = tagTokens.length - 1;\n\n  if (tagTokens.length === 0) {\n    return results;\n  }\n\n  function traverse(el, tagTokenIndex) {\n    if (el == null) {\n      return;\n    }\n\n    const currentTagToken = tagTokens[tagTokenIndex];\n    const elementMatchesCurrentTag = el.tagName === currentTagToken;\n    const isLastTag = tagTokenIndex === lastIndex;\n\n    if (elementMatchesCurrentTag && isLastTag) {\n      results.push(el);\n    }\n\n    const nextIndex = elementMatchesCurrentTag\n      ? Math.min(tagTokenIndex + 1, lastIndex) // So as not to increment past the last index.\n      : tagTokenIndex;\n\n    for (const child of el.children) {\n      traverse(child, nextIndex);\n    }\n  }\n\n  traverse(document.body, 0);\n\n  return results;\n}\n`;var g=`export default function getElementsByTagNameHierarchy(\n  document: Document,\n  tagNames: string,\n): Array<Element> {\n  const results: Array<Element> = [];\n  const tagTokens = tagNames.toUpperCase().trim().split(/\\\\s+/);\n  const lastIndex = tagTokens.length - 1;\n\n  if (tagTokens.length === 0) {\n    return results;\n  }\n\n  function traverse(el: Element, tagTokenIndex: number) {\n    if (el == null) {\n      return;\n    }\n\n    const currentTagToken = tagTokens[tagTokenIndex];\n    const elementMatchesCurrentTag = el.tagName === currentTagToken;\n    const isLastTag = tagTokenIndex === lastIndex;\n\n    if (elementMatchesCurrentTag && isLastTag) {\n      results.push(el);\n    }\n\n    const nextIndex = elementMatchesCurrentTag\n      ? Math.min(tagTokenIndex + 1, lastIndex) // So as not to increment past the last index.\n      : tagTokenIndex;\n\n    for (const child of el.children) {\n      traverse(child, nextIndex);\n    }\n  }\n\n  traverse(document.body, 0);\n\n  return results;\n}\n`;var m=`/**\n * @param {Document} document\n * @param {string} tagNames\n * @return {Array<Element>}\n */\nexport default function getElementsByTagNameHierarchy(document, tagNames) {\n  const tagTokens = tagNames.toUpperCase().trim().split(/\\\\s+/);\n\n  if (tagTokens.length === 0) {\n    return [];\n  }\n\n  const elements = [];\n  const lastTag = tagTokens[tagTokens.length - 1];\n\n  function findTag(el) {\n    if (el == null) {\n      return;\n    }\n\n    if (el.tagName === lastTag) {\n      elements.push(el);\n    }\n\n    for (const child of el.children) {\n      findTag(child);\n    }\n  }\n\n  findTag(document.body);\n\n  function checkAncestorHierarchy(el) {\n    let currentIndex = tagTokens.length - 1;\n    let currentEl = el;\n    let matchingElements = 0;\n\n    while (\n      currentEl != null &&\n      currentIndex >= 0 &&\n      matchingElements !== tagTokens.length\n    ) {\n      if (tagTokens[currentIndex] === currentEl.tagName) {\n        matchingElements++;\n        currentIndex--;\n      }\n\n      currentEl = currentEl.parentNode;\n    }\n\n    return matchingElements === tagTokens.length;\n  }\n\n  // Second step: check each tag's ancestor hierarchy and return the matching ones.\n  return elements.filter((el) => checkAncestorHierarchy(el));\n}\n`;var u=`export default function getElementsByTagNameHierarchy(\n  document: Document,\n  tagNames: string,\n): Array<Element> {\n  const tagTokens = tagNames.toUpperCase().trim().split(/\\\\s+/);\n\n  if (tagTokens.length === 0) {\n    return [];\n  }\n\n  const elements: Array<Element> = [];\n  const lastTag = tagTokens[tagTokens.length - 1];\n\n  function findMatchingTags(el: Element) {\n    if (el == null) {\n      return;\n    }\n\n    if (el.tagName === lastTag) {\n      elements.push(el);\n    }\n\n    for (const child of el.children) {\n      findMatchingTags(child);\n    }\n  }\n\n  // First step: find all the elements matching the last tag.\n  findMatchingTags(document.body);\n\n  function checkAncestorHierarchy(el: Element) {\n    let currentIndex = tagTokens.length - 1;\n    let currentEl: Node | null = el;\n    let matchingElements = 0;\n\n    while (\n      currentEl != null &&\n      currentIndex >= 0 &&\n      matchingElements !== tagTokens.length\n    ) {\n      if (\n        currentEl instanceof Element &&\n        tagTokens[currentIndex] === currentEl.tagName\n      ) {\n        matchingElements++;\n        currentIndex--;\n      }\n\n      currentEl = currentEl.parentNode;\n    }\n\n    return matchingElements === tagTokens.length;\n  }\n\n  // Second step: check each tag's ancestor hierarchy and return the matching ones.\n  return elements.filter((el) => checkAncestorHierarchy(el));\n}\n`;function T(t){let e=Object.assign({p:\"p\",a:\"a\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\",strong:\"strong\",h3:\"h3\",ol:\"ol\",h4:\"h4\",pre:\"pre\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"\\u6B64\\u89E3\\u51B3\\u65B9\\u6848\\u5047\\u8BBE\\u60A8\\u5DF2\\u5B8C\\u6210 \",(0,n.jsx)(e.a,{href:\"/questions/javascript/get-elements-by-tag-name\",children:\"getElementsByTagName\"}),\" \\u95EE\\u9898\\uFF0C\\u5E76\\u5B8C\\u5168\\u7406\\u89E3\\u5176\\u89E3\\u51B3\\u65B9\\u6848\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"/questions/javascript/get-elements-by-tag-name\",children:\"getElementsByTagName\"}),\" \\u95EE\\u9898\\u8BC4\\u4F30\\u60A8\\u5BF9\\u57FA\\u672C DOM \\u904D\\u5386 API \\u548C\\u9012\\u5F52\\u7684\\u638C\\u63E1\\u7A0B\\u5EA6\\u3002 \\u8FD9\\u4E2A\\u95EE\\u9898\\u662F\\u4E00\\u4E2A\\u9AD8\\u7EA7\\u7248\\u672C\\uFF0C\\u53EF\\u4EE5\\u6307\\u5B9A\\u591A\\u4E2A\\u6807\\u7B7E\\u3002\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u9996\\u5148\\uFF0C\\u6211\\u4EEC\\u9700\\u8981\\u6CE8\\u610F\\u4EE5\\u4E0B\\u51E0\\u70B9\\uFF0C\\u7C7B\\u4F3C\\u4E8E \",(0,n.jsx)(e.a,{href:\"/questions/javascript/get-elements-by-tag-name\",children:\"getElementsByTagName\"}),\"\\uFF1A\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"Element.tagName\"}),\" \\u8FD4\\u56DE\\u5143\\u7D20\\u6807\\u7B7E\\u540D\\u79F0\\u7684\",(0,n.jsx)(e.strong,{children:\"\\u5927\\u5199\"}),\"\\u5B57\\u7B26\\u4E32\\uFF08\\u4F8B\\u5982 \",(0,n.jsx)(e.code,{children:\"'DIV'\"}),\"\\u3001\",(0,n.jsx)(e.code,{children:\"'SPAN'\"}),\"\\uFF09\\uFF0C\\u56E0\\u6B64\\u5728\\u6BD4\\u8F83\\u4E4B\\u524D\\u5FC5\\u987B\\u5C06\\u6807\\u7B7E\\u540D\\u79F0\\u53C2\\u6570\\u8F6C\\u6362\\u4E3A\\u76F8\\u540C\\u7684\\u5927\\u5C0F\\u5199\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"Element.children\"}),\" \\u8FD4\\u56DE\\u5B50\\u5143\\u7D20\\u7684\\u5B9E\\u65F6 \",(0,n.jsx)(e.code,{children:\"HTMLCollection\"}),\"\\u3002 \\u6211\\u4EEC\\u4F7F\\u7528\\u5B83\\u800C\\u4E0D\\u662F \",(0,n.jsx)(e.code,{children:\"Node.childNodes\"}),\"\\uFF0C\\u540E\\u8005\\u8FD4\\u56DE\\u5B50 \",(0,n.jsx)(e.code,{children:\"Node\"}),\" \\u7684\\u5B9E\\u65F6 \",(0,n.jsx)(e.code,{children:\"NodeList\"}),\"\\uFF0C\\u56E0\\u4E3A \",(0,n.jsx)(e.code,{children:\"childNodes\"}),\" \\u5C06\\u5305\\u62EC\\u975E\\u5143\\u7D20\\u8282\\u70B9\\uFF0C\\u5982\\u6587\\u672C\\u548C\\u6CE8\\u91CA\\u8282\\u70B9\\uFF0C\\u8FD9\\u4E0E\\u6B64\\u95EE\\u9898\\u65E0\\u5173\\u3002\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u4F46\\u662F \",(0,n.jsx)(e.code,{children:\"HTMLCollection\"}),\" \\u6CA1\\u6709 \",(0,n.jsx)(e.code,{children:\".forEach\"}),\"\\uFF0C\\u6240\\u4EE5\\u6211\\u4EEC\\u5FC5\\u987B\\u4F7F\\u7528\\u4F20\\u7EDF\\u7684 \",(0,n.jsx)(e.code,{children:\"for\"}),\" \\u5FAA\\u73AF\\u904D\\u5386\\u5B83\\u3002\"]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"\\u65B9\\u6CD5 1\\uFF1A\\u81EA\\u9876\\u5411\\u4E0B\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u8BE5\\u89E3\\u51B3\\u65B9\\u6848\\u65B9\\u6CD5\\u53EF\\u4EE5\\u5206\\u89E3\\u4E3A\\u4E24\\u4E2A\\u90E8\\u5206\\uFF1A\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5C06 \",(0,n.jsx)(e.code,{children:\"tagNames\"}),\" \\u5206\\u6210\\u4E00\\u4E2A\\u6807\\u7B7E\\u540D\\u79F0\\u6807\\u8BB0\\u6570\\u7EC4\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u904D\\u5386 \",(0,n.jsx)(e.code,{children:\"document\"}),\" \\u53C2\\u6570\\u5E76\\u627E\\u5230\\u4E0E\\u6307\\u5B9A\\u7684 \",(0,n.jsx)(e.code,{children:\"tagNames\"}),\" \\u5C42\\u6B21\\u7ED3\\u6784\\u5339\\u914D\\u7684\\u5143\\u7D20\\u3002\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.h4,{children:[\"\\u5206\\u5272 \",(0,n.jsx)(e.code,{children:\"tagNames\"}),\"\\uFF08\\u6807\\u8BB0\\u5316\\uFF09\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u5BF9\\u4E8E\\u8FD9\\u4E2A\\u95EE\\u9898\\uFF0C\",(0,n.jsx)(e.code,{children:\"tagNames\"}),\" \\u53C2\\u6570\\u975E\\u5E38\\u7075\\u6D3B\\u3002 \\u5B83\\u53EF\\u4EE5\\uFF1A\"]}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"\\u5305\\u542B\\u524D\\u5BFC\\u548C\\u5C3E\\u968F\\u7A7A\\u683C\\u3002\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5305\\u542B\\u4EFB\\u4F55\\u5927\\u5C0F\\u5199\\u7684\\u6807\\u7B7E - \\u5C0F\\u5199\\u3001\\u5927\\u5199\\u3001\\u6DF7\\u5408\\u5927\\u5C0F\\u5199\\u3002 \",(0,n.jsx)(e.code,{children:\"document.querySelectorAll()\"}),\" \\u4E0D\\u533A\\u5206\\u5927\\u5C0F\\u5199\\u3002\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u4E3A\\u4E86\\u6807\\u8BB0 \",(0,n.jsx)(e.code,{children:\"tagNames\"}),\" \\u5B57\\u7B26\\u4E32\\uFF08\\u51C6\\u786E\\u8BC6\\u522B\\u6807\\u7B7E\\u540D\\u79F0\\u5217\\u8868\\uFF09\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\uFF1A\"]}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u901A\\u8FC7 \",(0,n.jsx)(e.code,{children:\".toUpperCase()\"}),\" \\u5C06\\u5B57\\u7B26\\u4E32\\u8F6C\\u6362\\u4E3A\\u5927\\u5199\\uFF0C\\u4EE5\\u5904\\u7406\\u4EFB\\u4F55\\u5927\\u5C0F\\u5199\\u5DEE\\u5F02\\u3002 \\u9009\\u62E9\\u5927\\u5199\\u662F\\u56E0\\u4E3A \",(0,n.jsx)(e.code,{children:\"Element.tagName\"}),\" \\u8FD4\\u56DE\\u4E00\\u4E2A\\u5927\\u5199\\u5B57\\u7B26\\u4E32\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u901A\\u8FC7 \",(0,n.jsx)(e.code,{children:\".trim()\"}),\" \\u4FEE\\u526A\\u5B57\\u7B26\\u4E32\\u4EE5\\u5220\\u9664\\u524D\\u5BFC\\u548C\\u5C3E\\u968F\\u7A7A\\u683C\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u901A\\u8FC7 \",(0,n.jsx)(e.code,{children:\".split(/\\\\s+/ )\"}),\" \\u5206\\u5272\\u5B57\\u7B26\\u4E32\\u4EE5\\u6309\\u7A7A\\u683C\\u5206\\u5272\\uFF0C\\u4E5F\\u53EF\\u4EE5\\u6309\\u8FDE\\u7EED\\u7684\\u7A7A\\u683C\\u5206\\u5272\\u3002\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.h4,{children:[\"\\u904D\\u5386 \",(0,n.jsx)(e.code,{children:\"document\"}),\" \\u4EE5\\u67E5\\u627E\\u5339\\u914D\\u7684\\u5143\\u7D20\"]}),`\n`,(0,n.jsx)(e.p,{children:\"\\u8FD9\\u4E2A\\u95EE\\u9898\\u6700\\u68D8\\u624B\\u7684\\u90E8\\u5206\\u662F\\u8BC6\\u522B\\u5339\\u914D\\u7684\\u5143\\u7D20\\u3002 \\u5217\\u8868\\u4E2D\\u6700\\u540E\\u4E00\\u4E2A\\u6807\\u7B7E\\u662F\\u8981\\u5339\\u914D\\u7684\\u5143\\u7D20\\u3002 \\u6700\\u540E\\u4E00\\u4E2A\\u6807\\u7B7E\\u4E4B\\u524D\\u7684\\u6240\\u6709\\u6807\\u7B7E\\u90FD\\u7528\\u4E8E\\u6307\\u5B9A\\u5C42\\u6B21\\u7ED3\\u6784\\u3002\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`// \\u4F8B\\u5982 tagNames = 'div SPAN sPaN'\n// \\u6807\\u8BB0\\u5316\\u540E\\uFF0CtagTokens\\uFF1A\n[\n  'div', // \\u5C42\\u6B21\\u7ED3\\u6784\\u6807\\u7B7E\n  'span', // \\u5C42\\u6B21\\u7ED3\\u6784\\u6807\\u7B7E\n  'span', // \\u5143\\u7D20\\u6807\\u7B7E\\uFF08\\u8981\\u5339\\u914D\\uFF09\n];\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u6B64\\u5904\\u4F7F\\u7528\\u6DF1\\u5EA6\\u4F18\\u5148\\u641C\\u7D22 (DFS)\\uFF0C\\u56E0\\u4E3A\\u5728 DFS \\u4E2D\\uFF0C\\u5BF9\\u4E8E\\u6BCF\\u4E2A\\u8282\\u70B9\\uFF0C\\u7956\\u5148\\u5C06\\u5728\\u5176\\u9012\\u5F52\\u5806\\u6808\\u4E2D\\u3002 \\u901A\\u8FC7\\u5229\\u7528\\u8FD9\\u4E00\\u4E8B\\u5B9E\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u4FDD\\u7559\\u4E00\\u4E2A\\u6307\\u5411 \",(0,n.jsx)(e.code,{children:\"tagTokens\"}),\" \\u5185\\u4F4D\\u7F6E\\u7684\\u6307\\u9488\\uFF0C\\u5982\\u679C\\u5F53\\u524D\\u5143\\u7D20\\u7684\\u6807\\u7B7E\\u4E0E \",(0,n.jsx)(e.code,{children:\"tagTokens[tagTokenIndex]\"}),\" \\u5339\\u914D\\uFF0C\\u5219\\u589E\\u52A0\\u4E0B\\u4E00\\u4E2A\\u904D\\u5386\\u7684\\u7D22\\u5F15\\u3002 \\u589E\\u52A0\\u7D22\\u5F15\\u610F\\u5473\\u7740\\u5728\\u5143\\u7D20\\u7684\\u540E\\u4EE3\\u4E2D\\uFF0C\\u6211\\u4EEC\\u53EA\\u9700\\u8981\\u5339\\u914D\\u5269\\u4F59\\u7684\\u6807\\u8BB0\\u3002 \\u4F46\\u662F\\uFF0C\\u6211\\u4EEC\\u4E0D\\u5E94\\u8BE5\\u8D85\\u8FC7\\u6700\\u540E\\u4E00\\u4E2A\\u7D22\\u5F15\\uFF0C\\u56E0\\u4E3A\\u6700\\u540E\\u4E00\\u4E2A\\u7D22\\u5F15\\u662F\\u4E00\\u4E2A\\u7279\\u6B8A\\u7684\\u7D22\\u5F15 - \\u6700\\u540E\\u4E00\\u4E2A\\u6807\\u7B7E\\u662F\\u8981\\u5339\\u914D\\u7684\\u6807\\u7B7E\\u540D\\u79F0\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u5F53 \",(0,n.jsx)(e.code,{children:\"tagTokenIndex\"}),\" \\u662F \",(0,n.jsx)(e.code,{children:\"tagTokens\"}),\" \\u7684\\u6700\\u540E\\u4E00\\u4E2A\\u7D22\\u5F15\\u65F6\\uFF0C\\u4EFB\\u4F55\\u4E0E\\u8BE5\\u6807\\u7B7E\\u5339\\u914D\\u7684\\u5143\\u7D20\\u90FD\\u88AB\\u89C6\\u4E3A\\u5339\\u914D\\uFF0C\\u5E76\\u4E14\\u53EF\\u4EE5\\u6DFB\\u52A0\\u5230 \",(0,n.jsx)(e.code,{children:\"results\"}),\" \\u4E2D\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u53EF\\u4EE5\\u901A\\u8FC7\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"<body>\"}),\" \\u5143\\u7D20\\uFF08\\u901A\\u8FC7 \",(0,n.jsx)(e.code,{children:\"document.body\"}),\"\\uFF09\\u548C\\u8D77\\u59CB\\u7D22\\u5F15 0 \\u6765\\u542F\\u52A8\\u904D\\u5386\\u3002\"]}),`\n`,(0,n.jsx)(a,{languages:{jsx:h,tsx:g}}),`\n`,(0,n.jsx)(e.h3,{children:\"\\u65B9\\u6CD5 2. \\u81EA\\u5E95\\u5411\\u4E0A\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u53E6\\u4E00\\u79CD\\u89E3\\u51B3\\u65B9\\u6848\\u662F\\u4F7F\\u7528\\u4E0E\\u6D4F\\u89C8\\u5668\\u5339\\u914D\\u9009\\u62E9\\u5668\\u76F8\\u540C\\u7684\\u65B9\\u6CD5\\uFF0C\\u5373\\u81EA\\u5E95\\u5411\\u4E0A\\u5339\\u914D\\u3002\\u6D4F\\u89C8\\u5668\\u901A\\u5E38\\u4ECE\\u53F3\\u5411\\u5DE6\\u5339\\u914D\\u9009\\u62E9\\u5668\\u3002\\u8FD9\\u66F4\\u6709\\u6548\\uFF0C\\u56E0\\u4E3A\\u5B83\\u5141\\u8BB8\\u6D4F\\u89C8\\u5668\\u5FEB\\u901F\\u6D88\\u9664\\u5927\\u91CF\\u5143\\u7D20\\u3002\\u4F8B\\u5982\\uFF0C\\u5728\\u9009\\u62E9\\u5668 \",(0,n.jsx)(e.code,{children:\"div p\"}),\" \\u4E2D\\uFF0C\\u6D4F\\u89C8\\u5668\\u9996\\u5148\\u627E\\u5230\\u6240\\u6709 \",(0,n.jsx)(e.code,{children:\"<p>\"}),\" \\u5143\\u7D20\\uFF0C\\u7136\\u540E\\u68C0\\u67E5\\u5B83\\u4EEC\\u662F\\u5426\\u5177\\u6709\\u4F5C\\u4E3A \",(0,n.jsx)(e.code,{children:\"<div>\"}),\" \\u7684\\u7236\\u5143\\u7D20\\u6216\\u7956\\u5148\\u5143\\u7D20\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u7B2C\\u4E00\\u6B65\\u662F\\u627E\\u5230\\u6240\\u6709\\u5339\\u914D\\u7684\\u6807\\u7B7E\\uFF08\\u5217\\u8868\\u4E2D\\u7684\\u6700\\u540E\\u4E00\\u4E2A\\u6807\\u7B7E\\uFF09\\u3002\\u8FD9\\u672C\\u8D28\\u4E0A\\u662F \",(0,n.jsx)(e.a,{href:\"/questions/javascript/get-elements-by-tag-name\",children:\"getElementsByTagName\"}),\" \\u95EE\\u9898\\u3002\\u5BF9\\u4E8E\\u8FD9\\u4E9B\\u6807\\u7B7E\\u4E2D\\u7684\\u6BCF\\u4E00\\u4E2A\\uFF0C\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"element.parentNode\"}),\" \\u904D\\u5386\\u8282\\u70B9\\u7684\\u7236\\u94FE\\u5E76\\u68C0\\u67E5\\u7956\\u5148\\u5C42\\u6B21\\u7ED3\\u6784\\u3002\\u8FD9\\u79CD\\u65B9\\u6CD5\\u66F4\\u5BB9\\u6613\\u7406\\u89E3\\uFF0C\\u4F46\\u5B9E\\u73B0\\u8D77\\u6765\\u66F4\\u957F\\u3002\"]}),`\n`,(0,n.jsx)(a,{languages:{jsx:m,tsx:u}}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8FB9\\u7F18\\u60C5\\u51B5\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"\\u6807\\u7B7E\\u540D\\u79F0\\u5B57\\u7B26\\u4E32\\u4E2D\\u7684\\u524D\\u5BFC/\\u5C3E\\u968F\\u7A7A\\u683C\\u3002\"}),`\n`,(0,n.jsx)(e.li,{children:\"\\u6807\\u7B7E\\u540D\\u79F0\\u4E4B\\u95F4\\u7684\\u989D\\u5916\\u7A7A\\u683C\\u3002\"}),`\n`,(0,n.jsx)(e.li,{children:\"\\u975E\\u5C0F\\u5199\\u6807\\u7B7E\\u540D\\u79F0\\u9879\\u3002\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u6280\\u672F\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"\\u9012\\u5F52\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"DOM API\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5982\\u4F55\\u68C0\\u67E5 \",(0,n.jsx)(e.code,{children:\"Element\"}),\" \\u7684\\u6807\\u7B7E\\u540D\\u79F0\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5982\\u4F55\\u904D\\u5386 \",(0,n.jsx)(e.code,{children:\"Element\"}),\" \\u7684\\u5B50\\u5143\\u7D20\"]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u7B14\\u8BB0\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"Element.tagName\"}),\" \\u4E3A\\u5927\\u5199\\uFF08\\u4F8B\\u5982 \",(0,n.jsx)(e.code,{children:\"'DIV'\"}),\"\\u3001\",(0,n.jsx)(e.code,{children:\"'SPAN'\"}),\"\\uFF09\\uFF0C\\u56E0\\u6B64\\u8BF7\\u52A1\\u5FC5\\u4F7F\\u7528\\u4E0D\\u533A\\u5206\\u5927\\u5C0F\\u5199\\u7684\\u5B57\\u7B26\\u4E32\\u6BD4\\u8F83\\u3002\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8D44\\u6E90\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\",children:\"Document: querySelectorAll() method - Web APIs | MDN\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\",children:\"Element: getElementsByTagName() method - Web APIs | MDN\"})}),`\n`]})]})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(T,t)})):T(t)}var v=C;return A(j);})();\n;return Component;",
  "workspace": {
    "main": "/src/get-elements-by-tag-name-hierarchy.ts",
    "run": "/src/get-elements-by-tag-name-hierarchy.run.test.ts",
    "submit": "/src/get-elements-by-tag-name-hierarchy.submit.test.ts"
  }
}