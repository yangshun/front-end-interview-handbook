{
  "description": "var Component=(()=>{var s=Object.create;var c=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var f=(l,e)=>()=>(e||l((e={exports:{}}).exports,e),e.exports),x=(l,e)=>{for(var o in e)c(l,o,{get:e[o],enumerable:!0})},d=(l,e,o,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of g(e))!b.call(l,t)&&t!==o&&c(l,t,{get:()=>e[t],enumerable:!(r=h(e,t))||r.enumerable});return l};var m=(l,e,o)=>(o=l!=null?s(p(l)):{},d(e||!l||!l.__esModule?c(o,\"default\",{value:l,enumerable:!0}):o,l)),j=l=>d(c({},\"__esModule\",{value:!0}),l);var a=f((O,i)=>{i.exports=_jsx_runtime});var C={};x(C,{default:()=>v,frontmatter:()=>_});var n=m(a()),_={title:\"useToggle\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u7BA1\\u7406\\u5E03\\u5C14\\u5207\\u6362\\u72B6\\u6001\\u7684 Hook\"};function u(l){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ul:\"ul\",li:\"li\",ol:\"ol\"},l.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A \",(0,n.jsx)(e.code,{children:\"useToggle\"}),\" Hook\\uFF0C\\u7528\\u4E8E\\u7BA1\\u7406 React \\u7EC4\\u4EF6\\u4E2D\\u7684\\u5E03\\u5C14\\u5207\\u6362\\u72B6\\u6001\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`export default function Component() {\n  const [value, toggle, setValue] = useToggle();\n\n  return (\n    <div>\n      <p>Enabled: {enabled ? 'On' : 'Off'}</p>\n      <button onClick={toggle}>Toggle</button>\n      <button onClick={() => setValue(true)}>Enable</button>\n      <button onClick={() => setValue(false)}>Disable</button>\n    </div>\n  );\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u53C2\\u6570\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"defaultValue: boolean\"}),\" (\\u53EF\\u9009): \\u5207\\u6362\\u72B6\\u6001\\u7684\\u521D\\u59CB\\u503C\\u3002\\u5982\\u679C\\u672A\\u63D0\\u4F9B\\uFF0C\\u5219\\u5E94\\u9ED8\\u8BA4\\u4E3A \",(0,n.jsx)(e.code,{children:\"false\"})]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8FD4\\u56DE\\u503C\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u4E00\\u4E2A\\u5305\\u542B\\u4EE5\\u4E0B\\u5143\\u7D20\\u7684\\u5143\\u7EC4\\uFF1A\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"value: boolean\"}),\": \\u5F53\\u524D\\u72B6\\u6001\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"toggle: () => void\"}),\": \\u5728 \",(0,n.jsx)(e.code,{children:\"true\"}),\" \\u548C \",(0,n.jsx)(e.code,{children:\"false\"}),\" \\u4E4B\\u95F4\\u5207\\u6362\\u72B6\\u6001\\u7684\\u51FD\\u6570\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"setValue\"}),\": \\u5C06\\u72B6\\u6001\\u8BBE\\u7F6E\\u4E3A\\u63D0\\u4F9B\\u7684 \",(0,n.jsx)(e.code,{children:\"value\"}),\" \\u7684\\u51FD\\u6570\\u3002\\u5B83\\u4E0E \",(0,n.jsx)(e.code,{children:\"useState\"}),\" Hook \\u7684\\u7B2C\\u4E8C\\u4E2A\\u53C2\\u6570\\u5177\\u6709\\u76F8\\u540C\\u7684\\u7B7E\\u540D\"]}),`\n`]})]})}function k(l={}){let{wrapper:e}=l.components||{};return e?(0,n.jsx)(e,Object.assign({},l,{children:(0,n.jsx)(u,l)})):u(l)}var v=k;return j(C);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/use-toggle\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/use-toggle.ts\",\n  \"dependencies\": {\n    \"@testing-library/react\": \"14.0.0\",\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"@types/react\": \"18.2.25\",\n    \"@types/react-dom\": \"18.2.10\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/use-toggle.run.test.ts": "import { act, renderHook } from '@testing-library/react';\n\nimport useToggle from './use-toggle';\n\ndescribe('useToggle', () => {\n  test('return values', () => {\n    const { result } = renderHook(() => useToggle());\n\n    expect(result.current[0]).toBe(false);\n    expect(typeof result.current[1]).toBe('function');\n    expect(typeof result.current[2]).toBe('function');\n  });\n\n  test('initial value', () => {\n    const { result } = renderHook(() => useToggle(true));\n\n    expect(result.current[0]).toBe(true);\n  });\n\n  test('toggle', () => {\n    const { result } = renderHook(() => useToggle());\n\n    act(() => {\n      result.current[1]();\n    });\n\n    expect(result.current[0]).toBe(true);\n  });\n\n  test('setValue with value', () => {\n    const { result } = renderHook(() => useToggle());\n\n    act(() => {\n      result.current[2](true);\n    });\n\n    expect(result.current[0]).toBe(true);\n  });\n});\n",
    "/src/use-toggle.submit.test.ts": "import { act, renderHook } from '@testing-library/react';\n\nimport useToggle from './use-toggle';\n\ndescribe('useToggle', () => {\n  test('return values', () => {\n    const { result } = renderHook(() => useToggle());\n\n    expect(result.current[0]).toBe(false);\n    expect(typeof result.current[1]).toBe('function');\n    expect(typeof result.current[2]).toBe('function');\n  });\n\n  test('initial value', () => {\n    const { result } = renderHook(() => useToggle(true));\n\n    expect(result.current[0]).toBe(true);\n  });\n\n  test('toggle', () => {\n    const { result } = renderHook(() => useToggle());\n\n    act(() => {\n      result.current[1]();\n    });\n\n    expect(result.current[0]).toBe(true);\n  });\n\n  test('setValue with value', () => {\n    const { result } = renderHook(() => useToggle());\n\n    act(() => {\n      result.current[2](true);\n    });\n\n    expect(result.current[0]).toBe(true);\n  });\n\n  test('setValue with false', () => {\n    const { result } = renderHook(() => useToggle());\n\n    act(() => {\n      result.current[2](false);\n    });\n\n    expect(result.current[0]).toBe(false);\n  });\n\n  test('setValue with function', () => {\n    const { result } = renderHook(() => useToggle());\n\n    act(() => {\n      result.current[2]((x) => !x);\n    });\n\n    expect(result.current[0]).toBe(true);\n  });\n});\n",
    "/src/use-toggle.ts": "import { Dispatch, SetStateAction, useState, useCallback } from 'react';\n\nexport default function useToggle(\n  defaultValue?: boolean,\n): [boolean, () => void, Dispatch<SetStateAction<boolean>>] {\n  const [value, setValue] = useState(Boolean(defaultValue));\n\n  const toggle = useCallback(() => {\n    setValue((x) => !x);\n  }, []);\n\n  return [value, toggle, setValue];\n}\n"
  },
  "info": {
    "excerpt": "实现一个管理布尔切换状态的 Hook",
    "title": "useToggle"
  },
  "metadata": {
    "access": "premium",
    "author": "phillmont",
    "companies": [],
    "created": 1742169600,
    "difficulty": "easy",
    "duration": 15,
    "featured": false,
    "format": "javascript",
    "frameworkDefault": "react",
    "frameworks": [
      {
        "framework": "react",
        "href": "/questions/javascript/use-toggle"
      }
    ],
    "href": "/questions/javascript/use-toggle",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [
      "use-cycle"
    ],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "use-cycle"
    ],
    "slug": "use-toggle",
    "subtitle": null,
    "topics": [
      "react-hooks"
    ]
  },
  "skeleton": {
    "js": "/**\n * @param {boolean | undefined} defaultValue\n */\nexport default function useToggle(defaultValue) {\n  throw 'Not implemented';\n}",
    "ts": "import { Dispatch, SetStateAction } from 'react';\n\nexport default function useToggle(\n  defaultValue?: boolean,\n): [boolean, () => void, Dispatch<SetStateAction<boolean>>] {\n  throw 'Not implemented';\n}"
  },
  "solution": "var Component=(()=>{var g=Object.create;var c=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var S=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=>{for(var n in e)c(t,n,{get:e[n],enumerable:!0})},s=(t,e,n,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of p(e))!x.call(t,a)&&a!==n&&c(t,a,{get:()=>e[a],enumerable:!(l=m(e,a))||l.enumerable});return t};var j=(t,e,n)=>(n=t!=null?g(f(t)):{},s(e||!t||!t.__esModule?c(n,\"default\",{value:t,enumerable:!0}):n,t)),k=t=>s(c({},\"__esModule\",{value:!0}),t);var u=S((X,r)=>{r.exports=_jsx_runtime});var M={};b(M,{default:()=>D});var o=j(u());var d=MDXCodeBlock;var i=`import { Dispatch, SetStateAction, useState, useCallback } from 'react';\n\nexport default function useToggle(\n  defaultValue?: boolean,\n): [boolean, () => void, Dispatch<SetStateAction<boolean>>] {\n  const [value, setValue] = useState(Boolean(defaultValue));\n\n  const toggle = useCallback(() => {\n    setValue((x) => !x);\n  }, []);\n\n  return [value, toggle, setValue];\n}\n`;function h(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\"},t.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:\"useToggle\"}),\" hook \\u53EF\\u4EE5\\u4F7F\\u7528 \",(0,o.jsx)(e.code,{children:\"useState\"}),\" hook \\u5B9E\\u73B0\\uFF0C\\u4F46\\u6B64\\u5916\\uFF0C\\u5B83\\u8FD8\\u8FD4\\u56DE\\u4E00\\u4E2A \",(0,o.jsx)(e.code,{children:\"toggle\"}),\" \\u51FD\\u6570\\uFF0C\\u8BE5\\u51FD\\u6570\\u4F7F\\u7528\\u4E00\\u4E2A\\u66F4\\u65B0\\u7A0B\\u5E8F\\u51FD\\u6570\\u6765\\u8BBE\\u7F6E\\u72B6\\u6001\\uFF0C\\u8BE5\\u51FD\\u6570\\u5426\\u5B9A\\u5F53\\u524D\\u72B6\\u6001\\u3002\"]}),`\n`,(0,o.jsx)(d,{children:i}),`\n`,(0,o.jsxs)(e.p,{children:[\"\\u6211\\u4EEC\\u8FD4\\u56DE\\u4E00\\u4E2A\\u4E09\\u5143\\u7EC4\\uFF0C\\u7C7B\\u4F3C\\u4E8E \",(0,o.jsx)(e.code,{children:\"useState\"}),\" hook\\uFF0C\\u4EE5\\u4FBF\\u4F7F\\u7528\\u8005\\u5728\\u89E3\\u6784\\u65F6\\u53EF\\u4EE5\\u8F7B\\u677E\\u5730\\u91CD\\u547D\\u540D\\u53D8\\u91CF\\u3002\"]})]})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(h,t)})):h(t)}var D=C;return k(M);})();\n;return Component;",
  "workspace": {
    "main": "/src/use-toggle.ts",
    "run": "/src/use-toggle.run.test.ts",
    "submit": "/src/use-toggle.submit.test.ts"
  }
}