{
  "description": "var Component=(()=>{var a=Object.create;var t=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var b=(c,e)=>()=>(e||c((e={exports:{}}).exports,e),e.exports),j=(c,e)=>{for(var o in e)t(c,o,{get:e[o],enumerable:!0})},i=(c,e,o,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of u(e))!f.call(c,r)&&r!==o&&t(c,r,{get:()=>e[r],enumerable:!(s=m(e,r))||s.enumerable});return c};var g=(c,e,o)=>(o=c!=null?a(p(c)):{},i(e||!c||!c.__esModule?t(o,\"default\",{value:c,enumerable:!0}):o,c)),x=c=>i(t({},\"__esModule\",{value:!0}),c);var d=b((C,l)=>{l.exports=_jsx_runtime});var v={};j(v,{default:()=>y,frontmatter:()=>T});var n=g(d()),T={title:\"Conforms To\",excerpt:\"Implement a function that checks if object conforms to source\"};function h(c){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\",em:\"em\",ul:\"ul\",a:\"a\"},c.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Implement a function \",(0,n.jsx)(e.code,{children:\"conformsTo(object, source)\"}),\" that checks if object conforms to source by invoking the predicate properties of source with the corresponding property values of object\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`conformsTo(object, source);\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Arguments\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"object\"}),\" \",(0,n.jsx)(e.em,{children:\"(Object)\"}),\": The object to inspect.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"source\"}),\" \",(0,n.jsx)(e.em,{children:\"(Object)\"}),\": The object of property predicates to conform to.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Returns\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.em,{children:(0,n.jsx)(e.code,{children:\"(boolean)\"})}),\": Returns true if object conforms, else false.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Examples\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`conformsTo({ a: 1, b: 2 }, { b: (n) => n > 1 });\n// => true\n\nconformsTo({ a: 1, b: 2 }, { b: (n) => n > 2 });\n// => false\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The function should return \",(0,n.jsx)(e.code,{children:\"false\"}),\" when \",(0,n.jsx)(e.code,{children:\"object\"}),\" is empty.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`conformsTo({}, { b: (n) => n > 1 }); // => false\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Constraints\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"object\"}),\": Javascript object.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"source\"}),\": Javascript object. Its own properties must be predicate functions.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://lodash.com/docs/#conformsTo\",children:[\"Lodash \",(0,n.jsx)(e.code,{children:\"_.conformsTo\"})]})}),`\n`]})]})}function _(c={}){let{wrapper:e}=c.components||{};return e?(0,n.jsx)(e,Object.assign({},c,{children:(0,n.jsx)(h,c)})):h(c)}var y=_;return x(v);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/conforms-to\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/conforms-to.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/conforms-to.run.test.ts": "import conformsTo from './conforms-to';\n\ndescribe('conformsTo', () => {\n  test('empty array', () => {\n    expect(conformsTo({}, { b: (n: number) => n > 1 })).toEqual(false);\n  });\n\n  test('single-element arrays', () => {\n    expect(conformsTo({ b: 2 }, { b: (n) => n > 1 })).toEqual(true);\n  });\n\n  test('two-element arrays', () => {\n    expect(conformsTo({ a: 1, b: 2 }, { b: (n) => n > 2 })).toEqual(false);\n  });\n});\n",
    "/src/conforms-to.submit.test.ts": "import conformsTo from './conforms-to';\n\ndescribe('conformsTo', () => {\n  test('basic functionality', () => {\n    const source = { a: (value: number) => value > 0 };\n    expect(conformsTo({ a: 1 }, source)).toEqual(true);\n    expect(conformsTo({ a: 0 }, source)).toEqual(false);\n  });\n\n  test('multiple properties', () => {\n    const source = {\n      a: (value: number) => value > 0,\n      b: (value: number) => value < 3,\n    };\n    expect(conformsTo({ a: 1, b: 2 }, source)).toEqual(true);\n    expect(conformsTo({ a: 0, b: 2 }, source)).toEqual(false);\n  });\n\n  test('non-matching property names', () => {\n    const source = { c: (value: any) => value > 0 };\n    expect(conformsTo({ a: 1 }, source)).toEqual(false);\n    expect(conformsTo({ b: -1 }, source)).toEqual(false);\n  });\n\n  test('source with no predicate functions', () => {\n    expect(conformsTo({ a: 1 }, {})).toEqual(true);\n    expect(conformsTo({ a: 0 }, {})).toEqual(true);\n  });\n\n  test('function in object', () => {\n    const object = { a: () => {} };\n    const source = { a: (value: any) => typeof value === 'function' };\n    expect(conformsTo(object, source)).toEqual(true);\n    expect(conformsTo({ a: 1 }, source)).toEqual(false);\n  });\n\n  test('undefined and null values', () => {\n    const object = { a: undefined, b: null };\n    const source = {\n      a: (value: any) => value === undefined,\n      b: (value: any) => value === null,\n    };\n    expect(conformsTo(object, source)).toEqual(true);\n    expect(conformsTo({ a: null, b: undefined }, source)).toEqual(false);\n  });\n\n  test('complex predicates', () => {\n    const object = { a: 10, b: 'hello' };\n    const source = {\n      a: (value: any) => value % 2 === 0,\n      b: (value: any) => value.startsWith('h'),\n    };\n    expect(conformsTo(object, source)).toEqual(true);\n    expect(conformsTo({ a: 11, b: 'goodbye' }, source)).toEqual(false);\n  });\n\n  test('ignores inherited source predicates', () => {\n    const sourceProto = {\n      inheritedPredicate: (value: number) => value > 2,\n    };\n\n    const source = Object.create(sourceProto);\n\n    const object = {\n      someProperty: 3,\n    };\n\n    expect(conformsTo(object, source)).toEqual(true);\n  });\n});\n",
    "/src/conforms-to.ts": "export default function conformsTo<T>(\n  object: Record<string, T>,\n  source: Record<string, (value: T) => boolean>,\n): boolean {\n  for (const key in source) {\n    // Ensure the property is not inherited.\n    if (Object.hasOwn(source, key)) {\n      // Return `false` immediately if any predicate is not fulfilled.\n      if (!(key in object) || !source[key](object[key])) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n"
  },
  "info": {
    "excerpt": "Implement a function that checks if object conforms to source",
    "title": "Conforms To"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [],
    "created": 1712102400,
    "difficulty": "medium",
    "duration": 20,
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/conforms-to",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "count-by"
    ],
    "slug": "conforms-to",
    "subtitle": null,
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property predicates to conform to.\n * @returns {boolean} Returns true if object conforms, else false.\n */\nexport default function conformsTo(object, source) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function conformsTo<T>(\n  object: Record<string, T>,\n  source: Record<string, (value: T) => boolean>,\n): boolean {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var b=Object.create;var c=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var k=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var O=(o,e)=>()=>(e||o((e={exports:{}}).exports,e),e.exports),x=(o,e)=>{for(var t in e)c(o,t,{get:e[t],enumerable:!0})},l=(o,e,t,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let n of y(e))!T.call(o,n)&&n!==t&&c(o,n,{get:()=>e[n],enumerable:!(i=j(e,n))||i.enumerable});return o};var g=(o,e,t)=>(t=o!=null?b(k(o)):{},l(e||!o||!o.__esModule?c(t,\"default\",{value:o,enumerable:!0}):t,o)),v=o=>l(c({},\"__esModule\",{value:!0}),o);var a=O((B,u)=>{u.exports=_jsx_runtime});var D={};x(D,{default:()=>C});var r=g(a());var s=MDXCodeBlock;var d=`/**\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property predicates to conform to.\n * @returns {boolean} Returns true if object conforms, else false.\n */\nexport default function conformsTo(object, source) {\n  for (const key in source) {\n    // Ensure the property is not inherited.\n    if (Object.hasOwn(source, key)) {\n      // Return \\`false\\` immediately if any predicate is not fulfilled.\n      if (!(key in object) || !source[key](object[key])) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n`;var f=`export default function conformsTo<T>(\n  object: Record<string, T>,\n  source: Record<string, (value: T) => boolean>,\n): boolean {\n  for (const key in source) {\n    // Ensure the property is not inherited.\n    if (Object.hasOwn(source, key)) {\n      // Return \\`false\\` immediately if any predicate is not fulfilled.\n      if (!(key in object) || !source[key](object[key])) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n`;var h=`/**\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property predicates to conform to.\n * @returns {boolean} Returns true if object conforms, else false.\n */\nexport default function conformsTo(object, source) {\n  // .every() ensures that all predicate must return \\`true\\` for \\`conformsTo\\` to return \\`true\\`.\n  return Object.keys(source).every((key) => {\n    return (\n      Object.hasOwn(source, key) &&\n      Object.hasOwn(object, key) &&\n      source[key](object[key])\n    );\n  });\n}\n`;var p=`export default function conformsTo<T>(\n  object: Record<string, T>,\n  source: Record<string, (value: T) => boolean>,\n): boolean {\n  // .every() ensures that all predicate must return \\`true\\` for \\`conformsTo\\` to return \\`true\\`.\n  return Object.keys(source).every((key) => {\n    return (\n      Object.hasOwn(source, key) &&\n      Object.hasOwn(object, key) &&\n      source[key](object[key])\n    );\n  });\n}\n`;function m(o){let e=Object.assign({h2:\"h2\",h3:\"h3\",code:\"code\",ol:\"ol\",li:\"li\",p:\"p\",ul:\"ul\",a:\"a\"},o.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,r.jsxs)(e.h3,{children:[\"Approach 1: Iterate through all predicates and return \",(0,r.jsx)(e.code,{children:\"false\"}),\" once any predicate is not fulfilled\"]}),`\n`,(0,r.jsxs)(e.ol,{children:[`\n`,(0,r.jsxs)(e.li,{children:[\"Iterates over the predicates in the \",(0,r.jsx)(e.code,{children:\"source\"}),\" object and ensure if the \",(0,r.jsx)(e.code,{children:\"key\"}),\" is not inherited by \",(0,r.jsx)(e.code,{children:\"source\"}),\".\"]}),`\n`,(0,r.jsxs)(e.li,{children:[\"Returns \",(0,r.jsx)(e.code,{children:\"false\"}),\" if predicate is not fulfilled, and only returns \",(0,r.jsx)(e.code,{children:\"true\"}),\" after all predicate are checked to be \",(0,r.jsx)(e.code,{children:\"true\"}),\".\"]}),`\n`]}),`\n`,(0,r.jsx)(s,{languages:{jsx:d,tsx:f}}),`\n`,(0,r.jsxs)(e.h3,{children:[\"Approach 2: Uses \",(0,r.jsx)(e.code,{children:\".every()\"}),\" to ensure all predicate is fulfilled\"]}),`\n`,(0,r.jsxs)(e.p,{children:[\"By using \",(0,r.jsx)(e.code,{children:\"Object.keys(source).every(...)\"}),\", it ensures that to return \",(0,r.jsx)(e.code,{children:\"true\"}),\", every predicate must evaluate to \",(0,r.jsx)(e.code,{children:\"true\"}),\" when passed its corresponding value from \",(0,r.jsx)(e.code,{children:\"object\"}),\".\"]}),`\n`,(0,r.jsx)(s,{languages:{jsx:h,tsx:p}}),`\n`,(0,r.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:(0,r.jsxs)(e.a,{href:\"https://lodash.com/docs/#conformsTo\",children:[\"Lodash \",(0,r.jsx)(e.code,{children:\"_.conformsTo\"})]})}),`\n`]})]})}function A(o={}){let{wrapper:e}=o.components||{};return e?(0,r.jsx)(e,Object.assign({},o,{children:(0,r.jsx)(m,o)})):m(o)}var C=A;return v(D);})();\n;return Component;",
  "workspace": {
    "main": "/src/conforms-to.ts",
    "run": "/src/conforms-to.run.test.ts",
    "submit": "/src/conforms-to.submit.test.ts"
  }
}