{
  "description": "var Component=(()=>{var a=Object.create;var c=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var v=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),x=(t,e)=>{for(var o in e)c(t,o,{get:e[o],enumerable:!0})},d=(t,e,o,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of p(e))!m.call(t,r)&&r!==o&&c(t,r,{get:()=>e[r],enumerable:!(i=u(e,r))||i.enumerable});return t};var g=(t,e,o)=>(o=t!=null?a(f(t)):{},d(e||!t||!t.__esModule?c(o,\"default\",{value:t,enumerable:!0}):o,t)),b=t=>d(c({},\"__esModule\",{value:!0}),t);var s=v((k,l)=>{l.exports=_jsx_runtime});var _={};x(_,{default:()=>L,frontmatter:()=>j});var n=g(s()),j={title:\"useEventListener\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u8BA2\\u9605\\u6D4F\\u89C8\\u5668\\u4E8B\\u4EF6\\u7684 Hook\"};function h(t){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\",a:\"a\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A \",(0,n.jsx)(e.code,{children:\"useEventListener\"}),\" Hook\\uFF0C\\u5B83\\u901A\\u8FC7\\u5C06\\u4E8B\\u4EF6\\u76D1\\u542C\\u5668\\u9644\\u52A0\\u5230 DOM \\u5143\\u7D20\\u3001\\u7A97\\u53E3\\u6216\\u5A92\\u4F53\\u67E5\\u8BE2\\u5217\\u8868\\u6765\\u8BA2\\u9605\\u6D4F\\u89C8\\u5668\\u4E8B\\u4EF6\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`export default function Component() {\n  const buttonRef = useRef(null);\n\n  useEventListener('click', () => console.log('Button clicked'), buttonRef, {\n    once: true,\n  });\n\n  return (\n    <div>\n      <button ref={buttonRef}>Click me</button>\n    </div>\n  );\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u53C2\\u6570\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"type (string)\"}),\": \\u8981\\u76D1\\u542C\\u7684\\u4E8B\\u4EF6\\u7C7B\\u578B\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"handler (event) => void\"}),\": \\u4E8B\\u4EF6\\u5904\\u7406\\u51FD\\u6570\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"target (RefObject<T>)\"}),\": \\u8981\\u5C06\\u4E8B\\u4EF6\\u76D1\\u542C\\u5668\\u9644\\u52A0\\u5230\\u7684\\u5143\\u7D20\\u7684 ref \\u5BF9\\u8C61\\u3002\\u5982\\u679C\\u672A\\u63D0\\u4F9B\\uFF0C\\u5219\\u9ED8\\u8BA4\\u4E3A \",(0,n.jsx)(e.code,{children:\"window\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"options (AddEventListenerOptions)\"}),\":  \",(0,n.jsxs)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#options\",children:[(0,n.jsx)(e.code,{children:\"AddEventListenerOptions\"}),\" \\u9009\\u9879\\u5BF9\\u8C61\"]}),\"\\uFF0C\\u5B83\\u6307\\u5B9A\\u6709\\u5173\\u4E8B\\u4EF6\\u76D1\\u542C\\u5668\\u7684\\u7279\\u5F81\\u3002\\u8FD9\\u662F\\u4E00\\u4E2A\\u53EF\\u9009\\u53C2\\u6570\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8FD4\\u56DE\\u503C\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u65E0\\u3002\"})]})}function E(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(h,t)})):h(t)}var L=E;return b(_);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/use-event-listener\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/use-event-listener.ts\",\n  \"dependencies\": {\n    \"@testing-library/react\": \"14.0.0\",\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"@types/react\": \"18.2.25\",\n    \"@types/react-dom\": \"18.2.10\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/use-event-listener.run.test.ts": "import { act, fireEvent, renderHook } from '@testing-library/react';\n\nimport useEventListener from './use-event-listener';\n\ndescribe('useEventListener', () => {\n  test('return values', () => {\n    const { result } = renderHook(() => useEventListener('click', () => {}));\n\n    expect(result.current).toBe(undefined);\n  });\n\n  test('click', () => {\n    const handler = jest.fn();\n    renderHook(() => useEventListener('click', handler));\n\n    act(() => fireEvent.click(window));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n  });\n});\n",
    "/src/use-event-listener.submit.test.tsx": "import React, { useRef } from 'react';\nimport { act, fireEvent, render, renderHook } from '@testing-library/react';\n\nimport useEventListener from './use-event-listener';\n\ndescribe('useEventListener', () => {\n  test('return values', () => {\n    const { result } = renderHook(() => useEventListener('click', () => {}));\n\n    expect(result.current).toBe(undefined);\n  });\n\n  test('click', () => {\n    const handler = jest.fn();\n    renderHook(() => useEventListener('click', handler));\n\n    act(() => fireEvent.click(window));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n  });\n\n  test('click element', async () => {\n    const handler = jest.fn();\n\n    const Component = () => {\n      const ref = useRef<HTMLDivElement>(null);\n      useEventListener('click', handler, ref);\n\n      return <div ref={ref} data-testid=\"div\" />;\n    };\n\n    const page = render(<Component />);\n    const div = page.getByTestId('div');\n\n    expect(handler).not.toHaveBeenCalled();\n\n    act(() => fireEvent.click(div));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n\n    act(() => fireEvent.click(div));\n\n    expect(handler).toHaveBeenCalledTimes(2);\n  });\n\n  test('mouseover element', async () => {\n    const handler = jest.fn();\n\n    const Component = () => {\n      const ref = useRef<HTMLDivElement>(null);\n      useEventListener('mouseover', handler, ref);\n\n      return <div ref={ref} data-testid=\"div\" />;\n    };\n\n    const page = render(<Component />);\n    const div = page.getByTestId('div');\n\n    expect(handler).not.toHaveBeenCalled();\n\n    act(() => fireEvent.mouseOver(div));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n  });\n\n  test('options', async () => {\n    const handler = jest.fn();\n\n    const Component = () => {\n      const ref = useRef<HTMLDivElement>(null);\n      useEventListener('click', handler, ref, { once: true });\n\n      return <div ref={ref} data-testid=\"div\" />;\n    };\n\n    const page = render(<Component />);\n    const div = page.getByTestId('div');\n\n    expect(handler).not.toHaveBeenCalled();\n\n    act(() => fireEvent.click(div));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n\n    act(() => fireEvent.click(div));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n  });\n\n  test('remove listener on unmount', async () => {\n    const handler = jest.fn();\n    const { unmount } = renderHook(() => useEventListener('click', handler));\n\n    act(() => fireEvent.click(window));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n\n    unmount();\n    act(() => fireEvent.click(window));\n\n    expect(handler).toHaveBeenCalledTimes(1);\n  });\n});\n",
    "/src/use-event-listener.ts": "import { RefObject, useEffect, useRef } from 'react';\n\nexport default function useEventListener<\n  KW extends keyof WindowEventMap,\n  KH extends keyof HTMLElementEventMap & keyof SVGElementEventMap,\n  KM extends keyof MediaQueryListEventMap,\n  T extends HTMLElement | SVGAElement | MediaQueryList = HTMLElement,\n>(\n  eventName: KW | KH | KM,\n  handler: (\n    event:\n      | WindowEventMap[KW]\n      | HTMLElementEventMap[KH]\n      | SVGElementEventMap[KH]\n      | MediaQueryListEventMap[KM]\n      | Event,\n  ) => void,\n  element?: RefObject<T>,\n  options?: boolean | AddEventListenerOptions,\n) {\n  const latestHandler = useRef(handler);\n  latestHandler.current = handler;\n\n  useEffect(() => {\n    const targetElement: T | Window = element?.current ?? window;\n    if (!(targetElement && targetElement.addEventListener)) {\n      return;\n    }\n\n    const listener: typeof handler = (event) => {\n      latestHandler.current(event);\n    };\n\n    targetElement.addEventListener(eventName, listener, options);\n\n    return () => {\n      targetElement.removeEventListener(eventName, listener, options);\n    };\n  }, [eventName, element, options]);\n}\n"
  },
  "metadata": {
    "access": "premium",
    "author": "phillmont",
    "companies": [],
    "created": 1742169600,
    "difficulty": "medium",
    "duration": 15,
    "excerpt": "实现一个订阅浏览器事件的 Hook",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": "react",
    "frameworks": [
      {
        "framework": "react",
        "href": "/questions/javascript/use-event-listener"
      }
    ],
    "href": "/questions/javascript/use-event-listener",
    "importance": "medium",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "use-event-listener",
    "subtitle": null,
    "title": "useEventListener",
    "topics": [
      "react-hooks"
    ]
  },
  "skeleton": {
    "js": "/**\n * @template T\n *\n * @param {string} eventName\n * @param {(event) => void} handler\n * @param {import(\"react\").RefObject<T> | undefined} [element]\n * @param {boolean | AddEventListenerOptions | undefined} [options]\n */\nexport default function useEventListener(eventName, handler, element, options) {\n  throw 'Not implemented';\n}",
    "ts": "import { RefObject } from 'react';\n\nexport default function useEventListener<\n  KW extends keyof WindowEventMap,\n  KH extends keyof HTMLElementEventMap & keyof SVGElementEventMap,\n  KM extends keyof MediaQueryListEventMap,\n  T extends HTMLElement | SVGAElement | MediaQueryList = HTMLElement,\n>(\n  eventName: KW | KH | KM,\n  handler: (\n    event:\n      | WindowEventMap[KW]\n      | HTMLElementEventMap[KH]\n      | SVGElementEventMap[KH]\n      | MediaQueryListEventMap[KM]\n      | Event,\n  ) => void,\n  element?: RefObject<T>,\n  options?: boolean | AddEventListenerOptions,\n) {\n  throw 'Not implemented';\n}"
  },
  "solution": "var Component=(()=>{var v=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var L=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),h=(t,e)=>{for(var r in e)s(t,r,{get:e[r],enumerable:!0})},d=(t,e,r,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of u(e))!M.call(t,o)&&o!==r&&s(t,o,{get:()=>e[o],enumerable:!(a=f(e,o))||a.enumerable});return t};var x=(t,e,r)=>(r=t!=null?v(p(t)):{},d(e||!t||!t.__esModule?s(r,\"default\",{value:t,enumerable:!0}):r,t)),H=t=>d(s({},\"__esModule\",{value:!0}),t);var l=L((_,i)=>{i.exports=_jsx_runtime});var y={};h(y,{default:()=>j});var n=x(l());var c=MDXCodeBlock;var m=`import { RefObject, useEffect, useRef } from 'react';\n\nexport default function useEventListener<\n  KW extends keyof WindowEventMap,\n  KH extends keyof HTMLElementEventMap & keyof SVGElementEventMap,\n  KM extends keyof MediaQueryListEventMap,\n  T extends HTMLElement | SVGAElement | MediaQueryList = HTMLElement,\n>(\n  eventName: KW | KH | KM,\n  handler: (\n    event:\n      | WindowEventMap[KW]\n      | HTMLElementEventMap[KH]\n      | SVGElementEventMap[KH]\n      | MediaQueryListEventMap[KM]\n      | Event,\n  ) => void,\n  element?: RefObject<T>,\n  options?: boolean | AddEventListenerOptions,\n) {\n  const latestHandler = useRef(handler);\n  latestHandler.current = handler;\n\n  useEffect(() => {\n    const targetElement: T | Window = element?.current ?? window;\n    if (!(targetElement && targetElement.addEventListener)) {\n      return;\n    }\n\n    const listener: typeof handler = (event) => {\n      latestHandler.current(event);\n    };\n\n    targetElement.addEventListener(eventName, listener, options);\n\n    return () => {\n      targetElement.removeEventListener(eventName, listener, options);\n    };\n  }, [eventName, element, options]);\n}\n`;function E(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"useEventListener\"}),\" \\u94A9\\u5B50\\u53EF\\u4EE5\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"useEffect\"}),\" \\u5B9E\\u73B0\\uFF0C\\u4EE5\\u5206\\u522B\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"addEventListener\"}),\" \\u548C \",(0,n.jsx)(e.code,{children:\"removeEventListener\"}),\" \\u5C06\\u4E8B\\u4EF6\\u4FA6\\u542C\\u5668\\u9644\\u52A0\\u5230\\u76EE\\u6807\\u5143\\u7D20\\u5E76\\u4ECE\\u4E2D\\u5206\\u79BB\\u3002\"]}),`\n`,(0,n.jsx)(c,{children:m})]})}function g(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(E,t)})):E(t)}var j=g;return H(y);})();\n;return Component;",
  "workspace": {
    "main": "/src/use-event-listener.ts",
    "run": "/src/use-event-listener.run.test.ts",
    "submit": "/src/use-event-listener.submit.test.tsx"
  }
}