{
  "description": "var Component=(()=>{var a=Object.create;var l=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var g=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),x=(n,e)=>{for(var c in e)l(n,c,{get:e[c],enumerable:!0})},i=(n,e,c,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of m(e))!f.call(n,o)&&o!==c&&l(n,o,{get:()=>e[o],enumerable:!(r=d(e,o))||r.enumerable});return n};var y=(n,e,c)=>(c=n!=null?a(p(n)):{},i(e||!n||!n.__esModule?l(c,\"default\",{value:n,enumerable:!0}):c,n)),v=n=>i(l({},\"__esModule\",{value:!0}),n);var s=g((k,h)=>{h.exports=_jsx_runtime});var b={};x(b,{default:()=>_,frontmatter:()=>C});var t=y(s()),C={title:\"useCycle\",excerpt:\"Implement a hook that cycles through a sequence of values\"};function u(n){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[\"Implement a \",(0,t.jsx)(e.code,{children:\"useCycle\"}),\" hook that cycles through a sequence of values each time its function is called.\"]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-jsx\",children:`export default function Component() {\n  const [mode, cycle] = useCycle('low', 'medium', 'high');\n\n  return (\n    <div>\n      <p>State: {mode}</p>\n      <button onClick={cycle}>Cycle</button>\n    </div>\n  );\n}\n`})}),`\n`,(0,t.jsx)(e.h2,{children:\"Arguments\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The \",(0,t.jsx)(e.code,{children:\"useCycle\"}),\" hook should accept an indefinite number of arguments, each representing a value in the sequence to cycle through.\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Returns\"}),`\n`,(0,t.jsx)(e.p,{children:\"A tuple containing the following elements:\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"value\"}),\": The current value\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"cycle\"}),\": A function that changes the current value to the next one in the sequence, or the first one if the current value is the last in the sequence\"]}),`\n`]})]})}function j(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(u,n)})):u(n)}var _=j;return v(b);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/use-cycle\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/use-cycle.ts\",\n  \"dependencies\": {\n    \"@testing-library/react\": \"14.0.0\",\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"@types/react\": \"18.2.25\",\n    \"@types/react-dom\": \"18.2.10\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/src/use-cycle.run.test.ts": "import { act, renderHook } from '@testing-library/react';\n\nimport useCycle from './use-cycle';\n\ndescribe('useCycle', () => {\n  test('return values', () => {\n    const modes = ['low', 'medium', 'high'];\n    const { result } = renderHook(() => useCycle(...modes));\n\n    expect(result.current[0]).toBe(modes[0]);\n    expect(typeof result.current[1]).toBe('function');\n  });\n\n  test('cycle', () => {\n    const modes = ['low', 'medium', 'high'];\n    const { result } = renderHook(() => useCycle(...modes));\n\n    act(() => {\n      result.current[1]();\n    });\n\n    expect(result.current[0]).toBe(modes[1]);\n  });\n});\n",
    "/src/use-cycle.submit.test.ts": "import { act, renderHook } from '@testing-library/react';\n\nimport useCycle from './use-cycle';\n\ndescribe('useCycle', () => {\n  test('return values', () => {\n    const modes = ['low', 'medium', 'high'];\n    const { result } = renderHook(() => useCycle(...modes));\n\n    expect(result.current[0]).toBe(modes[0]);\n    expect(typeof result.current[1]).toBe('function');\n  });\n\n  test('cycle', () => {\n    const modes = ['low', 'medium', 'high'];\n    const { result } = renderHook(() => useCycle(...modes));\n\n    act(() => {\n      result.current[1]();\n    });\n\n    expect(result.current[0]).toBe(modes[1]);\n  });\n\n  test('cycle should reset to first element', () => {\n    const modes = ['low', 'medium', 'high'];\n    const { result } = renderHook(() => useCycle(...modes));\n\n    act(() => {\n      result.current[1]();\n      result.current[1]();\n      result.current[1]();\n    });\n\n    expect(result.current[0]).toBe(modes[0]);\n  });\n});\n",
    "/src/use-cycle.ts": "import { useCallback, useState } from 'react';\n\nexport default function useCycle<T>(...args: T[]) {\n  const [index, setIndex] = useState(0);\n\n  const cycle = useCallback(() => {\n    setIndex((index) => (index + 1) % args.length);\n  }, []);\n\n  return [args[index], cycle] as const;\n}\n"
  },
  "metadata": {
    "access": "standard",
    "author": "phillmont",
    "companies": [],
    "created": 1742169600,
    "difficulty": "easy",
    "duration": 15,
    "excerpt": "Implement a hook that cycles through a sequence of values",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/use-cycle",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "use-cycle",
    "subtitle": null,
    "title": "useCycle",
    "topics": []
  },
  "skeleton": {
    "js": "export default function useCycle(...args) {\n  throw 'Not implemented';\n}",
    "ts": "export default function useCycle<T>(...args: T[]) {\n  throw 'Not implemented';\n}"
  },
  "solution": "var Component=(()=>{var m=Object.create;var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var b=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=>{for(var c in e)o(t,c,{get:e[c],enumerable:!0})},a=(t,e,c,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of x(e))!g.call(t,r)&&r!==c&&o(t,r,{get:()=>e[r],enumerable:!(s=p(e,r))||s.enumerable});return t};var C=(t,e,c)=>(c=t!=null?m(f(t)):{},a(e||!t||!t.__esModule?o(c,\"default\",{value:t,enumerable:!0}):c,t)),_=t=>a(o({},\"__esModule\",{value:!0}),t);var h=b((D,i)=>{i.exports=_jsx_runtime});var M={};y(M,{default:()=>S});var n=C(h());var l=MDXCodeBlock;var d=`import { useCallback, useState } from 'react';\n\nexport default function useCycle<T>(...args: T[]) {\n  const [index, setIndex] = useState(0);\n\n  const cycle = useCallback(() => {\n    setIndex((index) => (index + 1) % args.length);\n  }, []);\n\n  return [args[index], cycle] as const;\n}\n`;function u(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",a:\"a\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"useCycle\"}),\" hook can be implemented using the \",(0,n.jsx)(e.code,{children:\"useState\"}),\" hook that stores the current index in the sequence that represents the current value. The \",(0,n.jsx)(e.code,{children:\"cycle\"}),\" function can be implemented by incrementing the index by 1 modulo the length of the sequence so that it cycles back to 0 when it reaches the length of the sequence.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The indefinite number of arguments can be implemented using the \",(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters\",children:\"rest parameter syntax\"}),\".\"]}),`\n`,(0,n.jsx)(l,{children:d})]})}function k(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(u,t)})):u(t)}var S=k;return _(M);})();\n;return Component;",
  "workspace": {
    "main": "/src/use-cycle.ts",
    "run": "/src/use-cycle.run.test.ts",
    "submit": "/src/use-cycle.submit.test.ts"
  }
}