{
  "description": "var Component=(()=>{var s=Object.create;var o=Object.defineProperty;var a=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty;var b=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),x=(t,e)=>{for(var c in e)o(t,c,{get:e[c],enumerable:!0})},d=(t,e,c,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of m(e))!C.call(t,r)&&r!==c&&o(t,r,{get:()=>e[r],enumerable:!(i=a(e,r))||i.enumerable});return t};var j=(t,e,c)=>(c=t!=null?s(p(t)):{},d(e||!t||!t.__esModule?o(c,\"default\",{value:t,enumerable:!0}):c,t)),v=t=>d(o({},\"__esModule\",{value:!0}),t);var u=b((H,l)=>{l.exports=_jsx_runtime});var k={};x(k,{default:()=>g,frontmatter:()=>f});var n=j(u()),f={title:\"useCounter\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u7BA1\\u7406\\u8BA1\\u6570\\u5668\\u72B6\\u6001\\u7684 Hook\\uFF0C\\u5E76\\u63D0\\u4F9B\\u4E00\\u4E9B\\u989D\\u5916\\u7684\\u4FBF\\u6377\\u5B9E\\u7528\\u65B9\\u6CD5\"};function h(t){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ul:\"ul\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A \",(0,n.jsx)(e.code,{children:\"useCounter\"}),\" Hook\\uFF0C\\u7528\\u4E8E\\u7BA1\\u7406\\u8BA1\\u6570\\u5668\\u72B6\\u6001\\uFF0C\\u5E76\\u63D0\\u4F9B\\u4E00\\u4E9B\\u989D\\u5916\\u7684\\u4FBF\\u6377\\u5B9E\\u7528\\u65B9\\u6CD5\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`export default function Component() {\n  const { count, increment, decrement, reset, setCount } = useCounter();\n\n  return (\n    <div>\n      <p>Counter: {count}</p>\n      <button onClick={increment}>Increment</button>\n      <button onClick={decrement}>Decrement</button>\n      <button onClick={reset}>Reset</button>\n    </div>\n  );\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u53C2\\u6570\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"initialValue: number\"}),\": \\u8BA1\\u6570\\u5668\\u72B6\\u6001\\u7684\\u521D\\u59CB\\u503C\\u3002\\u5982\\u679C\\u672A\\u63D0\\u4F9B\\uFF0C\\u5219\\u5E94\\u9ED8\\u8BA4\\u4E3A \",(0,n.jsx)(e.code,{children:\"0\"}),\"\\u3002\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8FD4\\u56DE\\u503C\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"useCounter\"}),\" Hook \\u8FD4\\u56DE\\u4E00\\u4E2A\\u5177\\u6709\\u4EE5\\u4E0B\\u5C5E\\u6027\\u7684 \",(0,n.jsx)(e.code,{children:\"object\"}),\"\\uFF1A\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"count: number\"}),\": \\u5F53\\u524D\\u8BA1\\u6570\\u5668\\u7684\\u503C\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"increment: () => void\"}),\": \\u589E\\u52A0\\u8BA1\\u6570\\u5668\\u503C\\u7684\\u51FD\\u6570\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"decrement: () => void\"}),\": \\u51CF\\u5C11\\u8BA1\\u6570\\u5668\\u503C\\u7684\\u51FD\\u6570\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"reset: () => void\"}),\": \\u5C06\\u8BA1\\u6570\\u5668\\u503C\\u91CD\\u7F6E\\u4E3A \",(0,n.jsx)(e.code,{children:\"initialValue\"}),\"\\uFF0C\\u5982\\u679C\\u672A\\u63D0\\u4F9B\\u5219\\u91CD\\u7F6E\\u4E3A \",(0,n.jsx)(e.code,{children:\"0\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"setCount: (value: number) => void\"}),\": \\u5C06\\u8BA1\\u6570\\u5668\\u503C\\u8BBE\\u7F6E\\u4E3A \",(0,n.jsx)(e.code,{children:\"value\"}),\" \\u7684\\u51FD\\u6570\\uFF0C\\u5B83\\u4E0E \",(0,n.jsx)(e.code,{children:\"setState\"}),\" \\u5177\\u6709\\u76F8\\u540C\\u7684\\u7B7E\\u540D\"]}),`\n`]})]})}function _(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(h,t)})):h(t)}var g=_;return v(k);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/use-counter\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/use-counter.ts\",\n  \"dependencies\": {\n    \"@testing-library/react\": \"14.0.0\",\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"@types/react\": \"18.2.25\",\n    \"@types/react-dom\": \"18.2.10\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"esnext\"],\n    \"jsx\": \"react-jsx\"\n  }\n}\n",
    "/src/use-counter.run.test.ts": "import { act, renderHook } from '@testing-library/react';\nimport useCounter from './use-counter';\n\ndescribe('useCounter', () => {\n  test('return values', () => {\n    const { result } = renderHook(() => useCounter());\n\n    expect(result.current.count).toBe(0);\n    expect(typeof result.current.increment).toBe('function');\n    expect(typeof result.current.increment).toBe('function');\n    expect(typeof result.current.decrement).toBe('function');\n    expect(typeof result.current.reset).toBe('function');\n    expect(typeof result.current.setCount).toBe('function');\n  });\n\n  test('initial value', () => {\n    const { result } = renderHook(() => useCounter(3));\n\n    expect(result.current.count).toBe(3);\n  });\n\n  test('increment', () => {\n    const { result } = renderHook(() => useCounter());\n\n    act(() => {\n      result.current.increment();\n    });\n    expect(result.current.count).toBe(1);\n  });\n});\n",
    "/src/use-counter.submit.test.ts": "import { act, renderHook } from '@testing-library/react';\n\nimport useCounter from './use-counter';\n\ndescribe('useCounter', () => {\n  test('return values', () => {\n    const { result } = renderHook(() => useCounter());\n\n    expect(result.current.count).toBe(0);\n    expect(typeof result.current.increment).toBe('function');\n    expect(typeof result.current.decrement).toBe('function');\n    expect(typeof result.current.reset).toBe('function');\n    expect(typeof result.current.setCount).toBe('function');\n  });\n\n  test('initial value', () => {\n    const { result } = renderHook(() => useCounter(3));\n\n    expect(result.current.count).toBe(3);\n  });\n\n  test('increment', () => {\n    const { result } = renderHook(() => useCounter());\n\n    act(() => {\n      result.current.increment();\n    });\n    expect(result.current.count).toBe(1);\n  });\n\n  test('decrement', () => {\n    const { result } = renderHook(() => useCounter());\n\n    act(() => {\n      result.current.decrement();\n    });\n    expect(result.current.count).toBe(-1);\n  });\n\n  test('reset', () => {\n    const { result } = renderHook(() => useCounter(3));\n\n    act(() => {\n      result.current.decrement();\n      result.current.decrement();\n      result.current.reset();\n    });\n    expect(result.current.count).toBe(3);\n  });\n\n  describe('setCount', () => {\n    test('direct', () => {\n      const { result } = renderHook(() => useCounter());\n\n      act(() => {\n        result.current.setCount(5);\n      });\n      expect(result.current.count).toBe(5);\n    });\n\n    test('can increment from current value', () => {\n      const { result } = renderHook(() => useCounter(5));\n\n      act(() => {\n        result.current.setCount((x) => x + 2);\n      });\n      expect(result.current.count).toBe(7);\n    });\n  });\n\n  test('integration', () => {\n    const { result } = renderHook(() => useCounter(5));\n\n    act(() => {\n      result.current.setCount((x) => x + 2);\n    });\n    expect(result.current.count).toBe(7);\n\n    act(() => {\n      result.current.increment();\n    });\n    expect(result.current.count).toBe(8);\n\n    act(() => {\n      result.current.decrement();\n    });\n    expect(result.current.count).toBe(7);\n\n    act(() => {\n      result.current.reset();\n    });\n    expect(result.current.count).toBe(5);\n  });\n});\n",
    "/src/use-counter.ts": "import { Dispatch, SetStateAction, useState } from 'react';\n\ninterface UseCounterReturn {\n  count: number;\n  increment: () => void;\n  decrement: () => void;\n  reset: () => void;\n  setCount: Dispatch<SetStateAction<number>>;\n}\n\nexport default function useCounter(initialValue = 0): UseCounterReturn {\n  const [count, setCount] = useState(initialValue);\n\n  return {\n    count,\n    increment: () => setCount((x) => x + 1),\n    decrement: () => setCount((x) => x - 1),\n    reset: () => setCount(initialValue),\n    setCount,\n  };\n}\n"
  },
  "metadata": {
    "access": "free",
    "author": "phillmont",
    "companies": [],
    "created": 1742169600,
    "difficulty": "easy",
    "duration": 10,
    "excerpt": "实现一个管理计数器状态的 Hook，并提供一些额外的便捷实用方法",
    "featured": true,
    "format": "javascript",
    "frameworkDefault": "react",
    "frameworks": [
      {
        "framework": "react",
        "href": "/questions/javascript/use-counter"
      }
    ],
    "href": "/questions/javascript/use-counter",
    "importance": "medium",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [
      "use-counter-ii",
      "use-cycle",
      "use-array"
    ],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "use-boolean"
    ],
    "slug": "use-counter",
    "subtitle": null,
    "title": "useCounter",
    "topics": [
      "react-hooks"
    ]
  },
  "skeleton": {
    "js": "/**\n * @param number initialValue\n * @return Object\n */\nexport default function useCounter(initialValue) {\n  throw 'Not implemented!';\n}",
    "ts": "import { Dispatch, SetStateAction } from 'react';\n\ninterface UseCounterReturn {\n  count: number;\n  increment: () => void;\n  decrement: () => void;\n  reset: () => void;\n  setCount: Dispatch<SetStateAction<number>>;\n}\n\nexport default function useCounter(initialValue?: number): UseCounterReturn {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var p=Object.create;var c=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var b=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),g=(n,e)=>{for(var r in e)c(n,r,{get:e[r],enumerable:!0})},u=(n,e,r,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of x(e))!S.call(n,o)&&o!==r&&c(n,o,{get:()=>e[o],enumerable:!(i=C(e,o))||i.enumerable});return n};var D=(n,e,r)=>(r=n!=null?p(f(n)):{},u(e||!n||!n.__esModule?c(r,\"default\",{value:n,enumerable:!0}):r,n)),j=n=>u(c({},\"__esModule\",{value:!0}),n);var a=b((y,s)=>{s.exports=_jsx_runtime});var A={};g(A,{default:()=>M});var t=D(a());var d=MDXCodeBlock;var l=`import { useState } from 'react';\n\nexport default function useCounter(initialValue = 0) {\n  const [count, setCount] = useState(initialValue);\n\n  return {\n    count,\n    increment: () => setCount((x) => x + 1),\n    decrement: () => setCount((x) => x - 1),\n    reset: () => setCount(initialValue),\n    setCount,\n  };\n}\n`;var h=`import { Dispatch, SetStateAction, useState } from 'react';\n\ninterface UseCounterReturn {\n  count: number;\n  increment: () => void;\n  decrement: () => void;\n  reset: () => void;\n  setCount: Dispatch<SetStateAction<number>>;\n}\n\nexport default function useCounter(initialValue = 0): UseCounterReturn {\n  const [count, setCount] = useState(initialValue);\n\n  return {\n    count,\n    increment: () => setCount((x) => x + 1),\n    decrement: () => setCount((x) => x - 1),\n    reset: () => setCount(initialValue),\n    setCount,\n  };\n}\n`;function m(n){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",a:\"a\",pre:\"pre\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"useCounter\"}),\" \\u94A9\\u5B50\\u4F7F\\u7528 \",(0,t.jsx)(e.code,{children:\"useState\"}),\" \\u6765\\u7BA1\\u7406 \",(0,t.jsx)(e.code,{children:\"number\"}),\" \\u72B6\\u6001\\u3002 setter \\u51FD\\u6570\\u53EF\\u4EE5\\u6839\\u636E \",(0,t.jsx)(e.code,{children:\"useState\"}),\" \\u94A9\\u5B50\\u7684 \",(0,t.jsx)(e.code,{children:\"setValue\"}),\" \\u6765\\u5B9E\\u73B0\\u3002\"]}),`\n`,(0,t.jsx)(d,{languages:{jsx:l,tsx:h}}),`\n`,(0,t.jsxs)(e.p,{children:[\"\\u4E3A\\u4E86\\u786E\\u4FDD\\u4E00\\u81F4\\u6027\\uFF0C\",(0,t.jsx)(e.code,{children:\"increment\"}),\" \\u548C \",(0,t.jsx)(e.code,{children:\"decrement\"}),\" \\u51FD\\u6570\\u4F7F\\u7528 \",(0,t.jsx)(e.a,{href:\"https://react.dev/reference/react/useState#updating-state-based-on-the-previous-state\",children:\"updater function\"}),\" \\u6765\\u6839\\u636E\\u5148\\u524D\\u7684\\u503C\\u8BA1\\u7B97\\u65B0\\u503C\\u3002\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"\\u5982\\u679C\\u4F60\\u6B63\\u5728\\u4F7F\\u7528 TypeScript\\uFF0C\\u68D8\\u624B\\u7684\\u90E8\\u5206\\u662F\\u786E\\u5B9A \",(0,t.jsx)(e.code,{children:\"setCount\"}),\" \\u7684\\u6B63\\u786E\\u7C7B\\u578B\\uFF0C\\u56E0\\u4E3A\\u5B83\\u4E5F\\u53EF\\u4EE5\\u63A5\\u53D7\\u4E00\\u4E2A\\u66F4\\u65B0\\u5668\\u51FD\\u6570\\u3002 \\u7B80\\u5355\\u5730\\u5C06 setter \\u51FD\\u6570\\u4ECE\\u4F60\\u6700\\u559C\\u6B22\\u7684 IDE \\u4E2D\\u7684 \",(0,t.jsx)(e.code,{children:\"useState\"}),\" \\u60AC\\u505C\\uFF0C\\u4F60\\u5C06\\u770B\\u5230 \",(0,t.jsx)(e.code,{children:\"Dispatch<SetStateAction<...>>\"}),\" \\u5F62\\u5F0F\\u7684\\u7C7B\\u578B\\u7B7E\\u540D\\uFF0C\\u5176\\u4E2D\\u72B6\\u6001\\u7684\\u7C7B\\u578B\\u662F \",(0,t.jsx)(e.code,{children:\"...\"}),\"\\u3002 \",(0,t.jsx)(e.code,{children:\"Dispatch\"}),\" \\u548C \",(0,t.jsx)(e.code,{children:\"SetStateAction\"}),\" \\u53EF\\u4EE5\\u4ECE \",(0,t.jsx)(e.code,{children:\"react\"}),\" \\u5BFC\\u5165\\u3002\"]}),`\n`,(0,t.jsx)(e.p,{children:\"\\u5982\\u679C\\u4F60\\u503E\\u5411\\u4E8E\\u5197\\u957F\\uFF0C\\u5B83\\u672C\\u8D28\\u4E0A\\u53EF\\u4EE5\\u5F52\\u7ED3\\u4E3A\\u8FD9\\u4E2A\\u3002\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-ts\",children:`type SetCount = (\n  valueOrUpdater: number | ((previousValue: number) => number),\n) => void;\n`})})]})}function _(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(m,n)})):m(n)}var M=_;return j(A);})();\n;return Component;",
  "workspace": {
    "main": "/src/use-counter.ts",
    "run": "/src/use-counter.run.test.ts",
    "submit": "/src/use-counter.submit.test.ts"
  }
}