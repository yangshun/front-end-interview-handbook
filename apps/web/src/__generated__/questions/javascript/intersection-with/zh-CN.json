{
  "description": "var Component=(()=>{var s=Object.create;var l=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var y=(r,n)=>()=>(n||r((n={exports:{}}).exports,n),n.exports),g=(r,n)=>{for(var c in n)l(r,c,{get:n[c],enumerable:!0})},o=(r,n,c,t)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let i of p(n))!u.call(r,i)&&i!==c&&l(r,i,{get:()=>n[i],enumerable:!(t=m(n,i))||t.enumerable});return r};var j=(r,n,c)=>(c=r!=null?s(x(r)):{},o(n||!r||!r.__esModule?l(c,\"default\",{value:r,enumerable:!0}):c,r)),_=r=>o(l({},\"__esModule\",{value:!0}),r);var h=y((M,d)=>{d.exports=_jsx_runtime});var F={};g(F,{default:()=>W,frontmatter:()=>f});var e=j(h()),f={title:\"\\u4EA4\\u96C6\\u8FD0\\u7B97\",excerpt:\"\\u4F7F\\u7528\\u81EA\\u5B9A\\u4E49\\u6BD4\\u8F83\\u5668\\u51FD\\u6570\\u8BA1\\u7B97\\u6570\\u7EC4\\u7684\\u4EA4\\u96C6\\uFF0C\\u4EE5\\u786E\\u5B9A\\u5143\\u7D20\\u4E4B\\u95F4\\u7684\\u76F8\\u7B49\\u6027\"};function a(r){let n=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\",em:\"em\",ul:\"ul\",a:\"a\"},r.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"intersectionWith\"}),\" \\u51FD\\u6570\\u63A5\\u53D7\\u4E00\\u4E2A\\u81EA\\u5B9A\\u4E49\\u7684 \",(0,e.jsx)(n.code,{children:\"comparator\"}),\" \\u51FD\\u6570\\u548C\\u591A\\u4E2A\\u6570\\u7EC4\\u4F5C\\u4E3A\\u53C2\\u6570\\u3002\\u5B83\\u4F7F\\u7528 \",(0,e.jsx)(n.code,{children:\"comparator\"}),\" \\u51FD\\u6570\\u6BD4\\u8F83\\u6570\\u7EC4\\u7684\\u5143\\u7D20\\u4EE5\\u786E\\u5B9A\\u76F8\\u7B49\\u6027\\u3002\\u8BE5\\u51FD\\u6570\\u8FD4\\u56DE\\u4E00\\u4E2A\\u65B0\\u6570\\u7EC4\\uFF0C\\u5176\\u4E2D\\u5305\\u542B\\u5B58\\u5728\\u4E8E\\u6240\\u6709\\u7ED9\\u5B9A\\u6570\\u7EC4\\u4E2D\\u7684\\u5143\\u7D20\\u3002\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-ts\",children:`intersectionWith(comparator, ...arrays);\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u53C2\\u6570\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"comparator\"}),\" \",(0,e.jsx)(n.em,{children:\"(Function)\"}),\": \\u7528\\u4E8E\\u786E\\u5B9A\\u5143\\u7D20\\u4E4B\\u95F4\\u76F8\\u7B49\\u6027\\u7684\\u6BD4\\u8F83\\u5668\\u51FD\\u6570\\u3002\\u8BE5\\u51FD\\u6570\\u5C06\\u4F7F\\u7528\\u4E24\\u4E2A\\u53C2\\u6570 \",(0,e.jsx)(n.code,{children:\"(arrVal, othVal)\"}),\" \\u8C03\\u7528\\uFF0C\\u8868\\u793A\\u8981\\u6BD4\\u8F83\\u7684\\u4E24\\u4E2A\\u5143\\u7D20\\u3002\\u5982\\u679C\\u5143\\u7D20\\u88AB\\u8BA4\\u4E3A\\u662F\\u76F8\\u7B49\\u7684\\uFF0C\\u5219\\u5E94\\u8FD4\\u56DE \",(0,e.jsx)(n.code,{children:\"true\"}),\"\\uFF0C\\u5426\\u5219\\u8FD4\\u56DE \",(0,e.jsx)(n.code,{children:\"false\"}),\"\\u3002\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"arrays\"}),\" \",(0,e.jsx)(n.em,{children:\"(...Array)\"}),\": \\u8981\\u68C0\\u67E5\\u7684\\u6570\\u7EC4\\u3002\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u8FD4\\u56DE\\u503C\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.em,{children:\"(Array)\"}),\": \\u8FD4\\u56DE\\u6570\\u7EC4\\u7684\\u4EA4\\u96C6\\u3002\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u4F8B\\u5B50\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`const arr1 = [\n  { x: 1, y: 2 },\n  { x: 2, y: 3 },\n];\nconst arr2 = [\n  { y: 2, x: 1 },\n  { x: 3, y: 4 },\n];\n\nconst result = intersectionWith(\n  (a, b) => a.x === b.x && a.y === b.y,\n  arr1,\n  arr2,\n); // => [{ x: 1, y: 2 }]\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u6CE8\\u610F\\u4E8B\\u9879\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"\\u5728 Lodash \\u4E2D\\uFF0C\",(0,e.jsx)(n.code,{children:\"comparator\"}),\" \\u662F\\u53EF\\u9009\\u7684\\uFF0C\\u5E76\\u4E14\\u662F\\u6700\\u540E\\u4E00\\u4E2A\\u53C2\\u6570\\uFF0C\\u4F46\\u5728\\u672C\\u95EE\\u9898\\u4E2D\\uFF0C\\u4E3A\\u4E86\\u7B80\\u5355\\u8D77\\u89C1\\uFF0C\\u5B83\\u662F\\u4E00\\u4E2A\\u5FC5\\u9700\\u7684\\u53C2\\u6570\\u3002\"]}),`\n`,(0,e.jsx)(n.li,{children:\"\\u7ED3\\u679C\\u6570\\u7EC4\\u4E2D\\u5143\\u7D20\\u7684\\u987A\\u5E8F\\u7531\\u5B83\\u4EEC\\u5728\\u7B2C\\u4E00\\u4E2A\\u6570\\u7EC4\\u4E2D\\u51FA\\u73B0\\u7684\\u987A\\u5E8F\\u51B3\\u5B9A\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u5982\\u679C\\u672A\\u63D0\\u4F9B\\u4EFB\\u4F55\\u6570\\u7EC4\\uFF0C\\u5219\\u8BE5\\u51FD\\u6570\\u5C06\\u8FD4\\u56DE\\u4E00\\u4E2A\\u7A7A\\u6570\\u7EC4\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u5982\\u679C\\u4EFB\\u4F55\\u6570\\u7EC4\\u4E3A\\u7A7A\\uFF0C\\u5219\\u8BE5\\u51FD\\u6570\\u5C06\\u8FD4\\u56DE\\u4E00\\u4E2A\\u7A7A\\u6570\\u7EC4\\u3002\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u8D44\\u6E90\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:(0,e.jsxs)(n.a,{href:\"https://lodash.com/docs/#intersectionWith\",children:[\"Lodash \",(0,e.jsx)(n.code,{children:\"_.intersectionWith\"})]})}),`\n`]})]})}function b(r={}){let{wrapper:n}=r.components||{};return n?(0,e.jsx)(n,Object.assign({},r,{children:(0,e.jsx)(a,r)})):a(r)}var W=b;return _(F);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/intersection-with\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/intersection-with.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/intersection-with.run.test.ts": "import intersectionWith from './intersection-with';\n\ndescribe('intersectionWith', () => {\n  test('empty arrays', () => {\n    const actual = intersectionWith((x, y) => true, [], [1, 2, 3], [4, 5, 6]);\n    expect(actual).toEqual([]);\n  });\n\n  test('no common elements', () => {\n    const actual = intersectionWith(\n      (x, y) => x === y,\n      [1, 2, 3],\n      [4, 5, 6],\n      [7, 8, 9],\n    );\n    expect(actual).toEqual([]);\n  });\n\n  test('two arrays', () => {\n    const arr1 = [\n      { x: 1, y: 2 },\n      { x: 2, y: 3 },\n      { x: 3, y: 4 },\n    ];\n    const arr2 = [\n      { x: 2, y: 3 },\n      { x: 4, y: 5 },\n      { x: 5, y: 6 },\n    ];\n\n    const comparator = (\n      a: { x: number; y: number },\n      b: { x: number; y: number },\n    ) => a.x === b.x && a.y === b.y;\n\n    const actual = intersectionWith(comparator, arr1, arr2);\n    const expected = [{ x: 2, y: 3 }];\n\n    expect(actual).toEqual(expected);\n  });\n});\n",
    "/src/intersection-with.submit.test.ts": "import intersectionWith from './intersection-with';\n\ndescribe('intersectionWith', () => {\n  test('no arrays are provided', () => {\n    const actual = intersectionWith((x, y) => true);\n    expect(actual).toEqual([]);\n  });\n\n  test('empty arrays', () => {\n    const actual = intersectionWith((x, y) => true, [], [1, 2, 3], [4, 5, 6]);\n    expect(actual).toEqual([]);\n  });\n\n  test('no common elements', () => {\n    const actual = intersectionWith(\n      (x, y) => x === y,\n      [1, 2, 3],\n      [4, 5, 6],\n      [7, 8, 9],\n    );\n    expect(actual).toEqual([]);\n  });\n\n  test('two arrays', () => {\n    const arr1 = [\n      { x: 1, y: 2 },\n      { x: 2, y: 3 },\n      { x: 3, y: 4 },\n    ];\n    const arr2 = [\n      { x: 2, y: 3 },\n      { x: 4, y: 5 },\n      { x: 5, y: 6 },\n    ];\n\n    const comparator = (\n      a: { x: number; y: number },\n      b: { x: number; y: number },\n    ) => a.x === b.x && a.y === b.y;\n\n    const actual = intersectionWith(comparator, arr1, arr2);\n    const expected = [{ x: 2, y: 3 }];\n\n    expect(actual).toEqual(expected);\n  });\n\n  test('multiple arrays using a comparator', () => {\n    const arr1 = [\n      { x: 1, y: 2 },\n      { x: 2, y: 3 },\n      { x: 3, y: 4 },\n    ];\n    const arr2 = [\n      { x: 2, y: 3 },\n      { x: 4, y: 5 },\n      { x: 5, y: 6 },\n    ];\n    const arr3 = [\n      { x: 2, y: 3 },\n      { x: 3, y: 4 },\n      { x: 5, y: 6 },\n      { x: 6, y: 7 },\n    ];\n\n    const comparator = (\n      a: { x: number; y: number },\n      b: { x: number; y: number },\n    ) => a.x === b.x && a.y === b.y;\n\n    const actual = intersectionWith(comparator, arr1, arr2, arr3);\n    const expected = [{ x: 2, y: 3 }];\n\n    expect(actual).toEqual(expected);\n  });\n\n  test('arrays with different lengths', () => {\n    const arr1 = [1, 2, 3];\n    const arr2 = [2, 3, 4, 5];\n    const arr3 = [3, 4, 5, 6, 7];\n\n    const actual = intersectionWith((x, y) => x == y, arr1, arr2, arr3);\n    const expected = [3];\n\n    expect(actual).toEqual(expected);\n  });\n\n  test('arrays with single elements', () => {\n    const arr1 = [{ x: 1, y: 2 }];\n    const arr2 = [{ x: 2, y: 3 }];\n    const arr3 = [{ x: 3, y: 4 }];\n\n    const comparator = (\n      a: { x: number; y: number },\n      b: { x: number; y: number },\n    ) => a.x === b.x && a.y === b.y;\n    const actual = intersectionWith(comparator, arr1, arr2, arr3);\n    expect(actual).toEqual([]);\n  });\n});\n",
    "/src/intersection-with.ts": "export default function intersectionWith<T>(\n  comparator: (a: T, b: T) => boolean,\n  ...arrays: Array<Array<T>>\n): Array<T> {\n  if (!arrays.length) {\n    return [];\n  }\n\n  const firstArray = arrays[0];\n\n  // Perform intersection\n  return firstArray.filter((value) =>\n    arrays\n      .slice(1)\n      .every((arr) => arr.some((otherValue) => comparator(value, otherValue))),\n  );\n}\n"
  },
  "info": {
    "excerpt": "使用自定义比较器函数计算数组的交集，以确定元素之间的相等性",
    "title": "交集运算"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [],
    "created": 1687651200,
    "difficulty": "medium",
    "duration": 15,
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/intersection-with",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "intersection",
      "intersection-with"
    ],
    "slug": "intersection-with",
    "subtitle": null,
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {Function} comparator - The comparator function used to determine equality between elements.\n * @param {...Array} arrays - The arrays to perform the intersection on.\n * @returns {Array} - A new array containing the elements that are present in all given arrays.\n */\nexport default function intersectionWith(comparator, ...arrays) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function intersectionWith<T>(\n  comparator: (a: T, b: T) => boolean,\n  ...arrays: Array<Array<T>>\n): Array<T> {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var f=Object.create;var o=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var A=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),j=(e,r)=>{for(var a in r)o(e,a,{get:r[a],enumerable:!0})},s=(e,r,a,i)=>{if(r&&typeof r==\"object\"||typeof r==\"function\")for(let n of p(r))!g.call(e,n)&&n!==a&&o(e,n,{get:()=>r[n],enumerable:!(i=y(r,n))||i.enumerable});return e};var T=(e,r,a)=>(a=e!=null?f(x(e)):{},s(r||!e||!e.__esModule?o(a,\"default\",{value:e,enumerable:!0}):a,e)),_=e=>s(o({},\"__esModule\",{value:!0}),e);var l=A((V,c)=>{c.exports=_jsx_runtime});var C={};j(C,{default:()=>M});var t=T(l());var h=MDXCodeBlock;var u=`/**\n * @param {Function} comparator - The comparator function used to determine equality between elements.\n * @param {...Array} arrays - The arrays to perform the intersection on.\n * @returns {Array} - A new array containing the elements that are present in all given arrays.\n */\nexport default function intersectionWith(comparator, ...arrays) {\n  if (!arrays.length) {\n    return [];\n  }\n\n  const firstArray = arrays[0];\n\n  // Perform intersection\n  return firstArray.filter((value) =>\n    arrays\n      .slice(1)\n      .every((arr) => arr.some((otherValue) => comparator(value, otherValue))),\n  );\n}\n`;var m=`export default function intersectionWith<T>(\n  comparator: (a: T, b: T) => boolean,\n  ...arrays: Array<Array<T>>\n): Array<T> {\n  if (!arrays.length) {\n    return [];\n  }\n\n  const firstArray = arrays[0];\n\n  // Perform intersection\n  return firstArray.filter((value) =>\n    arrays\n      .slice(1)\n      .every((arr) => arr.some((otherValue) => comparator(value, otherValue))),\n  );\n}\n`;function d(e){let r=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",ul:\"ul\",li:\"li\",a:\"a\"},e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,t.jsx)(h,{languages:{jsx:u,tsx:m}}),`\n`,(0,t.jsxs)(r.p,{children:[\"\\u8BE5\\u89E3\\u51B3\\u65B9\\u6848\\u4F7F\\u7528 \",(0,t.jsx)(r.code,{children:\".filter\"}),\" \\u904D\\u5386\\u7B2C\\u4E00\\u4E2A\\u6570\\u7EC4\\u7684\\u503C\\u3002\\u5BF9\\u4E8E\\u6BCF\\u4E2A\\u503C\\uFF0C\\u5B83\\u68C0\\u67E5\\u5728\\u6BCF\\u4E2A\\u5176\\u4ED6\\u6570\\u7EC4\\u4E2D\\u662F\\u5426\\u5B58\\u5728\\u67D0\\u4E2A\\u503C\\uFF0C\\u4F7F\\u5F97\\u6BD4\\u8F83\\u5668\\u51FD\\u6570\\u8FD4\\u56DE true\\u3002\\u5982\\u679C\\u662F\\uFF0C\\u5219\\u8BE5\\u503C\\u901A\\u8FC7\\u8FC7\\u6EE4\\u5668\\u5E76\\u5305\\u542B\\u5728\\u8FD4\\u56DE\\u7684\\u6570\\u7EC4\\u4E2D\\u3002\"]}),`\n`,(0,t.jsx)(r.h2,{children:\"\\u8D44\\u6E90\"}),`\n`,(0,t.jsxs)(r.ul,{children:[`\n`,(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:\"https://lodash.com/docs/#intersectionWith\",children:[\"Lodash \",(0,t.jsx)(r.code,{children:\"_.intersectionWith\"})]})}),`\n`]})]})}function b(e={}){let{wrapper:r}=e.components||{};return r?(0,t.jsx)(r,Object.assign({},e,{children:(0,t.jsx)(d,e)})):d(e)}var M=b;return _(C);})();\n;return Component;",
  "workspace": {
    "main": "/src/intersection-with.ts",
    "run": "/src/intersection-with.run.test.ts",
    "submit": "/src/intersection-with.submit.test.ts"
  }
}