{
  "description": "var Component=(()=>{var i=Object.create;var o=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var p=(c,e)=>()=>(e||c((e={exports:{}}).exports,e),e.exports),x=(c,e)=>{for(var d in e)o(c,d,{get:e[d],enumerable:!0})},t=(c,e,d,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of m(e))!b.call(c,r)&&r!==d&&o(c,r,{get:()=>e[r],enumerable:!(l=f(e,r))||l.enumerable});return c};var g=(c,e,d)=>(d=c!=null?i(u(c)):{},t(e||!c||!c.__esModule?o(d,\"default\",{value:c,enumerable:!0}):d,c)),j=c=>t(o({},\"__esModule\",{value:!0}),c);var a=p((M,s)=>{s.exports=_jsx_runtime});var y={};x(y,{default:()=>C,frontmatter:()=>N});var n=g(a()),N={title:\"Classnames II\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u6709\\u6761\\u4EF6\\u5730\\u5C06 CSS \\u7C7B\\u540D\\u8FDE\\u63A5\\u5728\\u4E00\\u8D77\\u7684\\u51FD\\u6570\\uFF0C\\u5E76\\u5904\\u7406\\u53BB\\u91CD\\u548C\\u51FD\\u6570\\u503C\"};function h(c){let e=Object.assign({p:\"p\",a:\"a\",code:\"code\",table:\"table\",thead:\"thead\",tr:\"tr\",th:\"th\",tbody:\"tbody\",td:\"td\",h2:\"h2\",pre:\"pre\",ul:\"ul\",li:\"li\"},c.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"\\u5728 \",(0,n.jsx)(e.a,{href:\"/questions/javascript/classnames\",children:\"classnames\"}),\" \\u4E2D\\uFF0C\\u6211\\u4EEC\\u5B9E\\u73B0\\u4E86 \",(0,n.jsx)(e.a,{href:\"https://github.com/JedWatson/classnames\",children:(0,n.jsx)(e.code,{children:\"classnames\"})}),\"\\uFF0C\\u8FD9\\u662F\\u4E00\\u4E2A\\u5728\\u73B0\\u4EE3\\u524D\\u7AEF\\u5E94\\u7528\\u7A0B\\u5E8F\\u4E2D\\u5E38\\u7528\\u7684\\u5B9E\\u7528\\u7A0B\\u5E8F\\uFF0C\\u7528\\u4E8E\\u6709\\u6761\\u4EF6\\u5730\\u5C06 CSS \\u7C7B\\u540D\\u8FDE\\u63A5\\u5728\\u4E00\\u8D77\\u3002\\u4F46\\u662F\\uFF0C\\u8BE5\\u5E93\\u5728\\u67D0\\u4E9B\\u60C5\\u51B5\\u4E0B\\u65E0\\u6CD5\\u505A\\u5230\\uFF1A\"]}),`\n`,(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:\"\\u60C5\\u51B5\"}),(0,n.jsx)(e.th,{children:\"\\u793A\\u4F8B\"}),(0,n.jsx)(e.th,{children:\"\\u539F\\u59CB\"}),(0,n.jsx)(e.th,{children:\"\\u6539\\u8FDB\"})]})}),(0,n.jsxs)(e.tbody,{children:[(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"\\u53BB\\u91CD\\u7C7B\\u540D\"}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.code,{children:\"classNames('foo', 'foo)\"})}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.code,{children:\"'foo foo'\"})}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.code,{children:\"'foo'\"})})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"\\u5173\\u95ED\\u7C7B\\u540D\"}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.code,{children:\"classNames('foo', 'bar', { foo: false })\"})}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.code,{children:\"'foo bar'\"})}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.code,{children:\"'bar'\"})})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:\"\\u51FD\\u6570\\u503C\"}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.code,{children:\"classNames(() => 'foo')\"})}),(0,n.jsx)(e.td,{children:\"\\u4E0D\\u652F\\u6301\"}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.code,{children:\"'foo'\"})})]})]})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u6539\\u8FDB\\u7248\\u7684 \",(0,n.jsx)(e.code,{children:\"classnames\"}),\" \\u51FD\\u6570\\uFF0C\\u4EE5\\u5904\\u7406\\u4E0A\\u8FF0\\u60C5\\u51B5\\u3002\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u793A\\u4F8B\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`classNames('foo', 'foo'); // 'foo'\nclassNames({ foo: true }, { foo: true }); // 'foo'\nclassNames({ foo: true, bar: true }, { foo: false }); // 'bar'\nclassNames('foo', () => 'bar'); // 'foo bar'\nclassNames('foo', () => 'foo'); // 'foo'\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8D44\\u6E90\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://github.com/JedWatson/classnames\",children:[(0,n.jsx)(e.code,{children:\"classnames\"}),\" \\u5E93\\u5728 GitHub \\u4E0A\"]})}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.a,{href:\"https://github.com/lukeed/clsx\",children:[(0,n.jsx)(e.code,{children:\"clsx\"}),\" \\u5E93\\u5728 GitHub \\u4E0A\"]}),\"\\uFF1A\\u4E00\\u4E2A\\u66F4\\u65B0\\u7684\\u7248\\u672C\\uFF0C\\u4F5C\\u4E3A \",(0,n.jsx)(e.code,{children:\"classnames\"}),\" \\u7684\\u66F4\\u5FEB\\u66F4\\u5C0F\\u7684\\u76F4\\u63A5\\u66FF\\u4EE3\\u54C1\\u3002\"]}),`\n`]})]})}function _(c={}){let{wrapper:e}=c.components||{};return e?(0,n.jsx)(e,Object.assign({},c,{children:(0,n.jsx)(h,c)})):h(c)}var C=_;return j(y);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/classnames-ii\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/classnames-ii.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"esnext\"\n  }\n}\n",
    "/src/classnames-ii.run.test.ts": "import classNames from './classnames-ii';\n\ndescribe('classNames', () => {\n  test('empty values', () => {\n    expect(classNames([])).toEqual('');\n  });\n\n  test('single value', () => {\n    expect(classNames('foo')).toEqual('foo');\n  });\n\n  test('duplicate values', () => {\n    expect(classNames('foo', 'foo')).toEqual('foo');\n    expect(classNames({ foo: true }, { foo: true })).toEqual('foo');\n  });\n\n  test('turn off values', () => {\n    expect(classNames({ foo: true, bar: true }, { foo: false })).toEqual('bar');\n  });\n\n  test('function values', () => {\n    expect(classNames('foo', () => 'bar')).toEqual('foo bar');\n    expect(classNames('foo', () => 'foo')).toEqual('foo');\n  });\n});\n",
    "/src/classnames-ii.submit.test.ts": "import classNames from './classnames-ii';\n\ndescribe('classNames', () => {\n  test('empty values', () => {\n    expect(classNames([])).toEqual('');\n  });\n\n  test('single value', () => {\n    expect(classNames('foo')).toEqual('foo');\n  });\n\n  test('two values', () => {\n    expect(classNames('foo', 'bar')).toEqual('foo bar');\n  });\n\n  test('array values', () => {\n    expect(classNames(['foo', 'bar', 'baz'])).toEqual('foo bar baz');\n  });\n\n  test('object values', () => {\n    expect(classNames({ 'foo-bar': true })).toEqual('foo-bar');\n    expect(classNames({ 'foo-bar': false })).toEqual('');\n    expect(classNames({ foo: true }, { bar: true })).toEqual('foo bar');\n    expect(classNames({ foo: true, bar: false, qux: true })).toEqual('foo qux');\n  });\n\n  test('mixed values', () => {\n    expect(\n      classNames(\n        'foo',\n        {\n          bar: true,\n          duck: false,\n        },\n        'baz',\n        { quux: true },\n      ),\n    ).toEqual('foo bar baz quux');\n    expect(\n      classNames('boo', true && 'loo', false && 'booz', {\n        foo: true,\n        bar: false,\n        baz: 1,\n      }),\n    ).toEqual('boo loo foo baz');\n  });\n\n  test('ignores falsey values', () => {\n    expect(\n      classNames(null, false, 'bar', undefined, 0, 1, { baz: null }, ''),\n    ).toEqual('bar 1');\n  });\n\n  test('recursively flattens arrays', () => {\n    expect(classNames('a', ['b', { c: true, d: false }])).toEqual('a b c');\n    expect(classNames('a', ['b', ['c', ['d']]])).toEqual('a b c d');\n  });\n\n  describe('duplicate values', () => {\n    test('isolated', () => {\n      expect(classNames('foo', 'foo')).toEqual('foo');\n    });\n\n    test('composite', () => {\n      expect(classNames('foo', 'bar', 'foo')).toEqual('foo bar');\n      expect(classNames('foo', { foo: true }, 'bar')).toEqual('foo bar');\n      expect(classNames({ foo: true }, { bar: true }, { foo: true })).toEqual(\n        'foo bar',\n      );\n      expect(classNames(1, '1')).toEqual('1');\n      expect(classNames('foo', 1, '1')).toEqual('foo 1');\n    });\n\n    test('nested', () => {\n      expect(classNames('foo', ['foo'])).toEqual('foo');\n      expect(classNames('foo', [{ foo: true }])).toEqual('foo');\n      expect(classNames([{ foo: true }, { foo: true }])).toEqual('foo');\n      expect(classNames([1], '1')).toEqual('1');\n    });\n  });\n\n  describe('function values', () => {\n    test('single', () => {\n      expect(classNames(() => 'foo')).toEqual('foo');\n    });\n\n    test('composite', () => {\n      expect(classNames(() => 'foo', 'bar', 'foo')).toEqual('foo bar');\n      expect(classNames(() => 'foo', { foo: true }, 'bar')).toEqual('foo bar');\n      expect(classNames(() => 1, '1')).toEqual('1');\n      expect(classNames('foo', 1, () => '1')).toEqual('foo 1');\n    });\n\n    test('nested', () => {\n      expect(classNames('foo', [() => 'foo'])).toEqual('foo');\n      expect(classNames('foo', [{ foo: true }, () => 'bar'])).toEqual(\n        'foo bar',\n      );\n    });\n  });\n\n  describe('turning off values', () => {\n    test('single', () => {\n      expect(classNames('foo', { foo: false })).toEqual('');\n    });\n\n    test('on before off', () => {\n      expect(classNames(() => 'foo', 'bar', { foo: false })).toEqual('bar');\n      expect(classNames(() => 'foo', { foo: true }, 'bar')).toEqual('foo bar');\n      expect(classNames(() => 1, '1', { 1: false })).toEqual('');\n      expect(classNames('foo', 1, () => '1')).toEqual('foo 1');\n    });\n\n    test('off before on', () => {\n      expect(classNames(() => 'foo', 'bar', { foo: false }, 'foo')).toEqual(\n        'bar foo',\n      );\n      expect(\n        classNames(() => 'foo', { foo: false }, { foo: true }, 'bar'),\n      ).toEqual('foo bar');\n      expect(classNames(() => 1, '1', { 1: false }, 1)).toEqual('1');\n    });\n\n    describe('nested', () => {\n      test('turn off in nested', () => {\n        expect(classNames('foo', [{ foo: false }])).toEqual('');\n        expect(classNames('foo', [() => 'foo', { foo: false }])).toEqual('');\n      });\n\n      test('turn on in nested', () => {\n        expect(classNames('foo', [{ foo: false }, 'foo'])).toEqual('foo');\n        expect(\n          classNames('foo', [{ foo: false }, 'foo', { foo: false }]),\n        ).toEqual('');\n      });\n    });\n  });\n});\n",
    "/src/classnames-ii.ts": "export type ClassValue =\n  | ClassArray\n  | ClassDictionary\n  | Function\n  | string\n  | number\n  | null\n  | boolean\n  | undefined;\nexport type ClassDictionary = Record<string, any>;\nexport type ClassArray = Array<ClassValue>;\n\nexport default function classNames(...args: Array<ClassValue>): string {\n  const classes: Set<string> = new Set();\n\n  function classNamesImpl(...args: Array<ClassValue>) {\n    args.forEach((arg) => {\n      // Ignore falsey values.\n      if (!arg) {\n        return;\n      }\n\n      const argType = typeof arg;\n\n      // Handle string and numbers.\n      if (argType === 'string' || argType === 'number') {\n        classes.add(String(arg));\n        return;\n      }\n\n      // Handle functions.\n      if (argType === 'function') {\n        const result = (arg as Function)();\n        if (!result) {\n          return;\n        }\n\n        classes.add(String(result));\n      }\n\n      // Handle arrays.\n      if (Array.isArray(arg)) {\n        for (const cls of arg) {\n          classNamesImpl(cls);\n        }\n\n        return;\n      }\n\n      // Handle objects.\n      if (argType === 'object') {\n        const objArg = arg as ClassDictionary;\n        for (const key in objArg) {\n          // Only process non-inherited keys.\n          if (Object.hasOwn(objArg, key)) {\n            objArg[key] ? classes.add(key) : classes.delete(key);\n          }\n        }\n\n        return;\n      }\n    });\n  }\n\n  classNamesImpl(args);\n\n  return Array.from(classes).join(' ');\n}\n"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [],
    "created": 1701302400,
    "difficulty": "hard",
    "duration": 25,
    "excerpt": "实现一个有条件地将 CSS 类名连接在一起的函数，并处理去重和函数值",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/classnames-ii",
    "importance": "medium",
    "languages": [
      "css",
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "classnames"
    ],
    "slug": "classnames-ii",
    "subtitle": null,
    "title": "Classnames II",
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {...(any|Object|Array<any|Object|Array>|Function)} args\n * @return {string}\n */\nexport default function classNames(...args) {\n  throw 'Not implemented!';\n}",
    "ts": "export type ClassValue =\n  | ClassArray\n  | ClassDictionary\n  | Function\n  | string\n  | number\n  | null\n  | boolean\n  | undefined;\nexport type ClassDictionary = Record<string, any>;\nexport type ClassArray = Array<ClassValue>;\n\nexport default function classNames(...args: Array<ClassValue>): string {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var y=Object.create;var a=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var j=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),k=(r,e)=>{for(var s in e)a(r,s,{get:e[s],enumerable:!0})},i=(r,e,s,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of p(e))!b.call(r,l)&&l!==s&&a(r,l,{get:()=>e[l],enumerable:!(c=f(e,l))||c.enumerable});return r};var x=(r,e,s)=>(s=r!=null?y(m(r)):{},i(e||!r||!r.__esModule?a(s,\"default\",{value:r,enumerable:!0}):s,r)),A=r=>i(a({},\"__esModule\",{value:!0}),r);var o=j((I,t)=>{t.exports=_jsx_runtime});var S={};k(S,{default:()=>O});var n=x(o());var d=MDXCodeBlock;var h=`/**\n * @param {...(any|Object|Array<any|Object|Array>|Function)} args\n * @return {string}\n */\nexport default function classNames(...args) {\n  const classes = new Set();\n\n  function classNamesImpl(...args) {\n    args.forEach((arg) => {\n      // Ignore falsey values.\n      if (!arg) {\n        return;\n      }\n\n      const argType = typeof arg;\n\n      // Handle string and numbers.\n      if (argType === 'string' || argType === 'number') {\n        classes.add(String(arg));\n        return;\n      }\n\n      // Handle functions.\n      if (argType === 'function') {\n        const result = arg();\n        if (!result) {\n          return;\n        }\n\n        classes.add(String(result));\n      }\n\n      // Handle arrays.\n      if (Array.isArray(arg)) {\n        for (const cls of arg) {\n          classNamesImpl(cls);\n        }\n\n        return;\n      }\n\n      // Handle objects.\n      if (argType === 'object') {\n        for (const key in arg) {\n          // Only process non-inherited keys.\n          if (Object.hasOwn(arg, key)) {\n            arg[key] ? classes.add(key) : classes.delete(key);\n          }\n        }\n\n        return;\n      }\n    });\n  }\n\n  classNamesImpl(args);\n\n  return Array.from(classes).join(' ');\n}\n`;var g=`export type ClassValue =\n  | ClassArray\n  | ClassDictionary\n  | Function\n  | string\n  | number\n  | null\n  | boolean\n  | undefined;\nexport type ClassDictionary = Record<string, any>;\nexport type ClassArray = Array<ClassValue>;\n\nexport default function classNames(...args: Array<ClassValue>): string {\n  const classes: Set<string> = new Set();\n\n  function classNamesImpl(...args: Array<ClassValue>) {\n    args.forEach((arg) => {\n      // Ignore falsey values.\n      if (!arg) {\n        return;\n      }\n\n      const argType = typeof arg;\n\n      // Handle string and numbers.\n      if (argType === 'string' || argType === 'number') {\n        classes.add(String(arg));\n        return;\n      }\n\n      // Handle functions.\n      if (argType === 'function') {\n        const result = (arg as Function)();\n        if (!result) {\n          return;\n        }\n\n        classes.add(String(result));\n      }\n\n      // Handle arrays.\n      if (Array.isArray(arg)) {\n        for (const cls of arg) {\n          classNamesImpl(cls);\n        }\n\n        return;\n      }\n\n      // Handle objects.\n      if (argType === 'object') {\n        const objArg = arg as ClassDictionary;\n        for (const key in objArg) {\n          // Only process non-inherited keys.\n          if (Object.hasOwn(objArg, key)) {\n            objArg[key] ? classes.add(key) : classes.delete(key);\n          }\n        }\n\n        return;\n      }\n    });\n  }\n\n  classNamesImpl(args);\n\n  return Array.from(classes).join(' ');\n}\n`;function u(r){let e=Object.assign({p:\"p\",a:\"a\",h2:\"h2\",blockquote:\"blockquote\",ol:\"ol\",li:\"li\",code:\"code\",ul:\"ul\",strong:\"strong\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"\\u6B64\\u89E3\\u51B3\\u65B9\\u6848\\u5047\\u8BBE\\u60A8\\u5DF2\\u5B8C\\u6210 \",(0,n.jsx)(e.a,{href:\"/questions/javascript/classnames\",children:\"Classnames\"}),\" \\u95EE\\u9898\\u5E76\\u5B8C\\u5168\\u7406\\u89E3\\u5176\\u89E3\\u51B3\\u65B9\\u6848\\u3002\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u6F84\\u6E05\\u95EE\\u9898\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u4EE5\\u4E0B\\u662F\\u5411\\u9762\\u8BD5\\u5B98\\u63D0\\u51FA\\u7684\\u597D\\u95EE\\u9898\\uFF0C\\u4EE5\\u5C55\\u793A\\u60A8\\u7684\\u6DF1\\u601D\\u719F\\u8651\\u3002\\u6839\\u636E\\u4ED6\\u4EEC\\u7684\\u56DE\\u7B54\\uFF0C\\u60A8\\u53EF\\u80FD\\u9700\\u8981\\u76F8\\u5E94\\u5730\\u8C03\\u6574\\u5B9E\\u73B0\\u3002\"}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\"\\u5982\\u679C\\u5D4C\\u5957\\u6570\\u7EC4\\u4E2D\\u7684\\u4E00\\u4E2A\\u7C7B\\u88AB\\u5173\\u95ED\\uFF0C\\u5B83\\u4F1A\\u5728\\u6574\\u4F53\\u4E0A\\u88AB\\u5173\\u95ED\\u5417\\uFF1F\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"\\u8FD9\\u53D6\\u51B3\\u4E8E\\u8F93\\u5165\\u4E2D\\u7C7B\\u7684\\u4F4D\\u7F6E\\uFF0C\\u65E0\\u8BBA\\u5D4C\\u5957\\u7EA7\\u522B\\u5982\\u4F55\\u3002 \\u540E\\u9762\\u51FA\\u73B0\\u7684\\u7C7B\\u5C06\\u4F18\\u5148\\u3002\"}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u6B64\\u89E3\\u51B3\\u65B9\\u6848\\u7684\\u68D8\\u624B\\u90E8\\u5206\\u662F\\u51FD\\u6570\\u7684\\u9012\\u5F52\\u6027\\u8D28\\u3002 \\u56E0\\u6B64\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u5C06\\u89E3\\u51B3\\u65B9\\u6848\\u5206\\u6210\\u4E24\\u90E8\\u5206\\uFF1A\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"\\u5904\\u7406\\u6BCF\\u79CD\\u6570\\u636E\\u7C7B\\u578B\\u3002\"}),`\n`,(0,n.jsx)(e.li,{children:\"\\u9012\\u5F52\\u5904\\u7406\\u6570\\u7EC4\\u7C7B\\u578B\\u3002\"}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u56E0\\u4E3A\\u6700\\u7EC8\\u7ED3\\u679C\\u5E94\\u8BE5\\u53EA\\u5305\\u542B\\u552F\\u4E00\\u7684\\u7C7B\\u540D\\uFF0C\\u5E76\\u4E14\\u6211\\u4EEC\\u9700\\u8981\\u5728\\u5904\\u7406\\u6BCF\\u4E2A\\u53C2\\u6570\\u65F6\\u6253\\u5F00/\\u5173\\u95ED\\u7C7B\\uFF0C\\u6240\\u4EE5\\u6211\\u4EEC\\u9700\\u8981\\u4E00\\u4E2A\\u5904\\u7406\\u552F\\u4E00\\u6027\\u7684\\u6570\\u636E\\u7ED3\\u6784\\uFF1B \",(0,n.jsx)(e.code,{children:\"Set\"}),\" \\u51FA\\u73B0\\u4E86\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u540E\\u9762\\u51FA\\u73B0\\u7684\\u7C7B\\u5C06\\u4F18\\u5148\\uFF0C\\u65E0\\u8BBA\\u5D4C\\u5957\\u7EA7\\u522B\\u5982\\u4F55\\u3002 \\u8FD9\\u610F\\u5473\\u7740\\u7EAF\\u9012\\u5F52\\u65B9\\u6CD5\\u5C06\\u4E0D\\u8D77\\u4F5C\\u7528\\uFF0C\\u56E0\\u4E3A\\u6211\\u4EEC\\u9700\\u8981\\u77E5\\u9053\\u5230\\u76EE\\u524D\\u4E3A\\u6B62\\u5DF2\\u5904\\u7406\\u7684\\u7C7B\\u4E2D\\u5B58\\u5728\\u54EA\\u4E9B\\u7C7B\\u3002 \\u6211\\u4EEC\\u5C06\\u4F7F\\u7528\\u4E00\\u4E2A\\u5185\\u90E8\\u9012\\u5F52\\u52A9\\u624B\\u4FEE\\u6539\\u5916\\u90E8 \",(0,n.jsx)(e.code,{children:\"classes\"}),\" \\u96C6\\u7684\\u65B9\\u6CD5\\u3002 \\u5185\\u90E8\\u9012\\u5F52\\u52A9\\u624B\\u4E0D\\u8FD4\\u56DE\\u4EFB\\u4F55\\u5185\\u5BB9\\uFF0C\\u5B83\\u7684\\u4E3B\\u8981\\u76EE\\u7684\\u662F\\u5904\\u7406\\u6BCF\\u4E2A\\u53C2\\u6570\\u5E76\\u5C06\\u5B83\\u4EEC\\u6DFB\\u52A0\\u5230 \",(0,n.jsx)(e.code,{children:\"classes\"}),\"\\u3002\"]}),`\n`,(0,n.jsx)(e.p,{children:\"\\u4EE5\\u4E0B\\u662F\\u6211\\u4EEC\\u5982\\u4F55\\u5904\\u7406\\u6BCF\\u79CD\\u6570\\u636E\\u7C7B\\u578B\\uFF1A\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Falsey \\u503C\"}),\"\\uFF1A\\u5FFD\\u7565\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"\\u5B57\\u7B26\\u4E32\"}),\"\\uFF1A\\u5C06\\u5176\\u6DFB\\u52A0\\u5230 \",(0,n.jsx)(e.code,{children:\"classes\"}),\" \\u96C6\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"\\u6570\\u5B57\"}),\"\\uFF1A\\u5C06\\u5176\\u6DFB\\u52A0\\u5230 \",(0,n.jsx)(e.code,{children:\"classes\"}),\" \\u96C6\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"\\u6570\\u7EC4\"}),\"\\uFF1A\\u9012\\u5F52\\u8C03\\u7528 \",(0,n.jsx)(e.code,{children:\"classNames\"}),\" \\u51FD\\u6570\\u6216\\u5185\\u90E8\\u9012\\u5F52\\u51FD\\u6570\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"\\u51FD\\u6570\"}),\"\\uFF1A\\u5982\\u679C\\u503C\\u4E3A\\u771F\\u503C\\uFF0C\\u5219\\u8C03\\u7528\\u8BE5\\u503C\\u5E76\\u5C06\\u5176\\u6DFB\\u52A0\\u5230 \",(0,n.jsx)(e.code,{children:\"classes\"}),\"\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"\\u5BF9\\u8C61\"}),\"\\uFF1A\\u5FAA\\u73AF\\u904D\\u5386\\u952E/\\u503C\\u5BF9\\u3002 \\u5982\\u679C\\u8BE5\\u503C\\u4E3A\\u771F\\u503C\\uFF0C\\u5219\\u5C06\\u5176\\u6DFB\\u52A0\\u5230 \",(0,n.jsx)(e.code,{children:\"classes\"}),\" \\u96C6\\u3002 \\u5426\\u5219\\uFF0C\\u5C06\\u5176\\u4ECE \",(0,n.jsx)(e.code,{children:\"classes\"}),\" \\u96C6\\u5220\\u9664\\u3002\"]}),`\n`]}),`\n`,(0,n.jsx)(d,{languages:{jsx:h,tsx:g}}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u6280\\u672F\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"\\u719F\\u6089 JavaScript \\u503C\\u7C7B\\u578B\\u4EE5\\u53CA\\u5982\\u4F55\\u68C0\\u67E5\\u5B83\\u4EEC\"}),`\n`,(0,n.jsx)(e.li,{children:\"\\u9012\\u5F52\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5C06 \",(0,n.jsx)(e.code,{children:\"Set\"}),\" \\u8F6C\\u6362\\u4E3A \",(0,n.jsx)(e.code,{children:\"Array\"})]}),`\n`,(0,n.jsx)(e.li,{children:\"\\u5904\\u7406\\u53EF\\u53D8\\u53C2\\u6570\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u7B14\\u8BB0\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"typeof []\"}),\" \\u7ED9\\u51FA \",(0,n.jsx)(e.code,{children:\"'object'\"}),\"\\uFF0C\\u56E0\\u6B64\\u60A8\\u9700\\u8981\\u5728\\u5BF9\\u8C61\\u4E4B\\u524D\\u5904\\u7406\\u6570\\u7EC4\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u60A8\\u53EF\\u80FD\\u4E0D\\u5E0C\\u671B\\u5904\\u7406\\u8FD9\\u4E9B\\u60C5\\u51B5\\uFF0C\\u4F46\\u60A8\\u5E94\\u8BE5\\u63D0\\u53CA\\u5B83\\u4EEC\\uFF1A\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"\\u5806\\u6808\\u6EA2\\u51FA\\u7684\\u53EF\\u80FD\\u6027\\u3002 \\u8FD9\\u9002\\u7528\\u4E8E\\u4EFB\\u4F55\\u9012\\u5F52\\u89E3\\u51B3\\u65B9\\u6848\\u3002\"}),`\n`,(0,n.jsx)(e.li,{children:\"\\u6570\\u7EC4\\u548C\\u5BF9\\u8C61\\u7684\\u5FAA\\u73AF\\u5F15\\u7528\\u7684\\u53EF\\u80FD\\u6027\\u3002 \\u8FD9\\u9002\\u7528\\u4E8E\\u4EFB\\u4F55\\u5177\\u6709\\u4EFB\\u610F\\u6DF1\\u5EA6\\u7684\\u8F93\\u5165\\u3002\"}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8D44\\u6E90\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://github.com/JedWatson/classnames\",children:[(0,n.jsx)(e.code,{children:\"classnames\"}),\" \\u5E93\\u5728 GitHub \\u4E0A\"]})}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.a,{href:\"https://github.com/lukeed/clsx\",children:[(0,n.jsx)(e.code,{children:\"clsx\"}),\" \\u5E93\\u5728 GitHub \\u4E0A\"]}),\"\\uFF1A\\u4E00\\u4E2A\\u8F83\\u65B0\\u7684\\u7248\\u672C\\uFF0C\\u53EF\\u4EE5\\u4F5C\\u4E3A \",(0,n.jsx)(e.code,{children:\"classnames\"}),\" \\u7684\\u66F4\\u5FEB\\u66F4\\u5C0F\\u7684\\u76F4\\u63A5\\u66FF\\u4EE3\\u54C1\\u3002\"]}),`\n`]})]})}function H(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(u,r)})):u(r)}var O=H;return A(S);})();\n;return Component;",
  "workspace": {
    "main": "/src/classnames-ii.ts",
    "run": "/src/classnames-ii.run.test.ts",
    "submit": "/src/classnames-ii.submit.test.ts"
  }
}