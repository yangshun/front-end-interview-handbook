{
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/number-of-arguments\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/number-of-arguments.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/number-of-arguments.run.test.ts": "import numberOfArguments from './number-of-arguments';\n\ndescribe('numberOfArguments', () => {\n  test('no arguments', () => {\n    expect(numberOfArguments()).toBe(0);\n  });\n\n  test('one argument', () => {\n    expect(numberOfArguments(0)).toBe(1);\n  });\n\n  test('two arguments', () => {\n    expect(numberOfArguments(0, 1)).toBe(2);\n  });\n});\n",
    "/src/number-of-arguments.submit.test.ts": "import numberOfArguments from './number-of-arguments';\n\ndescribe('numberOfArguments', () => {\n  test('no arguments', () => {\n    expect(numberOfArguments()).toBe(0);\n  });\n\n  test('one argument', () => {\n    expect(numberOfArguments(0)).toBe(1);\n    expect(numberOfArguments(null)).toBe(1);\n    expect(numberOfArguments(undefined)).toBe(1);\n    expect(numberOfArguments(NaN)).toBe(1);\n    expect(numberOfArguments(true)).toBe(1);\n    expect(numberOfArguments(false)).toBe(1);\n    expect(numberOfArguments([1, 2, 3])).toBe(1);\n    expect(numberOfArguments({})).toBe(1);\n  });\n\n  test('two arguments', () => {\n    expect(numberOfArguments(0, 1)).toBe(2);\n    expect(numberOfArguments(true, false)).toBe(2);\n    expect(numberOfArguments([1, 2, 3], [4, 5, 6])).toBe(2);\n    expect(numberOfArguments({}, [])).toBe(2);\n  });\n\n  test('multiple arguments', () => {\n    expect(numberOfArguments(0, 1, 2)).toBe(3);\n    expect(numberOfArguments(true, false, null)).toBe(3);\n    expect(numberOfArguments([1, 2, 3], [4, 5, 6], [7, 8, 9])).toBe(3);\n    expect(numberOfArguments(...[1, 2, 3])).toBe(3);\n    expect(numberOfArguments({}, [], new Set())).toBe(3);\n  });\n});\n",
    "/src/number-of-arguments.ts": "export default function numberOfArguments(...args: Array<any>): number {\n  return arguments.length;\n}\n"
  },
  "skeleton": {
    "js": "/**\n * @param {...any} args\n * @return {number}\n */\nexport default function numberOfArguments() {\n  throw 'Not implemented';\n}",
    "ts": "export default function numberOfArguments(...args: Array<any>): number {\n  throw 'Not implemented';\n}"
  },
  "workspace": {
    "main": "/src/number-of-arguments.ts",
    "run": "/src/number-of-arguments.run.test.ts",
    "submit": "/src/number-of-arguments.submit.test.ts"
  }
}