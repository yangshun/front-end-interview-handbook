{
  "description": "var Component=(()=>{var s=Object.create;var l=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var y=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),g=(r,e)=>{for(var i in e)l(r,i,{get:e[i],enumerable:!0})},c=(r,e,i,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of p(e))!f.call(r,t)&&t!==i&&l(r,t,{get:()=>e[t],enumerable:!(o=u(e,t))||o.enumerable});return r};var x=(r,e,i)=>(i=r!=null?s(m(r)):{},c(e||!r||!r.__esModule?l(i,\"default\",{value:r,enumerable:!0}):i,r)),j=r=>c(l({},\"__esModule\",{value:!0}),r);var d=y((w,a)=>{a.exports=_jsx_runtime});var b={};g(b,{default:()=>W,frontmatter:()=>_});var n=x(d()),_={title:\"Drop While\",excerpt:\"Implement a function that excludes elements from the beginning of an array until the predicate returns false\"};function h(r){let e=Object.assign({p:\"p\",code:\"code\",h4:\"h4\",ol:\"ol\",li:\"li\",em:\"em\",h2:\"h2\",pre:\"pre\",ul:\"ul\",a:\"a\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Implement a function \",(0,n.jsx)(e.code,{children:\"dropWhile(array, predicate)\"}),\" that creates a slice of \",(0,n.jsx)(e.code,{children:\"array\"}),\" excluding elements dropped from the beginning. Elements are dropped until \",(0,n.jsx)(e.code,{children:\"predicate\"}),\" returns falsey. Your function should not modify the original array.\"]}),`\n`,(0,n.jsx)(e.h4,{children:\"Arguments\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"array\"}),\" \",(0,n.jsx)(e.em,{children:\"(Array)\"}),\": The array to query.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"predicate\"}),\" \",(0,n.jsx)(e.em,{children:\"(Function)\"}),\": The function invoked per iteration. The function is invoked with three arguments: \",(0,n.jsx)(e.em,{children:\"(value, index, array)\"}),\".\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h4,{children:\"Returns\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.em,{children:\"(Array)\"}),\": Returns the slice of \",(0,n.jsx)(e.code,{children:\"array\"}),\".\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Examples\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`dropWhile([1, 2, 3, 4, 5], (value) => value < 3); // => [3, 4, 5]\ndropWhile([1, 2, 3], (value) => value < 6); // => []\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Note that Lodash's \",(0,n.jsx)(e.code,{children:\"dropWhile\"}),\" utility also allows you to pass an optional \",(0,n.jsx)(e.code,{children:\"thisArg\"}),\" parameter to bind \",(0,n.jsx)(e.code,{children:\"this\"}),\" inside the predicate function, but for this exercise, you can ignore that parameter.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://lodash.com/docs/#dropWhile\",children:[\"Lodash \",(0,n.jsx)(e.code,{children:\"_.dropWhile\"})]})}),`\n`]})]})}function v(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(h,r)})):h(r)}var W=v;return j(b);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/drop-while\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/drop-while.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/drop-while.run.test.ts": "import dropWhile from './drop-while';\n\ndescribe('dropWhile', () => {\n  test('empty array', () => {\n    expect(dropWhile([], (value) => value < 3)).toEqual([]);\n  });\n\n  test('drop some elements', () => {\n    expect(dropWhile([1, 2, 3, 4, 5], (value) => value < 3)).toEqual([3, 4, 5]);\n  });\n\n  test('drop everything', () => {\n    expect(dropWhile([1, 2, 3, 4, 5], () => true)).toEqual([]);\n  });\n});\n",
    "/src/drop-while.submit.test.ts": "import dropWhile from './drop-while';\n\ndescribe('dropWhile', () => {\n  test('empty array', () => {\n    expect(dropWhile([], (value) => value < 3)).toEqual([]);\n  });\n\n  test('drop elements until predicate returns false', () => {\n    expect(dropWhile([1, 2, 3, 4, 5], (value) => value < 3)).toEqual([3, 4, 5]);\n  });\n\n  test('predicate always returns true', () => {\n    expect(dropWhile([1, 2, 3, 4, 5], () => true)).toEqual([]);\n  });\n\n  test('predicate always returns false', () => {\n    expect(dropWhile([1, 2, 3, 4, 5], () => false)).toEqual([1, 2, 3, 4, 5]);\n  });\n\n  test('sparse arrays', () => {\n    expect(dropWhile([1, , 3, 4, 5], (value) => value === undefined)).toEqual([\n      1,\n      ,\n      3,\n      4,\n      5,\n    ]);\n  });\n\n  describe('required arguments are passed', () => {\n    test('index is passed', () => {\n      const array = [1, 2, 3, 4, 5];\n      expect(dropWhile(array, (_, index) => index < 3)).toEqual([4, 5]);\n    });\n\n    test('array is passed', () => {\n      const array = [20, 30, 40, 5, 6];\n      expect(dropWhile(array, (value, _, arr) => value > arr.length)).toEqual([\n        5, 6,\n      ]);\n    });\n  });\n\n  test('should not modify the original input array', () => {\n    const array = [1, 2, 3, 4, 5];\n    dropWhile(array, (value) => value > 3);\n    expect(array).toEqual([1, 2, 3, 4, 5]);\n  });\n});\n",
    "/src/drop-while.ts": "export default function dropWhile<T>(\n  array: Array<T>,\n  predicate: (value: T, index: number, array: Array<T>) => boolean,\n): Array<T> {\n  let index = 0;\n\n  while (index < array.length && predicate(array[index], index, array)) {\n    index++;\n  }\n\n  return array.slice(index);\n}\n"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [],
    "created": 1682553600,
    "difficulty": "easy",
    "duration": 10,
    "excerpt": "Implement a function that excludes elements from the beginning of an array until the predicate returns false",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/drop-while",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [
      "drop-right-while"
    ],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "drop-while",
    "subtitle": null,
    "title": "Drop While",
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {Array} array - The array to iterate over.\n * @param {Function} predicate - The function invoked per iteration.\n * @return {Array} Returns the slice of `array`.\n */\nexport default function dropWhile(array, predicate) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function dropWhile<T>(\n  array: Array<T>,\n  predicate: (value: T, index: number, array: Array<T>) => boolean,\n): Array<T> {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var p=Object.create;var i=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var j=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),T=(r,e)=>{for(var a in e)i(r,a,{get:e[a],enumerable:!0})},d=(r,e,a,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of m(e))!g.call(r,t)&&t!==a&&i(r,t,{get:()=>e[t],enumerable:!(o=y(e,t))||o.enumerable});return r};var _=(r,e,a)=>(a=r!=null?p(f(r)):{},d(e||!r||!r.__esModule?i(a,\"default\",{value:r,enumerable:!0}):a,r)),W=r=>d(i({},\"__esModule\",{value:!0}),r);var c=j((k,l)=>{l.exports=_jsx_runtime});var D={};T(D,{default:()=>C});var n=_(c());var s=MDXCodeBlock;var h=`/**\n * @param {Array} array - The array to iterate over.\n * @param {Function} predicate - The function invoked per iteration.\n * @return {Array} Returns the slice of \\`array\\`.\n */\nexport default function dropWhile(array, predicate) {\n  let index = 0;\n\n  while (index < array.length && predicate(array[index], index, array)) {\n    index++;\n  }\n\n  return array.slice(index);\n}\n`;var u=`export default function dropWhile<T>(\n  array: Array<T>,\n  predicate: (value: T, index: number, array: Array<T>) => boolean,\n): Array<T> {\n  let index = 0;\n\n  while (index < array.length && predicate(array[index], index, array)) {\n    index++;\n  }\n\n  return array.slice(index);\n}\n`;function x(r){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\",code:\"code\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,n.jsx)(s,{languages:{jsx:h,tsx:u}}),`\n`,(0,n.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://lodash.com/docs/#dropWhile\",children:[\"Lodash \",(0,n.jsx)(e.code,{children:\"_.dropWhile\"})]})}),`\n`]})]})}function b(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(x,r)})):x(r)}var C=b;return W(D);})();\n;return Component;",
  "workspace": {
    "main": "/src/drop-while.ts",
    "run": "/src/drop-while.run.test.ts",
    "submit": "/src/drop-while.submit.test.ts"
  }
}