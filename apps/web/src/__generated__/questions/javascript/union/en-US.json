{
  "description": "var Component=(()=>{var h=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var f=(r,n)=>()=>(n||r((n={exports:{}}).exports,n),n.exports),g=(r,n)=>{for(var a in n)i(r,a,{get:n[a],enumerable:!0})},o=(r,n,a,l)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let c of m(n))!y.call(r,c)&&c!==a&&i(r,c,{get:()=>n[c],enumerable:!(l=u(n,c))||l.enumerable});return r};var x=(r,n,a)=>(a=r!=null?h(p(r)):{},o(n||!r||!r.__esModule?i(a,\"default\",{value:r,enumerable:!0}):a,r)),j=r=>o(i({},\"__esModule\",{value:!0}),r);var s=f((N,t)=>{t.exports=_jsx_runtime});var A={};g(A,{default:()=>b,frontmatter:()=>_});var e=x(s()),_={title:\"Union\",excerpt:\"Implement a function that creates an array of unique values, in order, from all given arrays\"};function d(r){let n=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\",em:\"em\",ul:\"ul\",a:\"a\"},r.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.p,{children:[\"Implement a function \",(0,e.jsx)(n.code,{children:\"union(array)\"}),\" that creates an array of unique values, in order, from all given arrays.\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`union(arrays);\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Arguments\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"[arrays]\"}),\" \",(0,e.jsx)(n.em,{children:\"(...Array)\"}),\": The arrays to inspect\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Returns\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.em,{children:(0,e.jsx)(n.code,{children:\"(Array)\"})}),\": Returns the new array of combined values.\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Examples\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`union([4, 2, 8, 6]); // => [4, 2, 8, 6]\\r\n\\r\nunion([2], [1, 2]); // => [2, 1]\\r\n\\r\nunion([1, 2, 2]); // => [1, 2]\n`})}),`\n`,(0,e.jsxs)(n.p,{children:[\"The function should return an empty array if \",(0,e.jsx)(n.code,{children:\"array\"}),\" is empty.\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`unionBy([]); // => []\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Resources\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:(0,e.jsxs)(n.a,{href:\"https://lodash.com/docs/#union\",children:[\"Lodash \",(0,e.jsx)(n.code,{children:\"_.union\"})]})}),`\n`]})]})}function v(r={}){let{wrapper:n}=r.components||{};return n?(0,e.jsx)(n,Object.assign({},r,{children:(0,e.jsx)(d,r)})):d(r)}var b=v;return j(A);})();\n;return Component;",
  "info": {
    "excerpt": "Implement a function that creates an array of unique values, in order, from all given arrays",
    "title": "Union"
  },
  "solution": "var Component=(()=>{var p=Object.create;var o=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var b=(t,r)=>()=>(r||t((r={exports:{}}).exports,r),r.exports),T=(t,r)=>{for(var a in r)o(t,a,{get:r[a],enumerable:!0})},u=(t,r,a,i)=>{if(r&&typeof r==\"object\"||typeof r==\"function\")for(let n of g(r))!w.call(t,n)&&n!==a&&o(t,n,{get:()=>r[n],enumerable:!(i=A(r,n))||i.enumerable});return t};var k=(t,r,a)=>(a=t!=null?p(x(t)):{},u(r||!t||!t.__esModule?o(a,\"default\",{value:t,enumerable:!0}):a,t)),E=t=>u(o({},\"__esModule\",{value:!0}),t);var c=b((R,l)=>{l.exports=_jsx_runtime});var D={};T(D,{default:()=>M});var e=k(c());var s=MDXCodeBlock;var h=`/**\n * @param {...Array} [arrays] Array from which the elements are all numbers.\n * @return {Array} Returns the new array of combined values.\n */\nexport default function union(...arrays) {\n  const result = [];\n\n  arrays.forEach((array) => {\n    array.forEach((item) => {\n      // Check if the result array contains the \\`item\\`; if not, add it to the result.\n      if (!result.includes(item)) {\n        result.push(item);\n      }\n    });\n  });\n\n  return result;\n}\n`;var d=`export default function union<T>(...arrays: Array<Array<T>>): Array<T> {\\r\n  const result: Array<T> = [];\\r\n\\r\n  arrays.forEach((array) => {\\r\n    array.forEach((item: T) => {\\r\n      // Check if the result array contains the \\`item\\`; if not, add it to the result.\\r\n      if (!result.includes(item)) {\\r\n        result.push(item);\\r\n      }\\r\n    });\\r\n  });\\r\n\\r\n  return result;\\r\n}\\r\n`;var f=`/**\\r\n * @param {...Array} [arrays] Array from which the elements are all numbers.\\r\n * @return {Array} Returns the new array of combined values.\\r\n */\\r\nexport default function union(...arrays) {\\r\n  const result = new Set();\\r\n\\r\n  arrays.forEach((array) => {\\r\n    array.forEach((item) => {\\r\n      // Add \\`item\\` to the \\`result\\`. Set will automatically ensure uniqueness.\\r\n      result.add(item);\\r\n    });\\r\n  });\\r\n\\r\n  // Convert the \\`result\\` back to an array before returning.\\r\n  return Array.from(result);\\r\n}\\r\n`;var y=`export default function union<T>(...arrays: Array<Array<T>>): Array<T> {\\r\n  const result = new Set<T>();\\r\n\\r\n  arrays.forEach((array) => {\\r\n    array.forEach((item) => {\\r\n      // Add \\`item\\` to the \\`result\\`. Set will automatically ensure uniqueness.\\r\n      result.add(item);\\r\n    });\\r\n  });\\r\n\\r\n  // Convert the \\`result\\` back to an array before returning.\\r\n  return Array.from(result);\\r\n}\\r\n`;function m(t){let r=Object.assign({h2:\"h2\",h3:\"h3\",code:\"code\",p:\"p\",ul:\"ul\",li:\"li\",a:\"a\"},t.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(r.h2,{children:\"Solution\"}),`\n`,(0,e.jsxs)(r.h3,{children:[\"Approach 1: Using \",(0,e.jsx)(r.code,{children:\"array\"}),\" to store the union values\"]}),`\n`,(0,e.jsxs)(r.p,{children:[\"This solution iterates through all the array elements, checks if there is any same value in \",(0,e.jsx)(r.code,{children:\"result\"}),\" and push if there isn't.\"]}),`\n`,(0,e.jsx)(s,{languages:{jsx:h,tsx:d}}),`\n`,(0,e.jsxs)(r.h3,{children:[\"Approach 2: Use \",(0,e.jsx)(r.code,{children:\"Set\"}),\" instead of array\"]}),`\n`,(0,e.jsxs)(r.p,{children:[\"Another solution will be using a set instead of array for \",(0,e.jsx)(r.code,{children:\"result\"}),\" as sets can check for existence of items efficiently.\"]}),`\n`,(0,e.jsx)(s,{languages:{jsx:f,tsx:y}}),`\n`,(0,e.jsx)(r.h2,{children:\"Edge cases\"}),`\n`,(0,e.jsx)(r.p,{children:\"If the function is called with non-array arguments, it will throw an error because non-array types do not have the forEach method that the function relies on.\"}),`\n`,(0,e.jsxs)(r.p,{children:[\"To solve this, we can check if each argument is an array using \",(0,e.jsx)(r.code,{children:\"Array.isArray\"}),\" before attempting to iterate over it. If an argument is not an array, you can choose to skip it or add code to process these items separately.\"]}),`\n`,(0,e.jsx)(r.h2,{children:\"Resources\"}),`\n`,(0,e.jsxs)(r.ul,{children:[`\n`,(0,e.jsx)(r.li,{children:(0,e.jsxs)(r.a,{href:\"https://lodash.com/docs/#union\",children:[\"Lodash \",(0,e.jsx)(r.code,{children:\"_.union\"})]})}),`\n`]})]})}function _(t={}){let{wrapper:r}=t.components||{};return r?(0,e.jsx)(r,Object.assign({},t,{children:(0,e.jsx)(m,t)})):m(t)}var M=_;return E(D);})();\n;return Component;"
}