{
  "description": "var Component=(()=>{var s=Object.create;var c=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var g=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=>{for(var o in e)c(t,o,{get:e[o],enumerable:!0})},r=(t,e,o,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of m(e))!S.call(t,l)&&l!==o&&c(t,l,{get:()=>e[l],enumerable:!(i=u(e,l))||i.enumerable});return t};var v=(t,e,o)=>(o=t!=null?s(p(t)):{},r(e||!t||!t.__esModule?c(o,\"default\",{value:t,enumerable:!0}):o,t)),x=t=>r(c({},\"__esModule\",{value:!0}),t);var h=g((H,d)=>{d.exports=_jsx_runtime});var C={};b(C,{default:()=>k,frontmatter:()=>f});var n=v(h()),f={title:\"useSet\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u7BA1\\u7406 JavaScript Set \\u7684 Hook\"};function a(t){let e=Object.assign({p:\"p\",code:\"code\",a:\"a\",pre:\"pre\",h2:\"h2\",ul:\"ul\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A \",(0,n.jsx)(e.code,{children:\"useSet\"}),\" Hook\\uFF0C\\u7528\\u4E8E\\u7BA1\\u7406\\u4E00\\u4E2A JavaScript \",(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\",children:(0,n.jsx)(e.code,{children:\"Set\"})}),\" \\u96C6\\u5408\\uFF0C\\u5E76\\u63D0\\u4F9B\\u989D\\u5916\\u7684\\u5B9E\\u7528\\u65B9\\u6CD5\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"useSet\"}),\" \\u6BD4\\u76F4\\u63A5\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"useState\"}),\" \\u66F4\\u65B9\\u4FBF\\uFF0C\\u56E0\\u4E3A\\u5728\\u540E\\u4E00\\u79CD\\u60C5\\u51B5\\u4E0B\\uFF0C\\u4F60\\u603B\\u662F\\u9700\\u8981\\u521B\\u5EFA\\u4E00\\u4E2A\\u65B0\\u7684 \",(0,n.jsx)(e.code,{children:\"Set\"}),\"\\uFF0C\\u4FEE\\u6539\\u5B83\\uFF0C\\u7136\\u540E\\u8BBE\\u7F6E\\u72B6\\u6001\\u6765\\u4F7F\\u7528\\u65B0\\u7684\\u96C6\\u5408\\uFF0C\\u8FD9\\u53EF\\u80FD\\u4F1A\\u5F88\\u9EBB\\u70E6\\u3002\"]}),`\n`,(0,n.jsx)(e.p,{children:\"\\u8BE5 Hook \\u5E94\\u8BE5\\u53EF\\u4EE5\\u901A\\u7528\\u5730\\u5904\\u7406\\u4EFB\\u4F55\\u7C7B\\u578B\\u7684\\u9879\\u76EE\\u3002\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`export default function Component() {\n  const { set, add, remove, toggle, reset, clear } = useSet(new Set(['hello']));\n\n  return (\n    <div>\n      <button onClick={() => add(Date.now().toString())}>Add</button>\n      <button onClick={() => remove('hello')} disabled={!has('hello')}>\n        Remove 'hello'\n      </button>\n      <button onClick={() => toggle('hello')}>Toggle hello</button>\n      <button onClick={() => reset()}>Reset</button>\n      <button onClick={() => clear()}>Clear</button>\n      <pre>{JSON.stringify(Array.from(set), null, 2)}</pre>\n    </div>\n  );\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u53C2\\u6570\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"initialState\"}),\": \\u521D\\u59CB\\u7684 \",(0,n.jsx)(e.code,{children:\"Set\"}),\" \\u96C6\\u5408\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8FD4\\u56DE\\u503C\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u8BE5 Hook \\u8FD4\\u56DE\\u4E00\\u4E2A\\u5177\\u6709\\u4EE5\\u4E0B\\u5C5E\\u6027\\u7684\\u5BF9\\u8C61\\uFF1A\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"set\"}),\": \\u5F53\\u524D\\u7684\\u96C6\\u5408\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"add: (item) => void\"}),\": \\u5C06 \",(0,n.jsx)(e.code,{children:\"item\"}),\" \\u6DFB\\u52A0\\u5230\\u96C6\\u5408\\u7684\\u51FD\\u6570\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"remove: (item) => void\"}),\": \\u4ECE\\u96C6\\u5408\\u4E2D\\u79FB\\u9664 \",(0,n.jsx)(e.code,{children:\"item\"}),\" \\u7684\\u51FD\\u6570\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"toggle: (item) => void\"}),\": \\u5207\\u6362 \",(0,n.jsx)(e.code,{children:\"item\"}),\" \\u5728\\u96C6\\u5408\\u4E2D\\u5B58\\u5728\\u72B6\\u6001\\u7684\\u51FD\\u6570\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"reset: () => void\"}),\": \\u5C06\\u96C6\\u5408\\u91CD\\u7F6E\\u4E3A \",(0,n.jsx)(e.code,{children:\"initialState\"}),\" \\u7684\\u51FD\\u6570\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"clear: () => void\"}),\": \\u79FB\\u9664\\u96C6\\u5408\\u4E2D\\u6240\\u6709\\u9879\\u76EE\\u7684\\u51FD\\u6570\"]}),`\n`]})]})}function j(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(a,t)})):a(t)}var k=j;return x(C);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/use-set\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/use-set.ts\",\n  \"dependencies\": {\n    \"@testing-library/react\": \"14.0.0\",\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"@types/react\": \"18.2.25\",\n    \"@types/react-dom\": \"18.2.10\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/use-set.run.test.ts": "import { act, renderHook } from '@testing-library/react';\n\nimport useSet from './use-set';\n\ndescribe('useSet', () => {\n  test('return values', () => {\n    const { result } = renderHook(() => useSet());\n\n    expect(result.current.set).toBeInstanceOf(Set);\n    expect(typeof result.current.add).toBe('function');\n    expect(typeof result.current.remove).toBe('function');\n    expect(typeof result.current.toggle).toBe('function');\n    expect(typeof result.current.reset).toBe('function');\n    expect(typeof result.current.clear).toBe('function');\n  });\n\n  test('initial value', () => {\n    const initialValue = new Set([1, 2, 3]);\n\n    const { result } = renderHook(() => useSet(initialValue));\n\n    expect(result.current.set).toEqual(initialValue);\n  });\n\n  test('add element', () => {\n    const { result } = renderHook(() => useSet());\n\n    act(() => {\n      result.current.add(1);\n    });\n\n    expect(result.current.set).toEqual(new Set([1]));\n  });\n\n  test('remove element', () => {\n    const { result } = renderHook(() => useSet(new Set([1, 2, 3])));\n\n    act(() => {\n      result.current.remove(1);\n    });\n\n    expect(result.current.set).toEqual(new Set([2, 3]));\n  });\n\n  test('toggle element', () => {\n    const { result } = renderHook(() => useSet(new Set([1, 2, 3])));\n\n    act(() => {\n      result.current.toggle(1);\n    });\n\n    expect(result.current.set).toEqual(new Set([2, 3]));\n\n    act(() => {\n      result.current.toggle(1);\n    });\n\n    expect(result.current.set).toEqual(new Set([2, 3, 1]));\n  });\n\n  test('reset elements', () => {\n    const { result } = renderHook(() => useSet(new Set([1, 2, 3])));\n\n    act(() => {\n      result.current.add(4);\n    });\n\n    expect(result.current.set).toEqual(new Set([1, 2, 3, 4]));\n\n    act(() => {\n      result.current.reset();\n    });\n\n    expect(result.current.set).toEqual(new Set([1, 2, 3]));\n  });\n\n  test('clear elements', () => {\n    const { result } = renderHook(() => useSet(new Set([1, 2, 3])));\n\n    act(() => {\n      result.current.clear();\n    });\n\n    expect(result.current.set).toEqual(new Set());\n  });\n});\n",
    "/src/use-set.submit.test.ts": "import { act, renderHook } from '@testing-library/react';\n\nimport useSet from './use-set';\n\ndescribe('useSet', () => {\n  test('return values', () => {\n    const { result } = renderHook(() => useSet());\n\n    expect(result.current.set).toBeInstanceOf(Set);\n    expect(typeof result.current.add).toBe('function');\n    expect(typeof result.current.remove).toBe('function');\n    expect(typeof result.current.toggle).toBe('function');\n    expect(typeof result.current.reset).toBe('function');\n    expect(typeof result.current.clear).toBe('function');\n  });\n\n  test('initial value', () => {\n    const initialValue = new Set([1, 2, 3]);\n\n    const { result } = renderHook(() => useSet(initialValue));\n\n    expect(result.current.set).toEqual(initialValue);\n  });\n\n  test('add element', () => {\n    const { result } = renderHook(() => useSet());\n\n    act(() => {\n      result.current.add(1);\n    });\n\n    expect(result.current.set).toEqual(new Set([1]));\n  });\n\n  test('remove element', () => {\n    const { result } = renderHook(() => useSet(new Set([1, 2, 3])));\n\n    act(() => {\n      result.current.remove(1);\n    });\n\n    expect(result.current.set).toEqual(new Set([2, 3]));\n  });\n\n  test('toggle element', () => {\n    const { result } = renderHook(() => useSet(new Set([1, 2, 3])));\n\n    act(() => {\n      result.current.toggle(1);\n    });\n\n    expect(result.current.set).toEqual(new Set([2, 3]));\n\n    act(() => {\n      result.current.toggle(1);\n    });\n\n    expect(result.current.set).toEqual(new Set([2, 3, 1]));\n  });\n\n  test('reset elements', () => {\n    const { result } = renderHook(() => useSet(new Set([1, 2, 3])));\n\n    act(() => {\n      result.current.add(4);\n    });\n\n    expect(result.current.set).toEqual(new Set([1, 2, 3, 4]));\n\n    act(() => {\n      result.current.reset();\n    });\n\n    expect(result.current.set).toEqual(new Set([1, 2, 3]));\n  });\n\n  test('clear elements', () => {\n    const { result } = renderHook(() => useSet(new Set([1, 2, 3])));\n\n    act(() => {\n      result.current.clear();\n    });\n\n    expect(result.current.set).toEqual(new Set());\n  });\n\n  test('add must be immutable', () => {\n    const initialValue = new Set([1, 2, 3]);\n\n    const { result } = renderHook(() => useSet(initialValue));\n\n    act(() => {\n      result.current.add(4);\n    });\n\n    expect(result.current.set).not.toBe(initialValue);\n  });\n\n  test('remove must be immutable', () => {\n    const initialValue = new Set([1, 2, 3]);\n\n    const { result } = renderHook(() => useSet(initialValue));\n\n    act(() => {\n      result.current.remove(1);\n    });\n\n    expect(result.current.set).not.toBe(initialValue);\n  });\n\n  test('toggle must be immutable', () => {\n    const initialValue = new Set([1, 2, 3]);\n\n    const { result } = renderHook(() => useSet(initialValue));\n\n    act(() => {\n      result.current.toggle(1);\n    });\n\n    expect(result.current.set).not.toBe(initialValue);\n  });\n\n  test('reset must reset to the initial set object', () => {\n    const initialValue = new Set([1, 2, 3]);\n\n    const { result } = renderHook(() => useSet(initialValue));\n\n    act(() => {\n      result.current.reset();\n    });\n\n    expect(result.current.set).toBe(initialValue);\n  });\n\n  test('clear must be immutable', () => {\n    const initialValue = new Set([1, 2, 3]);\n\n    const { result } = renderHook(() => useSet(initialValue));\n\n    act(() => {\n      result.current.clear();\n    });\n\n    expect(result.current.set).not.toBe(initialValue);\n  });\n});\n",
    "/src/use-set.ts": "import { useCallback, useState } from 'react';\n\nexport interface UseSetReturn<T> {\n  set: Readonly<Set<T>>;\n  add: (key: T) => void;\n  remove: (key: T) => void;\n  toggle: (key: T) => void;\n  reset: () => void;\n  clear: () => void;\n}\n\nexport default function useSet<T>(\n  initialState = new Set<T>(),\n): UseSetReturn<T> {\n  const [set, setSet] = useState(initialState);\n\n  const add: UseSetReturn<T>['add'] = useCallback(\n    (item: T) => setSet((prev) => new Set([...Array.from(prev), item])),\n    [],\n  );\n\n  const remove: UseSetReturn<T>['remove'] = useCallback(\n    (item: T) =>\n      setSet((prev) => new Set(Array.from(prev).filter((i) => i !== item))),\n    [],\n  );\n\n  const toggle: UseSetReturn<T>['toggle'] = useCallback(\n    (item: T) =>\n      setSet((prev) =>\n        prev.has(item)\n          ? new Set(Array.from(prev).filter((i) => i !== item))\n          : new Set([...Array.from(prev), item]),\n      ),\n    [],\n  );\n\n  const reset: UseSetReturn<T>['reset'] = useCallback(\n    () => setSet(initialState),\n    [initialState],\n  );\n\n  const clear: UseSetReturn<T>['clear'] = useCallback(\n    () => setSet(new Set()),\n    [],\n  );\n\n  return { set, add, remove, toggle, reset, clear };\n}\n"
  },
  "metadata": {
    "access": "standard",
    "author": "phillmont",
    "companies": [],
    "created": 1742169600,
    "difficulty": "medium",
    "duration": 15,
    "excerpt": "实现一个管理 JavaScript Set 的 Hook",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": "react",
    "frameworks": [
      {
        "framework": "react",
        "href": "/questions/javascript/use-set"
      }
    ],
    "href": "/questions/javascript/use-set",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "use-array",
      "use-map",
      "use-object"
    ],
    "slug": "use-set",
    "subtitle": null,
    "title": "useSet",
    "topics": [
      "react-hooks"
    ]
  },
  "skeleton": {
    "js": "/**\n * @template T\n * @param {Set<T>} initialState\n */\nexport default function useSet(initialState = new Set()) {\n  throw 'Not implemented';\n}",
    "ts": "export interface UseSetReturn<T> {\n  set: Readonly<Set<T>>;\n  add: (key: T) => void;\n  remove: (key: T) => void;\n  toggle: (key: T) => void;\n  reset: () => void;\n  clear: () => void;\n}\n\nexport default function useSet<T>(\n  initialState = new Set<T>(),\n): UseSetReturn<T> {\n  throw 'Not implemented';\n}"
  },
  "solution": "var Component=(()=>{var m=Object.create;var c=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var g=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),T=(r,e)=>{for(var n in e)c(r,n,{get:e[n],enumerable:!0})},o=(r,e,n,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of p(e))!v.call(r,i)&&i!==n&&c(r,i,{get:()=>e[i],enumerable:!(l=u(e,i))||l.enumerable});return r};var k=(r,e,n)=>(n=r!=null?m(f(r)):{},o(e||!r||!r.__esModule?c(n,\"default\",{value:r,enumerable:!0}):n,r)),x=r=>o(c({},\"__esModule\",{value:!0}),r);var s=g((w,d)=>{d.exports=_jsx_runtime});var j={};T(j,{default:()=>y});var t=k(s());var a=MDXCodeBlock;var S=`import { useCallback, useState } from 'react';\n\nexport interface UseSetReturn<T> {\n  set: Readonly<Set<T>>;\n  add: (key: T) => void;\n  remove: (key: T) => void;\n  toggle: (key: T) => void;\n  reset: () => void;\n  clear: () => void;\n}\n\nexport default function useSet<T>(\n  initialState = new Set<T>(),\n): UseSetReturn<T> {\n  const [set, setSet] = useState(initialState);\n\n  const add: UseSetReturn<T>['add'] = useCallback(\n    (item: T) => setSet((prev) => new Set([...Array.from(prev), item])),\n    [],\n  );\n\n  const remove: UseSetReturn<T>['remove'] = useCallback(\n    (item: T) =>\n      setSet((prev) => new Set(Array.from(prev).filter((i) => i !== item))),\n    [],\n  );\n\n  const toggle: UseSetReturn<T>['toggle'] = useCallback(\n    (item: T) =>\n      setSet((prev) =>\n        prev.has(item)\n          ? new Set(Array.from(prev).filter((i) => i !== item))\n          : new Set([...Array.from(prev), item]),\n      ),\n    [],\n  );\n\n  const reset: UseSetReturn<T>['reset'] = useCallback(\n    () => setSet(initialState),\n    [initialState],\n  );\n\n  const clear: UseSetReturn<T>['clear'] = useCallback(\n    () => setSet(new Set()),\n    [],\n  );\n\n  return { set, add, remove, toggle, reset, clear };\n}\n`;function h(r){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",ul:\"ul\",li:\"li\",a:\"a\",strong:\"strong\"},r.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"useSet\"}),\" hook \\u53EF\\u4EE5\\u901A\\u8FC7\\u5728 \",(0,t.jsx)(e.code,{children:\"useState\"}),\" \\u72B6\\u6001\\u4E2D\\u5B58\\u50A8\\u4E00\\u4E2A \",(0,t.jsx)(e.code,{children:\"Set\"}),\" \\u5E76\\u6839\\u636E\\u72B6\\u6001\\u7684 setter \\u51FD\\u6570\\u5B9A\\u4E49\\u7528\\u4E8E\\u64CD\\u4F5C \",(0,t.jsx)(e.code,{children:\"Set\"}),\" \\u7684\\u5B9E\\u7528\\u65B9\\u6CD5\\u6765\\u5B9E\\u73B0\\uFF0C\\u4F7F\\u7528 JavaScript \\u5185\\u7F6E\\u7684 \",(0,t.jsx)(e.code,{children:\"Set\"}),\" \\u65B9\\u6CD5\\u3002\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"\\u8BF7\\u8BB0\\u4F4F\\u5C06\\u5B9E\\u7528\\u65B9\\u6CD5\\u5305\\u88C5\\u5728 \",(0,t.jsx)(e.code,{children:\"useCallback\"}),\" \\u4E2D\\uFF0C\\u4EE5\\u9632\\u6B62\\u8C03\\u7528\\u7EC4\\u4EF6\\u4E0D\\u5FC5\\u8981\\u7684\\u91CD\\u65B0\\u6E32\\u67D3\\u3002\"]}),`\n`,(0,t.jsx)(a,{children:S}),`\n`,(0,t.jsx)(e.h2,{children:\"\\u8FB9\\u7F18\\u60C5\\u51B5\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"\\u7531\\u4E8E \",(0,t.jsx)(e.code,{children:\"Set\"}),\" \\u662F\\u53EF\\u53D8\\u7684\\uFF0C\\u5728\\u5B9A\\u4E49\\u5B9E\\u7528\\u65B9\\u6CD5\\u65F6\\uFF0C\\u8BF7\\u786E\\u4FDD\\u53D1\\u751F\\u7684\\u4EFB\\u4F55\\u66F4\\u6539\\u90FD\\u4F1A\\u5BFC\\u81F4\\u8C03\\u7528\\u7EC4\\u4EF6\\u91CD\\u65B0\\u6E32\\u67D3\\u3002\\u8FD9\\u786E\\u4FDD\\u4E86\\u7EC4\\u4EF6\\u59CB\\u7EC8\\u4E0E \",(0,t.jsx)(e.code,{children:\"Set\"}),\" \\u7684\\u5F53\\u524D\\u72B6\\u6001\\u540C\\u6B65\\u3002\"]}),`\n`,(0,t.jsx)(e.p,{children:\"\\u6709\\u5F88\\u591A\\u65B9\\u6CD5\\u53EF\\u4EE5\\u5B9E\\u73B0\\u8FD9\\u4E00\\u70B9\\uFF0C\\u5305\\u62EC\\uFF0C\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"\\u4F7F\\u7528\\u4FEE\\u6539\\u540E\\u7684\\u503C\\u521B\\u5EFA\\u4E00\\u4E2A\\u65B0\\u7684 \",(0,t.jsx)(e.code,{children:\"Set\"}),\" \\u5B9E\\u4F8B\\uFF0C\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"\\u5728\\u4FEE\\u6539 \",(0,t.jsx)(e.code,{children:\"Set\"}),\" \\u4E4B\\u524D\\u5BF9\\u5176\\u8FDB\\u884C\\u6D45\\u62F7\\u8D1D\\uFF0C\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"\\u5728\\u4F7F\\u7528\\u4E00\\u4E9B\\u201C\\u4E00\\u6B21\\u6027\\u201D \",(0,t.jsx)(e.code,{children:\"useState\"}),\" \\u72B6\\u6001\\u4FEE\\u6539 \",(0,t.jsx)(e.code,{children:\"Set\"}),\" \\u540E\\u624B\\u52A8\\u89E6\\u53D1\\u91CD\\u65B0\\u6E32\\u67D3\\uFF0C\\u6216\\u8005\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"\\u4F7F\\u7528\\u50CF \",(0,t.jsx)(e.a,{href:\"https://immerjs.github.io/immer/\",children:\"Immer\"}),\" \\u8FD9\\u6837\\u7684\\u5E93\\u6765\\u4E0D\\u53EF\\u53D8\\u5730\\u6539\\u53D8\\u4F60\\u7684\\u96C6\\u5408\\u3002\"]}),`\n`]}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:\"\\u6CE8\\u610F\"}),\"\\uFF1A\\u6211\\u4EEC\\u5B9E\\u9645\\u4E0A\\u4E0D\\u9700\\u8981\\u6DF1\\u5EA6\\u590D\\u5236 \",(0,t.jsx)(e.code,{children:\"Set\"}),\"\\uFF0C\\u4E5F\\u4E0D\\u9700\\u8981\\u5173\\u5FC3 \",(0,t.jsx)(e.code,{children:\"Set\"}),\" \\u4E2D\\u503C\\u7684\\uFF08\\u4E0D\\u53EF\\uFF09\\u53D8\\u6027\\uFF0C\\u56E0\\u4E3A\\u6211\\u4EEC\\u53EA\\u5173\\u5FC3\\u5F53\\u524D\\u5728 DOM \\u4E2D\\u6302\\u8F7D\\u7684\\u7EC4\\u4EF6\\u5728 \",(0,t.jsx)(e.code,{children:\"Set\"}),\" \\u65B9\\u9762\\u7684\\u6B63\\u786E\\u6027\\u3002\"]})]})}function b(r={}){let{wrapper:e}=r.components||{};return e?(0,t.jsx)(e,Object.assign({},r,{children:(0,t.jsx)(h,r)})):h(r)}var y=b;return x(j);})();\n;return Component;",
  "workspace": {
    "main": "/src/use-set.ts",
    "run": "/src/use-set.run.test.ts",
    "submit": "/src/use-set.submit.test.ts"
  }
}