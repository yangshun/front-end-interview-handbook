{
  "description": "var Component=(()=>{var s=Object.create;var l=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var x=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),j=(r,e)=>{for(var c in e)l(r,c,{get:e[c],enumerable:!0})},o=(r,e,c,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let d of u(e))!p.call(r,d)&&d!==c&&l(r,d,{get:()=>e[d],enumerable:!(i=m(e,d))||i.enumerable});return r};var B=(r,e,c)=>(c=r!=null?s(y(r)):{},o(e||!r||!r.__esModule?l(c,\"default\",{value:r,enumerable:!0}):c,r)),f=r=>o(l({},\"__esModule\",{value:!0}),r);var t=x((N,h)=>{h.exports=_jsx_runtime});var F={};j(F,{default:()=>b,frontmatter:()=>g});var n=B(t()),g={title:\"Sum By\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u57FA\\u4E8E\\u6307\\u5B9A\\u6761\\u4EF6\\u7684\\u6C42\\u548C\\u51FD\\u6570\"};function a(r){let e=Object.assign({p:\"p\",code:\"code\",h2:\"h2\",ol:\"ol\",li:\"li\",em:\"em\",pre:\"pre\",ul:\"ul\",a:\"a\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u51FD\\u6570 \",(0,n.jsx)(e.code,{children:\"sumBy(array, iteratee)\"}),\"\\uFF0C\\u8BE5\\u51FD\\u6570\\u5728\\u904D\\u5386 \",(0,n.jsx)(e.code,{children:\"array\"}),\" \\u540E\\uFF0C\\u8BA1\\u7B97 \",(0,n.jsx)(e.code,{children:\"iteratee\"}),\" \\u7684\\u8FD4\\u56DE\\u503C\\u4E4B\\u548C\\u3002\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u53C2\\u6570\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"array\"}),\" \",(0,n.jsx)(e.em,{children:\"(Array)\"}),\": \\u8981\\u8FED\\u4EE3\\u7684\\u6570\\u7EC4\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"iteratee\"}),\" \",(0,n.jsx)(e.em,{children:\"(Function)\"}),\": \\u6BCF\\u6B21\\u8FED\\u4EE3\\u8C03\\u7528\\u7684\\u51FD\\u6570\\uFF0C\\u8BE5\\u51FD\\u6570\\u63A5\\u53D7\\u4E00\\u4E2A\\u53C2\\u6570\\uFF1A\",(0,n.jsx)(e.em,{children:\"(value)\"}),\"\\u3002\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8FD4\\u56DE\\u503C\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.em,{children:(0,n.jsx)(e.code,{children:\"(Number)\"})}),\": \\u8FD4\\u56DE\\u603B\\u548C\\u3002\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u4F8B\\u5B50\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`sumBy([{ n: 1 }, { n: 3 }], (o) => o.n;); // => 4\n\nsumBy([2, 3, 1, 4], (num) => num); // => 10\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u8BE5\\u51FD\\u6570\\u5E94\\u5FFD\\u7565 \",(0,n.jsx)(e.code,{children:\"iteratee\"}),\" \\u4EA7\\u751F \",(0,n.jsx)(e.code,{children:\"null\"}),\" \\u6216 \",(0,n.jsx)(e.code,{children:\"undefined\"}),\" \\u7684\\u5143\\u7D20\\uFF0C\\u5E76\\u4E14\\u5F53 \",(0,n.jsx)(e.code,{children:\"array\"}),\" \\u4E3A\\u7A7A\\u65F6\\u8FD4\\u56DE 0\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`sumBy([], (o) => o); // => 0\n\nsumBy([{ n: 1 }, { n: 2 }], (o) => o.m); // => undefined\n\nsumBy([{ n: 1 }, { m: 2 }], (o) => o.m); // => 2\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8D44\\u6E90\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://lodash.com/docs/#sumBy\",children:[\"Lodash \",(0,n.jsx)(e.code,{children:\"_.sumBy\"})]})}),`\n`]})]})}function _(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(a,r)})):a(r)}var b=_;return f(F);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/sum-by\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/sum-by.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"esnext\"],\n    \"jsx\": \"react-jsx\"\n  }\n}\n",
    "/src/sum-by.run.test.ts": "import sumBy from './sum-by';\n\ndescribe('sumBy', () => {\n  test('no matching value', () => {\n    expect(sumBy([{ n: 1 }, { n: 2 }], (o: any) => o.m)).toEqual(undefined);\n  });\n\n  test('iteratee as a string', () => {\n    expect(sumBy([{ n: 1 }, { n: 3 }], (o: any) => o.n)).toEqual(4);\n  });\n\n  test('iteratee as a function', () => {\n    expect(sumBy([{ n: 1 }, { n: 3 }], (o: any) => o.n)).toEqual(4);\n  });\n});\n",
    "/src/sum-by.submit.test.ts": "import sumBy from './sum-by';\n\ndescribe('sumBy', () => {\n  test('empty input array', () => {\n    expect(sumBy([], (o: any) => o.n)).toEqual(0);\n  });\n\n  test('iteratee as a function', () => {\n    expect(\n      sumBy(\n        [{ data: { score: 10 } }, { data: { score: 20 } }],\n        (o: any) => o.data.score,\n      ),\n    ).toEqual(30);\n  });\n\n  test('strings comparison', () => {\n    expect(\n      sumBy(['apple', 'pear', 'banana'], (fruit: any) => fruit.length),\n    ).toEqual(15);\n  });\n\n  test('non-existent property', () => {\n    expect(sumBy([{ n: 1 }, { n: 2 }], (o: any) => o.m)).toEqual(undefined);\n    expect(sumBy([{ n: 1 }, { m: 2 }], (o: any) => o.m)).toEqual(2);\n  });\n\n  test('mixed data types', () => {\n    expect(sumBy([1, '2', 3], (item: any) => Number(item))).toEqual(6);\n  });\n\n  test('missing property in some objects', () => {\n    expect(sumBy([{ a: 1 }, { b: 2 }, { c: 3 }], (obj: any) => obj.d)).toEqual(\n      undefined,\n    );\n    expect(\n      sumBy([{ a: 1, b: 2 }, { b: 3 }, { c: 4 }], (obj: any) => obj.b),\n    ).toEqual(5);\n  });\n\n  test('nested property', () => {\n    expect(\n      sumBy(\n        [\n          { data: { nested: { value: 5 } } },\n          { data: { nested: { value: 10 } } },\n        ],\n        (obj: any) => obj.data.nested.value,\n      ),\n    ).toEqual(15);\n  });\n\n  test('null or undefined values', () => {\n    expect(\n      sumBy([{ a: null }, { a: undefined }, { a: 3 }], (obj: any) => obj.a),\n    ).toEqual(3);\n  });\n\n  test('negative values', () => {\n    expect(sumBy([{ a: 1 }, { a: -3 }, { a: 5 }], (obj: any) => obj.a)).toEqual(\n      3,\n    );\n    expect(\n      sumBy([{ a: -2 }, { a: -4 }, { a: -6 }], (obj: any) => obj.a),\n    ).toEqual(-12);\n  });\n});\n",
    "/src/sum-by.ts": "export default function sumBy<T>(\n  array: Array<T>,\n  iteratee: (value: T) => number | undefined,\n): Number | undefined {\n  let sum = 0,\n    found = false;\n  if (array.length == 0) {\n    return 0;\n  }\n\n  // Iterate through `array` to find the sum.\n  for (const value of array) {\n    const current = iteratee(value);\n    if (current != null) {\n      sum += current; // Store the calculated value of the current `result`.\n      found = true; // Check if there is any element that fulfills `iteratee`.\n    }\n  }\n\n  if (!found) {\n    return undefined;\n  }\n  return sum;\n}\n"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [],
    "created": 1710806400,
    "difficulty": "easy",
    "duration": 15,
    "excerpt": "实现一个基于指定条件的求和函数",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/sum-by",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": false,
    "ranking": 100,
    "similarQuestions": [
      "group-by",
      "min-by",
      "mean-by"
    ],
    "slug": "sum-by",
    "subtitle": null,
    "title": "Sum By",
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per element.\n * @returns {Number | undefined} Returns the sum.\n */\nexport default function sumBy(array, iteratee) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function sumBy<T>(\n  array: Array<T>,\n  iteratee: (value: T) => number | undefined,\n): Number | undefined {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var m=Object.create;var a=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var v=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),j=(n,e)=>{for(var t in e)a(n,t,{get:e[t],enumerable:!0})},i=(n,e,t,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let u of p(e))!g.call(n,u)&&u!==t&&a(n,u,{get:()=>e[u],enumerable:!(l=y(e,u))||l.enumerable});return n};var B=(n,e,t)=>(t=n!=null?m(x(n)):{},i(e||!n||!n.__esModule?a(t,\"default\",{value:n,enumerable:!0}):t,n)),_=n=>i(a({},\"__esModule\",{value:!0}),n);var d=v((N,c)=>{c.exports=_jsx_runtime});var M={};j(M,{default:()=>k});var r=B(d());var o=MDXCodeBlock;var s=`/**\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per element.\n * @returns {Number | undefined} Returns the sum.\n */\nexport default function sumBy(array, iteratee) {\n  let sum = 0,\n    found = false;\n\n  if (array.length == 0) {\n    return 0;\n  }\n\n  // Iterate through \\`array\\` to find the sum.\n  for (const value of array) {\n    const current = iteratee(value);\n    if (current != null) {\n      sum += current; // Store the calculated value of the current \\`result\\`.\n      found = true; // Check if there is any element that fulfills \\`iteratee\\`.\n    }\n  }\n\n  if (!found) {\n    return undefined;\n  }\n  return sum;\n}\n`;var h=`export default function sumBy<T>(\n  array: Array<T>,\n  iteratee: (value: T) => number | undefined,\n): Number | undefined {\n  let sum = 0,\n    found = false;\n  if (array.length == 0) {\n    return 0;\n  }\n\n  // Iterate through \\`array\\` to find the sum.\n  for (const value of array) {\n    const current = iteratee(value);\n    if (current != null) {\n      sum += current; // Store the calculated value of the current \\`result\\`.\n      found = true; // Check if there is any element that fulfills \\`iteratee\\`.\n    }\n  }\n\n  if (!found) {\n    return undefined;\n  }\n  return sum;\n}\n`;function f(n){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",ul:\"ul\",li:\"li\",a:\"a\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"\\u8FD9\\u662F\\u4E00\\u4E2A\\u57FA\\u4E8E\\u7ED9\\u5B9A\\u7684 \",(0,r.jsx)(e.code,{children:\"iteratee\"}),\" \\u67E5\\u627E \",(0,r.jsx)(e.code,{children:\"array\"}),\" \\u4E2D\\u5143\\u7D20\\u603B\\u548C\\u7684\\u89E3\\u51B3\\u65B9\\u6848\\u3002\\u5B83\\u904D\\u5386 \",(0,r.jsx)(e.code,{children:\"array\"}),\"\\uFF0C\\u4F7F\\u7528\\u6570\\u7EC4\\u5143\\u7D20\\u8C03\\u7528 \",(0,r.jsx)(e.code,{children:\"iteratee\"}),\" \\u51FD\\u6570\\uFF0C\\u5E76\\u8DDF\\u8E2A\\u503C\\u7684\\u603B\\u548C\\u3002\"]}),`\n`,(0,r.jsx)(e.p,{children:\"\\u4F7F\\u7528\\u4E86\\u4E24\\u4E2A\\u53D8\\u91CF\\uFF1A\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:\"sum\"}),\"\\uFF1A\\u8DDF\\u8E2A\\u8981\\u8FD4\\u56DE\\u7684\\u603B\\u548C\\u3002\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:\"found\"}),\"\\uFF1A\\u8DDF\\u8E2A\\u662F\\u5426\\u627E\\u5230\\u8981\\u6DFB\\u52A0\\u5230 \",(0,r.jsx)(e.code,{children:\"sum\"}),\" \\u7684\\u6709\\u6548\\u6570\\u5B57\\uFF0C\\u5426\\u5219\\u5B83\\u5C06\\u5BFC\\u81F4\\u51FD\\u6570\\u8FD4\\u56DE \",(0,r.jsx)(e.code,{children:\"NaN\"}),\"\\u3002\"]}),`\n`]}),`\n`,(0,r.jsx)(o,{languages:{jsx:s,tsx:h}}),`\n`,(0,r.jsx)(e.h2,{children:\"\\u8FB9\\u7F18\\u60C5\\u51B5\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"\\u56E0\\u4E3A \",(0,r.jsx)(e.code,{children:\"iteratee\"}),\" \\u662F\\u7528\\u6237\\u63D0\\u4F9B\\u7684\\uFF0C\\u5E76\\u4E14\\u53EF\\u4EE5\\u8FD4\\u56DE\\u4EFB\\u4F55\\u7C7B\\u578B\\u7684\\u503C\\uFF0C\\u6240\\u4EE5\\u6211\\u4EEC\\u5FC5\\u987B\\u7279\\u522B\\u6CE8\\u610F\\u5FFD\\u7565\\u65E0\\u6CD5\\u6BD4\\u8F83\\u7684\\u8BA1\\u7B97\\u503C\\uFF0C\\u4F8B\\u5982 \",(0,r.jsx)(e.code,{children:\"null\"}),\" \\u548C \",(0,r.jsx)(e.code,{children:\"undefined\"}),\"\\u3002\\u5BF9\\u4E8E\\u6B64\\u7C7B\\u8BA1\\u7B97\\u503C\\uFF0C\\u5E94\\u5B8C\\u5168\\u5FFD\\u7565\\u5B83\\u4EEC\\u3002\"]}),`\n`,(0,r.jsx)(e.h2,{children:\"\\u8D44\\u6E90\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:(0,r.jsxs)(e.a,{href:\"https://lodash.com/docs/#sumBy\",children:[\"Lodash \",(0,r.jsx)(e.code,{children:\"_.sumBy\"})]})}),`\n`]})]})}function b(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(f,n)})):f(n)}var k=b;return _(M);})();\n;return Component;",
  "workspace": {
    "main": "/src/sum-by.ts",
    "run": "/src/sum-by.run.test.ts",
    "submit": "/src/sum-by.submit.test.ts"
  }
}