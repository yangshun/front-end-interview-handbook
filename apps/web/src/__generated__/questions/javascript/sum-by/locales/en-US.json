{
  "description": "var Component=(()=>{var s=Object.create;var i=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var f=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),g=(r,e)=>{for(var c in e)i(r,c,{get:e[c],enumerable:!0})},o=(r,e,c,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of u(e))!y.call(r,t)&&t!==c&&i(r,t,{get:()=>e[t],enumerable:!(d=m(e,t))||d.enumerable});return r};var x=(r,e,c)=>(c=r!=null?s(p(r)):{},o(e||!r||!r.__esModule?i(c,\"default\",{value:r,enumerable:!0}):c,r)),j=r=>o(i({},\"__esModule\",{value:!0}),r);var h=f((F,l)=>{l.exports=_jsx_runtime});var w={};g(w,{default:()=>b,frontmatter:()=>B});var n=x(h()),B={title:\"Sum By\",excerpt:\"Implement a function that finds the sum based on the specified criteria\"};function a(r){let e=Object.assign({p:\"p\",code:\"code\",h2:\"h2\",ol:\"ol\",li:\"li\",em:\"em\",pre:\"pre\",ul:\"ul\",a:\"a\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Implement a function \",(0,n.jsx)(e.code,{children:\"sumBy(array, iteratee)\"}),\" that calculates the sum of the element inside \",(0,n.jsx)(e.code,{children:\"array\"}),\" after going through \",(0,n.jsx)(e.code,{children:\"iteratee\"}),\".\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Arguments\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"array\"}),\" \",(0,n.jsx)(e.em,{children:\"(Array)\"}),\": The array to iterate over.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"iteratee\"}),\" \",(0,n.jsx)(e.em,{children:\"(Function)\"}),\": The iteratee invoked per element, which is a function that accepts one argument: \",(0,n.jsx)(e.em,{children:\"(value)\"}),\".\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Returns\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.em,{children:(0,n.jsx)(e.code,{children:\"(Number)\"})}),\": Returns the sum.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Examples\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`sumBy([{ n: 1 }, { n: 3 }], (o) => o.n;); // => 4\n\nsumBy([2, 3, 1, 4], (num) => num); // => 10\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The function should ignore elements where \",(0,n.jsx)(e.code,{children:\"iteratee\"}),\" produces \",(0,n.jsx)(e.code,{children:\"null\"}),\" or \",(0,n.jsx)(e.code,{children:\"undefined\"}),\" and return 0 when \",(0,n.jsx)(e.code,{children:\"array\"}),\" is empty.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`sumBy([], (o) => o); // => 0\n\nsumBy([{ n: 1 }, { n: 2 }], (o) => o.m); // => undefined\n\nsumBy([{ n: 1 }, { m: 2 }], (o) => o.m); // => 2\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://lodash.com/docs/#sumBy\",children:[\"Lodash \",(0,n.jsx)(e.code,{children:\"_.sumBy\"})]})}),`\n`]})]})}function _(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(a,r)})):a(r)}var b=_;return j(w);})();\n;return Component;",
  "info": {
    "excerpt": "Implement a function that finds the sum based on the specified criteria",
    "title": "Sum By"
  },
  "solution": "var Component=(()=>{var m=Object.create;var u=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var x=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=>{for(var n in e)u(t,n,{get:e[n],enumerable:!0})},i=(t,e,n,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of p(e))!g.call(t,a)&&a!==n&&u(t,a,{get:()=>e[a],enumerable:!(o=y(e,a))||o.enumerable});return t};var k=(t,e,n)=>(n=t!=null?m(v(t)):{},i(e||!t||!t.__esModule?u(n,\"default\",{value:t,enumerable:!0}):n,t)),B=t=>i(u({},\"__esModule\",{value:!0}),t);var d=x((D,l)=>{l.exports=_jsx_runtime});var C={};b(C,{default:()=>w});var r=k(d());var c=MDXCodeBlock;var s=`/**\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per element.\n * @returns {Number | undefined} Returns the sum.\n */\nexport default function sumBy(array, iteratee) {\n  let sum = 0,\n    found = false;\n\n  if (array.length == 0) {\n    return 0;\n  }\n\n  // Iterate through \\`array\\` to find the sum.\n  for (const value of array) {\n    const current = iteratee(value);\n    if (current != null) {\n      sum += current; // Store the calculated value of the current \\`result\\`.\n      found = true; // Check if there is any element that fulfills \\`iteratee\\`.\n    }\n  }\n\n  if (!found) {\n    return undefined;\n  }\n  return sum;\n}\n`;var h=`export default function sumBy<T>(\n  array: Array<T>,\n  iteratee: (value: T) => number | undefined,\n): Number | undefined {\n  let sum = 0,\n    found = false;\n  if (array.length == 0) {\n    return 0;\n  }\n\n  // Iterate through \\`array\\` to find the sum.\n  for (const value of array) {\n    const current = iteratee(value);\n    if (current != null) {\n      sum += current; // Store the calculated value of the current \\`result\\`.\n      found = true; // Check if there is any element that fulfills \\`iteratee\\`.\n    }\n  }\n\n  if (!found) {\n    return undefined;\n  }\n  return sum;\n}\n`;function f(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",ul:\"ul\",li:\"li\",a:\"a\"},t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"Here's a solution that finds the sum of elements in \",(0,r.jsx)(e.code,{children:\"array\"}),\" based on a given \",(0,r.jsx)(e.code,{children:\"iteratee\"}),\". It iterates through the \",(0,r.jsx)(e.code,{children:\"array\"}),\", calls the \",(0,r.jsx)(e.code,{children:\"iteratee\"}),\" function with the array element, and tracks the sum of the values.\"]}),`\n`,(0,r.jsx)(e.p,{children:\"Two variables are used:\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:\"sum\"}),\": Tracks the sum to return.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:\"found\"}),\": Tracks whether a valid number is found to be added to \",(0,r.jsx)(e.code,{children:\"sum\"}),\", else it will cause the function to return \",(0,r.jsx)(e.code,{children:\"NaN\"}),\".\"]}),`\n`]}),`\n`,(0,r.jsx)(c,{languages:{jsx:s,tsx:h}}),`\n`,(0,r.jsx)(e.h2,{children:\"Edge cases\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"Because \",(0,r.jsx)(e.code,{children:\"iteratee\"}),\" is user-provided and can return a value of any type, we have to pay special attention to ignore computed values that cannot be compared, like \",(0,r.jsx)(e.code,{children:\"null\"}),\" and \",(0,r.jsx)(e.code,{children:\"undefined\"}),\". For such computed values, they should be ignored entirely.\"]}),`\n`,(0,r.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:(0,r.jsxs)(e.a,{href:\"https://lodash.com/docs/#sumBy\",children:[\"Lodash \",(0,r.jsx)(e.code,{children:\"_.sumBy\"})]})}),`\n`]})]})}function _(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(f,t)})):f(t)}var w=_;return B(C);})();\n;return Component;"
}