{
  "description": "var Component=(()=>{var a=Object.create;var l=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var q=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),k=(i,e)=>{for(var r in e)l(i,r,{get:e[r],enumerable:!0})},d=(i,e,r,u)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of h(e))!b.call(i,t)&&t!==r&&l(i,t,{get:()=>e[t],enumerable:!(u=m(e,t))||u.enumerable});return i};var D=(i,e,r)=>(r=i!=null?a(p(i)):{},d(e||!i||!i.__esModule?l(r,\"default\",{value:i,enumerable:!0}):r,i)),g=i=>d(l({},\"__esModule\",{value:!0}),i);var c=q((C,s)=>{s.exports=_jsx_runtime});var f={};k(f,{default:()=>_,frontmatter:()=>x});var n=D(c()),x={title:\"\\u6570\\u636E\\u9009\\u62E9\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u51FD\\u6570\\u6765\\u8FC7\\u6EE4\\u4E0E\\u6307\\u5B9A\\u8981\\u6C42\\u5339\\u914D\\u7684\\u6570\\u636E\\u884C\"};function o(i){let e=Object.assign({p:\"p\",pre:\"pre\",code:\"code\",ul:\"ul\",li:\"li\",strong:\"strong\",h2:\"h2\"},i.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"\\u4E00\\u7EC4\\u5065\\u8EAB\\u8BFE\\u7A0B\\u7684\\u6570\\u636E\\u96C6\\u5982\\u4E0B\\u6240\\u793A\\uFF1A\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`[\n  { user: 8, duration: 50, equipment: ['bench'] },\n  { user: 7, duration: 150, equipment: ['dumbbell', 'kettlebell'] },\n  { user: 1, duration: 10, equipment: ['barbell'] },\n  { user: 7, duration: 100, equipment: ['bike', 'kettlebell'] },\n  { user: 7, duration: 200, equipment: ['bike'] },\n  { user: 2, duration: 200, equipment: ['treadmill'] },\n  { user: 2, duration: 200, equipment: ['bike'] },\n];\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"\\u6BCF\\u4E2A\\u8BFE\\u7A0B\\u90FD\\u6709\\u4EE5\\u4E0B\\u5B57\\u6BB5\\uFF1A\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"user\"}),\"\\uFF1A\\u8BFE\\u7A0B\\u7528\\u6237\\u7684\\u7528\\u6237 ID\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"duration\"}),\"\\uFF1A\\u8BFE\\u7A0B\\u7684\\u6301\\u7EED\\u65F6\\u95F4\\uFF0C\\u4EE5\\u5206\\u949F\\u4E3A\\u5355\\u4F4D\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"equipment\"}),\"\\uFF1A\\u8BFE\\u7A0B\\u671F\\u95F4\\u4F7F\\u7528\\u7684\\u8BBE\\u5907\\u6570\\u7EC4\\uFF0C\\u6309\\u5B57\\u6BCD\\u987A\\u5E8F\\u6392\\u5217\\u3002\\u53EA\\u6709 5 \\u79CD\\u4E0D\\u540C\\u7684\\u8BBE\\u5907\\u3002\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u65B9\\u6CD5 \",(0,n.jsx)(e.code,{children:\"selectData\"}),\"\\uFF0C\\u7528\\u4E8E\\u4ECE\\u6570\\u636E\\u4E2D\\u8FD4\\u56DE\\u8BFE\\u7A0B\\u3002\\u5B83\\u5177\\u6709\\u63A5\\u53E3 \",(0,n.jsx)(e.code,{children:\"selectData(sessions [, options])\"}),\"\\u3002\\u53EF\\u7528\\u7684\\u9009\\u9879\\u5E94\\u5305\\u62EC\\uFF1A\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"user\"}),\"\\uFF1A\\u4EC5\\u9009\\u62E9\\u5177\\u6709\\u6B64 \",(0,n.jsx)(e.code,{children:\"id\"}),\" \\u7684\\u8BFE\\u7A0B\\u3002\\u5982\\u679C\\u672A\\u6307\\u5B9A\\uFF0C\\u5219\\u5305\\u62EC\\u6240\\u6709\\u7528\\u6237\\uFF08\\u53D7\\u5176\\u4ED6\\u8FC7\\u6EE4\\u5668\\u7EA6\\u675F\\uFF09\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"minDuration\"}),\"\\uFF1A\\u4EC5\\u9009\\u62E9 \",(0,n.jsx)(e.code,{children:\"duration\"}),\" \\u7B49\\u4E8E\\u6216\\u5927\\u4E8E\\u6B64\\u503C\\u7684\\u8BFE\\u7A0B\\u3002\\u5982\\u679C\\u672A\\u6307\\u5B9A\\uFF0C\\u5219\\u5305\\u62EC\\u6240\\u6709\\u8BFE\\u7A0B\\uFF0C\\u65E0\\u8BBA\\u6301\\u7EED\\u65F6\\u95F4\\u5982\\u4F55\\uFF08\\u53D7\\u5176\\u4ED6\\u8FC7\\u6EE4\\u5668\\u7EA6\\u675F\\uFF09\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"equipment\"}),\"\\uFF1A\\u4EC5\\u9009\\u62E9\\u4F7F\\u7528\\u4E86\\u81F3\\u5C11\\u4E00\\u79CD\\u6307\\u5B9A\\u8BBE\\u5907\\u7684\\u8BFE\\u7A0B\\u3002\\u5982\\u679C\\u672A\\u6307\\u5B9A\\uFF0C\\u5219\\u5305\\u62EC\\u6240\\u6709\\u8BFE\\u7A0B\\uFF0C\\u65E0\\u8BBA\\u4F7F\\u7528\\u4E86\\u4EC0\\u4E48\\u8BBE\\u5907\\uFF08\\u53D7\\u5176\\u4ED6\\u8FC7\\u6EE4\\u5668\\u7EA6\\u675F\\uFF09\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"merge\"}),\"\\uFF1A\\u5982\\u679C\\u8BBE\\u7F6E\\u4E3A \",(0,n.jsx)(e.code,{children:\"true\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u6765\\u81EA\\u540C\\u4E00 \",(0,n.jsx)(e.code,{children:\"user\"}),\" \\u7684\\u8BFE\\u7A0B\\u5E94\\u5408\\u5E76\\u4E3A\\u4E00\\u4E2A\\u5BF9\\u8C61\\u3002\\u5408\\u5E76\\u65F6\\uFF1A\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5C06 \",(0,n.jsx)(e.code,{children:\"duration\"}),\" \\u5B57\\u6BB5\\u76F8\\u52A0\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u7EC4\\u5408\\u6240\\u6709\\u4F7F\\u7528\\u7684 \",(0,n.jsx)(e.code,{children:\"equipment\"}),\"\\uFF0C\\u5BF9\\u503C\\u8FDB\\u884C\\u53BB\\u91CD\\u5E76\\u6309\\u5B57\\u6BCD\\u987A\\u5E8F\\u6392\\u5E8F\\u3002\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.li,{children:\"\\u5176\\u4ED6\\u7B5B\\u9009\\u5668\\u9009\\u9879\\u5E94\\u5E94\\u7528\\u4E8E\\u5408\\u5E76\\u540E\\u7684\\u6570\\u636E\\u3002\"}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"\\u6CE8\\u610F:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"\\u7ED3\\u679C\\u7684\\u987A\\u5E8F\\u5E94\\u59CB\\u7EC8\\u4E0E\\u539F\\u59CB\\u96C6\\u5408\\u4FDD\\u6301\\u4E0D\\u53D8\\u3002\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5728\\u5408\\u5E76\\u7528\\u6237\\u4F1A\\u8BDD\\u7684\\u60C5\\u51B5\\u4E0B\\uFF0C\\u8BE5\\u884C\\u5E94\\u53D6\\u4EE3\",(0,n.jsx)(e.code,{children:\"user\"}),\"\\u7684\",(0,n.jsx)(e.strong,{children:\"\\u6700\\u65B0\"}),\"\\u51FA\\u73B0\\u3002\"]}),`\n`,(0,n.jsx)(e.li,{children:\"\\u4E0D\\u5E94\\u4FEE\\u6539\\u8F93\\u5165\\u5BF9\\u8C61\\u3002\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u793A\\u4F8B\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u4EE5\\u4E0B\\u793A\\u4F8B\\u4F7F\\u7528\\u4E0A\\u8FF0\\u6570\\u636E\\u96C6\\uFF1A\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`selectData(sessions);\n// [\n//   { user: 8, duration: 50, equipment: ['bench'] },\n//   { user: 7, duration: 150, equipment: ['dumbbell', 'kettlebell'] },\n//   { user: 1, duration: 10, equipment: ['barbell'] },\n//   { user: 7, duration: 100, equipment: ['bike', 'kettlebell'] },\n//   { user: 7, duration: 200, equipment: ['bike'] },\n//   { user: 2, duration: 200, equipment: ['treadmill'] },\n//   { user: 2, duration: 200, equipment: ['bike'] },\n// ];\n\nselectData(sessions, { user: 2 });\n// [\n//   { user: 2, duration: 200, equipment: ['treadmill'] },\n//   { user: 2, duration: 200, equipment: ['bike'] },\n// ];\n\nselectData(sessions, { minDuration: 200 });\n// [\n//   { user: 7, duration: 200, equipment: ['bike'] },\n//   { user: 2, duration: 200, equipment: ['treadmill'] },\n//   { user: 2, duration: 200, equipment: ['bike'] },\n// ];\n\nselectData(sessions, { minDuration: 400 });\n// [];\n\nselectData(sessions, { equipment: ['bike', 'dumbbell'] });\n// [\n//   { user: 7, duration: 150, equipment: ['dumbbell', 'kettlebell'] },\n//   { user: 7, duration: 100, equipment: ['bike', 'kettlebell'] },\n//   { user: 7, duration: 200, equipment: ['bike'] },\n//   { user: 2, duration: 200, equipment: ['bike'] },\n// ];\n\nselectData(sessions, { merge: true });\n// [\n//   { user: 8, duration: 50, equipment: ['bench'] },\n//   { user: 1, duration: 10, equipment: ['barbell'] },\n//   { user: 7, duration: 450, equipment: ['bike', 'dumbbell', 'kettlebell'] },\n//   { user: 2, duration: 400, equipment: ['bike', 'treadmill'] },\n// ];\n\nselectData(sessions, { merge: true, minDuration: 400 });\n// [\n//   { user: 7, duration: 450, equipment: ['bike', 'dumbbell', 'kettlebell'] },\n//   { user: 2, duration: 400, equipment: ['bike', 'treadmill'] },\n// ];\n`})})]})}function j(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,Object.assign({},i,{children:(0,n.jsx)(o,i)})):o(i)}var _=j;return g(f);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/data-selection\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/data-selection.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/data-selection.run.test.ts": "import selectData from './data-selection';\n\nfunction getDataSmall() {\n  return [\n    { user: 8, duration: 50, equipment: ['bench'] },\n    { user: 7, duration: 150, equipment: ['dumbbell', 'kettlebell'] },\n    { user: 1, duration: 10, equipment: ['barbell'] },\n    { user: 7, duration: 100, equipment: ['bike', 'kettlebell'] },\n    { user: 7, duration: 200, equipment: ['bike'] },\n    { user: 2, duration: 200, equipment: ['treadmill'] },\n    { user: 2, duration: 200, equipment: ['bike'] },\n  ];\n}\n\ndescribe('selectData', () => {\n  test('empty data', () => {\n    expect(selectData([])).toEqual([]);\n  });\n\n  test('minDuration', () => {\n    const dataSmall = getDataSmall();\n    expect(selectData(dataSmall, { minDuration: 150 })).toEqual([\n      { user: 7, duration: 150, equipment: ['dumbbell', 'kettlebell'] },\n      { user: 7, duration: 200, equipment: ['bike'] },\n      { user: 2, duration: 200, equipment: ['treadmill'] },\n      { user: 2, duration: 200, equipment: ['bike'] },\n    ]);\n  });\n\n  test('one equipment specified', () => {\n    const dataSmall = getDataSmall();\n    expect(selectData(dataSmall, { equipment: ['bike'] })).toEqual([\n      { user: 7, duration: 100, equipment: ['bike', 'kettlebell'] },\n      { user: 7, duration: 200, equipment: ['bike'] },\n      { user: 2, duration: 200, equipment: ['bike'] },\n    ]);\n  });\n\n  test('merging', () => {\n    const dataSmall = getDataSmall();\n    expect(\n      selectData(dataSmall, {\n        merge: true,\n        minDuration: 400,\n        equipment: ['treadmill', 'bench', 'barbell', 'dumbbell', 'bike'],\n      }),\n    ).toEqual([\n      {\n        user: 7,\n        duration: 450,\n        equipment: ['bike', 'dumbbell', 'kettlebell'],\n      },\n      { user: 2, duration: 400, equipment: ['bike', 'treadmill'] },\n    ]);\n  });\n});\n",
    "/src/data-selection.submit.test.ts": "import selectData from './data-selection';\n\nfunction getDataSmall() {\n  return [\n    { user: 8, duration: 50, equipment: ['bench'] },\n    { user: 7, duration: 150, equipment: ['dumbbell', 'kettlebell'] },\n    { user: 1, duration: 10, equipment: ['barbell'] },\n    { user: 7, duration: 100, equipment: ['bike', 'kettlebell'] },\n    { user: 7, duration: 200, equipment: ['bike'] },\n    { user: 2, duration: 200, equipment: ['treadmill'] },\n    { user: 2, duration: 200, equipment: ['bike'] },\n  ];\n}\n\ndescribe('selectData', () => {\n  test('empty data', () => {\n    expect(selectData([])).toEqual([]);\n    expect(selectData([], { user: 2 })).toEqual([]);\n    expect(selectData([], { merge: true })).toEqual([]);\n  });\n\n  test('does not mutate data', () => {\n    const dataSmall = getDataSmall();\n    selectData(dataSmall, { user: 1 });\n    selectData(dataSmall, { minDuration: 150 });\n    selectData(dataSmall, {\n      merge: true,\n      equipment: ['treadmill', 'bench', 'barbell', 'dumbbell', 'bike'],\n    });\n\n    const originalDataSmall = getDataSmall();\n    expect(dataSmall).toEqual(originalDataSmall);\n  });\n\n  test('no options', () => {\n    const dataSmall = getDataSmall();\n    const originalDataSmall = getDataSmall();\n    expect(selectData(dataSmall)).toEqual(originalDataSmall);\n  });\n\n  describe('user option', () => {\n    test('user with single session', () => {\n      const dataSmall = getDataSmall();\n      expect(selectData(dataSmall, { user: 1 })).toEqual([\n        { user: 1, duration: 10, equipment: ['barbell'] },\n      ]);\n    });\n\n    test('user with multiple sessions', () => {\n      const dataSmall = getDataSmall();\n      expect(selectData(dataSmall, { user: 2 })).toEqual([\n        { user: 2, duration: 200, equipment: ['treadmill'] },\n        { user: 2, duration: 200, equipment: ['bike'] },\n      ]);\n    });\n\n    test('non-existing user', () => {\n      const dataSmall = getDataSmall();\n      expect(selectData(dataSmall, { user: 99 })).toEqual([]);\n    });\n  });\n\n  describe('minDuration option', () => {\n    test('low minDuration', () => {\n      const dataSmallTest1 = getDataSmall();\n      expect(selectData(dataSmallTest1, { minDuration: 150 })).toEqual([\n        { user: 7, duration: 150, equipment: ['dumbbell', 'kettlebell'] },\n        { user: 7, duration: 200, equipment: ['bike'] },\n        { user: 2, duration: 200, equipment: ['treadmill'] },\n        { user: 2, duration: 200, equipment: ['bike'] },\n      ]);\n\n      const dataSmallTest2 = getDataSmall();\n      expect(selectData(dataSmallTest2, { minDuration: 151 })).toEqual([\n        { user: 7, duration: 200, equipment: ['bike'] },\n        { user: 2, duration: 200, equipment: ['treadmill'] },\n        { user: 2, duration: 200, equipment: ['bike'] },\n      ]);\n\n      const dataSmallTest3 = getDataSmall();\n      expect(selectData(dataSmallTest3, { minDuration: 200 })).toEqual([\n        { user: 7, duration: 200, equipment: ['bike'] },\n        { user: 2, duration: 200, equipment: ['treadmill'] },\n        { user: 2, duration: 200, equipment: ['bike'] },\n      ]);\n    });\n\n    test('high minDuration', () => {\n      const dataSmall = getDataSmall();\n      expect(selectData(dataSmall, { minDuration: 400 })).toEqual([]);\n    });\n  });\n\n  describe('equipment option', () => {\n    test('no matching equipment', () => {\n      const dataSmall = getDataSmall();\n      expect(selectData(dataSmall, { equipment: ['nah'] })).toEqual([]);\n    });\n\n    test('one equipment specified', () => {\n      const dataSmall = getDataSmall();\n      expect(selectData(dataSmall, { equipment: ['bike'] })).toEqual([\n        { user: 7, duration: 100, equipment: ['bike', 'kettlebell'] },\n        { user: 7, duration: 200, equipment: ['bike'] },\n        { user: 2, duration: 200, equipment: ['bike'] },\n      ]);\n    });\n\n    test('multiple equipments specified', () => {\n      const dataSmallTest1 = getDataSmall();\n      expect(\n        selectData(dataSmallTest1, { equipment: ['bike', 'dumbbell'] }),\n      ).toEqual([\n        { user: 7, duration: 150, equipment: ['dumbbell', 'kettlebell'] },\n        { user: 7, duration: 100, equipment: ['bike', 'kettlebell'] },\n        { user: 7, duration: 200, equipment: ['bike'] },\n        { user: 2, duration: 200, equipment: ['bike'] },\n      ]);\n\n      const dataSmallTest2 = getDataSmall();\n      expect(\n        selectData(dataSmallTest2, {\n          equipment: ['bike', 'dumbbell', 'kettlebell'],\n        }),\n      ).toEqual([\n        { user: 7, duration: 150, equipment: ['dumbbell', 'kettlebell'] },\n        { user: 7, duration: 100, equipment: ['bike', 'kettlebell'] },\n        { user: 7, duration: 200, equipment: ['bike'] },\n        { user: 2, duration: 200, equipment: ['bike'] },\n      ]);\n    });\n  });\n\n  describe('merge option', () => {\n    test('without other options', () => {\n      const dataSmall = getDataSmall();\n      expect(selectData(dataSmall, { merge: true })).toEqual([\n        { user: 8, duration: 50, equipment: ['bench'] },\n        { user: 1, duration: 10, equipment: ['barbell'] },\n        {\n          user: 7,\n          duration: 450,\n          equipment: ['bike', 'dumbbell', 'kettlebell'],\n        },\n        { user: 2, duration: 400, equipment: ['bike', 'treadmill'] },\n      ]);\n    });\n\n    test('with user', () => {\n      const dataSmallTest1 = getDataSmall();\n      expect(selectData(dataSmallTest1, { merge: true, user: 1 })).toEqual([\n        { user: 1, duration: 10, equipment: ['barbell'] },\n      ]);\n\n      const dataSmallTest2 = getDataSmall();\n      expect(selectData(dataSmallTest2, { merge: true, user: 2 })).toEqual([\n        { user: 2, duration: 400, equipment: ['bike', 'treadmill'] },\n      ]);\n\n      const dataSmallTest3 = getDataSmall();\n      expect(selectData(dataSmallTest3, { merge: true, user: 7 })).toEqual([\n        {\n          user: 7,\n          duration: 450,\n          equipment: ['bike', 'dumbbell', 'kettlebell'],\n        },\n      ]);\n    });\n\n    test('with minDuration', () => {\n      const dataSmallTest1 = getDataSmall();\n      expect(\n        selectData(dataSmallTest1, { merge: true, minDuration: 1000 }),\n      ).toEqual([]);\n\n      const dataSmallTest2 = getDataSmall();\n      expect(\n        selectData(dataSmallTest2, { merge: true, minDuration: 400 }),\n      ).toEqual([\n        {\n          user: 7,\n          duration: 450,\n          equipment: ['bike', 'dumbbell', 'kettlebell'],\n        },\n        { user: 2, duration: 400, equipment: ['bike', 'treadmill'] },\n      ]);\n    });\n\n    test('with equipment', () => {\n      const dataSmallTest1 = getDataSmall();\n      expect(\n        selectData(dataSmallTest1, { merge: true, equipment: ['bike'] }),\n      ).toEqual([\n        {\n          user: 7,\n          duration: 450,\n          equipment: ['bike', 'dumbbell', 'kettlebell'],\n        },\n        { user: 2, duration: 400, equipment: ['bike', 'treadmill'] },\n      ]);\n\n      const dataSmallTest2 = getDataSmall();\n      expect(\n        selectData(dataSmallTest2, { merge: true, equipment: ['treadmill'] }),\n      ).toEqual([{ user: 2, duration: 400, equipment: ['bike', 'treadmill'] }]);\n\n      const dataSmallTest3 = getDataSmall();\n      expect(\n        selectData(dataSmallTest3, {\n          merge: true,\n          equipment: ['treadmill', 'bench', 'barbell', 'dumbbell', 'bike'],\n        }),\n      ).toEqual([\n        { user: 8, duration: 50, equipment: ['bench'] },\n        { user: 1, duration: 10, equipment: ['barbell'] },\n        {\n          user: 7,\n          duration: 450,\n          equipment: ['bike', 'dumbbell', 'kettlebell'],\n        },\n        { user: 2, duration: 400, equipment: ['bike', 'treadmill'] },\n      ]);\n    });\n\n    test('with multiple options', () => {\n      const dataSmallTest1 = getDataSmall();\n      expect(\n        selectData(dataSmallTest1, {\n          merge: true,\n          minDuration: 400,\n          equipment: ['treadmill', 'bench', 'barbell', 'dumbbell', 'bike'],\n        }),\n      ).toEqual([\n        {\n          user: 7,\n          duration: 450,\n          equipment: ['bike', 'dumbbell', 'kettlebell'],\n        },\n        { user: 2, duration: 400, equipment: ['bike', 'treadmill'] },\n      ]);\n\n      const dataSmallTest2 = getDataSmall();\n      expect(\n        selectData(dataSmallTest2, {\n          merge: true,\n          minDuration: 400,\n          equipment: ['treadmill'],\n        }),\n      ).toEqual([{ user: 2, duration: 400, equipment: ['bike', 'treadmill'] }]);\n    });\n  });\n});\n",
    "/src/data-selection.ts": "function setHasOverlap<T>(setA: Set<T>, setB: Set<T>) {\n  // Bundler doesn't transpile properly when doing for-of for sets.\n  for (const val of Array.from(setA)) {\n    if (setB.has(val)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\ntype Session = { user: number; duration: number; equipment: Array<string> };\ntype Options = {\n  user?: number;\n  minDuration?: number;\n  equipment?: Array<string>;\n  merge?: boolean;\n};\n\nexport default function selectData(\n  sessions: Array<Session>,\n  options?: Options,\n): Array<Session> {\n  const reversedSessions = sessions.slice().reverse(); // Make a copy and reverse.\n  const sessionsForUser = new Map();\n  const sessionsProcessed: Array<{\n    user: number;\n    duration: number;\n    equipment: Set<string>;\n  }> = [];\n\n  reversedSessions.forEach((session) => {\n    if (options?.merge && sessionsForUser.has(session.user)) {\n      const userSession = sessionsForUser.get(session.user);\n      userSession.duration += session.duration;\n      session.equipment.forEach((equipment) => {\n        userSession.equipment.add(equipment);\n      });\n    } else {\n      const clonedSession = {\n        ...session,\n        equipment: new Set(session.equipment),\n      };\n\n      if (options?.merge) {\n        sessionsForUser.set(session.user, clonedSession);\n      }\n\n      sessionsProcessed.push(clonedSession);\n    }\n  });\n\n  sessionsProcessed.reverse();\n\n  const results: Array<Session> = [];\n  const optionEquipments = new Set(options?.equipment);\n  sessionsProcessed.forEach((session) => {\n    if (\n      (options?.user != null && options?.user !== session.user) ||\n      (optionEquipments.size > 0 &&\n        !setHasOverlap(optionEquipments, session.equipment)) ||\n      (options?.minDuration != null && options?.minDuration > session.duration)\n    ) {\n      return;\n    }\n\n    results.push({\n      ...session,\n      equipment: Array.from(session.equipment).sort(),\n    });\n  });\n\n  return results;\n}\n"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [
      "soundcloud",
      "amazon",
      "tiktok",
      "stripe"
    ],
    "created": 1655596800,
    "difficulty": "hard",
    "duration": 30,
    "excerpt": "实现一个函数来过滤与指定要求匹配的数据行",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/data-selection",
    "importance": "high",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "unique-array"
    ],
    "slug": "data-selection",
    "subtitle": null,
    "title": "数据选择",
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {Array<{user: number, duration: number, equipment: Array<string>}>} sessions\n * @param {{user?: number, minDuration?: number, equipment?: Array<string>, merge?: boolean}} [options]\n * @return {Array}\n */\nexport default function selectData(sessions, options) {\n  throw 'Not implemented!';\n}",
    "ts": "type Session = { user: number; duration: number; equipment: Array<string> };\ntype Options = {\n  user?: number;\n  minDuration?: number;\n  equipment?: Array<string>;\n  merge?: boolean;\n};\n\nexport default function selectData(\n  sessions: Array<Session>,\n  options?: Options,\n): Array<Session> {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var m=Object.create;var i=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var q=Object.getOwnPropertyNames;var S=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var g=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),y=(n,e)=>{for(var o in e)i(n,o,{get:e[o],enumerable:!0})},c=(n,e,o,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of q(e))!v.call(n,r)&&r!==o&&i(n,r,{get:()=>e[r],enumerable:!(t=f(e,r))||t.enumerable});return n};var A=(n,e,o)=>(o=n!=null?m(S(n)):{},c(e||!n||!n.__esModule?i(o,\"default\",{value:n,enumerable:!0}):o,n)),D=n=>c(i({},\"__esModule\",{value:!0}),n);var d=g((O,u)=>{u.exports=_jsx_runtime});var P={};y(P,{default:()=>F});var s=A(d());var l=MDXCodeBlock;var p=`function setHasOverlap(setA, setB) {\n  // Bundler doesn't transpile properly when doing for-of for sets.\n  for (const val of Array.from(setA)) {\n    if (setB.has(val)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * @param {Array<{user: number, duration: number, equipment: Array<string>}>} sessions\n * @param {{user?: number, minDuration?: number, equipment?: Array<string>, merge?: boolean}} [options]\n * @return {Array}\n */\nexport default function selectData(sessions, options = {}) {\n  const reversedSessions = sessions.slice().reverse(); // Make a copy and reverse.\n  const sessionsForUser = new Map();\n  const sessionsProcessed = [];\n\n  reversedSessions.forEach((session) => {\n    if (options.merge && sessionsForUser.has(session.user)) {\n      const userSession = sessionsForUser.get(session.user);\n      userSession.duration += session.duration;\n      session.equipment.forEach((equipment) => {\n        userSession.equipment.add(equipment);\n      });\n    } else {\n      const clonedSession = {\n        ...session,\n        equipment: new Set(session.equipment),\n      };\n\n      if (options.merge) {\n        sessionsForUser.set(session.user, clonedSession);\n      }\n\n      sessionsProcessed.push(clonedSession);\n    }\n  });\n\n  sessionsProcessed.reverse();\n\n  const results = [];\n  const optionEquipments = new Set(options.equipment);\n  sessionsProcessed.forEach((session) => {\n    if (\n      (options.user != null && options.user !== session.user) ||\n      (optionEquipments.size > 0 &&\n        !setHasOverlap(optionEquipments, session.equipment)) ||\n      (options.minDuration != null && options.minDuration > session.duration)\n    ) {\n      return;\n    }\n\n    results.push({\n      ...session,\n      equipment: Array.from(session.equipment).sort(),\n    });\n  });\n\n  return results;\n}\n`;var a=`function setHasOverlap<T>(setA: Set<T>, setB: Set<T>) {\n  // Bundler doesn't transpile properly when doing for-of for sets.\n  for (const val of Array.from(setA)) {\n    if (setB.has(val)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\ntype Session = { user: number; duration: number; equipment: Array<string> };\ntype Options = {\n  user?: number;\n  minDuration?: number;\n  equipment?: Array<string>;\n  merge?: boolean;\n};\n\nexport default function selectData(\n  sessions: Array<Session>,\n  options?: Options,\n): Array<Session> {\n  const reversedSessions = sessions.slice().reverse(); // Make a copy and reverse.\n  const sessionsForUser = new Map();\n  const sessionsProcessed: Array<{\n    user: number;\n    duration: number;\n    equipment: Set<string>;\n  }> = [];\n\n  reversedSessions.forEach((session) => {\n    if (options?.merge && sessionsForUser.has(session.user)) {\n      const userSession = sessionsForUser.get(session.user);\n      userSession.duration += session.duration;\n      session.equipment.forEach((equipment) => {\n        userSession.equipment.add(equipment);\n      });\n    } else {\n      const clonedSession = {\n        ...session,\n        equipment: new Set(session.equipment),\n      };\n\n      if (options?.merge) {\n        sessionsForUser.set(session.user, clonedSession);\n      }\n\n      sessionsProcessed.push(clonedSession);\n    }\n  });\n\n  sessionsProcessed.reverse();\n\n  const results: Array<Session> = [];\n  const optionEquipments = new Set(options?.equipment);\n  sessionsProcessed.forEach((session) => {\n    if (\n      (options?.user != null && options?.user !== session.user) ||\n      (optionEquipments.size > 0 &&\n        !setHasOverlap(optionEquipments, session.equipment)) ||\n      (options?.minDuration != null && options?.minDuration > session.duration)\n    ) {\n      return;\n    }\n\n    results.push({\n      ...session,\n      equipment: Array.from(session.equipment).sort(),\n    });\n  });\n\n  return results;\n}\n`;function h(n){let e=Object.assign({p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\",ol:\"ol\",h3:\"h3\",blockquote:\"blockquote\"},n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:\"\\u8FD9\\u4E2A\\u95EE\\u9898\\u8BC4\\u4F30\\u4E86\\u4EBA\\u4EEC\\u5BF9 JavaScript \\u8BED\\u8A00\\u7684\\u719F\\u6089\\u7A0B\\u5EA6\\u3002\"}),`\n`,(0,s.jsx)(e.h2,{children:\"\\u6F84\\u6E05\\u95EE\\u9898\"}),`\n`,(0,s.jsxs)(e.ul,{children:[`\n`,(0,s.jsxs)(e.li,{children:[\"\\u5982\\u679C \",(0,s.jsx)(e.code,{children:\"options\"}),\" \\u5305\\u542B \",(0,s.jsx)(e.code,{children:\"equipment: []\"}),\"\\uFF0C\\u9884\\u671F\\u7684\\u884C\\u4E3A\\u662F\\u4EC0\\u4E48\\uFF1F\",`\n`,(0,s.jsxs)(e.ul,{children:[`\n`,(0,s.jsxs)(e.li,{children:[\"\\u5B83\\u5E94\\u8BE5\\u5C06\\u5176\\u89C6\\u4E3A\\u6839\\u672C\\u6CA1\\u6709\\u6307\\u5B9A \",(0,s.jsx)(e.code,{children:\"equipment\"}),\"\\uFF0C\\u4F46\\u6211\\u4EEC\\u4E0D\\u4F1A\\u6D4B\\u8BD5\\u8FD9\\u79CD\\u60C5\\u51B5\\u3002\"]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,s.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,s.jsx)(e.p,{children:\"\\u8BA9\\u6211\\u4EEC\\u5C06\\u95EE\\u9898\\u5206\\u89E3\\u4E3A\\u4E24\\u90E8\\u5206\\uFF1A\"}),`\n`,(0,s.jsxs)(e.ol,{children:[`\n`,(0,s.jsx)(e.li,{children:\"\\u6839\\u636E\\u9009\\u9879\\u8FC7\\u6EE4\\u4F1A\\u8BDD\\u3002\"}),`\n`,(0,s.jsxs)(e.li,{children:[\"\\u5982\\u679C \",(0,s.jsx)(e.code,{children:\"options\"}),\" \\u4E2D\\u5B58\\u5728 \",(0,s.jsx)(e.code,{children:\"merge: true\"}),\"\\uFF0C\\u5219\\u6309 \",(0,s.jsx)(e.code,{children:\"user\"}),\" \\u5B57\\u6BB5\\u5408\\u5E76\\u4F1A\\u8BDD\\u3002\"]}),`\n`]}),`\n`,(0,s.jsx)(e.h3,{children:\"\\u6839\\u636E\\u9009\\u9879\\u8FC7\\u6EE4\\u4F1A\\u8BDD\"}),`\n`,(0,s.jsxs)(e.p,{children:[\"\\u6839\\u636E \",(0,s.jsx)(e.code,{children:\"user\"}),\" \\u548C \",(0,s.jsx)(e.code,{children:\"minDuration\"}),\" \\u8FC7\\u6EE4\\u975E\\u5E38\\u7B80\\u5355\\u3002 \\u6211\\u4EEC\\u53EF\\u4EE5\\u4F7F\\u7528\\u57FA\\u672C\\u8FD0\\u7B97\\u7B26\\u6765\\u68C0\\u67E5 \",(0,s.jsx)(e.code,{children:\"user\"}),\" \\u5B57\\u6BB5\\u662F\\u5426\\u5339\\u914D\\u4EE5\\u53CA \",(0,s.jsx)(e.code,{children:\"duration > minDuration\"}),\"\\u3002\"]}),`\n`,(0,s.jsxs)(e.p,{children:[\"\\u4E3A\\u4E86\\u5339\\u914D\\u8BBE\\u5907\\uFF0C\\u6211\\u4EEC\\u5FC5\\u987B\\u786E\\u5B9A \",(0,s.jsx)(e.code,{children:\"options\"}),\" \\u548C\\u6BCF\\u4E2A\\u4F1A\\u8BDD\\u4E4B\\u95F4\\u7684 \",(0,s.jsx)(e.code,{children:\"equipment\"}),\" \\u662F\\u5426\\u6709\\u91CD\\u53E0\\u3002 \\u4E00\\u79CD\\u65B9\\u6CD5\\u662F\\u5C06\\u4E24\\u4E2A \",(0,s.jsx)(e.code,{children:\"equipment\"}),\" \\u5B57\\u6BB5\\u8F6C\\u6362\\u4E3A \",(0,s.jsx)(e.code,{children:\"Set\"}),\"\\uFF0C\\u4EE5\\u4FBF\\u6211\\u4EEC\\u53EF\\u4EE5\\u5728 O(1) \\u65F6\\u95F4\\u5185\\u8FDB\\u884C\\u67E5\\u627E\\u3002 \\u6211\\u4EEC\\u5B9E\\u73B0\\u4E86\\u4E00\\u4E2A \",(0,s.jsx)(e.code,{children:\"setHasOverlap\"}),\" \\u51FD\\u6570\\u6765\\u5B9E\\u73B0\\u8FD9\\u4E00\\u70B9\\u3002\"]}),`\n`,(0,s.jsxs)(e.h3,{children:[\"\\u6309 \",(0,s.jsx)(e.code,{children:\"user\"}),\" \\u5B57\\u6BB5\\u5408\\u5E76\\u4F1A\\u8BDD\"]}),`\n`,(0,s.jsxs)(e.p,{children:[\"\\u8FD9\\u662F\\u95EE\\u9898\\u7684\\u68D8\\u624B\\u90E8\\u5206\\u3002 \\u6211\\u4EEC\\u5FC5\\u987B\\u5408\\u5E76\\u5177\\u6709\\u76F8\\u540C \",(0,s.jsx)(e.code,{children:\"user\"}),\" \\u5B57\\u6BB5\\u7684\\u4F1A\\u8BDD\\uFF0C\\u5E76\\u4E14\\u8FD8\\u8981\\u4FDD\\u7559\\u987A\\u5E8F\\u3002 \\u8BF7\\u6CE8\\u610F\\u4EE5\\u4E0B\\u8981\\u6C42\\uFF1A\"]}),`\n`,(0,s.jsxs)(e.blockquote,{children:[`\n`,(0,s.jsx)(e.p,{children:\"\\u5728\\u5408\\u5E76\\u5177\\u6709\\u91CD\\u590D\\u7528\\u6237\\u7684\\u4F1A\\u8BDD\\u7684\\u60C5\\u51B5\\u4E0B\\uFF0C\\u8BE5\\u884C\\u5E94\\u5360\\u636E\\u8BE5\\u7528\\u6237\\u6700\\u65B0\\u51FA\\u73B0\\u7684\\u4F4D\\u7F6E\\u3002 \\u8F93\\u5165\\u5BF9\\u8C61\\u4E0D\\u5E94\\u88AB\\u4FEE\\u6539\\u3002\"}),`\n`]}),`\n`,(0,s.jsxs)(e.p,{children:[\"\\u5982\\u679C\\u95EE\\u9898\\u8981\\u6C42\\u8BE5\\u7528\\u6237\\u7684\\u7B2C\\u4E00\\u6B21\\u51FA\\u73B0\\uFF0C\\u90A3\\u4F1A\\u66F4\\u5BB9\\u6613\\uFF0C\\u56E0\\u4E3A\\u6211\\u4EEC\\u53EF\\u4EE5\\u5C06\\u4F1A\\u8BDD\\u63A8\\u5165\\u6570\\u7EC4\\uFF0C\\u5E76\\u4E14\\u8BE5\\u4F4D\\u7F6E\\u5C06\\u662F\\u6B63\\u786E\\u7684\\u6700\\u7EC8\\u4F4D\\u7F6E\\u3002 \\u5982\\u679C\\u6211\\u4EEC\\u518D\\u6B21\\u9047\\u5230\\u540C\\u4E00\\u7528\\u6237\\u7684\\u4F1A\\u8BDD\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u5728\\u4E0D\\u66F4\\u6539\\u5176\\u5728\\u6570\\u7EC4\\u4E2D\\u7684\\u4F4D\\u7F6E\\u7684\\u60C5\\u51B5\\u4E0B\\u66F4\\u65B0\\u8BE5\\u8F83\\u65E9\\u7684\\u4F1A\\u8BDD\\u3002 \\u503C\\u5F97\\u5E86\\u5E78\\u7684\\u662F\\uFF0C\\u4E00\\u4E2A\\u5DE7\\u5999\\u7684\\u6280\\u5DE7\\u662F\\u9996\\u5148\\u53CD\\u8F6C\\u8F93\\u5165\\u6570\\u7EC4\\u4F5C\\u4E3A \",(0,s.jsx)(e.code,{children:\"reversedSessions\"}),\"\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u5C06\\u5176\\u89C6\\u4E3A\\u95EE\\u9898\\u8981\\u6C42\\u7EF4\\u62A4\\u7528\\u6237\\u7B2C\\u4E00\\u6B21\\u51FA\\u73B0\\u7684\\u987A\\u5E8F\\u3002\"]}),`\n`,(0,s.jsxs)(e.p,{children:[\"\\u6211\\u4EEC\\u4F7F\\u7528\\u4E00\\u4E2A\\u65B0\\u6570\\u7EC4 \",(0,s.jsx)(e.code,{children:\"sessionsProcessed\"}),\"\\uFF0C\\u5B83\\u6700\\u7EC8\\u5C06\\u5305\\u542B\\u6B63\\u786E\\u987A\\u5E8F\\u7684\\u4F1A\\u8BDD\\u548C\\u5408\\u5E76\\u7684\\u7528\\u6237\\u4F1A\\u8BDD\\u3002 \\u8BE5\\u6570\\u7EC4\\u5C06\\u662F\\u6211\\u4EEC\\u5728\\u6839\\u636E\\u9009\\u9879\\u8FDB\\u884C\\u8FC7\\u6EE4\\u65F6\\u64CD\\u4F5C\\u7684\\u6570\\u7EC4\\u3002\"]}),`\n`,(0,s.jsxs)(e.p,{children:[\"\\u5F53\\u6211\\u4EEC\\u904D\\u5386 \",(0,s.jsx)(e.code,{children:\"reversedSessions\"}),\" \\u65F6\\uFF0C\\u5BF9\\u4E8E\\u6BCF\\u4E2A\\u4F1A\\u8BDD\\uFF0C\\u6211\\u4EEC\\u67E5\\u770B\\u662F\\u5426\\u4E4B\\u524D\\u9047\\u5230\\u8FC7 \",(0,s.jsx)(e.code,{children:\"user\"}),\"\\u3002 \\u5982\\u679C\\u662F\\u7B2C\\u4E00\\u6B21\\uFF0C\\u6211\\u4EEC\\u5411 \",(0,s.jsx)(e.code,{children:\"sessionsProcessed\"}),\" \\u6DFB\\u52A0\\u4E00\\u4E2A\\u65B0\\u6761\\u76EE\\u3002 \\u5426\\u5219\\uFF0C\\u6211\\u4EEC\\u4F7F\\u7528\\u5F53\\u524D\\u4F1A\\u8BDD\\u6570\\u636E\\u66F4\\u65B0\\u5408\\u5E76\\u7684\\u4F1A\\u8BDD\\u3002\"]}),`\n`,(0,s.jsxs)(e.p,{children:[\"\\u8981\\u4FEE\\u6539\\u7528\\u6237\\u7684\\u5408\\u5E76\\u4F1A\\u8BDD\\uFF0C\\u6211\\u4EEC\\u521B\\u5EFA\\u4E00\\u4E2A \",(0,s.jsx)(e.code,{children:\"Map\"}),\" (\",(0,s.jsx)(e.code,{children:\"sessionsForUser\"}),\")\\uFF0C\\u5176\\u4E2D\\u952E\\u662F\\u7528\\u6237 ID\\uFF0C\\u503C\\u662F\\u5408\\u5E76\\u7684\\u4F1A\\u8BDD\\u5BF9\\u8C61\\u3002 \\u53EF\\u4EE5\\u901A\\u8FC7\\u4F7F\\u7528\\u7528\\u6237 ID \\u67E5\\u627E \",(0,s.jsx)(e.code,{children:\"sessionsForUser\"}),\" \\u5E76\\u4FEE\\u6539\\u8BE5\\u503C\\uFF08\\u5982\\u679C\\u5B58\\u5728\\uFF09\\u6765\\u4FEE\\u6539\\u5408\\u5E76\\u7684\\u4F1A\\u8BDD\\u5BF9\\u8C61\\u3002 \",(0,s.jsx)(e.code,{children:\"sessionsProcessed\"}),\" \\u4E2D\\u7684\\u5BF9\\u8C61\\u4E5F\\u5C06\\u88AB\\u66F4\\u65B0\\uFF0C\\u56E0\\u4E3A\\u5B83\\u4EEC\\u662F\\u540C\\u4E00\\u4E2A\\u5BF9\\u8C61\\u3002\"]}),`\n`,(0,s.jsx)(l,{languages:{jsx:p,tsx:a}}),`\n`,(0,s.jsx)(e.h2,{children:\"\\u6280\\u672F\"}),`\n`,(0,s.jsxs)(e.ul,{children:[`\n`,(0,s.jsxs)(e.li,{children:[\"\\u719F\\u6089 JavaScript \\u6570\\u636E\\u7ED3\\u6784\\uFF0C\\u5982 \",(0,s.jsx)(e.code,{children:\"Array\"}),\" \\u548C \",(0,s.jsx)(e.code,{children:\"Set\"}),\"\\u3002\"]}),`\n`]})]})}function E(n={}){let{wrapper:e}=n.components||{};return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(h,n)})):h(n)}var F=E;return D(P);})();\n;return Component;",
  "workspace": {
    "main": "/src/data-selection.ts",
    "run": "/src/data-selection.run.test.ts",
    "submit": "/src/data-selection.submit.test.ts"
  }
}