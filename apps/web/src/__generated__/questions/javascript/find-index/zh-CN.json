{
  "description": "var Component=(()=>{var m=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var s=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var p=(r,n)=>()=>(n||r((n={exports:{}}).exports,n),n.exports),I=(r,n)=>{for(var d in n)i(r,d,{get:n[d],enumerable:!0})},h=(r,n,d,l)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let c of s(n))!f.call(r,c)&&c!==d&&i(r,c,{get:()=>n[c],enumerable:!(l=u(n,c))||l.enumerable});return r};var g=(r,n,d)=>(d=r!=null?m(x(r)):{},h(n||!r||!r.__esModule?i(d,\"default\",{value:r,enumerable:!0}):d,r)),j=r=>h(i({},\"__esModule\",{value:!0}),r);var o=p((N,a)=>{a.exports=_jsx_runtime});var F={};I(F,{default:()=>b,frontmatter:()=>y});var e=g(o()),y={title:\"\\u67E5\\u627E\\u7D22\\u5F15\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u51FD\\u6570\\uFF0C\\u8BE5\\u51FD\\u6570\\u8FD4\\u56DE\\u6570\\u7EC4\\u4E2D\\u6EE1\\u8DB3\\u63D0\\u4F9B\\u7684\\u6D4B\\u8BD5\\u51FD\\u6570\\u7684\\u7B2C\\u4E00\\u4E2A\\u5143\\u7D20\\u7684\\u7D22\\u5F15\"};function t(r){let n=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\",em:\"em\",ul:\"ul\",a:\"a\"},r.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u51FD\\u6570 \",(0,e.jsx)(n.code,{children:\"findIndex(array, predicate, [fromIndex=0])\"}),\"\\uFF0C\\u5B83\\u63A5\\u53D7\\u4E00\\u4E2A\\u503C\\u6570\\u7EC4\\u3001\\u4E00\\u4E2A\\u51FD\\u6570 \",(0,e.jsx)(n.code,{children:\"predicate\"}),\" \\u548C\\u4E00\\u4E2A\\u53EF\\u9009\\u7684 \",(0,e.jsx)(n.code,{children:\"fromIndex\"}),\" \\u6570\\u5B57\\u53C2\\u6570\\uFF0C\\u5E76\\u8FD4\\u56DE\\u6570\\u7EC4\\u4E2D\\u6EE1\\u8DB3\\u63D0\\u4F9B\\u7684\\u6D4B\\u8BD5\\u51FD\\u6570 \",(0,e.jsx)(n.code,{children:\"predicate\"}),\" \\u7684\\u7B2C\\u4E00\\u4E2A\\u5143\\u7D20\\u7684\\u7D22\\u5F15\\u3002\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`findIndex(array, predicate, [(fromIndex = 0)]);\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u53C2\\u6570\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"array\"}),\" \",(0,e.jsx)(n.em,{children:\"(Array)\"}),\": \\u8981\\u68C0\\u67E5\\u7684\\u6570\\u7EC4\\u3002\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"predicate\"}),\" \",(0,e.jsx)(n.em,{children:\"(Function)\"}),\": \\u6BCF\\u6B21\\u8FED\\u4EE3\\u65F6\\u8C03\\u7528\\u7684\\u51FD\\u6570\\u3002\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"[fromIndex=0]\"}),\" \",(0,e.jsx)(n.em,{children:\"(number)\"}),\": \\u5F00\\u59CB\\u641C\\u7D22\\u7684\\u7D22\\u5F15\\u3002\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Predicate \\u7B7E\\u540D\\uFF1A\",(0,e.jsx)(n.code,{children:\"predicate\"}),\" \\u51FD\\u6570\\u5C06\\u4F7F\\u7528\\u4E09\\u4E2A\\u53C2\\u6570\\u8C03\\u7528\\uFF1A\",(0,e.jsx)(n.code,{children:\"(value, index, array)\"}),\"\\u3002\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"value\"}),\"\\uFF1A\\u5F53\\u524D\\u6B63\\u5728\\u8FED\\u4EE3\\u7684\\u5143\\u7D20\\u3002\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"index\"}),\"\\uFF1A\\u5F53\\u524D\\u5143\\u7D20\\u7684\\u7D22\\u5F15\\u3002\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"array\"}),\"\\uFF1A\\u539F\\u59CB\\u8F93\\u5165\\u6570\\u7EC4\\u3002\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u8FD4\\u56DE\\u503C\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.em,{children:\"(number)\"}),\": \\u8FD4\\u56DE\\u627E\\u5230\\u7684\\u5143\\u7D20\\u7684\\u7D22\\u5F15\\uFF0C\\u5426\\u5219\\u8FD4\\u56DE \",(0,e.jsx)(n.code,{children:\"-1\"}),\"\\u3002\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u4F8B\\u5B50\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`const arr = [1, 2, 3, 4, 5];\n\n// \\u641C\\u7D22\\u6570\\u7EC4\\u4E2D\\u7B2C\\u4E00\\u4E2A\\u5927\\u4E8E 3 \\u7684\\u503C\\u3002\nfindIndex(arr, (num) => num > 3); // => 3\n\n// \\u4ECE\\u7D22\\u5F15 4\\uFF08\\u5305\\u62EC\\uFF09\\u5F00\\u59CB\\u641C\\u7D22\\u3002\nfindIndex(arr, (num) => num > 3, 4); // => 4\n\n// \\u4E0D\\u5B58\\u5728\\u8FD9\\u6837\\u7684\\u5143\\u7D20\\u3002\nfindIndex(arr, (num) => num > 10, 3); // => -1\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u8FB9\\u7F18\\u60C5\\u51B5\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\u60A8\\u7684\\u51FD\\u6570\\u5E94\\u5904\\u7406\\u8D1F\\u7D22\\u5F15\\u548C\\u8D85\\u51FA\\u8303\\u56F4\\u7684\\u7D22\\u5F15\\uFF0C\\u5982\\u4E0B\\u9762\\u7684\\u793A\\u4F8B\\u6240\\u793A\\u3002\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"\\u8D1F\\u6570\\uFF1A\\u8D1F\\u6574\\u6570\\u4ECE\\u6570\\u7EC4\\u4E2D\\u7684\\u6700\\u540E\\u4E00\\u4E2A\\u9879\\u76EE\\u5411\\u540E\\u8BA1\\u6570\\u3002\",(0,e.jsx)(n.code,{children:\"-1\"}),\" \\u8868\\u793A\\u6570\\u7EC4\\u4E2D\\u7684\\u6700\\u540E\\u4E00\\u4E2A\\u5143\\u7D20\\uFF0C\",(0,e.jsx)(n.code,{children:\"-2\"}),\" \\u8868\\u793A\\u5012\\u6570\\u7B2C\\u4E8C\\u4E2A\\u5143\\u7D20\\uFF0C\\u4F9D\\u6B64\\u7C7B\\u63A8\\u3002\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"\\u8D85\\u51FA\\u8303\\u56F4\\uFF1A\\u5982\\u679C \",(0,e.jsx)(n.code,{children:\"index < -(array.length)\"}),\"\\uFF0C\\u5219\\u4ECE\\u7D22\\u5F15 0 \\u5F00\\u59CB\\u641C\\u7D22\\u3002\\u5982\\u679C \",(0,e.jsx)(n.code,{children:\"index\"}),\" >= \",(0,e.jsx)(n.code,{children:\"array.length\"}),\"\\uFF0C\\u5219\\u4E0D\\u4F1A\\u8FDB\\u884C\\u641C\\u7D22\\uFF0C\\u60A8\\u5E94\\u8BE5\\u8FD4\\u56DE -1\\u3002\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`const arr = [1, 2, 3, 4, 5];\n\n// \\u4ECE\\u7D22\\u5F15 2\\uFF08\\u5305\\u62EC\\uFF09\\u5F00\\u59CB\\u641C\\u7D22\\u3002\nfindIndex(arr, (num) => num > 2, -3); // => 2\n\nfindIndex(arr, (num) => num % 2 === 0, -3); // => 3\n\n// \\u5982\\u679C fromIndex < -(array.length)\\uFF0C\\u5219\\u4ECE 0 \\u5F00\\u59CB\nfindIndex(arr, (num) => num > 2, -10); // => 2\n\n// \\u4ECE\\u5DF2\\u7ECF\\u8D85\\u51FA\\u8303\\u56F4\\u7684\\u7D22\\u5F15\\u5411\\u53F3\\u641C\\u7D22\\uFF0C\n// \\u8FD9\\u5C06\\u59CB\\u7EC8\\u5BFC\\u81F4 -1\\u3002\nfindIndex(arr, (num) => num > 2, 10); // => -1\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u8D44\\u6E90\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:(0,e.jsxs)(n.a,{href:\"https://lodash.com/docs/#findIndex\",children:[\"Lodash \",(0,e.jsx)(n.code,{children:\"_.findIndex\"})]})}),`\n`]})]})}function _(r={}){let{wrapper:n}=r.components||{};return n?(0,e.jsx)(n,Object.assign({},r,{children:(0,e.jsx)(t,r)})):t(r)}var b=_;return j(F);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/find-index\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/find-index.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/find-index.run.test.ts": "import findIndex from './find-index';\n\ndescribe('findIndex', () => {\n  test('empty array', () => {\n    expect(findIndex([], (num: number) => num % 2 === 0)).toBe(-1);\n  });\n\n  test('finds index of first even number', () => {\n    expect(findIndex([4, 12, 8, 130, 44], (num: number) => num % 2 === 0)).toBe(\n      0,\n    );\n    expect(findIndex([5, 12, 8, 130, 44], (num: number) => num % 2 === 0)).toBe(\n      1,\n    );\n  });\n});\n",
    "/src/find-index.submit.test.ts": "import findIndex from './find-index';\n\ndescribe('findIndex', () => {\n  const basicArr = [5, 12, 8, 130, 44, 99, 32, 15];\n  const mixedArr = [10, 'apple', 20, 'banana', 30, 'cherry', 40];\n  const objArr = [{ id: 1 }, { id: 5 }, { id: 10 }, { id: 5 }, { id: 15 }];\n  const searchArr = [5, 12, 8, 130, 44, 99, 32, 15]; // Indices 0-7\n\n  describe('empty array', () => {\n    test('empty array always returns -1', () => {\n      expect(\n        findIndex(\n          [],\n          (value: any, _index: number, _array: any[]) => value === 0,\n        ),\n      ).toBe(-1);\n    });\n    test('empty array with positive fromIndex', () => {\n      expect(\n        findIndex(\n          [],\n          (value: any, _index: number, _array: any[]) => value === 0,\n          5,\n        ),\n      ).toBe(-1);\n    });\n    test('empty array with negative fromIndex', () => {\n      expect(\n        findIndex(\n          [],\n          (value: any, _index: number, _array: any[]) => value === 0,\n          -5,\n        ),\n      ).toBe(-1);\n    });\n  });\n\n  describe('basic functionality', () => {\n    test('finds index of first even number', () => {\n      expect(\n        findIndex(\n          [4, 12, 8, 130, 44],\n          (num: number, _index: number, _array: number[]) => num % 2 === 0,\n        ),\n      ).toBe(0);\n      expect(\n        findIndex(\n          basicArr,\n          (num: number, _index: number, _array: number[]) => num % 2 === 0,\n        ),\n      ).toBe(1); // 12 is the first even\n    });\n    test('finds index of first odd number', () => {\n      expect(\n        findIndex(\n          basicArr,\n          (num: number, _index: number, _array: number[]) => num % 2 !== 0,\n        ),\n      ).toBe(0); // 5 is the first odd\n      expect(\n        findIndex(\n          [4, 12, 8, 130, 44, 99],\n          (num: number, _index: number, _array: number[]) => num % 2 !== 0,\n        ),\n      ).toBe(5); // 99 is the first odd\n    });\n    test('finds index of first string', () => {\n      expect(\n        findIndex(\n          mixedArr,\n          (val: any, _index: number, _array: any[]) => typeof val === 'string',\n        ),\n      ).toBe(1); // 'apple'\n    });\n    test('finds index of first string longer than 5 chars', () => {\n      expect(\n        findIndex(\n          mixedArr,\n          (val: any, _index: number, _array: any[]) =>\n            typeof val === 'string' && val.length > 5,\n        ),\n      ).toBe(3); // 'banana'\n    });\n    test('finds index of first object with id > 5', () => {\n      expect(\n        findIndex(\n          objArr,\n          (obj: { id: number }, _index: number, _array: any[]) => obj.id > 5,\n        ),\n      ).toBe(2); // { id: 10 }\n    });\n    test('finds index using index parameter', () => {\n      // Find first element whose value is less than its index\n      expect(\n        findIndex(\n          [5, 4, 3, 2, 1],\n          (val: number, index: number, _array: number[]) => val < index,\n        ),\n      ).toBe(3); // value 2 at index 3\n    });\n    test('finds index using array parameter', () => {\n      // Find first element greater than the last element\n      expect(\n        findIndex(\n          [10, 5, 20, 15, 18],\n          (val: number, _index: number, arr: number[]) =>\n            val > arr[arr.length - 1],\n        ),\n      ).toBe(2); // 20 > 18\n    });\n  });\n\n  describe('no element passes test', () => {\n    test('no element passes test (simple)', () => {\n      expect(\n        findIndex(\n          [5, 12, 8, 130, 44],\n          (num: number, _index: number, _array: number[]) => num > 200,\n        ),\n      ).toBe(-1);\n    });\n    test('no element passes test (type mismatch)', () => {\n      expect(\n        findIndex(\n          [1, 2, 3, 4],\n          (val: any, _index: number, _array: any[]) => typeof val === 'string',\n        ),\n      ).toBe(-1);\n    });\n    test('no element passes test (always false predicate)', () => {\n      expect(\n        findIndex(\n          [1, 2, 3, 4],\n          (_val: any, _index: number, _array: any[]) => false,\n        ),\n      ).toBe(-1);\n    });\n    test('no element passes test (object property)', () => {\n      expect(\n        findIndex(\n          objArr,\n          (obj: { id: number }, _index: number, _array: any[]) =>\n            obj.id === 100,\n        ),\n      ).toBe(-1);\n    });\n  });\n\n  describe('searches from given positive start index', () => {\n    test('basic', () => {\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num % 2 === 0,\n          1,\n        ),\n      ).toBe(1); // Start at 12, finds 12\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num % 10 === 0,\n          2,\n        ),\n      ).toBe(3); // Start at 8, finds 130\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num % 2 === 0,\n          4,\n        ),\n      ).toBe(4); // Start at 44, finds 44\n    });\n    test('searches from start index, finds later element', () => {\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num === 32,\n          2,\n        ),\n      ).toBe(6); // Start at 8, find 32\n    });\n    test('searches from start index, finds element at start index', () => {\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num === 130,\n          3,\n        ),\n      ).toBe(3); // Start at 130, find 130\n    });\n    test('searches from start index, no match found after start', () => {\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num === 5,\n          1,\n        ),\n      ).toBe(-1); // Start at 12, look for 5, not found\n    });\n    test('using index predicate', () => {\n      // Find first element where index > 5, starting search from index 4\n      expect(\n        findIndex(\n          searchArr,\n          (_val: number, index: number, _array: number[]) => index > 5,\n          4,\n        ),\n      ).toBe(6); // Start at 44 (idx 4), check 99 (idx 5), find 32 (idx 6)\n    });\n  });\n\n  describe('handles negative start index', () => {\n    // searchArr = [5, 12, 8, 130, 44, 99, 32, 15]; // Length 8\n    // Indices:    0   1  2    3   4   5   6   7\n    // Negative:  -8  -7 -6   -5  -4  -3  -2  -1\n    test('basic', () => {\n      // Start at index 6 (-2), find num > 30 -> finds 32 at index 6\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num > 30,\n          -2,\n        ),\n      ).toBe(6);\n      // Start at index 4 (-4), find num < 50 -> finds 44 at index 4\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num < 50,\n          -4,\n        ),\n      ).toBe(4);\n    });\n    test('negative start index -1 (last element)', () => {\n      // Start at index 7 (-1), find num === 15 -> finds 15 at index 7\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num === 15,\n          -1,\n        ),\n      ).toBe(7);\n      // Start at index 7 (-1), find num > 100 -> returns -1\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num > 100,\n          -1,\n        ),\n      ).toBe(-1);\n    });\n    test('negative start index -array.length (starts at 0)', () => {\n      // Start at index 0 (-8), find num > 100 -> finds 130 at index 3\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num > 100,\n          -8,\n        ),\n      ).toBe(3);\n    });\n    test('negative start index mid-array', () => {\n      // Start at index 3 (-5), find num === 99 -> finds 99 at index 5\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num === 99,\n          -5,\n        ),\n      ).toBe(5);\n    });\n    test('negative start index, no match found after start', () => {\n      // Start at index 5 (-3), no number < 10 after that -> returns -1\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num < 10,\n          -3,\n        ),\n      ).toBe(-1);\n    });\n  });\n\n  describe('handles out of bound index', () => {\n    // searchArr = [5, 12, 8, 130, 44, 99, 32, 15]; // Length 8\n    test('positive out of bound index (start >= length)', () => {\n      // Start at index 8 (length), should find nothing\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num >= 0,\n          8,\n        ),\n      ).toBe(-1);\n      // Start at index 10 (way out), should find nothing\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num >= 0,\n          10,\n        ),\n      ).toBe(-1);\n    });\n    test('negative out of bound index (start < -length)', () => {\n      // Start at index -10 (resolves to 0), find num > 100 -> finds 130 at index 3\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num > 100,\n          -10,\n        ),\n      ).toBe(3);\n      // Start at index -9 (resolves to 0), find first even -> finds 12 at index 1\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num % 2 === 0,\n          -9,\n        ),\n      ).toBe(1);\n    });\n    test('negative out of bound index far below -length', () => {\n      // Start at index -100 (resolves to 0), find num === 8 -> finds 8 at index 2\n      expect(\n        findIndex(\n          searchArr,\n          (num: number, _index: number, _array: number[]) => num === 8,\n          -100,\n        ),\n      ).toBe(2);\n    });\n  });\n});\n",
    "/src/find-index.ts": "export default function findIndex<T>(\n  array: Array<T>,\n  predicate: (value: T, index: number, array: Array<T>) => boolean,\n  fromIndex: number = 0,\n): number {\n  const length = array.length;\n  const startIndex =\n    fromIndex >= 0 ? fromIndex : Math.max(length + fromIndex, 0);\n\n  for (let index = startIndex; index < length; index++) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n"
  },
  "info": {
    "excerpt": "实现一个函数，该函数返回数组中满足提供的测试函数的第一个元素的索引",
    "title": "查找索引"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [],
    "created": 1682726400,
    "difficulty": "easy",
    "duration": 10,
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/find-index",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "find-last-index"
    ],
    "slug": "find-index",
    "subtitle": null,
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * This function returns the index of the first element in the array that satisfies the provided testing function.\n * Otherwise, it returns -1, indicating that no element passed the test.\n *\n * @param {Array} array - The array to search.\n * @param {Function} predicate - The function invoked per iteration.\n * @param {number} [fromIndex=0] - The index to start searching from.\n * @returns The index of the found element, else -1.\n */\nexport default function findIndex(array, predicate, fromIndex = 0) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function findIndex<T>(\n  array: Array<T>,\n  predicate: (value: T, index: number, array: Array<T>) => boolean,\n  fromIndex: number = 0,\n): number {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var m=Object.create;var d=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var y=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),T=(n,e)=>{for(var t in e)d(n,t,{get:e[t],enumerable:!0})},o=(n,e,t,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of p(e))!g.call(n,a)&&a!==t&&d(n,a,{get:()=>e[a],enumerable:!(i=u(e,a))||i.enumerable});return n};var j=(n,e,t)=>(t=n!=null?m(I(n)):{},o(e||!n||!n.__esModule?d(t,\"default\",{value:n,enumerable:!0}):t,n)),_=n=>o(d({},\"__esModule\",{value:!0}),n);var x=y((v,s)=>{s.exports=_jsx_runtime});var X={};T(X,{default:()=>D});var r=j(x());var c=MDXCodeBlock;var h=`/**\n * This function returns the index of the first element in the array that satisfies the provided testing function.\n * Otherwise, it returns -1, indicating that no element passed the test.\n *\n * @param {Array} array - The array to search.\n * @param {Function} predicate - The function invoked per iteration.\n * @param {number} [fromIndex=0] - The index to start searching from.\n * @returns The index of the found element, else -1.\n */\nexport default function findIndex(array, predicate, fromIndex = 0) {\n  const length = array.length;\n  const startIndex =\n    fromIndex >= 0 ? fromIndex : Math.max(length + fromIndex, 0);\n\n  for (let index = startIndex; index < length; index++) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n`;var f=`export default function findIndex<T>(\n  array: Array<T>,\n  predicate: (value: T, index: number, array: Array<T>) => boolean,\n  fromIndex: number = 0,\n): number {\n  const length = array.length;\n  const startIndex =\n    fromIndex >= 0 ? fromIndex : Math.max(length + fromIndex, 0);\n\n  for (let index = startIndex; index < length; index++) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n`;function l(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\",code:\"code\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,r.jsx)(c,{languages:{jsx:h,tsx:f}}),`\n`,(0,r.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:(0,r.jsxs)(e.a,{href:\"https://lodash.com/docs/#findIndex\",children:[\"Lodash \",(0,r.jsx)(e.code,{children:\"_.findIndex\"})]})}),`\n`]})]})}function C(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(l,n)})):l(n)}var D=C;return _(X);})();\n;return Component;",
  "workspace": {
    "main": "/src/find-index.ts",
    "run": "/src/find-index.run.test.ts",
    "submit": "/src/find-index.submit.test.ts"
  }
}