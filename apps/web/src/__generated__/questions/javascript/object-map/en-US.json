{
  "description": "var Component=(()=>{var u=Object.create;var a=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var j=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),b=(n,e)=>{for(var o in e)a(n,o,{get:e[o],enumerable:!0})},i=(n,e,o,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of m(e))!f.call(n,c)&&c!==o&&a(n,c,{get:()=>e[c],enumerable:!(r=h(e,c))||r.enumerable});return n};var x=(n,e,o)=>(o=n!=null?u(p(n)):{},i(e||!n||!n.__esModule?a(o,\"default\",{value:n,enumerable:!0}):o,n)),g=n=>i(a({},\"__esModule\",{value:!0}),n);var l=j((y,s)=>{s.exports=_jsx_runtime});var w={};b(w,{default:()=>v,frontmatter:()=>_});var t=x(l()),_={title:\"Object Map\",excerpt:\"Implement a function to transform values within an object\"};function d(n){let e=Object.assign({p:\"p\",code:\"code\",h2:\"h2\",pre:\"pre\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[\"Implement a function \",(0,t.jsx)(e.code,{children:\"objectMap(obj, fn)\"}),\" to return a new object containing the results of calling a provided function on every value in the object. The function \",(0,t.jsx)(e.code,{children:\"fn\"}),\" is called with a single argument, the \",(0,t.jsx)(e.code,{children:\"value\"}),\" that is being mapped/transformed.\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Examples\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-js\",children:`const double = (x) => x * 2;\nobjectMap({ foo: 1, bar: 2 }, double); // => { foo: 2, bar: 4}\n`})})]})}function M(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(d,n)})):d(n)}var v=M;return g(w);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/object-map\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/object-map.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"esnext\"],\n    \"jsx\": \"react-jsx\"\n  }\n}\n",
    "/src/object-map.run.test.ts": "import objectMap from './object-map';\n\nconst double = (x: number) => x * 2;\n\ndescribe('objectMap', () => {\n  test('empty', () => {\n    expect(objectMap({}, double)).toEqual({});\n  });\n\n  test('single key', () => {\n    expect(objectMap({ foo: 2 }, double)).toEqual({ foo: 4 });\n  });\n\n  test('multiple keys', () => {\n    expect(objectMap({ foo: 2, bar: 3 }, double)).toEqual({ foo: 4, bar: 6 });\n  });\n});\n",
    "/src/object-map.submit.test.ts": "import objectMap from './object-map';\n\nconst double = (x: number) => x * 2;\n\ndescribe('objectMap', () => {\n  test('empty', () => {\n    expect(objectMap({}, double)).toEqual({});\n  });\n\n  test('single key', () => {\n    expect(objectMap({ foo: 2 }, double)).toEqual({ foo: 4 });\n  });\n\n  test('multiple keys', () => {\n    expect(objectMap({ foo: 2, bar: 3 }, double)).toEqual({ foo: 4, bar: 6 });\n  });\n\n  test('can access `this`', () => {\n    expect(\n      objectMap({ bar: 3, foo: 2 }, function (this: any, x: number) {\n        return this.foo * x;\n      }),\n    ).toEqual({\n      foo: 4,\n      bar: 6,\n    });\n  });\n\n  test('does not mutate the input', () => {\n    const obj = { bar: 3, foo: 2 };\n    expect(objectMap(obj, double)).toEqual({\n      foo: 4,\n      bar: 6,\n    });\n    expect(obj).toEqual({\n      foo: 2,\n      bar: 3,\n    });\n  });\n});\n",
    "/src/object-map.ts": "export default function objectMap<V, R>(\n  obj: Record<string, V>,\n  fn: (val: V) => R,\n): Record<string, R> {\n  const result: Record<string, R> = {};\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      result[key] = fn.call(obj, obj[key]);\n    }\n  }\n\n  return result;\n}\n"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [],
    "created": 1690761600,
    "difficulty": "easy",
    "duration": 10,
    "excerpt": "Implement a function to transform values within an object",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/object-map",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [
      "deep-map"
    ],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "array-map"
    ],
    "slug": "object-map",
    "subtitle": null,
    "title": "Object Map",
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {Object} obj\n * @param {Function} fn\n * @returns Object\n */\nexport default function objectMap(obj, fn) {\n  throw 'Not implemented';\n}",
    "ts": "export default function objectMap<V, R>(\n  obj: Record<string, V>,\n  fn: (val: V) => R,\n): Record<string, R> {\n  throw 'Not implemented';\n}"
  },
  "solution": "var Component=(()=>{var f=Object.create;var i=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var g=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),v=(t,e)=>{for(var o in e)i(t,o,{get:e[o],enumerable:!0})},a=(t,e,o,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of m(e))!k.call(t,c)&&c!==o&&i(t,c,{get:()=>e[c],enumerable:!(l=j(e,c))||l.enumerable});return t};var x=(t,e,o)=>(o=t!=null?f(y(t)):{},a(e||!t||!t.__esModule?i(o,\"default\",{value:t,enumerable:!0}):o,t)),O=t=>a(i({},\"__esModule\",{value:!0}),t);var h=g((D,s)=>{s.exports=_jsx_runtime});var F={};v(F,{default:()=>C});var n=x(h());var r=MDXCodeBlock;var d=`/**\n * @param {Object} obj\n * @param {Function} fn\n * @returns Object\n */\nexport default function objectMap(obj, fn) {\n  const result = {};\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      result[key] = fn.call(obj, obj[key]);\n    }\n  }\n\n  return result;\n}\n`;var u=`export default function objectMap<V, R>(\n  obj: Record<string, V>,\n  fn: (val: V) => R,\n): Record<string, R> {\n  const result: Record<string, R> = {};\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      result[key] = fn.call(obj, obj[key]);\n    }\n  }\n\n  return result;\n}\n`;var p=`/**\n * @param {Object} obj\n * @param {Function} fn\n * @returns Object\n */\nexport default function objectMap(obj, fn) {\n  return Object.fromEntries(\n    Object.entries(obj).map(([key, value]) => [key, fn.call(obj, value)]),\n  );\n}\n`;function b(t){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\",p:\"p\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"Clarification Questions\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Is the function being applied to values within nested objects?\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"The function only operates on the top level keys/values of the object.\"}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[\"What should the value of \",(0,n.jsx)(e.code,{children:\"this\"}),\" be within the callback function?\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"The input object.\"}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The only tricky part of the question is to provide the value of \",(0,n.jsx)(e.code,{children:\"this\"}),\" for the \",(0,n.jsx)(e.code,{children:\"fn\"}),\" via \",(0,n.jsx)(e.code,{children:\"Function.prototype.call()\"}),\"/\",(0,n.jsx)(e.code,{children:\"Function.prototype.apply()\"}),\". In \",(0,n.jsx)(e.code,{children:\"Array.prototype.map()\"}),\", the \",(0,n.jsx)(e.code,{children:\"thisArg\"}),\" value can be provided as a second argument to the \",(0,n.jsx)(e.code,{children:\".map()\"}),\" function and the callback function will the invoked with \",(0,n.jsx)(e.code,{children:\"thisArg\"}),\" as the \",(0,n.jsx)(e.code,{children:\"this\"}),\" value. In our case, the \",(0,n.jsx)(e.code,{children:\"this\"}),\" value within callbacks is not explicitly specified but a reasonable assumption is to use the \",(0,n.jsx)(e.code,{children:\"obj\"}),\" input as \",(0,n.jsx)(e.code,{children:\"this\"}),\".\"]}),`\n`,(0,n.jsx)(r,{languages:{jsx:d,tsx:u}}),`\n`,(0,n.jsx)(e.p,{children:\"A shorter solution that uses a more functional approach:\"}),`\n`,(0,n.jsx)(r,{children:p}),`\n`,(0,n.jsx)(e.h2,{children:\"Edge Cases\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Accessing \",(0,n.jsx)(e.code,{children:\"this\"}),\" within the callback function.\"]}),`\n`]})]})}function _(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(b,t)})):b(t)}var C=_;return O(F);})();\n;return Component;",
  "workspace": {
    "main": "/src/object-map.ts",
    "run": "/src/object-map.run.test.ts",
    "submit": "/src/object-map.submit.test.ts"
  }
}