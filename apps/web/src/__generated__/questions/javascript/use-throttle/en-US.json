{
  "description": "var Component=(()=>{var a=Object.create;var l=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var v=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),f=(t,e)=>{for(var o in e)l(t,o,{get:e[o],enumerable:!0})},s=(t,e,o,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of p(e))!x.call(t,i)&&i!==o&&l(t,i,{get:()=>e[i],enumerable:!(r=u(e,i))||r.enumerable});return t};var j=(t,e,o)=>(o=t!=null?a(m(t)):{},s(e||!t||!t.__esModule?l(o,\"default\",{value:t,enumerable:!0}):o,t)),g=t=>s(l({},\"__esModule\",{value:!0}),t);var h=v((b,c)=>{c.exports=_jsx_runtime});var P={};f(P,{default:()=>M,frontmatter:()=>T});var n=j(h()),T={title:\"useThrottle\",excerpt:\"Implement a hook that throttles a value\"};function d(t){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Implement a \",(0,n.jsx)(e.code,{children:\"useThrottle\"}),\" hook that delays \",(0,n.jsx)(e.code,{children:\"value\"}),\" state updates to happen at most every \",(0,n.jsx)(e.code,{children:\"interval\"}),\"-millisecond intervals.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`export default function Component() {\n  const [position, setPosition] = useState([0, 0]);\n  const throttledPosition = useThrottle(position, 1000);\n\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: throttledPosition[0],\n        left: throttledPosition[1],\n      }}\n      onMouseMove={(e) => setPosition([e.clientY, e.clientX])}\n    />\n  );\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Arguments\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"value\"}),\": The value to throttle\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"interval: number\"}),\": The interval in milliseconds. This defaults to 500 milliseconds\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Returns\"}),`\n`,(0,n.jsx)(e.p,{children:\"The hook returns the throttled value.\"})]})}function _(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(d,t)})):d(t)}var M=_;return g(P);})();\n;return Component;",
  "info": {
    "excerpt": "Implement a hook that throttles a value",
    "title": "useThrottle"
  },
  "solution": "var Component=(()=>{var m=Object.create;var a=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var v=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),w=(t,e)=>{for(var n in e)a(t,n,{get:e[n],enumerable:!0})},s=(t,e,n,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of p(e))!x.call(t,r)&&r!==n&&a(t,r,{get:()=>e[r],enumerable:!(l=f(e,r))||l.enumerable});return t};var j=(t,e,n)=>(n=t!=null?m(T(t)):{},s(e||!t||!t.__esModule?a(n,\"default\",{value:t,enumerable:!0}):n,t)),_=t=>s(a({},\"__esModule\",{value:!0}),t);var d=v((V,u)=>{u.exports=_jsx_runtime});var M={};w(M,{default:()=>D});var o=j(d());var c=MDXCodeBlock;var i=`import { useState, useRef, useEffect } from 'react';\n\nexport default function useThrottle<T>(value: T, interval = 500) {\n  const [throttledValue, setThrottledValue] = useState(value);\n  const lastUpdated = useRef<number>();\n\n  useEffect(() => {\n    const now = Date.now();\n\n    if (lastUpdated.current && now >= lastUpdated.current + interval) {\n      lastUpdated.current = now;\n      setThrottledValue(value);\n    } else {\n      const id = setTimeout(() => {\n        lastUpdated.current = now;\n        setThrottledValue(value);\n      }, interval);\n\n      return () => clearTimeout(id);\n    }\n  }, [value, interval]);\n\n  return throttledValue;\n}\n`;function h(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\"},t.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"The \",(0,o.jsx)(e.code,{children:\"useThrottle\"}),\" hook can be implemented by using \",(0,o.jsx)(e.code,{children:\"useRef\"}),\" to store the last updated time, and \",(0,o.jsx)(e.code,{children:\"useEffect\"}),\" to control when to update the state immediately or throttle it with \",(0,o.jsx)(e.code,{children:\"setTimeout\"}),\".\"]}),`\n`,(0,o.jsx)(c,{children:i})]})}function g(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(h,t)})):h(t)}var D=g;return _(M);})();\n;return Component;"
}