{
  "description": "var Component=(()=>{var h=Object.create;var o=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var x=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),g=(r,e)=>{for(var c in e)o(r,c,{get:e[c],enumerable:!0})},l=(r,e,c,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of p(e))!f.call(r,i)&&i!==c&&o(r,i,{get:()=>e[i],enumerable:!(d=u(e,i))||d.enumerable});return r};var j=(r,e,c)=>(c=r!=null?h(m(r)):{},l(e||!r||!r.__esModule?o(c,\"default\",{value:r,enumerable:!0}):c,r)),_=r=>l(o({},\"__esModule\",{value:!0}),r);var s=x((v,t)=>{t.exports=_jsx_runtime});var E={};g(E,{default:()=>D,frontmatter:()=>q});var n=j(s()),q={title:\"useQuery\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u7BA1\\u7406 promise \\u7ED3\\u679C\\u7684 hook\"};function a(r){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\",ul:\"ul\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A \",(0,n.jsx)(e.code,{children:\"useQuery\"}),\" hook\\uFF0C\\u7528\\u4E8E\\u7BA1\\u7406 promise \\u7ED3\\u679C\\uFF0C\\u53EF\\u7528\\u4E8E\\u83B7\\u53D6\\u6570\\u636E\\u3002\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`export default function Component({ param }) {\n  const request = useQuery(async () => {\n    const response = await getDataFromServer(param);\n    return response.data;\n  }, [param]);\n\n  return (\n    <div>\n      {request.loading && <p>Loading...</p>}\n      {request.error && <p>Error: {request.error.message}</p>}\n      {request.data && <p>Data: {request.data}</p>}\n    </div>\n  );\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u53C2\\u6570\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"fn: () => Promise\"}),\": \\u8FD4\\u56DE\\u4E00\\u4E2A promise \\u7684\\u51FD\\u6570\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"deps: DependencyList\"}),\": \\u4F9D\\u8D56\\u9879\\u6570\\u7EC4\\uFF0C\\u7C7B\\u4F3C\\u4E8E \",(0,n.jsx)(e.code,{children:\"useEffect\"}),\" \\u7684\\u7B2C\\u4E8C\\u4E2A\\u53C2\\u6570\\u3002\\u4E0E \",(0,n.jsx)(e.code,{children:\"useEffect\"}),\" \\u4E0D\\u540C\\u7684\\u662F\\uFF0C\\u5B83\\u9ED8\\u8BA4\\u4E3A \",(0,n.jsx)(e.code,{children:\"[]\"})]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8FD4\\u56DE\\u503C\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u8BE5 hook \\u8FD4\\u56DE\\u4E00\\u4E2A\\u5BF9\\u8C61\\uFF0C\\u8BE5\\u5BF9\\u8C61\\u5177\\u6709\\u4E0D\\u540C\\u7684\\u5C5E\\u6027\\uFF0C\\u5177\\u4F53\\u53D6\\u51B3\\u4E8E promise \\u7684\\u72B6\\u6001\\u3002\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5F85\\u5B9A:\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"status: 'loading'\"}),\": promise \\u4ECD\\u5728\\u5F85\\u5B9A\\u4E2D\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5DF2\\u62D2\\u7EDD:\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"status: 'error'\"}),\": promise \\u88AB\\u62D2\\u7EDD\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"error: Error\"}),\": \\u5BFC\\u81F4 promise \\u88AB\\u62D2\\u7EDD\\u7684\\u9519\\u8BEF\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5DF2\\u5B9E\\u73B0:\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"status: 'success'\"}),\": promise \\u5DF2\\u89E3\\u51B3\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"data\"}),\": \\u7531 \",(0,n.jsx)(e.code,{children:\"fn\"}),\" \\u8FD4\\u56DE\\u7684 promise \\u89E3\\u51B3\\u7684\\u6570\\u636E\"]}),`\n`]}),`\n`]}),`\n`]})]})}function y(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(a,r)})):a(r)}var D=y;return _(E);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/use-query\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/use-query.ts\",\n  \"dependencies\": {\n    \"@sinonjs/fake-timers\": \"14.0.0\",\n    \"@testing-library/react\": \"14.0.0\",\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"@types/react\": \"18.2.25\",\n    \"@types/react-dom\": \"18.2.10\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/use-query.run.test.ts": "import { renderHook, waitFor } from '@testing-library/react';\n\nimport useQuery from './use-query';\n\ndescribe('useQuery', () => {\n  test('return values', () => {\n    const { result } = renderHook(() => useQuery(async () => true));\n\n    expect(typeof result.current).toBe('object');\n    expect(result.current).toHaveProperty('status');\n  });\n\n  test('loading state', () => {\n    const { result } = renderHook(() => useQuery(async () => true));\n\n    expect(result.current.status).toBe('loading');\n  });\n\n  test('success state', async () => {\n    const { result } = renderHook(() => useQuery(async () => 10));\n\n    await waitFor(() => {\n      expect(result.current).toEqual({\n        status: 'success',\n        data: 10,\n      });\n    });\n  });\n\n  test('error state', async () => {\n    const error = new Error('error');\n\n    const { result } = renderHook(() =>\n      useQuery(async () => {\n        throw error;\n      }),\n    );\n\n    await waitFor(() => {\n      expect(result.current).toStrictEqual({\n        status: 'error',\n        error,\n      });\n    });\n  });\n});\n",
    "/src/use-query.submit.test.ts": "import { renderHook, waitFor } from '@testing-library/react';\nimport FakeTimers from '@sinonjs/fake-timers';\n\nimport useQuery from './use-query';\n\ndescribe('useQuery', () => {\n  test('return values', () => {\n    const { result } = renderHook(() => useQuery(async () => true));\n\n    expect(typeof result.current).toBe('object');\n    expect(result.current).toHaveProperty('status');\n  });\n\n  describe('states', () => {\n    test('loading', () => {\n      const { result } = renderHook(() => useQuery(async () => true));\n\n      expect(result.current.status).toBe('loading');\n    });\n\n    test('success', async () => {\n      const { result } = renderHook(() => useQuery<number>(async () => 10));\n\n      await waitFor(() => {\n        expect(result.current).toEqual({\n          status: 'success',\n          data: 10,\n        });\n      });\n    });\n\n    test('error', async () => {\n      const error = new Error('error');\n\n      const { result } = renderHook(() =>\n        useQuery(async () => {\n          throw error;\n        }),\n      );\n\n      await waitFor(() => {\n        expect(result.current).toStrictEqual({\n          status: 'error',\n          error,\n        });\n      });\n    });\n  });\n\n  describe('dependency array', () => {\n    test('sequential', async () => {\n      const { rerender, result } = renderHook(\n        ({ deps }) => useQuery(async () => deps, deps),\n        {\n          initialProps: { deps: [1] },\n        },\n      );\n\n      expect(result.current.status).toBe('loading');\n      await waitFor(() => {\n        expect(result.current).toEqual({\n          status: 'success',\n          data: [1],\n        });\n      });\n\n      rerender({ deps: [2] });\n      expect(result.current.status).toBe('loading');\n      await waitFor(() => {\n        expect(result.current).toEqual({\n          status: 'success',\n          data: [2],\n        });\n      });\n    });\n\n    test('overlapping', async () => {\n      const fn = jest.fn();\n      const clock = FakeTimers.createClock();\n\n      const { rerender, result } = renderHook(\n        ({ deps }) =>\n          useQuery(\n            () =>\n              new Promise((resolve) => {\n                fn();\n                clock.setTimeout(() => resolve(deps), 200);\n              }),\n            deps,\n          ),\n        {\n          initialProps: { deps: [1] },\n        },\n      );\n\n      expect(result.current.status).toBe('loading');\n\n      clock.tick(50);\n\n      rerender({ deps: [2] });\n      expect(result.current.status).toBe('loading');\n\n      clock.tick(300);\n\n      await waitFor(() => {\n        expect(fn).toHaveBeenCalledTimes(2);\n        expect(result.current).toEqual({\n          status: 'success',\n          data: [2],\n        });\n      });\n    });\n  });\n\n  describe('cancellation of outdated callbacks', () => {\n    test('first resolves after second', async () => {\n      const fn = jest.fn();\n      const clock = FakeTimers.createClock();\n\n      const { rerender, result } = renderHook(\n        ({ deps }) =>\n          useQuery(\n            () =>\n              new Promise((resolve) => {\n                fn();\n                clock.setTimeout(() => resolve(deps[0]), deps[0]);\n              }),\n            deps,\n          ),\n        {\n          initialProps: { deps: [500] },\n        },\n      );\n\n      expect(result.current.status).toBe('loading');\n\n      clock.tick(20);\n\n      rerender({ deps: [200] });\n      expect(result.current.status).toBe('loading');\n\n      clock.tick(1000);\n\n      await waitFor(() => {\n        expect(fn).toHaveBeenCalledTimes(2);\n        expect(result.current).toEqual({\n          status: 'success',\n          data: 200,\n        });\n      });\n    });\n\n    test('first rejects after second', async () => {\n      const fn = jest.fn();\n      const clock = FakeTimers.createClock();\n\n      const { rerender, result } = renderHook(\n        ({ deps }) =>\n          useQuery(\n            () =>\n              new Promise((resolve, reject) => {\n                fn();\n                clock.setTimeout(\n                  () => (deps[0] > 300 ? resolve(42) : reject(24)),\n                  deps[0],\n                );\n              }),\n            deps,\n          ),\n        {\n          initialProps: { deps: [400] },\n        },\n      );\n\n      expect(result.current.status).toBe('loading');\n\n      clock.tick(20);\n\n      rerender({ deps: [200] });\n      expect(result.current.status).toBe('loading');\n\n      clock.tick(1000);\n\n      await waitFor(() => {\n        expect(fn).toHaveBeenCalledTimes(2);\n        expect(result.current).toEqual({\n          status: 'error',\n          error: 24,\n        });\n      });\n    });\n  });\n\n  test('works with timer', async () => {\n    const fn = jest.fn();\n    const clock = FakeTimers.createClock();\n\n    const { result } = renderHook(() =>\n      useQuery(\n        () =>\n          new Promise((resolve) => {\n            fn();\n            clock.setTimeout(() => resolve(true), 1000);\n          }),\n      ),\n    );\n\n    expect(result.current.status).toBe('loading');\n\n    clock.tick(1200);\n\n    await waitFor(() => {\n      expect(fn).toHaveBeenCalled();\n      expect(result.current.status).toBe('success');\n    });\n  });\n\n  describe('handle unmounting', () => {\n    test('stale resolve', async () => {\n      const fn = jest.fn();\n      const clock = FakeTimers.createClock();\n\n      const { result, unmount } = renderHook(() =>\n        useQuery(\n          () =>\n            new Promise((resolve) => {\n              clock.setTimeout(() => {\n                fn();\n                resolve(true);\n              }, 1000);\n            }),\n        ),\n      );\n\n      expect(result.current.status).toBe('loading');\n\n      unmount();\n      clock.tick(1200);\n\n      await waitFor(() => {\n        expect(fn).toHaveBeenCalled();\n        expect(result.current.status).toBe('loading');\n      });\n    });\n\n    test('stale reject', async () => {\n      const fn = jest.fn();\n      const clock = FakeTimers.createClock();\n\n      const { result, unmount } = renderHook(() =>\n        useQuery(\n          () =>\n            new Promise((_, reject) => {\n              clock.setTimeout(() => {\n                fn();\n                reject(true);\n              }, 1000);\n            }),\n        ),\n      );\n\n      expect(result.current.status).toBe('loading');\n\n      unmount();\n      clock.tick(1200);\n\n      await waitFor(() => {\n        expect(fn).toHaveBeenCalled();\n        expect(result.current.status).toBe('loading');\n      });\n    });\n  });\n});\n",
    "/src/use-query.ts": "import { DependencyList, useEffect, useState } from 'react';\n\ntype AsyncState<T> =\n  | { status: 'loading' }\n  | { status: 'success'; data: T }\n  | { status: 'error'; error: Error };\n\nexport default function useQuery<T>(\n  fn: () => Promise<T>,\n  deps: DependencyList = [],\n): AsyncState<T> {\n  const [state, setState] = useState<AsyncState<T>>({\n    status: 'loading',\n  });\n\n  useEffect(() => {\n    let ignore = false;\n\n    setState({ status: 'loading' });\n\n    fn()\n      .then((data) => {\n        if (ignore) {\n          return;\n        }\n\n        setState({ status: 'success', data });\n      })\n      .catch((error) => {\n        if (ignore) {\n          return;\n        }\n\n        setState({ status: 'error', error });\n      });\n\n    return () => {\n      ignore = true;\n    };\n  }, deps);\n\n  return state;\n}\n"
  },
  "metadata": {
    "access": "free",
    "author": "phillmont",
    "companies": [],
    "created": 1742169600,
    "difficulty": "medium",
    "duration": 20,
    "excerpt": "实现一个管理 promise 结果的 hook",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": "react",
    "frameworks": [
      {
        "framework": "react",
        "href": "/questions/javascript/use-query"
      }
    ],
    "href": "/questions/javascript/use-query",
    "importance": "high",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "use-query",
    "subtitle": null,
    "title": "useQuery",
    "topics": [
      "react-hooks"
    ]
  },
  "skeleton": {
    "js": "/**\n * @template T\n * @param {() => Promise<T>} fn\n * @param {import(\"react\").DependencyList} deps\n */\nexport default function useQuery(fn, deps = []) {\n  throw 'Not implemented';\n}",
    "ts": "import { DependencyList } from 'react';\n\ntype AsyncState<T> =\n  | { status: 'loading' }\n  | { status: 'success'; data: T }\n  | { status: 'error'; error: Error };\n\nexport default function useQuery<T>(\n  fn: () => Promise<T>,\n  deps: DependencyList = [],\n): AsyncState<T> {\n  throw 'Not implemented';\n}"
  },
  "solution": "var Component=(()=>{var h=Object.create;var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var y=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),S=(t,e)=>{for(var n in e)c(t,n,{get:e[n],enumerable:!0})},a=(t,e,n,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of m(e))!x.call(t,s)&&s!==n&&c(t,s,{get:()=>e[s],enumerable:!(o=p(e,s))||o.enumerable});return t};var j=(t,e,n)=>(n=t!=null?h(g(t)):{},a(e||!t||!t.__esModule?c(n,\"default\",{value:t,enumerable:!0}):n,t)),_=t=>a(c({},\"__esModule\",{value:!0}),t);var d=y((X,i)=>{i.exports=_jsx_runtime});var M={};S(M,{default:()=>T});var r=j(d());var u=MDXCodeBlock;var f=`import { DependencyList, useEffect, useState } from 'react';\n\ntype AsyncState<T> =\n  | { status: 'loading' }\n  | { status: 'success'; data: T }\n  | { status: 'error'; error: Error };\n\nexport default function useQuery<T>(\n  fn: () => Promise<T>,\n  deps: DependencyList = [],\n): AsyncState<T> {\n  const [state, setState] = useState<AsyncState<T>>({\n    status: 'loading',\n  });\n\n  useEffect(() => {\n    let ignore = false;\n\n    setState({ status: 'loading' });\n\n    fn()\n      .then((data) => {\n        if (ignore) {\n          return;\n        }\n\n        setState({ status: 'success', data });\n      })\n      .catch((error) => {\n        if (ignore) {\n          return;\n        }\n\n        setState({ status: 'error', error });\n      });\n\n    return () => {\n      ignore = true;\n    };\n  }, deps);\n\n  return state;\n}\n`;function l(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",a:\"a\"},t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:\"useQuery\"}),\" \\u94A9\\u5B50\\u53EF\\u4EE5\\u4F7F\\u7528 \",(0,r.jsx)(e.code,{children:\"useEffect\"}),\" \\u5B9E\\u73B0\\uFF0C\\u4EE5\\u5F00\\u59CB promise \\u89E3\\u6790\\u5E76\\u76F8\\u5E94\\u5730\\u66F4\\u65B0\\u72B6\\u6001\\u3002\"]}),`\n`,(0,r.jsx)(e.p,{children:\"\\u8FD9\\u91CC\\u7684\\u6311\\u6218\\u5728\\u4E8E\\u610F\\u8BC6\\u5230 promise \\u89E3\\u6790\\u4E0E React \\u66F4\\u65B0\\u662F\\u5F02\\u6B65\\u7684\\uFF0C\\u56E0\\u6B64\\u5F53\\u4F9D\\u8D56\\u9879\\u5728\\u5F85\\u5904\\u7406\\u7684 promise \\u89E3\\u6790\\u4E4B\\u524D\\u53D1\\u751F\\u66F4\\u6539\\u65F6\\uFF0C\\u5B58\\u5728\\u7ADE\\u4E89\\u6761\\u4EF6\\u7684\\u53EF\\u80FD\\u6027\\u3002\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"\\u4E3A\\u4E86\\u9632\\u6B62\\u8FD9\\u79CD\\u60C5\\u51B5\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u4F7F\\u7528 \",(0,r.jsx)(e.code,{children:\"ignore\"}),\" \\u6807\\u5FD7\\u6765\\u5FFD\\u7565 promise \\u89E3\\u6790\\uFF08\\u5982\\u679C\\u5B83\\u4E0D\\u518D\\u76F8\\u5173\\uFF0C\\u4F8B\\u5982\\u4F9D\\u8D56\\u9879\\u5DF2\\u66F4\\u6539\\uFF0C\\u7EC4\\u4EF6\\u5DF2\\u88AB\\u5378\\u8F7D\\uFF09\\u3002\",(0,r.jsx)(e.code,{children:\"ignore\"}),\" \\u5728\\u51FD\\u6570\\u7684\\u95ED\\u5305\\u5185\\u521D\\u59CB\\u5316\\uFF1B\\u6BCF\\u6B21 \",(0,r.jsx)(e.code,{children:\"useEffect\"}),\" \\u8FD0\\u884C\\u65F6\\uFF0C\\u8BE5\\u51FD\\u6570\\u90FD\\u6709\\u5176\\u81EA\\u5DF1\\u7684 \",(0,r.jsx)(e.code,{children:\"ignore\"}),\" \\u5B9E\\u4F8B\\u53D8\\u91CF\\uFF0C\\u5E76\\u4E14\\u53EF\\u4EE5\\u5728 promise \\u89E3\\u6790\\u65F6\\u5F15\\u7528\\u5B83\\uFF0C\\u5E76\\u4E14\\u5B83\\u5FC5\\u987B\\u51B3\\u5B9A\\u662F\\u5426\\u4F7F\\u7528\\u7ED3\\u679C\\u3002\"]}),`\n`,(0,r.jsxs)(e.p,{children:[\"\\u8FD9\\u79CD\\u65B9\\u6CD5\\u5728 \",(0,r.jsx)(e.a,{href:\"https://react.dev/reference/react/useEffect#fetching-data-with-effects\",children:\"React \\u6587\\u6863\\u4E2D\\u5F97\\u5230\\u4E86\\u5F88\\u597D\\u7684\\u8BB0\\u5F55\"}),\"\\u3002\"]}),`\n`,(0,r.jsx)(u,{children:f})]})}function E(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(l,t)})):l(t)}var T=E;return _(M);})();\n;return Component;",
  "workspace": {
    "main": "/src/use-query.ts",
    "run": "/src/use-query.run.test.ts",
    "submit": "/src/use-query.submit.test.ts"
  }
}