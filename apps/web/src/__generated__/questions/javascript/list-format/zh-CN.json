{
  "description": "var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var B=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var J=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),g=(e,n)=>{for(var t in n)r(e,t,{get:n[t],enumerable:!0})},a=(e,n,t,l)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let i of m(n))!u.call(e,i)&&i!==t&&r(e,i,{get:()=>n[i],enumerable:!(l=B(n,i))||l.enumerable});return e};var F=(e,n,t)=>(t=e!=null?d(b(e)):{},a(n||!e||!e.__esModule?r(t,\"default\",{value:e,enumerable:!0}):t,e)),p=e=>a(r({},\"__esModule\",{value:!0}),e);var c=J((q,h)=>{h.exports=_jsx_runtime});var _={};g(_,{default:()=>j,frontmatter:()=>T});var o=F(c()),T={title:\"\\u5217\\u8868\\u683C\\u5F0F\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u51FD\\u6570\\uFF0C\\u5C06\\u9879\\u76EE\\u5217\\u8868\\u683C\\u5F0F\\u5316\\u4E3A\\u5355\\u4E2A\\u53EF\\u8BFB\\u5B57\\u7B26\\u4E32\"};function s(e){let n=Object.assign({p:\"p\",code:\"code\",ul:\"ul\",li:\"li\",h2:\"h2\",pre:\"pre\"},e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:[\"\\u7ED9\\u5B9A\\u4E00\\u4E2A\\u5B57\\u7B26\\u4E32\\u5217\\u8868\\uFF0C\\u5B9E\\u73B0\\u4E00\\u4E2A\\u51FD\\u6570 \",(0,o.jsx)(n.code,{children:\"listFormat\"}),\"\\uFF0C\\u8BE5\\u51FD\\u6570\\u8FD4\\u56DE\\u8FDE\\u63A5\\u6210\\u5355\\u4E2A\\u5B57\\u7B26\\u4E32\\u7684\\u9879\\u76EE\\u3002\\u4E00\\u4E2A\\u5E38\\u89C1\\u7684\\u7528\\u4F8B\\u662F\\u603B\\u7ED3\\u793E\\u4EA4\\u5A92\\u4F53\\u5E16\\u5B50\\u7684\\u53CD\\u5E94\\u3002\"]}),`\n`,(0,o.jsx)(n.p,{children:\"\\u8BE5\\u51FD\\u6570\\u5E94\\u652F\\u6301\\u51E0\\u4E2A\\u9009\\u9879\\u4F5C\\u4E3A\\u7B2C\\u4E8C\\u4E2A\\u53C2\\u6570\\uFF1A\"}),`\n`,(0,o.jsxs)(n.ul,{children:[`\n`,(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:\"sorted\"}),\"\\uFF1A\\u6309\\u5B57\\u6BCD\\u987A\\u5E8F\\u5BF9\\u9879\\u76EE\\u8FDB\\u884C\\u6392\\u5E8F\\u3002\"]}),`\n`,(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:\"length\"}),\"\\uFF1A\\u4EC5\\u663E\\u793A\\u524D \",(0,o.jsx)(n.code,{children:\"length\"}),\" \\u4E2A\\u9879\\u76EE\\uFF0C\\u5176\\u4F59\\u9879\\u76EE\\u4F7F\\u7528\\u201C\\u8FD8\\u6709 X \\u4E2A\\u201D\\u3002\\u5FFD\\u7565\\u65E0\\u6548\\u503C\\uFF08\\u8D1F\\u6570\\u30010 \\u7B49\\uFF09\\u3002\"]}),`\n`,(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:\"unique\"}),\"\\uFF1A\\u5220\\u9664\\u91CD\\u590D\\u7684\\u9879\\u76EE\\u3002\"]}),`\n`]}),`\n`,(0,o.jsx)(n.h2,{children:\"\\u4F8B\\u5B50\"}),`\n`,(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:\"language-js\",children:`listFormat([]); // ''\n\nlistFormat(['Bob']); // 'Bob'\nlistFormat(['Bob', 'Alice']); // 'Bob and Alice'\n\nlistFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John']);\n// 'Bob, Ben, Tim, Jane and John'\n\nlistFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John'], {\n  length: 3,\n}); // 'Bob, Ben, Tim and 2 others'\n\nlistFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John'], {\n  length: 4,\n}); // 'Bob, Ben, Tim, Jane and 1 other'\n\nlistFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John'], {\n  length: 3,\n  sorted: true,\n}); // 'Ben, Bob, Jane and 2 others'\n\nlistFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John', 'Bob'], {\n  length: 3,\n  unique: true,\n}); // 'Bob, Ben, Tim and 2 others'\n\nlistFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John'], {\n  length: 3,\n  unique: true,\n}); // 'Bob, Ben, Tim and 2 others'\n\nlistFormat(['Bob', 'Ben', '', '', 'John']); // 'Bob, Ben and John'\n`})})]})}function x(e={}){let{wrapper:n}=e.components||{};return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(s,e)})):s(e)}var j=x;return p(_);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/list-format\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/list-format.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/list-format.run.test.ts": "import listFormat from './list-format';\n\ndescribe('listFormat', () => {\n  test('empty', () => {\n    expect(listFormat([])).toEqual('');\n  });\n\n  test('one item', () => {\n    expect(listFormat(['Bob'])).toEqual('Bob');\n    expect(listFormat(['Bob'], { length: 2 })).toEqual('Bob');\n  });\n\n  test('two items', () => {\n    expect(listFormat(['Bob', 'Alice'])).toEqual('Bob and Alice');\n  });\n\n  test('many items', () => {\n    expect(listFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John'])).toEqual(\n      'Bob, Ben, Tim, Jane and John',\n    );\n  });\n});\n",
    "/src/list-format.submit.test.ts": "import listFormat from './list-format';\n\ndescribe('listFormat', () => {\n  test('empty', () => {\n    expect(listFormat([])).toEqual('');\n  });\n\n  test('one item', () => {\n    expect(listFormat(['Bob'])).toEqual('Bob');\n    expect(listFormat(['Bob'], { length: 2 })).toEqual('Bob');\n  });\n\n  test('two items', () => {\n    expect(listFormat(['Bob', 'Alice'])).toEqual('Bob and Alice');\n  });\n\n  test('many items', () => {\n    expect(listFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John'])).toEqual(\n      'Bob, Ben, Tim, Jane and John',\n    );\n  });\n\n  test('duplicate items', () => {\n    expect(listFormat(['Bob', 'Ben', 'Bob', 'Ben', 'John'])).toEqual(\n      'Bob, Ben, Bob, Ben and John',\n    );\n    expect(\n      listFormat(['Bob', 'Ben', 'Bob', 'Ben', 'John'], { sorted: true }),\n    ).toEqual('Ben, Ben, Bob, Bob and John');\n  });\n\n  test('length specified', () => {\n    expect(\n      listFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John'], { length: 3 }),\n    ).toEqual('Bob, Ben, Tim and 2 others');\n    expect(\n      listFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John'], { length: 4 }),\n    ).toEqual('Bob, Ben, Tim, Jane and 1 other');\n    expect(\n      listFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John'], { length: 100 }),\n    ).toEqual('Bob, Ben, Tim, Jane and John');\n    expect(\n      listFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John'], { length: 0 }),\n    ).toEqual('Bob, Ben, Tim, Jane and John');\n    expect(\n      listFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John'], { length: -1 }),\n    ).toEqual('Bob, Ben, Tim, Jane and John');\n  });\n\n  test('sorted items', () => {\n    expect(\n      listFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John'], {\n        length: 3,\n        sorted: true,\n      }),\n    ).toEqual('Ben, Bob, Jane and 2 others');\n    expect(\n      listFormat(['Bob', 'Ben', 'Bob', 'Ben', 'John'], {\n        length: 3,\n        sorted: true,\n      }),\n    ).toEqual('Ben, Ben, Bob and 2 others');\n  });\n\n  test('unique items', () => {\n    expect(\n      listFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John', 'Bob'], {\n        length: 3,\n        unique: true,\n      }),\n    ).toEqual('Bob, Ben, Tim and 2 others');\n  });\n\n  test('missing items', () => {\n    expect(listFormat(['Bob', 'Ben', '', '', 'John'])).toEqual(\n      'Bob, Ben and John',\n    );\n    expect(listFormat(['Bob', ''])).toEqual('Bob');\n    expect(listFormat(['', ''])).toEqual('');\n  });\n\n  test('all the options', () => {\n    expect(\n      listFormat(['Bob', 'Ben', 'Tim', 'Jane', 'John'], {\n        length: 3,\n        unique: true,\n        sorted: true,\n      }),\n    ).toEqual('Ben, Bob, Jane and 2 others');\n  });\n});\n",
    "/src/list-format.ts": "const SEPARATOR = ', ';\nconst OTHERS_SEPARATOR = ' and ';\nconst OTHERS_LABEL = 'other';\n\nexport default function listFormat(\n  itemsParam: Array<string>,\n  options?: { sorted?: boolean; length?: number; unique?: boolean },\n): string {\n  // Filter falsey values.\n  let items = itemsParam.filter((item) => !!item);\n\n  if (!items || items.length === 0) {\n    return '';\n  }\n\n  // No processing is needed if there's only one item.\n  if (items.length === 1) {\n    return items[0];\n  }\n\n  // Sort values.\n  if (options?.sorted) {\n    items.sort();\n  }\n\n  // Remove duplicate values.\n  if (options?.unique) {\n    items = Array.from(new Set(items));\n  }\n\n  // Length is specified and valid.\n  if (\n    options?.length &&\n    options?.length > 0 &&\n    options?.length < items.length\n  ) {\n    const firstSection = items.slice(0, options?.length).join(SEPARATOR);\n    const count = items.length - options?.length;\n    const secondSection = `${count} ${OTHERS_LABEL + (count > 1 ? 's' : '')}`;\n    return [firstSection, secondSection].join(OTHERS_SEPARATOR);\n  }\n\n  // Case where length is not specified.\n  const firstSection = items.slice(0, items.length - 1).join(SEPARATOR);\n  const secondSection = items[items.length - 1];\n  return [firstSection, secondSection].join(OTHERS_SEPARATOR);\n}\n"
  },
  "metadata": {
    "access": "standard",
    "author": "yangshun",
    "companies": [
      "dropbox"
    ],
    "created": 1652832000,
    "difficulty": "medium",
    "duration": 20,
    "excerpt": "实现一个函数，将项目列表格式化为单个可读字符串",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/list-format",
    "importance": "medium",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "list-format",
    "subtitle": null,
    "title": "列表格式",
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {Array<string>} items\n * @param {{sorted?: boolean, length?: number, unique?: boolean}} [options]\n * @return {string}\n */\nexport default function listFormat(items, options) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function listFormat(\n  items: Array<string>,\n  options?: { sorted?: boolean; length?: number; unique?: boolean },\n): string {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var u=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var S=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var A=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),E=(n,e)=>{for(var i in e)s(n,i,{get:e[i],enumerable:!0})},l=(n,e,i,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of g(e))!R.call(n,o)&&o!==i&&s(n,o,{get:()=>e[o],enumerable:!(r=f(e,o))||r.enumerable});return n};var O=(n,e,i)=>(i=n!=null?u(S(n)):{},l(e||!n||!n.__esModule?s(i,\"default\",{value:n,enumerable:!0}):i,n)),T=n=>l(s({},\"__esModule\",{value:!0}),n);var d=A((x,c)=>{c.exports=_jsx_runtime});var b={};E(b,{default:()=>L});var t=O(d());var m=MDXCodeBlock;var a=`const SEPARATOR = ', ';\nconst OTHERS_SEPARATOR = ' and ';\nconst OTHERS_LABEL = 'other';\n\n/**\n * @param {Array<string>} itemsParam\n * @param {{sorted?: boolean, length?: number, unique?: boolean}} [options]\n * @return {string}\n */\nexport default function listFormat(itemsParam, options = {}) {\n  // Filter falsey values.\n  let items = itemsParam.filter((item) => !!item);\n\n  if (!items || items.length === 0) {\n    return '';\n  }\n\n  // No processing is needed if there's only one item.\n  if (items.length === 1) {\n    return items[0];\n  }\n\n  // Sort values.\n  if (options.sorted) {\n    items.sort();\n  }\n\n  // Remove duplicate values.\n  if (options.unique) {\n    items = Array.from(new Set(items));\n  }\n\n  // Length is specified and valid.\n  if (options.length && options.length > 0 && options.length < items.length) {\n    const firstSection = items.slice(0, options.length).join(SEPARATOR);\n    const count = items.length - options.length;\n    const secondSection = \\`\\${count} \\${OTHERS_LABEL + (count > 1 ? 's' : '')}\\`;\n    return [firstSection, secondSection].join(OTHERS_SEPARATOR);\n  }\n\n  // Case where length is not specified.\n  const firstSection = items.slice(0, items.length - 1).join(SEPARATOR);\n  const secondSection = items[items.length - 1];\n  return [firstSection, secondSection].join(OTHERS_SEPARATOR);\n}\n`;var h=`const SEPARATOR = ', ';\nconst OTHERS_SEPARATOR = ' and ';\nconst OTHERS_LABEL = 'other';\n\nexport default function listFormat(\n  itemsParam: Array<string>,\n  options?: { sorted?: boolean; length?: number; unique?: boolean },\n): string {\n  // Filter falsey values.\n  let items = itemsParam.filter((item) => !!item);\n\n  if (!items || items.length === 0) {\n    return '';\n  }\n\n  // No processing is needed if there's only one item.\n  if (items.length === 1) {\n    return items[0];\n  }\n\n  // Sort values.\n  if (options?.sorted) {\n    items.sort();\n  }\n\n  // Remove duplicate values.\n  if (options?.unique) {\n    items = Array.from(new Set(items));\n  }\n\n  // Length is specified and valid.\n  if (\n    options?.length &&\n    options?.length > 0 &&\n    options?.length < items.length\n  ) {\n    const firstSection = items.slice(0, options?.length).join(SEPARATOR);\n    const count = items.length - options?.length;\n    const secondSection = \\`\\${count} \\${OTHERS_LABEL + (count > 1 ? 's' : '')}\\`;\n    return [firstSection, secondSection].join(OTHERS_SEPARATOR);\n  }\n\n  // Case where length is not specified.\n  const firstSection = items.slice(0, items.length - 1).join(SEPARATOR);\n  const secondSection = items[items.length - 1];\n  return [firstSection, secondSection].join(OTHERS_SEPARATOR);\n}\n`;function p(n){let e=Object.assign({p:\"p\",a:\"a\",code:\"code\",h2:\"h2\",ol:\"ol\",li:\"li\",ul:\"ul\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[\"\\u8FD9\\u4E2A\\u95EE\\u9898\\u53D7\\u5230 \",(0,t.jsxs)(e.a,{href:\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/format\",children:[(0,t.jsx)(e.code,{children:\"Intl.ListFormat.prototype.format()\"}),\" API\"]}),\" \\u7684\\u542F\\u53D1\\uFF0C\\u8BE5 API \\u534F\\u52A9\\u8FDB\\u884C\\u7279\\u5B9A\\u4E8E\\u8BED\\u8A00\\u7684\\u5217\\u8868\\u683C\\u5F0F\\u5316\\u3002\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,t.jsx)(e.p,{children:\"\\u901A\\u8FC7\\u67E5\\u770B\\u793A\\u4F8B\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u5C06\\u89E3\\u51B3\\u65B9\\u6848\\u5206\\u6210\\u4E24\\u90E8\\u5206\\uFF1A\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsx)(e.li,{children:\"\\u5904\\u7406\\u8F93\\u5165\\u5217\\u8868 \\u2013 \\u79FB\\u9664\\u7A7A\\u503C\\u3001\\u6392\\u5E8F\\u3001\\u53BB\\u91CD\"}),`\n`,(0,t.jsx)(e.li,{children:\"\\u5C06\\u9879\\u76EE\\u683C\\u5F0F\\u5316\\u4E3A\\u7B2C\\u4E8C\\u4E2A\\u5B57\\u7B26\\u4E32\"}),`\n`]}),`\n`,(0,t.jsxs)(e.p,{children:[\"\\u7B2C\\u4E00\\u90E8\\u5206\\u975E\\u5E38\\u7B80\\u5355\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u53EA\\u7EF4\\u62A4\\u4E00\\u4E2A \",(0,t.jsx)(e.code,{children:\"items\"}),\" \\u6570\\u7EC4\\uFF0C\\u6839\\u636E \",(0,t.jsx)(e.code,{children:\"options\"}),\" \\u5BF9\\u5176\\u8FDB\\u884C\\u4FEE\\u6539\\u3002\"]}),`\n`,(0,t.jsx)(e.p,{children:\"\\u7B2C\\u4E8C\\u90E8\\u5206\\u7A0D\\u5FAE\\u590D\\u6742\\u4E00\\u4E9B\\uFF0C\\u4F46\\u6211\\u4EEC\\u53EF\\u4EE5\\u89C2\\u5BDF\\u5230\\u4EE5\\u4E0B\\u51E0\\u70B9\\uFF1A\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"length\"}),\" \\u9009\\u9879\\u5C06\\u6570\\u7EC4\\u5206\\u6210\\u4E24\\u90E8\\u5206\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"\\u7B2C\\u4E00\\u90E8\\u5206\\u5C06\\u7528 \",(0,t.jsx)(e.code,{children:\"', '\"}),\" \\u8FDE\\u63A5\\uFF0C\\u7B2C\\u4E8C\\u90E8\\u5206\\u5C06\\u7528 \",(0,t.jsx)(e.code,{children:\"'and'\"}),\" \\u8FDE\\u63A5\\u3002\\u662F\\u5426\\u663E\\u793A \",(0,t.jsx)(e.code,{children:\"'X other(s)'\"}),\" \\u53D6\\u51B3\\u4E8E \",(0,t.jsx)(e.code,{children:\"length\"}),\" \\u503C\\u662F\\u5426\\u5728 \",(0,t.jsx)(e.code,{children:\"[1, items.length]\"}),\" \\u8303\\u56F4\\u5185\\u6709\\u6548\"]}),`\n`]}),`\n`,(0,t.jsx)(m,{languages:{jsx:a,tsx:h}}),`\n`,(0,t.jsx)(e.h2,{children:\"\\u7B14\\u8BB0\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"\\u6B64\\u51FD\\u6570\\u4E0D\\u5982 \",(0,t.jsx)(e.code,{children:\"Intl.ListFormat.prototype.format()\"}),\" API \\u53EF\\u7528\\uFF0C\\u56E0\\u4E3A\\u5206\\u9694\\u7B26\\u5728\\u82F1\\u8BED\\u4E2D\\u662F\\u786C\\u7F16\\u7801\\u7684\\u3002 \",(0,t.jsx)(e.code,{children:\"Intl\"}),\" API \\u4E3B\\u8981\\u662F\\u7528\\u4E8E\\u56FD\\u9645\\u5316 (i18n)\\uFF0C\\u5E76\\u4E14\\u8FD8\\u5141\\u8BB8\\u81EA\\u5B9A\\u4E49\\u5206\\u9694\\u7B26\\uFF08\\u9017\\u53F7\\u548C \",(0,t.jsx)(e.code,{children:\"and\"}),\"\\uFF09\\uFF0C\\u56E0\\u6B64\\u5982\\u679C\\u6B64\\u51FD\\u6570\\u7528\\u4E8E\\u751F\\u4EA7\\u73AF\\u5883\\uFF0C\\u5219\\u4E0D\\u5E94\\u6709\\u4EFB\\u4F55\\u5206\\u9694\\u7B26\\u7684\\u786C\\u7F16\\u7801\\u3002\"]}),`\n`,(0,t.jsx)(e.p,{children:\"\\u4E3A\\u4E86\\u4F7F\\u6B64\\u51FD\\u6570\\u66F4\\u597D\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u5141\\u8BB8\\u81EA\\u5B9A\\u4E49\\u5217\\u8868\\u5206\\u9694\\u7B26\\u548C\\u201C\\u5176\\u4ED6\\u201D\\u5206\\u9694\\u7B26\\u3002\"}),`\n`,(0,t.jsx)(e.h2,{children:\"\\u8D44\\u6E90\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsxs)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat\",children:[(0,t.jsx)(e.code,{children:\"Intl.ListFormat\"}),\" MDN\"]})}),`\n`]})]})}function j(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(p,n)})):p(n)}var L=j;return T(b);})();\n;return Component;",
  "workspace": {
    "main": "/src/list-format.ts",
    "run": "/src/list-format.run.test.ts",
    "submit": "/src/list-format.submit.test.ts"
  }
}