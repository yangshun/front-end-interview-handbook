{
  "description": "var Component=(()=>{var h=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),g=(t,e)=>{for(var o in e)i(t,o,{get:e[o],enumerable:!0})},c=(t,e,o,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of m(e))!b.call(t,l)&&l!==o&&i(t,l,{get:()=>e[l],enumerable:!(a=u(e,l))||a.enumerable});return t};var x=(t,e,o)=>(o=t!=null?h(p(t)):{},c(e||!t||!t.__esModule?i(o,\"default\",{value:t,enumerable:!0}):o,t)),v=t=>c(i({},\"__esModule\",{value:!0}),t);var r=f((B,d)=>{d.exports=_jsx_runtime});var T={};g(T,{default:()=>w,frontmatter:()=>j});var n=x(r()),j={title:\"useBoolean\",excerpt:\"Implement a hook that manages a boolean state, with additional convenience utility methods\"};function s(t){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ul:\"ul\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Implement a \",(0,n.jsx)(e.code,{children:\"useBoolean\"}),\" hook that manages a boolean state, with additional convenience utility methods.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`export default function Component() {\n  const { value, setTrue, setFalse } = useBoolean();\n\n  return (\n    <div>\n      <p>{value ? 'enabled' : 'disabled'}</p>\n      <button onClick={toggle}>Toggle</button>\n    </div>\n  );\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Arguments\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"initialValue: boolean\"}),\": Initial value of the boolean state. If not provided, it should default to \",(0,n.jsx)(e.code,{children:\"false\"}),\".\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Returns\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"useBoolean\"}),\" hook returns an \",(0,n.jsx)(e.code,{children:\"object\"}),\" with the following properties.\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"value: boolean\"}),\": The current boolean state\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"setTrue: () => void\"}),\": A function to set the boolean state to \",(0,n.jsx)(e.code,{children:\"true\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"setFalse: () => void\"}),\": A function to set the boolean state to \",(0,n.jsx)(e.code,{children:\"false\"})]}),`\n`]})]})}function _(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(s,t)})):s(t)}var w=_;return v(T);})();\n;return Component;",
  "info": {
    "excerpt": "Implement a hook that manages a boolean state, with additional convenience utility methods",
    "title": "useBoolean"
  },
  "solution": "var Component=(()=>{var h=Object.create;var s=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var V=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var B=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),j=(t,e)=>{for(var n in e)s(t,n,{get:e[n],enumerable:!0})},u=(t,e,n,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of x(e))!b.call(t,a)&&a!==n&&s(t,a,{get:()=>e[a],enumerable:!(l=p(e,a))||l.enumerable});return t};var v=(t,e,n)=>(n=t!=null?h(V(t)):{},u(e||!t||!t.__esModule?s(n,\"default\",{value:t,enumerable:!0}):n,t)),g=t=>u(s({},\"__esModule\",{value:!0}),t);var i=B((C,r)=>{r.exports=_jsx_runtime});var M={};j(M,{default:()=>_});var o=v(i());var c=MDXCodeBlock;var d=`import { useState } from 'react';\n\nexport default function useBoolean(initialValue = false) {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setTrue: () => setValue(true),\n    setFalse: () => setValue(false),\n  };\n}\n`;var f=`import { useState } from 'react';\n\ntype UseBooleanReturn = {\n  /** The current boolean state value. */\n  value: boolean;\n  /** Function to set the boolean state to \\`true\\`. */\n  setTrue: () => void;\n  /** Function to set the boolean state to \\`false\\`. */\n  setFalse: () => void;\n};\n\nexport default function useBoolean(initialValue = false): UseBooleanReturn {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setTrue: () => setValue(true),\n    setFalse: () => setValue(false),\n  };\n}\n`;function m(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\"},t.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"The \",(0,o.jsx)(e.code,{children:\"useBoolean\"}),\" hook uses \",(0,o.jsx)(e.code,{children:\"useState\"}),\" to manage the boolean state. The setter functions can be implemented in terms of \",(0,o.jsx)(e.code,{children:\"setValue\"}),\" from the \",(0,o.jsx)(e.code,{children:\"useState\"}),\" hook, bound by \",(0,o.jsx)(e.code,{children:\"true\"}),\" and \",(0,o.jsx)(e.code,{children:\"false\"}),\".\"]}),`\n`,(0,o.jsx)(c,{languages:{jsx:d,tsx:f}})]})}function T(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(m,t)})):m(t)}var _=T;return g(M);})();\n;return Component;"
}