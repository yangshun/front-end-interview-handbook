{
  "description": "var Component=(()=>{var p=Object.create;var d=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var j=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),m=(n,e)=>{for(var o in e)d(n,o,{get:e[o],enumerable:!0})},a=(n,e,o,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of h(e))!x.call(n,r)&&r!==o&&d(n,r,{get:()=>e[r],enumerable:!(t=u(e,r))||t.enumerable});return n};var f=(n,e,o)=>(o=n!=null?p(b(n)):{},a(e||!n||!n.__esModule?d(o,\"default\",{value:n,enumerable:!0}):o,n)),M=n=>a(d({},\"__esModule\",{value:!0}),n);var s=j((v,l)=>{l.exports=_jsx_runtime});var y={};m(y,{default:()=>O,frontmatter:()=>_});var c=f(s()),_={title:\"\\u6DF1\\u5EA6\\u6620\\u5C04\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u9012\\u5F52\\u8F6C\\u6362\\u503C\\u7684\\u51FD\\u6570\"};function i(n){let e=Object.assign({p:\"p\",code:\"code\",h2:\"h2\",pre:\"pre\"},n.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(e.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u51FD\\u6570 \",(0,c.jsx)(e.code,{children:\"deepMap(value, fn)\"}),\"\\uFF0C\\u8FD4\\u56DE\\u4E00\\u4E2A\\u65B0\\u503C\\uFF0C\\u5176\\u4E2D\\u5305\\u542B\\u5BF9 \",(0,c.jsx)(e.code,{children:\"value\"}),\" \\u8F93\\u5165\\u4E2D\\u6BCF\\u4E2A\\u975E \",(0,c.jsx)(e.code,{children:\"Array\"}),\" \\u548C\\u975E \",(0,c.jsx)(e.code,{children:\"Object\"}),\" \\u5143\\u7D20\\u8C03\\u7528\\u6240\\u63D0\\u4F9B\\u51FD\\u6570\\u7684\\u7ED3\\u679C\\uFF0C\\u5305\\u62EC\\u5D4C\\u5957\\u7684 \",(0,c.jsx)(e.code,{children:\"Array\"}),\" \\u548C \",(0,c.jsx)(e.code,{children:\"Object\"}),\" \\u4E2D\\u7684\\u5143\\u7D20\\u3002 \\u51FD\\u6570 \",(0,c.jsx)(e.code,{children:\"fn\"}),\" \\u4F7F\\u7528\\u5355\\u4E2A\\u53C2\\u6570\\u8C03\\u7528\\uFF0C\\u5373\\u6B63\\u5728\\u6620\\u5C04/\\u8F6C\\u6362\\u7684\\u5143\\u7D20\\u3002\"]}),`\n`,(0,c.jsx)(e.h2,{children:\"\\u4F8B\\u5B50\"}),`\n`,(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:\"language-js\",children:`const double = (x) => x * 2;\n\ndeepMap(2, double); // 4\ndeepMap([1, 2, 3], double); // [4, 5, 6]\ndeepMap({ a: 1, b: 2, c: 3 }, double); // { a: 2, b: 4, c: 6 }\ndeepMap(\n  {\n    foo: 1,\n    bar: [2, 3, 4],\n    qux: { a: 5, b: 6 },\n  },\n  double,\n); // => { foo: 2, bar: [4, 6, 8], qux: { a: 10, b: 12 } }\n`})})]})}function g(n={}){let{wrapper:e}=n.components||{};return e?(0,c.jsx)(e,Object.assign({},n,{children:(0,c.jsx)(i,n)})):i(n)}var O=g;return M(y);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/deep-map\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/deep-map.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"esnext\"],\n    \"jsx\": \"react-jsx\"\n  }\n}\n",
    "/src/deep-map.run.test.ts": "import deepMap from './deep-map';\n\nconst identity = <T>(x: T) => x;\nconst square = (x: number) => x * x;\nconst double = (x: number) => x * 2;\n\ndescribe('deepMap', () => {\n  test('numbers', () => {\n    expect(deepMap(3, square)).toBe(9);\n    expect(deepMap(3, double)).toBe(6);\n  });\n\n  test('arrays', () => {\n    expect(deepMap([-4, 10], identity)).toEqual([-4, 10]);\n    expect(deepMap([-4, 10], square)).toEqual([16, 100]);\n  });\n\n  test('objects', () => {\n    expect(deepMap({ foo: 3, bar: [7, 5] }, double)).toEqual({\n      foo: 6,\n      bar: [14, 10],\n    });\n  });\n});\n",
    "/src/deep-map.submit.test.ts": "import deepMap from './deep-map';\n\nconst identity = <T>(x: T) => x;\nconst dummy = () => 'dummy';\nconst square = (x: number) => x * x;\nconst negate = (x: boolean) => !x;\nconst length = (x: { length: number }) => x.length;\nconst double = (x: number) => x * 2;\n\ndescribe('deepMap', () => {\n  describe('primitives', () => {\n    test('numbers', () => {\n      expect(deepMap(3, square)).toBe(9);\n      expect(deepMap(3, double)).toBe(6);\n    });\n\n    test('boolean', () => {\n      expect(deepMap(true, negate)).toBe(false);\n      expect(deepMap(false, negate)).toBe(true);\n    });\n\n    test('strings', () => {\n      expect(deepMap('hello', length)).toBe(5);\n      expect(deepMap('byebye', length)).toBe(6);\n    });\n\n    test('null', () => {\n      expect(deepMap(null, identity)).toBe(null);\n    });\n  });\n\n  describe('non-primitives', () => {\n    test('regexp', () => {\n      expect(deepMap(/hello/, dummy)).toBe('dummy');\n    });\n\n    test('functions', () => {\n      expect(deepMap(() => {}, dummy)).toBe('dummy');\n    });\n  });\n\n  describe('arrays', () => {\n    test('empty array', () => {\n      expect(deepMap([], identity)).toEqual([]);\n      expect(deepMap([], square)).toEqual([]);\n    });\n\n    test('one value', () => {\n      expect(deepMap([10], identity)).toEqual([10]);\n      expect(deepMap([10], square)).toEqual([100]);\n    });\n\n    test('two values', () => {\n      expect(deepMap([-4, 10], identity)).toEqual([-4, 10]);\n      expect(deepMap([-4, 10], square)).toEqual([16, 100]);\n    });\n\n    test('multiple values', () => {\n      expect(deepMap([1, 2, 3, 4], identity)).toEqual([1, 2, 3, 4]);\n      expect(deepMap([1, 2, 3, 4, 5], square)).toEqual([1, 4, 9, 16, 25]);\n    });\n\n    test('nested objects', () => {\n      expect(deepMap([2, { foo: 3 }], double)).toEqual([4, { foo: 6 }]);\n      expect(deepMap([2, { foo: 3 }], square)).toEqual([4, { foo: 9 }]);\n    });\n\n    test('nested arrays', () => {\n      expect(deepMap([2, [3, [4]]], double)).toEqual([4, [6, [8]]]);\n      expect(deepMap([2, [3, [4]]], square)).toEqual([4, [9, [16]]]);\n    });\n\n    test('does not mutate the input', () => {\n      const obj = [3, 2];\n      expect(deepMap(obj, double)).toEqual([6, 4]);\n      expect(obj).toEqual([3, 2]);\n    });\n  });\n\n  describe('objects', () => {\n    test('empty', () => {\n      expect(deepMap({}, double)).toEqual({});\n    });\n\n    test('single key', () => {\n      expect(deepMap({ foo: 2 }, double)).toEqual({ foo: 4 });\n    });\n\n    test('multiple keys', () => {\n      expect(deepMap({ foo: 2, bar: 3 }, double)).toEqual({ foo: 4, bar: 6 });\n    });\n\n    test('nested objects', () => {\n      expect(deepMap({ foo: 3, bar: { baz: 5, qux: 6 } }, identity)).toEqual({\n        foo: 3,\n        bar: {\n          baz: 5,\n          qux: 6,\n        },\n      });\n      expect(deepMap({ foo: 3, bar: { baz: 5, qux: 6 } }, double)).toEqual({\n        foo: 6,\n        bar: {\n          baz: 10,\n          qux: 12,\n        },\n      });\n    });\n\n    test('nested arrays', () => {\n      expect(deepMap({ foo: 3, bar: [7, 5] }, identity)).toEqual({\n        foo: 3,\n        bar: [7, 5],\n      });\n      expect(deepMap({ foo: 3, bar: [7, 5] }, double)).toEqual({\n        foo: 6,\n        bar: [14, 10],\n      });\n    });\n\n    test('does not mutate the input', () => {\n      const obj = { bar: 3, foo: 2 };\n      expect(deepMap(obj, double)).toEqual({\n        foo: 4,\n        bar: 6,\n      });\n      expect(obj).toEqual({\n        foo: 2,\n        bar: 3,\n      });\n    });\n  });\n\n  test('can access `this`', () => {\n    expect(\n      deepMap({ bar: 3, foo: 2 }, function (this: any, x: number) {\n        return this.foo * x;\n      }),\n    ).toEqual({\n      foo: 4,\n      bar: 6,\n    });\n  });\n});\n",
    "/src/deep-map.ts": "export default function deepMap(value: unknown, fn: Function): unknown {\n  return mapHelper(value, fn, value);\n}\n\nfunction isPlainObject(value: unknown): boolean {\n  if (value == null) {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.prototype;\n}\n\nfunction mapHelper(element: unknown, fn: Function, original: unknown): unknown {\n  // Handle arrays.\n  if (Array.isArray(element)) {\n    return element.map((item) => mapHelper(item, fn, original));\n  }\n\n  // Handle plain objects.\n  if (isPlainObject(element)) {\n    return Object.fromEntries(\n      Object.entries(element as Object).map(([key, value]) => [\n        key,\n        mapHelper(value, fn, original),\n      ]),\n    );\n  }\n\n  // Handle other types.\n  return fn.call(original, element);\n}\n"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [],
    "created": 1690761600,
    "difficulty": "medium",
    "duration": 25,
    "excerpt": "实现一个递归转换值的函数",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/deep-map",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "array-map",
      "object-map"
    ],
    "slug": "deep-map",
    "subtitle": null,
    "title": "深度映射",
    "topics": [
      "recursion"
    ]
  },
  "skeleton": {
    "js": "/**\n * @param {any} value\n * @param {Function} fn\n * @returns any\n */\nexport default function deepMap(value, fn) {\n  throw 'Not implemented';\n}",
    "ts": "export default function deepMap(value: unknown, fn: Function): unknown {\n  throw 'Not implemented';\n}"
  },
  "solution": "var Component=(()=>{var m=Object.create;var t=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var v=(l,e)=>()=>(e||l((e={exports:{}}).exports,e),e.exports),b=(l,e)=>{for(var r in e)t(l,r,{get:e[r],enumerable:!0})},o=(l,e,r,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of y(e))!g.call(l,i)&&i!==r&&t(l,i,{get:()=>e[i],enumerable:!(c=f(e,i))||c.enumerable});return l};var O=(l,e,r)=>(r=l!=null?m(j(l)):{},o(e||!l||!l.__esModule?t(r,\"default\",{value:l,enumerable:!0}):r,l)),H=l=>o(t({},\"__esModule\",{value:!0}),l);var a=v((P,d)=>{d.exports=_jsx_runtime});var w={};b(w,{default:()=>A});var n=O(a());var p=MDXCodeBlock;var h=`/**\n * @param {any} value\n * @param {Function} fn\n * @returns any\n */\nexport default function deepMap(value, fn) {\n  return mapHelper(value, fn, value);\n}\n\nfunction isPlainObject(value) {\n  if (value == null) {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.prototype;\n}\n\nfunction mapHelper(element, fn, original) {\n  // Handle arrays.\n  if (Array.isArray(element)) {\n    return element.map((item) => mapHelper(item, fn, original));\n  }\n\n  // Handle plain objects.\n  if (isPlainObject(element)) {\n    return Object.fromEntries(\n      Object.entries(element).map(([key, value]) => [\n        key,\n        mapHelper(value, fn, original),\n      ]),\n    );\n  }\n\n  // Handle other types.\n  return fn.call(original, element);\n}\n`;var u=`export default function deepMap(value: unknown, fn: Function): unknown {\n  return mapHelper(value, fn, value);\n}\n\nfunction isPlainObject(value: unknown): boolean {\n  if (value == null) {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.prototype;\n}\n\nfunction mapHelper(element: unknown, fn: Function, original: unknown): unknown {\n  // Handle arrays.\n  if (Array.isArray(element)) {\n    return element.map((item) => mapHelper(item, fn, original));\n  }\n\n  // Handle plain objects.\n  if (isPlainObject(element)) {\n    return Object.fromEntries(\n      Object.entries(element as Object).map(([key, value]) => [\n        key,\n        mapHelper(value, fn, original),\n      ]),\n    );\n  }\n\n  // Handle other types.\n  return fn.call(original, element);\n}\n`;function s(l){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\",p:\"p\",ol:\"ol\",strong:\"strong\",a:\"a\"},l.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"\\u6F84\\u6E05\\u95EE\\u9898\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u6211\\u4EEC\\u5E94\\u8BE5\\u9012\\u5F52\\u5230 \",(0,n.jsx)(e.code,{children:\"Map\"}),\" \\u548C \",(0,n.jsx)(e.code,{children:\"Set\"}),\" \\u5417\\uFF1F\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u4E3A\\u4E86\\u7B80\\u5316\\u95EE\\u9898\\uFF0C\\u4E0D\\u3002\\u6CA1\\u6709\\u5305\\u542B \",(0,n.jsx)(e.code,{children:\"Map\"}),\" \\u548C \",(0,n.jsx)(e.code,{children:\"Set\"}),\" \\u7684\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF0C\\u4F46\\u5982\\u679C\\u60A8\\u613F\\u610F\\uFF0C\\u53EF\\u4EE5\\u81EA\\u7531\\u6DFB\\u52A0\\u652F\\u6301\\u3002\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u56DE\\u8C03\\u51FD\\u6570\\u4E2D \",(0,n.jsx)(e.code,{children:\"this\"}),\" \\u7684\\u503C\\u5E94\\u8BE5\\u662F\\u4EC0\\u4E48\\uFF1F\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u8F93\\u5165 \",(0,n.jsx)(e.code,{children:\"value\"}),\"\\u3002\"]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u7531\\u4E8E\\u8F93\\u5165 \",(0,n.jsx)(e.code,{children:\"value\"}),\" \\u53EF\\u4EE5\\u662F\\u4E00\\u4E2A\\u6DF1\\u5EA6\\u5D4C\\u5957\\u7684\\u7ED3\\u6784\\uFF0C\\u9012\\u5F52\\u89E3\\u51B3\\u65B9\\u6848\\u5C06\\u6709\\u52A9\\u4E8E\\u904D\\u5386\\u5D4C\\u5957\\u503C\\u3002 \\u6211\\u4EEC\\u7684\\u60F3\\u6CD5\\u662F\\u9012\\u5F52\\u5730\\u8BBF\\u95EE \",(0,n.jsx)(e.code,{children:\"value\"}),\" \\u4E2D\\u7684\\u6240\\u6709\\u5143\\u7D20\\uFF0C\\u5E76\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"fn\"}),\" \\u51FD\\u6570\\u8F6C\\u6362\\u6BCF\\u4E2A\\u5143\\u7D20\\uFF0C\\u9664\\u975E\\u8BE5\\u5143\\u7D20\\u662F \",(0,n.jsx)(e.code,{children:\"Array\"}),\" \\u6216 \",(0,n.jsx)(e.code,{children:\"Object\"}),\"\\uFF0C\\u5426\\u5219\\u9700\\u8981\\u8FDB\\u884C\\u9012\\u5F52\\u3002\"]}),`\n`,(0,n.jsx)(e.p,{children:\"\\u7531\\u4E8E\\u6570\\u7EC4\\u548C\\u5BF9\\u8C61\\u9700\\u8981\\u7279\\u6B8A\\u5904\\u7406\\uFF0C\\u6211\\u4EEC\\u9700\\u8981\\u5904\\u7406\\u4E09\\u79CD\\u7C7B\\u578B\\u7684\\u503C\\uFF1A\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"\\u6570\\u7EC4\"}),\"\\uFF1A\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"Array.isArray()\"}),\" \\u68C0\\u67E5\\u6B64\\u7C7B\\u578B\\u3002 \\u904D\\u5386\\u6570\\u7EC4\\u5E76\\u8FD4\\u56DE\\u6BCF\\u4E2A\\u6620\\u5C04\\u5143\\u7D20\\u7684\\u65B0\\u6570\\u7EC4\\u3002 \\u4F46\\u662F\\uFF0C\\u6211\\u4EEC\\u4E0D\\u5E94\\u8BE5\\u76F4\\u63A5\\u5728\\u6570\\u7EC4\\u5143\\u7D20\\u4E0A\\u8C03\\u7528 \",(0,n.jsx)(e.code,{children:\"fn\"}),\"\\uFF0C\\u800C\\u662F\\u5E94\\u8BE5\\u9012\\u5F52\\u5230\\u6BCF\\u4E2A\\u5143\\u7D20\\u4E2D\\u3002 \\u8FD9\\u662F\\u56E0\\u4E3A\\u6570\\u7EC4\\u5143\\u7D20\\u4E5F\\u53EF\\u4EE5\\u662F\\u975E\\u539F\\u8BED\\uFF0C\\u5E76\\u4E14\\u53EF\\u80FD\\u9700\\u8981\\u66F4\\u591A\\u9012\\u5F52\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"\\u5BF9\\u8C61\"}),\"\\uFF1A\\u8F85\\u52A9\\u51FD\\u6570 \",(0,n.jsx)(e.code,{children:\"isPlainObject()\"}),\"\\uFF08\\u6765\\u81EA \",(0,n.jsx)(e.a,{href:\"/questions/javascript/type-utilities-ii\",children:\"Type Utilities II\"}),\"\\uFF09\\u7528\\u4E8E\\u68C0\\u67E5\\u7EAF\\u5BF9\\u8C61\\u7C7B\\u578B\\u3002 \\u6267\\u884C \",(0,n.jsx)(e.code,{children:\"typeof element === 'object' && element !== null\"}),\" \\u5C06\\u4E0D\\u8D77\\u4F5C\\u7528\\uFF0C\\u56E0\\u4E3A\\u8FD8\\u6709\\u5176\\u4ED6\\u503C\\u7C7B\\u578B\\uFF0C\\u5982 \",(0,n.jsx)(e.code,{children:\"Date\"}),\" \\u548C \",(0,n.jsx)(e.code,{children:\"Set\"}),\"\\uFF0C\\u5B83\\u4EEC\\u5C06\\u901A\\u8FC7\\u68C0\\u67E5\\u3002 \\u904D\\u5386\\u5BF9\\u8C61\\u7684\\u6761\\u76EE\\u5E76\\u9012\\u5F52\\u5230\\u6BCF\\u4E2A\\u5BF9\\u8C61\\u503C\\u4E2D\\uFF0C\\u7C7B\\u4F3C\\u4E8E\\u6570\\u7EC4\\u5143\\u7D20\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"\\u539F\\u8BED\"}),\"\\uFF1A\\u8FD9\\u662F\\u9012\\u5F52\\u7684\\u57FA\\u672C\\u60C5\\u51B5\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u5728\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"fn\"}),\" \\u6620\\u5C04\\u540E\\u8FD4\\u56DE\\u503C\\u3002\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u95EE\\u9898\\u7684\\u4E0B\\u4E00\\u4E2A\\u68D8\\u624B\\u90E8\\u5206\\u662F\\u901A\\u8FC7 \",(0,n.jsx)(e.code,{children:\"Function.prototype.call()\"}),\"/\",(0,n.jsx)(e.code,{children:\"Function.prototype.apply()\"}),\" \\u4E3A \",(0,n.jsx)(e.code,{children:\"fn\"}),\" \\u63D0\\u4F9B \",(0,n.jsx)(e.code,{children:\"this\"}),\" \\u7684\\u503C\\u3002 \\u5728 \",(0,n.jsx)(e.code,{children:\"Array.prototype.map()\"}),\" \\u4E2D\\uFF0C\",(0,n.jsx)(e.code,{children:\"thisArg\"}),\" \\u503C\\u53EF\\u4EE5\\u4F5C\\u4E3A\\u7B2C\\u4E8C\\u4E2A\\u53C2\\u6570\\u63D0\\u4F9B\\u7ED9 \",(0,n.jsx)(e.code,{children:\".map()\"}),\" \\u51FD\\u6570\\uFF0C\\u5E76\\u4E14\\u56DE\\u8C03\\u51FD\\u6570\\u5C06\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"thisArg\"}),\" \\u4F5C\\u4E3A \",(0,n.jsx)(e.code,{children:\"this\"}),\" \\u503C\\u8C03\\u7528\\u3002 \\u5728\\u6211\\u4EEC\\u7684\\u4F8B\\u5B50\\u4E2D\\uFF0C\\u56DE\\u8C03\\u51FD\\u6570\\u4E2D\\u7684 \",(0,n.jsx)(e.code,{children:\"this\"}),\" \\u503C\\u6CA1\\u6709\\u660E\\u786E\\u6307\\u5B9A\\uFF0C\\u4F46\\u4E00\\u4E2A\\u5408\\u7406\\u7684\\u5047\\u8BBE\\u662F\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"value\"}),\" \\u8F93\\u5165\\u4F5C\\u4E3A \",(0,n.jsx)(e.code,{children:\"this\"}),\"\\u3002 \\u6211\\u4EEC\\u9700\\u8981\\u5728\\u9012\\u5F52\\u8C03\\u7528\\u4E2D\\u4F20\\u9012\\u539F\\u59CB\\u7684 \",(0,n.jsx)(e.code,{children:\"value\"}),\" \\u5BF9\\u8C61\\uFF0C\\u56E0\\u6B64\\u6211\\u4EEC\\u521B\\u5EFA\\u4E00\\u4E2A \",(0,n.jsx)(e.code,{children:\"mapHelper()\"}),\" \\u8F85\\u52A9\\u51FD\\u6570\\uFF0C\\u8BE5\\u51FD\\u6570\\u63A5\\u53D7\\u4E00\\u4E2A\\u989D\\u5916\\u7684\\u53C2\\u6570 \",(0,n.jsx)(e.code,{children:\"original\"}),\"\\uFF0C\\u4EE5\\u4FBF\\u6240\\u6709\\u9012\\u5F52\\u8C03\\u7528\\u90FD\\u53EF\\u4EE5\\u8BBF\\u95EE\\u5F53\\u524D\\u5143\\u7D20\\u548C \",(0,n.jsx)(e.code,{children:\"original\"}),\" \\u503C\\u3002\"]}),`\n`,(0,n.jsx)(p,{languages:{jsx:h,tsx:u}}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8FB9\\u7F18\\u60C5\\u51B5\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5728\\u56DE\\u8C03\\u51FD\\u6570\\u4E2D\\u8BBF\\u95EE \",(0,n.jsx)(e.code,{children:\"this\"}),\"\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5177\\u6709 \",(0,n.jsx)(e.code,{children:\"null\"}),\"\\u3001\",(0,n.jsx)(e.code,{children:\"Date\"}),\"\\u3001\",(0,n.jsx)(e.code,{children:\"Symbol\"}),\" \\u7B49\\u503C\\u3002\"]}),`\n`]})]})}function M(l={}){let{wrapper:e}=l.components||{};return e?(0,n.jsx)(e,Object.assign({},l,{children:(0,n.jsx)(s,l)})):s(l)}var A=M;return H(w);})();\n;return Component;",
  "workspace": {
    "main": "/src/deep-map.ts",
    "run": "/src/deep-map.run.test.ts",
    "submit": "/src/deep-map.submit.test.ts"
  }
}