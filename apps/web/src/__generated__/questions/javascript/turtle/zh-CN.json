{
  "description": "var Component=(()=>{var s=Object.create;var c=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),x=(t,e)=>{for(var r in e)c(t,r,{get:e[r],enumerable:!0})},l=(t,e,r,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of p(e))!m.call(t,i)&&i!==r&&c(t,i,{get:()=>e[i],enumerable:!(d=u(e,i))||d.enumerable});return t};var w=(t,e,r)=>(r=t!=null?s(g(t)):{},l(e||!t||!t.__esModule?c(r,\"default\",{value:t,enumerable:!0}):r,t)),b=t=>l(c({},\"__esModule\",{value:!0}),t);var h=f((T,o)=>{o.exports=_jsx_runtime});var _={};x(_,{default:()=>y,frontmatter:()=>j});var n=w(h()),j={title:\"\\u6D77\\u9F9F\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u5728\\u4E8C\\u7EF4\\u5E73\\u9762\\u4E0A\\u79FB\\u52A8\\u6D77\\u9F9F\\u7684 Turtle \\u7C7B\"};function a(t){let e=Object.assign({p:\"p\",code:\"code\",ul:\"ul\",li:\"li\",h2:\"h2\",pre:\"pre\",a:\"a\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Python \\u81EA\\u5E26\\u4E00\\u4E2A \",(0,n.jsx)(e.code,{children:\"turtle\"}),\" \\u6A21\\u5757\\uFF0C\\u8FD9\\u662F\\u4E00\\u4E2A\\u5F88\\u597D\\u7684\\u56FE\\u5F62\\u5316\\u65B9\\u5F0F\\uFF0C\\u53EF\\u4EE5\\u5411\\u5B69\\u5B50\\u4EEC\\u4ECB\\u7ECD\\u7F16\\u7A0B\\u3002 \\u6D77\\u9F9F\\u4ECE x-y \\u5E73\\u9762\\u7684 (0, 0) \\u5F00\\u59CB\\uFF0C\\u4F60\\u53EF\\u4EE5\\u5728\\u6D77\\u9F9F\\u5468\\u56F4\\u79FB\\u52A8\\u5E76\\u6539\\u53D8\\u5B83\\u7684\\u671D\\u5411\\u3002 \\u5F53\\u6D77\\u9F9F\\u79FB\\u52A8\\u65F6\\uFF0C\\u5B83\\u4F1A\\u5728\\u753B\\u5E03\\u4E0A\\u7559\\u4E0B\\u4E00\\u4E2A\\u7EBF\\u6761\\u8F68\\u8FF9\\u3002 \\u901A\\u8FC7\\u8FD9\\u4E9B\\u79FB\\u52A8 API\\uFF0C\\u7528\\u6237\\u53EF\\u4EE5\\u7ED8\\u5236\\u5F62\\u72B6\\uFF0C\\u751A\\u81F3\\u53EF\\u4EE5\\u901A\\u8FC7\\u5229\\u7528\\u5FAA\\u73AF\\u6765\\u7ED8\\u5236\\u590D\\u6742\\u7684\\u5F62\\u72B6\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u5728 JavaScript \\u4E2D\\u5B9E\\u73B0\\u4E00\\u4E2A \",(0,n.jsx)(e.code,{children:\"Turtle\"}),\" \\u7C7B\\uFF0C\\u6A21\\u62DF\\u6D77\\u9F9F\\u7684\\u79FB\\u52A8\\u3002 \\u6D77\\u9F9F\\u4ECE (0, 0) \\u5F00\\u59CB\\uFF0C\\u9762\\u5411\\u5317\\u65B9\\uFF0C\\u5E76\\u5177\\u6709\\u4EE5\\u4E0B\\u65B9\\u6CD5\\uFF1A\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"forward(distance)\"}),\": \\u4F7F\\u6D77\\u9F9F\\u5411\\u524D\\u79FB\\u52A8 \",(0,n.jsx)(e.code,{children:\"distance\"}),\" \\u4E2A\\u5355\\u4F4D\\uFF0C\\u671D\\u5411\\u5B83\\u6240\\u9762\\u5BF9\\u7684\\u65B9\\u5411\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"backward(distance)\"}),\": \\u4F7F\\u6D77\\u9F9F\\u5411\\u540E\\u79FB\\u52A8 \",(0,n.jsx)(e.code,{children:\"distance\"}),\" \\u4E2A\\u5355\\u4F4D\\uFF0C\\u540C\\u65F6\\u4FDD\\u6301\\u76F8\\u540C\\u7684\\u65B9\\u5411\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"left()\"}),\": \\u4F7F\\u6D77\\u9F9F\\u539F\\u5730\\u5411\\u5DE6\\u65CB\\u8F6C 90 \\u5EA6\\uFF0C\\u4EC5\\u6539\\u53D8\\u5176\\u671D\\u5411\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"right()\"}),\": \\u4F7F\\u6D77\\u9F9F\\u539F\\u5730\\u5411\\u53F3\\u65CB\\u8F6C 90 \\u5EA6\\uFF0C\\u4EC5\\u6539\\u53D8\\u5176\\u671D\\u5411\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"position()\"}),\": \\u4EE5 \",(0,n.jsx)(e.code,{children:\"[x, y]\"}),\" \\u7684\\u5F62\\u5F0F\\u8FD4\\u56DE\\u6D77\\u9F9F\\u7684\\u5750\\u6807\\u3002\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u4F8B\\u5B50\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const turtle = new Turtle();\nturtle.position(); // [0, 0]\nturtle.forward(1); // Position: [0, 1]\nturtle.backward(1); // Position: [0, 0]\nturtle.right(); // Position remains unchanged\nturtle.forward(2); // Position: [2, 0] because it moved 2 units to the right.\n\n// Methods can also be chained.\nturtle.right().right().forward(5); // Position: [-3, 0] because it turned 180 degrees and moved 5 units forward (towards the left).\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8D44\\u6E90\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://docs.python.org/3/library/turtle.html\",children:\"Python Turtle graphics\"})}),`\n`]})]})}function P(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(a,t)})):a(t)}var y=P;return b(_);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/turtle\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/turtle.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"esnext\"],\n    \"jsx\": \"react-jsx\"\n  }\n}\n",
    "/src/turtle.run.test.ts": "import Turtle from './turtle';\n\ndescribe('turtle', () => {\n  test('constructor', () => {\n    const turtle = new Turtle();\n    expect(turtle).toBeInstanceOf(Turtle);\n  });\n\n  test('forward', () => {\n    const turtle = new Turtle();\n    turtle.forward(2);\n    expect(turtle.position()).toEqual([0, 2]);\n  });\n\n  test('turn left', () => {\n    const turtle = new Turtle();\n    turtle.left();\n    turtle.forward(3);\n    expect(turtle.position()).toEqual([-3, 0]);\n  });\n});\n",
    "/src/turtle.submit.test.ts": "import Turtle from './turtle';\n\ndescribe('turtle', () => {\n  test('constructor', () => {\n    const turtle = new Turtle();\n    expect(turtle).toBeInstanceOf(Turtle);\n  });\n\n  describe('movement', () => {\n    test('forward', () => {\n      const turtle = new Turtle();\n      turtle.forward(2);\n      expect(turtle.position()).toEqual([0, 2]);\n      turtle.forward(3);\n      expect(turtle.position()).toEqual([0, 5]);\n    });\n\n    test('backward', () => {\n      const turtle = new Turtle();\n      turtle.backward(2);\n      expect(turtle.position()).toEqual([0, -2]);\n      turtle.backward(3);\n      expect(turtle.position()).toEqual([0, -5]);\n    });\n  });\n\n  describe('turning', () => {\n    test('left', () => {\n      const turtle = new Turtle();\n      turtle.left();\n      turtle.forward(3);\n      expect(turtle.position()).toEqual([-3, 0]);\n      turtle.backward(3);\n      expect(turtle.position()).toEqual([0, 0]);\n      turtle.left();\n      turtle.forward(5);\n      expect(turtle.position()).toEqual([0, -5]);\n      turtle.left();\n      turtle.forward(3);\n      expect(turtle.position()).toEqual([3, -5]);\n    });\n\n    test('right', () => {\n      const turtle = new Turtle();\n      turtle.right();\n      turtle.forward(3);\n      expect(turtle.position()).toEqual([3, 0]);\n      turtle.backward(3);\n      expect(turtle.position()).toEqual([0, 0]);\n      turtle.right();\n      turtle.forward(5);\n      expect(turtle.position()).toEqual([0, -5]);\n      turtle.right();\n      turtle.forward(3);\n      expect(turtle.position()).toEqual([-3, -5]);\n    });\n  });\n\n  test('position', () => {\n    const turtle = new Turtle();\n    expect(turtle.position()).toEqual([0, 0]);\n    turtle.forward(1);\n    expect(turtle.position()).toEqual([0, 1]);\n  });\n\n  describe('method chaining', () => {\n    test('turning', () => {\n      const turtle = new Turtle();\n      turtle.left().left().left().right().right().right().forward(3);\n      expect(turtle.position()).toEqual([0, 3]);\n      turtle.right().right().right().left().left().left().forward(3);\n      expect(turtle.position()).toEqual([0, 6]);\n    });\n\n    test('forward and backward', () => {\n      const turtle = new Turtle();\n      turtle.right().forward(3);\n      expect(turtle.position()).toEqual([3, 0]);\n      turtle.backward(3);\n      expect(turtle.position()).toEqual([0, 0]);\n      turtle.right().forward(5);\n      expect(turtle.position()).toEqual([0, -5]);\n      turtle.left().backward(3);\n      expect(turtle.position()).toEqual([-3, -5]);\n    });\n  });\n});\n",
    "/src/turtle.ts": "enum Direction {\n  North = 0,\n  East = 1,\n  South = 2,\n  West = 3,\n}\n\nconst NUMBER_OF_CARDINAL_DIRECTIONS = 4;\n\nexport default class Turtle {\n  x: number;\n  y: number;\n  direction: Direction;\n\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n    this.direction = Direction.North;\n  }\n\n  forward(distance: number): Turtle {\n    this._move(distance);\n    return this;\n  }\n\n  backward(distance: number): Turtle {\n    this._move(-distance);\n    return this;\n  }\n\n  _move(distance: number): Turtle {\n    switch (this.direction) {\n      case Direction.North:\n        this.y += distance;\n        break;\n      case Direction.East:\n        this.x += distance;\n        break;\n      case Direction.South:\n        this.y -= distance;\n        break;\n      case Direction.West:\n        this.x -= distance;\n        break;\n    }\n    return this;\n  }\n\n  left(): Turtle {\n    // Wrap around behavior.\n    this.direction =\n      (this.direction - 1 + NUMBER_OF_CARDINAL_DIRECTIONS) %\n      NUMBER_OF_CARDINAL_DIRECTIONS;\n    return this;\n  }\n\n  right(): Turtle {\n    // Wrap around behavior.\n    this.direction =\n      (this.direction + 1 + NUMBER_OF_CARDINAL_DIRECTIONS) %\n      NUMBER_OF_CARDINAL_DIRECTIONS;\n    return this;\n  }\n\n  position(): [number, number] {\n    return [this.x, this.y];\n  }\n}\n"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [],
    "created": 1689638400,
    "difficulty": "medium",
    "duration": 15,
    "excerpt": "实现一个在二维平面上移动海龟的 Turtle 类",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/turtle",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "turtle",
    "subtitle": null,
    "title": "海龟",
    "topics": [
      "oop"
    ]
  },
  "skeleton": {
    "js": "export default class Turtle {\n  constructor() {\n    throw 'Not implemented';\n  }\n\n  /**\n   * @param {number} distance Distance to move forward while facing the current direction.\n   * @return {Turtle}\n   */\n  forward(distance) {\n    throw 'Not implemented';\n  }\n\n  /**\n   * @param {number} distance Distance to move backward while facing the current direction.\n   * @return {Turtle}\n   */\n  backward(distance) {\n    throw 'Not implemented';\n  }\n\n  /**\n   * Turns the turtle left.\n   * @return {Turtle}\n   */\n  left() {\n    throw 'Not implemented';\n  }\n\n  /**\n   * Turns the turtle right.\n   * @return {Turtle}\n   */\n  right() {\n    throw 'Not implemented';\n  }\n\n  /**\n   * @return {[number, number]} Coordinates [x, y]\n   */\n  position() {\n    throw 'Not implemented';\n  }\n}",
    "ts": "export default class Turtle {\n  constructor() {\n    throw 'Not implemented';\n  }\n\n  /**\n   * @param {number} distance Distance to move forward while facing the current direction.\n   * @return {Turtle}\n   */\n  forward(distance: number): Turtle {\n    throw 'Not implemented';\n  }\n\n  /**\n   * @param {number} distance Distance to move backward while facing the current direction.\n   * @return {Turtle}\n   */\n  backward(distance: number): Turtle {\n    throw 'Not implemented';\n  }\n\n  /**\n   * Turns the turtle left.\n   * @return {Turtle}\n   */\n  left(): Turtle {\n    throw 'Not implemented';\n  }\n\n  /**\n   * Turns the turtle right.\n   * @return {Turtle}\n   */\n  right(): Turtle {\n    throw 'Not implemented';\n  }\n\n  /**\n   * @return {[number, number]} Coordinates [x, y]\n   */\n  position(): [number, number] {\n    throw 'Not implemented';\n  }\n}"
  },
  "solution": "var Component=(()=>{var m=Object.create;var c=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var R=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var b=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),I=(r,e)=>{for(var i in e)c(r,i,{get:e[i],enumerable:!0})},o=(r,e,i,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let n of D(e))!T.call(r,n)&&n!==i&&c(r,n,{get:()=>e[n],enumerable:!(s=N(e,n))||s.enumerable});return r};var O=(r,e,i)=>(i=r!=null?m(R(r)):{},o(e||!r||!r.__esModule?c(i,\"default\",{value:r,enumerable:!0}):i,r)),x=r=>o(c({},\"__esModule\",{value:!0}),r);var h=b((w,d)=>{d.exports=_jsx_runtime});var A={};I(A,{default:()=>p});var t=O(h());var a=MDXCodeBlock;var u=`const NORTH = 0;\nconst EAST = 1;\nconst SOUTH = 2;\nconst WEST = 3;\nconst NUMBER_OF_CARDINAL_DIRECTIONS = 4;\n\nexport default class Turtle {\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n    this.direction = NORTH;\n  }\n\n  /**\n   * @param {number} distance Distance to move forward while facing the current direction.\n   * @return {Turtle}\n   */\n  forward(distance) {\n    this._move(distance);\n    return this;\n  }\n\n  /**\n   * @param {number} distance Distance to move backward while facing the current direction.\n   * @return {Turtle}\n   */\n  backward(distance) {\n    this._move(-distance);\n    return this;\n  }\n\n  _move(distance) {\n    switch (this.direction) {\n      case NORTH:\n        this.y += distance;\n        break;\n      case EAST:\n        this.x += distance;\n        break;\n      case SOUTH:\n        this.y -= distance;\n        break;\n      case WEST:\n        this.x -= distance;\n        break;\n    }\n    return this;\n  }\n\n  /**\n   * Turns the turtle left.\n   * @return {Turtle}\n   */\n  left() {\n    // Wrap around behavior.\n    this.direction =\n      (this.direction - 1 + NUMBER_OF_CARDINAL_DIRECTIONS) %\n      NUMBER_OF_CARDINAL_DIRECTIONS;\n    return this;\n  }\n\n  /**\n   * Turns the turtle right.\n   * @return {Turtle}\n   */\n  right() {\n    // Wrap around behavior.\n    this.direction =\n      (this.direction + 1 + NUMBER_OF_CARDINAL_DIRECTIONS) %\n      NUMBER_OF_CARDINAL_DIRECTIONS;\n    return this;\n  }\n\n  /**\n   * @return {[number, number]} Coordinates [x, y]\n   */\n  position() {\n    return [this.x, this.y];\n  }\n}\n`;var l=`enum Direction {\n  North = 0,\n  East = 1,\n  South = 2,\n  West = 3,\n}\n\nconst NUMBER_OF_CARDINAL_DIRECTIONS = 4;\n\nexport default class Turtle {\n  x: number;\n  y: number;\n  direction: Direction;\n\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n    this.direction = Direction.North;\n  }\n\n  forward(distance: number): Turtle {\n    this._move(distance);\n    return this;\n  }\n\n  backward(distance: number): Turtle {\n    this._move(-distance);\n    return this;\n  }\n\n  _move(distance: number): Turtle {\n    switch (this.direction) {\n      case Direction.North:\n        this.y += distance;\n        break;\n      case Direction.East:\n        this.x += distance;\n        break;\n      case Direction.South:\n        this.y -= distance;\n        break;\n      case Direction.West:\n        this.x -= distance;\n        break;\n    }\n    return this;\n  }\n\n  left(): Turtle {\n    // Wrap around behavior.\n    this.direction =\n      (this.direction - 1 + NUMBER_OF_CARDINAL_DIRECTIONS) %\n      NUMBER_OF_CARDINAL_DIRECTIONS;\n    return this;\n  }\n\n  right(): Turtle {\n    // Wrap around behavior.\n    this.direction =\n      (this.direction + 1 + NUMBER_OF_CARDINAL_DIRECTIONS) %\n      NUMBER_OF_CARDINAL_DIRECTIONS;\n    return this;\n  }\n\n  position(): [number, number] {\n    return [this.x, this.y];\n  }\n}\n`;function _(r){let e=Object.assign({h2:\"h2\",h3:\"h3\",p:\"p\",code:\"code\",h4:\"h4\",ul:\"ul\",li:\"li\"},r.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,t.jsx)(e.h3,{children:\"\\u72B6\\u6001\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"\\u4E3A\\u4E86\\u6A21\\u62DF\\u6D77\\u9F9F\\u7684\\u72B6\\u6001\\uFF0C\\u6211\\u4EEC\\u53EA\\u9700\\u8981\\u5750\\u6807\\u548C\\u65B9\\u5411\\u3002\\u5750\\u6807\\u662F\\u5B58\\u50A8\\u5728 \",(0,t.jsx)(e.code,{children:\"x\"}),\" \\u548C \",(0,t.jsx)(e.code,{children:\"y\"}),\" \\u5B57\\u6BB5\\u4E2D\\u7684\\u6570\\u5B57\\u3002\\u7531\\u4E8E\\u64CD\\u4F5C\\u53EA\\u5141\\u8BB8\\u6D77\\u9F9F\\u65CB\\u8F6C 90 \\u5EA6\\uFF0C\\u8FD9\\u672C\\u8D28\\u4E0A\\u662F\\u57FA\\u672C\\u65B9\\u5411\\uFF1A\\u5317\\u3001\\u5357\\u3001\\u4E1C\\u3001\\u897F\\uFF0C\\u56E0\\u6B64 \",(0,t.jsx)(e.code,{children:\"direction\"}),\" \\u5C5E\\u6027\\u53EF\\u4EE5\\u7528\\u679A\\u4E3E\\u8868\\u793A\\u3002\\u5BF9\\u4E8E\\u8FD9\\u79CD\\u7279\\u6B8A\\u60C5\\u51B5\\uFF0C0-3 \\u4E4B\\u95F4\\u7684\\u6574\\u6570\\uFF08\\u5206\\u522B\\u5BF9\\u5E94\\u4E8E\\u5317\\u3001\\u5357\\u3001\\u4E1C\\u3001\\u897F\\uFF09\\u662F\\u6700\\u4F73\\u8868\\u793A\\u3002\\u539F\\u56E0\\u5C06\\u5728\\u4E0B\\u9762\\u8BE6\\u7EC6\\u89E3\\u91CA\\u3002\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"\\u65B9\\u6CD5\"}),`\n`,(0,t.jsxs)(e.h4,{children:[\"\\u901A\\u8FC7 \",(0,t.jsx)(e.code,{children:\"left()\"}),\" \\u548C \",(0,t.jsx)(e.code,{children:\"right()\"}),\" \\u65CB\\u8F6C\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"\\u5F53\\u6D77\\u9F9F\\u671D\\u5317 (0) \\u65F6\\uFF0C\\u5411\\u5DE6\\u8F6C\\u5C06\\u4F7F\\u6D77\\u9F9F\\u671D\\u897F (3)\\u3002\\u603B\\u5171\\u6709 4 \\u4E2A\\u57FA\\u672C\\u65B9\\u5411\\u3002\\u901A\\u8FC7\\u4F7F\\u7528\\u6A21\\u8FD0\\u7B97\\u7B26\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u65B9\\u4FBF\\u5730\\u8BA1\\u7B97\\u6D77\\u9F9F\\u5C06\\u8981\\u9762\\u5BF9\\u7684\\u65B0\\u65B9\\u5411\\uFF0C\\u65B9\\u6CD5\\u662F\\u51CF\\u53BB 1\\uFF08\\u5411\\u5DE6\\u8F6C\\uFF09\\u6216\\u52A0\\u4E0A 1\\uFF08\\u5411\\u53F3\\u8F6C\\uFF09\\uFF0C\\u7136\\u540E\\u5BF9\\u65B0\\u503C\\u53D6\\u6A21 4\\u3002\\u4F7F\\u7528 0-3 \\u7684\\u6574\\u6570\\u8868\\u793A \",(0,t.jsx)(e.code,{children:\"direction\"}),\"\\uFF0C\\u8FD9\\u4F7F\\u5F97\\u5B9E\\u73B0\\u65CB\\u8F6C\\u903B\\u8F91\\u53D8\\u5F97\\u5F88\\u65B9\\u4FBF\\u3002\\u4E3A\\u4E86\\u63D0\\u9AD8\\u53EF\\u8BFB\\u6027\\uFF0C\\u6211\\u4EEC\\u4E3A\\u8FD9\\u4E9B\\u65B9\\u5411\\u5B9A\\u4E49\\u4E86 \",(0,t.jsx)(e.code,{children:\"const\"}),\"\\u3002\"]}),`\n`,(0,t.jsxs)(e.h4,{children:[\"\\u79FB\\u52A8 \",(0,t.jsx)(e.code,{children:\"forward()\"}),\" \\u548C \",(0,t.jsx)(e.code,{children:\"backward()\"})]}),`\n`,(0,t.jsxs)(e.p,{children:[\"\\u5411\\u524D/\\u5411\\u540E\\u79FB\\u52A8\\u7684\\u903B\\u8F91\\u6709\\u5F88\\u5927\\u7684\\u91CD\\u53E0\\uFF0C\",(0,t.jsx)(e.code,{children:\"backward(distance)\"}),\" \\u672C\\u8D28\\u4E0A\\u662F\\u79FB\\u52A8 \",(0,t.jsx)(e.code,{children:\"forward(-distance)\"}),\"\\u3002\\u56E0\\u6B64\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u521B\\u5EFA\\u4E00\\u4E2A\\u79C1\\u6709\\u8F85\\u52A9\\u51FD\\u6570\\uFF0C\\u6839\\u636E\\u6D77\\u9F9F\\u5F53\\u524D facing \\u7684\\u65B9\\u5411\\u8BA1\\u7B97\\u65B0\\u7684 x/y \\u5750\\u6807\\uFF1A\"]}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"\\u9762\\u5411\\u5317/\\u5357\\u65F6\\uFF0C\\u5411\\u524D/\\u5411\\u540E\\u79FB\\u52A8\\u5C06\\u5206\\u522B\\u589E\\u52A0/\\u51CF\\u5C11 \",(0,t.jsx)(e.code,{children:\"y\"}),\" \\u5750\\u6807\\u3002\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"\\u9762\\u5411\\u4E1C/\\u897F\\u65F6\\uFF0C\\u5411\\u524D/\\u5411\\u540E\\u79FB\\u52A8\\u5C06\\u5206\\u522B\\u589E\\u52A0/\\u51CF\\u5C11 \",(0,t.jsx)(e.code,{children:\"x\"}),\" \\u5750\\u6807\\u3002\"]}),`\n`]}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"_move()\"}),\" \\u8F85\\u52A9\\u65B9\\u6CD5\\u662F\\u53EF\\u9009\\u7684\\uFF0C\\u60A8\\u53EF\\u4EE5\\u7B80\\u5355\\u5730\\u5C06 \",(0,t.jsx)(e.code,{children:\"backward()\"}),\" \\u5B9E\\u73B0\\u4E3A \",(0,t.jsx)(e.code,{children:\"return this.forward(-distance)\"}),\"\\u3002\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"\\u65B9\\u6CD5\\u94FE\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"\\u65B9\\u6CD5\\u94FE\\u662F\\u4E00\\u79CD\\u5E38\\u89C1\\u7684\\u8BED\\u6CD5\\uFF0C\\u7528\\u4E8E\\u5728\\u540C\\u4E00\\u5B9E\\u4F8B\\u4E0A\\u8C03\\u7528\\u591A\\u4E2A\\u65B9\\u6CD5\\uFF0C\\u800C\\u65E0\\u9700\\u4F7F\\u7528\\u53D8\\u91CF\\u6765\\u5B58\\u50A8\\u4E2D\\u95F4\\u7ED3\\u679C\\u3002\\u8FD9\\u53EF\\u4EE5\\u901A\\u8FC7\\u5728\\u9700\\u8981\\u94FE\\u63A5\\u7684\\u65B9\\u6CD5\\u4E2D\\u8FD4\\u56DE \",(0,t.jsx)(e.code,{children:\"this\"}),\" \\u6765\\u5B9E\\u73B0\\u3002\"]}),`\n`,(0,t.jsx)(a,{languages:{jsx:u,tsx:l}})]})}function f(r={}){let{wrapper:e}=r.components||{};return e?(0,t.jsx)(e,Object.assign({},r,{children:(0,t.jsx)(_,r)})):_(r)}var p=f;return x(A);})();\n;return Component;",
  "workspace": {
    "main": "/src/turtle.ts",
    "run": "/src/turtle.run.test.ts",
    "submit": "/src/turtle.submit.test.ts"
  }
}