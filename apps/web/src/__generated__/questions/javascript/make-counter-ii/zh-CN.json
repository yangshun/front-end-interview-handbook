{
  "description": "var Component=(()=>{var a=Object.create;var o=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var x=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),j=(t,e)=>{for(var c in e)o(t,c,{get:e[c],enumerable:!0})},d=(t,e,c,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of m(e))!p.call(t,r)&&r!==c&&o(t,r,{get:()=>e[r],enumerable:!(i=h(e,r))||i.enumerable});return t};var _=(t,e,c)=>(c=t!=null?a(g(t)):{},d(e||!t||!t.__esModule?o(c,\"default\",{value:t,enumerable:!0}):c,t)),f=t=>d(o({},\"__esModule\",{value:!0}),t);var s=x((F,l)=>{l.exports=_jsx_runtime});var b={};j(b,{default:()=>M,frontmatter:()=>C});var n=_(s()),C={title:\"\\u521B\\u5EFA\\u8BA1\\u6570\\u5668 II\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u51FD\\u6570\\uFF0C\\u8BE5\\u51FD\\u6570\\u8FD4\\u56DE\\u4E00\\u4E2A\\u8BA1\\u6570\\u5668\\u5BF9\\u8C61\\uFF0C\\u8BE5\\u5BF9\\u8C61\\u5177\\u6709\\u7528\\u4E8E\\u68C0\\u7D22\\u548C\\u64CD\\u4F5C\\u503C\\u7684\\u5404\\u79CD\\u65B9\\u6CD5\"};function u(t){let e=Object.assign({p:\"p\",code:\"code\",ul:\"ul\",li:\"li\",h2:\"h2\",pre:\"pre\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u51FD\\u6570 \",(0,n.jsx)(e.code,{children:\"makeCounter\"}),\"\\uFF0C\\u5B83\\u63A5\\u53D7\\u4E00\\u4E2A\\u53EF\\u9009\\u7684\\u6574\\u6570\\u503C\\uFF08\\u9ED8\\u8BA4\\u4E3A 0\\uFF09\\uFF0C\\u5E76\\u8FD4\\u56DE\\u4E00\\u4E2A\\u5305\\u542B\\u4EE5\\u4E0B\\u65B9\\u6CD5\\u7684\\u5BF9\\u8C61\\uFF1A\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"get()\"}),\"\\uFF1A\\u8FD4\\u56DE\\u5F53\\u524D\\u503C\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"increment()\"}),\"\\uFF1A\\u589E\\u52A0\\u5F53\\u524D\\u503C\\u5E76\\u8FD4\\u56DE\\u5B83\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"decrement()\"}),\"\\uFF1A\\u51CF\\u5C11\\u5F53\\u524D\\u503C\\u5E76\\u8FD4\\u56DE\\u5B83\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"reset()\"}),\"\\uFF1A\\u5C06\\u5F53\\u524D\\u503C\\u91CD\\u7F6E\\u4E3A\\u521D\\u59CB\\u503C\\u3002\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u4F8B\\u5B50\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const counter = makeCounter();\ncounter.get(); // 0\ncounter.increment(); // 1\ncounter.increment(); // 2\ncounter.get(); // 2\ncounter.reset(); // 0\ncounter.decrement(); // -1\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"\\u4F7F\\u7528\\u81EA\\u5B9A\\u4E49\\u521D\\u59CB\\u503C\\uFF1A\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const counter = makeCounter(5);\ncounter.get(); // 5\ncounter.decrement(); // 4\ncounter.decrement(); // 3\ncounter.get(); // 3\ncounter.reset(); // 5\ncounter.increment(); // 6\n`})})]})}function k(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(u,t)})):u(t)}var M=k;return f(b);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/make-counter-ii\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/make-counter-ii.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/make-counter-ii.run.test.ts": "import makeCounter from './make-counter-ii';\n\ndescribe('makeCounter', () => {\n  test('returns an object', () => {\n    const counter = makeCounter();\n    expect(counter).toBeInstanceOf(Object);\n  });\n\n  test('default value', () => {\n    const counter = makeCounter();\n    expect(counter.get()).toBe(0);\n  });\n\n  test('increment', () => {\n    const counter = makeCounter(-4);\n    expect(counter.increment()).toBe(-3);\n    expect(counter.increment()).toBe(-2);\n  });\n\n  test('decrement', () => {\n    const counter = makeCounter();\n    expect(counter.decrement()).toBe(-1);\n    expect(counter.decrement()).toBe(-2);\n  });\n});\n",
    "/src/make-counter-ii.submit.test.ts": "import makeCounter from './make-counter-ii';\n\ndescribe('makeCounter', () => {\n  test('returns an object', () => {\n    const counter = makeCounter();\n\n    expect(typeof counter).toBe('object');\n  });\n\n  describe('get', () => {\n    test('default', () => {\n      const counter = makeCounter();\n      expect(counter.get()).toBe(0);\n    });\n\n    test('custom', () => {\n      const counter = makeCounter(-4);\n      expect(counter.get()).toBe(-4);\n    });\n  });\n\n  describe('increment', () => {\n    test('default', () => {\n      const counter = makeCounter();\n      expect(counter.increment()).toBe(1);\n      expect(counter.increment()).toBe(2);\n    });\n\n    test('custom', () => {\n      const counter = makeCounter(-4);\n      expect(counter.increment()).toBe(-3);\n      expect(counter.increment()).toBe(-2);\n    });\n  });\n\n  describe('decrement', () => {\n    test('default', () => {\n      const counter = makeCounter();\n      expect(counter.decrement()).toBe(-1);\n      expect(counter.decrement()).toBe(-2);\n    });\n\n    test('custom', () => {\n      const counter = makeCounter(-4);\n      expect(counter.decrement()).toBe(-5);\n      expect(counter.decrement()).toBe(-6);\n    });\n  });\n\n  describe('reset', () => {\n    test('default', () => {\n      const counter = makeCounter();\n      expect(counter.decrement()).toBe(-1);\n      expect(counter.decrement()).toBe(-2);\n      expect(counter.reset()).toBe(0);\n    });\n\n    test('custom', () => {\n      const counter = makeCounter(-4);\n      expect(counter.decrement()).toBe(-5);\n      expect(counter.decrement()).toBe(-6);\n      expect(counter.reset()).toBe(-4);\n    });\n  });\n\n  describe('integration', () => {\n    test('default', () => {\n      const counter = makeCounter();\n      expect(counter.get()).toBe(0);\n      expect(counter.increment()).toBe(1);\n      expect(counter.increment()).toBe(2);\n      expect(counter.get()).toBe(2);\n      expect(counter.reset()).toBe(0);\n      expect(counter.decrement()).toBe(-1);\n    });\n\n    test('custom', () => {\n      const counter = makeCounter(5);\n      expect(counter.get()).toBe(5);\n      expect(counter.decrement()).toBe(4);\n      expect(counter.decrement()).toBe(3);\n      expect(counter.get()).toBe(3);\n      expect(counter.reset()).toBe(5);\n      expect(counter.increment()).toBe(6);\n    });\n  });\n\n  test('isolated instances', () => {\n    const counterA = makeCounter(5);\n    const counterB = makeCounter(10);\n\n    expect(counterA.get()).toBe(5);\n    expect(counterB.get()).toBe(10);\n\n    expect(counterA.decrement()).toBe(4);\n    expect(counterA.decrement()).toBe(3);\n    expect(counterA.get()).toBe(3);\n\n    expect(counterB.get()).toBe(10);\n    expect(counterB.increment()).toBe(11);\n  });\n});\n",
    "/src/make-counter-ii.ts": "interface Counter {\n  get: () => number;\n  increment: () => number;\n  decrement: () => number;\n  reset: () => number;\n}\n\nexport default function makeCounter(initialValue: number = 0): Counter {\n  let count = initialValue;\n\n  return {\n    get: () => count,\n    increment: () => ++count,\n    decrement: () => --count,\n    reset: () => (count = initialValue),\n  };\n}\n"
  },
  "info": {
    "excerpt": "实现一个函数，该函数返回一个计数器对象，该对象具有用于检索和操作值的各种方法",
    "title": "创建计数器 II"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [
      "amazon"
    ],
    "created": 1683331200,
    "difficulty": "medium",
    "duration": 10,
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/make-counter-ii",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [
      "jquery-css"
    ],
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "make-counter",
      "jquery-css"
    ],
    "slug": "make-counter-ii",
    "subtitle": null,
    "topics": [
      "closure"
    ]
  },
  "skeleton": {
    "js": "/**\n * @param {number} initialValue\n * @return {{get: Function, increment: Function, decrement: Function, reset: Function }}\n */\nexport default function makeCounter(initialValue = 0) {\n  throw 'Not implemented';\n}",
    "ts": "interface Counter {\n  get: () => number;\n  increment: () => number;\n  decrement: () => number;\n  reset: () => number;\n}\n\nexport default function makeCounter(initialValue: number = 0): Counter {\n  throw 'Not implemented';\n}"
  },
  "solution": "var Component=(()=>{var V=Object.create;var a=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var g=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),k=(t,e)=>{for(var i in e)a(t,i,{get:e[i],enumerable:!0})},l=(t,e,i,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of v(e))!b.call(t,r)&&r!==i&&a(t,r,{get:()=>e[r],enumerable:!(c=C(e,r))||c.enumerable});return t};var F=(t,e,i)=>(i=t!=null?V(x(t)):{},l(e||!t||!t.__esModule?a(i,\"default\",{value:t,enumerable:!0}):i,t)),w=t=>l(a({},\"__esModule\",{value:!0}),t);var d=g((A,o)=>{o.exports=_jsx_runtime});var X={};k(X,{default:()=>M});var n=F(d());var u=MDXCodeBlock;var h=`/**\n * @param {number} initialValue\n * @return {{get: Function, increment: Function, decrement: Function, reset: Function }}\n */\nexport default function makeCounter(initialValue = 0) {\n  let count = initialValue;\n\n  return {\n    get: () => count,\n    increment: () => ++count,\n    decrement: () => --count,\n    reset: () => (count = initialValue),\n  };\n}\n`;var s=`interface Counter {\n  get: () => number;\n  increment: () => number;\n  decrement: () => number;\n  reset: () => number;\n}\n\nexport default function makeCounter(initialValue: number = 0): Counter {\n  let count = initialValue;\n\n  return {\n    get: () => count,\n    increment: () => ++count,\n    decrement: () => --count,\n    reset: () => (count = initialValue),\n  };\n}\n`;var m=`class Counter {\n  constructor(initialValue = 0) {\n    this.initialValue = initialValue;\n    this.value = initialValue;\n  }\n  get() {\n    return this.value;\n  }\n  increment() {\n    return ++this.value;\n  }\n  decrement() {\n    return --this.value;\n  }\n  reset() {\n    this.value = this.initialValue;\n    return this.value;\n  }\n}\n\n/**\n * @param {number} initialValue\n * @return {{get: Function, increment: Function, decrement: Function, reset: Function }}\n */\nexport default function makeCounter(initialValue = 0) {\n  return new Counter(initialValue);\n}\n`;var p=`class Counter {\n  initialValue: number;\n  value: number;\n\n  constructor(initialValue = 0) {\n    this.initialValue = initialValue;\n    this.value = initialValue;\n  }\n  get() {\n    return this.value;\n  }\n  increment() {\n    return ++this.value;\n  }\n  decrement() {\n    return --this.value;\n  }\n  reset() {\n    this.value = this.initialValue;\n    return this.value;\n  }\n}\n\n/**\n * @param {number} initialValue\n * @return {{get: Function, increment: Function, decrement: Function, reset: Function }}\n */\nexport default function makeCounter(initialValue = 0) {\n  return new Counter(initialValue);\n}\n`;function f(t){let e=Object.assign({h2:\"h2\",h3:\"h3\",ol:\"ol\",li:\"li\",code:\"code\",ul:\"ul\",p:\"p\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Approach 1: Directly return an object\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"The \",(0,n.jsx)(e.code,{children:\"makeCounter\"}),\" function accepts an optional parameter \",(0,n.jsx)(e.code,{children:\"initialValue\"}),\", which is set to 0 by default.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Inside the \",(0,n.jsx)(e.code,{children:\"makeCounter\"}),\" function, we declare a variable \",(0,n.jsx)(e.code,{children:\"count\"}),\" and initialize it with the provided \",(0,n.jsx)(e.code,{children:\"initialValue\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Return an object with four methods: \",(0,n.jsx)(e.code,{children:\"get\"}),\", \",(0,n.jsx)(e.code,{children:\"increment\"}),\", \",(0,n.jsx)(e.code,{children:\"decrement\"}),\", and \",(0,n.jsx)(e.code,{children:\"reset\"}),\":\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"The \",(0,n.jsx)(e.code,{children:\"get\"}),\" method simply returns the current value of count.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"The \",(0,n.jsx)(e.code,{children:\"increment\"}),\" method increments the count by 1 using the prefix increment operator (\",(0,n.jsx)(e.code,{children:\"++x\"}),\") and returns the updated value.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"The \",(0,n.jsx)(e.code,{children:\"decrement\"}),\" method decrements the count by 1 using the prefix decrement operator (\",(0,n.jsx)(e.code,{children:\"--x\"}),\") and returns the updated value.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"The \",(0,n.jsx)(e.code,{children:\"reset\"}),\" method resets the \",(0,n.jsx)(e.code,{children:\"count\"}),\" to the initial value provided in the \",(0,n.jsx)(e.code,{children:\"makeCounter\"}),\" function and returns it.\"]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(u,{languages:{jsx:h,tsx:s}}),`\n`,(0,n.jsxs)(e.h3,{children:[\"Approach 2: Return a \",(0,n.jsx)(e.code,{children:\"Counter\"}),\" class\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"We can also create a separate \",(0,n.jsx)(e.code,{children:\"Counter\"}),\" class that contains the 4 required methods. The \",(0,n.jsx)(e.code,{children:\"makeCounter\"}),\" function will simply be a wrapper than returns an instance of \",(0,n.jsx)(e.code,{children:\"Counter\"}),\" initialized with the \",(0,n.jsx)(e.code,{children:\"initialValue\"}),\". The main difference here is that we need to use instance variables to keep track of the current value and the \",(0,n.jsx)(e.code,{children:\"initialValue\"}),\" since we cannot rely on closures.\"]}),`\n`,(0,n.jsx)(u,{languages:{jsx:m,tsx:p}})]})}function D(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(f,t)})):f(t)}var M=D;return w(X);})();\n;return Component;",
  "workspace": {
    "main": "/src/make-counter-ii.ts",
    "run": "/src/make-counter-ii.run.test.ts",
    "submit": "/src/make-counter-ii.submit.test.ts"
  }
}