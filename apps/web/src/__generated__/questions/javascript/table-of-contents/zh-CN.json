{
  "description": "var Component=(()=>{var s=Object.create;var c=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,H=Object.prototype.hasOwnProperty;var p=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),x=(e,n)=>{for(var l in n)c(e,l,{get:n[l],enumerable:!0})},h=(e,n,l,d)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let t of u(n))!H.call(e,t)&&t!==l&&c(e,t,{get:()=>n[t],enumerable:!(d=g(n,t))||d.enumerable});return e};var b=(e,n,l)=>(l=e!=null?s(m(e)):{},h(n||!e||!e.__esModule?c(l,\"default\",{value:e,enumerable:!0}):l,e)),j=e=>h(c({},\"__esModule\",{value:!0}),e);var r=p((D,o)=>{o.exports=_jsx_runtime});var O={};x(O,{default:()=>M,frontmatter:()=>f});var i=b(r()),f={title:\"\\u76EE\\u5F55\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u4ECE HTML \\u6587\\u6863\\u6784\\u5EFA\\u76EE\\u5F55\\u7684\\u51FD\\u6570\"};function a(e){let n=Object.assign({p:\"p\",code:\"code\",h2:\"h2\",pre:\"pre\"},e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:\"\\u5728\\u7F51\\u7AD9\\u4E0A\\uFF0C\\u6807\\u9898\\u6807\\u7B7E\\u4E3A\\u9875\\u9762\\u63D0\\u4F9B\\u4E86\\u5C42\\u6B21\\u7ED3\\u6784\\uFF0C\\u7528\\u6237\\u4EE3\\u7406\\uFF08\\u5305\\u62EC\\u5C4F\\u5E55\\u9605\\u8BFB\\u5668\\uFF09\\u53EF\\u4EE5\\u4F7F\\u7528\\u6807\\u9898\\u4FE1\\u606F\\u81EA\\u52A8\\u6784\\u5EFA\\u6587\\u6863\\u7684\\u76EE\\u5F55\\u3002\"}),`\n`,(0,i.jsxs)(n.p,{children:[\"\\u7ED9\\u5B9A\\u4E00\\u4E2A \",(0,i.jsx)(n.code,{children:\"document\"}),\" \\u8282\\u70B9\\uFF0C\\u7F16\\u5199\\u4E00\\u4E2A\\u51FD\\u6570 \",(0,i.jsx)(n.code,{children:\"tableOfContents\"}),\"\\uFF0C\\u8BE5\\u51FD\\u6570\\u751F\\u6210\\u4E00\\u4E2A HTML \\u5B57\\u7B26\\u4E32\\uFF0C\\u8868\\u793A\\u57FA\\u4E8E \",(0,i.jsx)(n.code,{children:\"document\"}),\" \\u4E2D\\u7684\\u6807\\u9898 (\",(0,i.jsx)(n.code,{children:\"<h1>\"}),\", \",(0,i.jsx)(n.code,{children:\"<h2>\"}),\", ..., \",(0,i.jsx)(n.code,{children:\"<h6>\"}),\") \\u7684\\u76EE\\u5F55\\u3002 \\u9075\\u5FAA\\u6700\\u4F73\\u5B9E\\u8DF5\\uFF0C\\u6807\\u9898\\u7EA7\\u522B\\u4E0D\\u4F1A\\u88AB\\u8DF3\\u8FC7\\uFF0C\\u5373 \",(0,i.jsx)(n.code,{children:\"<h1>\"}),\" \\u4E4B\\u540E\\u5C06\\u662F \",(0,i.jsx)(n.code,{children:\"<h2>\"}),\"\\uFF0C\\u4F9D\\u6B64\\u7C7B\\u63A8\\u3002\"]}),`\n`,(0,i.jsx)(n.p,{children:\"\\u8FD4\\u56DE\\u7684\\u5B57\\u7B26\\u4E32\\u4E0D\\u9700\\u8981\\u5305\\u542B\\u4EFB\\u4F55\\u7F29\\u8FDB\\u3002\"}),`\n`,(0,i.jsx)(n.h2,{children:\"\\u4F8B\\u5B50\"}),`\n`,(0,i.jsx)(n.p,{children:\"\\u4E0B\\u9762\\u7684\\u4F8B\\u5B50\\u663E\\u793A\\u4E86\\u7F29\\u8FDB\\uFF0C\\u4EE5\\u4F7F\\u8F93\\u51FA\\u66F4\\u5BB9\\u6613\\u7406\\u89E3\\u3002\"}),`\n`,(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:\"language-js\",children:`const doc = new DOMParser().parseFromString(\n  \\`<!DOCTYPE html>\n  <body>\n    <h1>Heading1</h1>\n    <h2>Heading2a</h2>\n    <h2>Heading2b</h2>\n    <h3>Heading3a</h3>\n    <h3>Heading3b</h3>\n    <h4>Heading4</h4>\n    <h2>Heading2c</h2>\n  </body>\\`,\n  'text/html',\n);\n\nconst htmlString = tableOfContents(doc);\nconsole.log(htmlString);\n// \\u4E3A\\u4E86\\u4FBF\\u4E8E\\u9605\\u8BFB\\uFF0C\\u8FDB\\u884C\\u4E86\\u7F8E\\u5316\\u3002\n\\`<ul>\n  <li>\n    Heading1\n    <ul>\n      <li>Heading2a</li>\n      <li>\n        Heading2b\n        <ul>\n          <li>Heading3a</li>\n          <li>\n            Heading3b\n            <ul>\n              <li>Heading4</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li>Heading2c</li>\n    </ul>\n  </li>\n</ul>\\`;\n`})})]})}function _(e={}){let{wrapper:n}=e.components||{};return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(a,e)})):a(e)}var M=_;return j(O);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/table-of-contents\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/table-of-contents.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/table-of-contents.run.test.ts": "import tableOfContents from './table-of-contents';\n\ndescribe('tableOfContents', () => {\n  test('empty', () => {\n    const doc = new DOMParser().parseFromString(\n      `\n<!DOCTYPE html>\n<html>\n<body>\n</body>\n</html>`,\n      'text/html',\n    );\n    expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(``);\n  });\n\n  test('only h1', () => {\n    const doc = new DOMParser().parseFromString(\n      `\n<!DOCTYPE html>\n<html>\n<body>\n  <h1>Blogpost</h1>\n</body>\n</html>`,\n      'text/html',\n    );\n    expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(\n      `<ul><li>Blogpost</li></ul>`,\n    );\n  });\n\n  test('nested', () => {\n    const doc = new DOMParser().parseFromString(\n      `\n  <!DOCTYPE html>\n  <html>\n  <body>\n    <h2>Foo</h2>\n    <h3>Bar</h3>\n    <h4>Baz</h4>\n    <h5>Qux</h5>\n    <h6>Quxx</h6>\n  </body>\n  </html>`,\n      'text/html',\n    );\n    expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(\n      `<ul>\n          <li>Foo\n            <ul>\n              <li>\n                Bar\n                <ul>\n                  <li>\n                    Baz\n                    <ul>\n                      <li>\n                        Qux\n                        <ul>\n                          <li>Quxx</li>\n                        </ul>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              </li>\n            </ul>\n          </li>\n        </ul>`.replace(/\\s/g, ''),\n    );\n  });\n});\n",
    "/src/table-of-contents.submit.test.ts": "import tableOfContents from './table-of-contents';\n\ndescribe('tableOfContents', () => {\n  test('empty', () => {\n    const doc = new DOMParser().parseFromString(\n      `\n<!DOCTYPE html>\n<html>\n<body>\n</body>\n</html>`,\n      'text/html',\n    );\n    expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(``);\n  });\n\n  describe('only one tag type', () => {\n    test('only h1', () => {\n      const doc = new DOMParser().parseFromString(\n        `\n  <!DOCTYPE html>\n  <html>\n  <body>\n    <h1>Blogpost</h1>\n  </body>\n  </html>`,\n        'text/html',\n      );\n      expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(\n        `<ul><li>Blogpost</li></ul>`,\n      );\n    });\n\n    test('only h2s', () => {\n      const doc = new DOMParser().parseFromString(\n        `\n    <!DOCTYPE html>\n    <html>\n    <body>\n      <h1>Blogpost</h1>\n      <h2>Foo</h2>\n      <h2>Bar</h2>\n      <h2>Baz</h2>\n    </body>\n    </html>`,\n        'text/html',\n      );\n      expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(\n        `<ul>\n          <li>\n            Blogpost\n            <ul>\n              <li>Foo</li>\n              <li>Bar</li>\n              <li>Baz</li>\n            </ul>\n          </li>\n        </ul>\n        `.replace(/\\s/g, ''),\n      );\n    });\n\n    test('only h3s', () => {\n      const doc = new DOMParser().parseFromString(\n        `\n  <!DOCTYPE html>\n  <html>\n  <body>\n    <h3>Foo</h3>\n    <h3>Bar</h3>\n    <h3>Baz</h3>\n  </body>\n  </html>`,\n        'text/html',\n      );\n      expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(\n        `<ul>\n          <li>Foo</li>\n          <li>Bar</li>\n          <li>Baz</li>\n        </ul>`.replace(/\\s/g, ''),\n      );\n    });\n\n    test('nested DOM', () => {\n      const doc = new DOMParser().parseFromString(\n        `\n  <!DOCTYPE html>\n  <html>\n  <body>\n    <div>\n      <h2>Foo</h2>\n    </div>\n    <h2>Bar</h2>\n    <div>\n      <div>\n        <h2>Baz</h2>\n      </div>\n    </div>\n  </body>\n  </html>`,\n        'text/html',\n      );\n      expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(\n        `<ul>\n          <li>Foo</li>\n          <li>Bar</li>\n          <li>Baz</li>\n        </ul>`.replace(/\\s/g, ''),\n      );\n    });\n  });\n\n  describe('nested', () => {\n    test('strictly ascending', () => {\n      const doc = new DOMParser().parseFromString(\n        `\n  <!DOCTYPE html>\n  <html>\n  <body>\n    <h2>Foo</h2>\n    <h3>Bar</h3>\n    <h4>Baz</h4>\n    <h5>Qux</h5>\n    <h6>Quxx</h6>\n  </body>\n  </html>`,\n        'text/html',\n      );\n      expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(\n        `<ul>\n          <li>Foo\n            <ul>\n              <li>\n                Bar\n                <ul>\n                  <li>\n                    Baz\n                    <ul>\n                      <li>\n                        Qux\n                        <ul>\n                          <li>Quxx</li>\n                        </ul>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              </li>\n            </ul>\n          </li>\n        </ul>`.replace(/\\s/g, ''),\n      );\n    });\n\n    test('ascending and descending once', () => {\n      const doc = new DOMParser().parseFromString(\n        `\n  <!DOCTYPE html>\n  <html>\n  <body>\n    <h2>Foo</h2>\n    <h2>Bar</h2>\n    <h3>Baz</h3>\n    <h3>Qux</h3>\n    <h2>Quxx</h2>\n  </body>\n  </html>`,\n        'text/html',\n      );\n      expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(\n        `<ul>\n          <li>Foo</li>\n          <li>\n            Bar\n            <ul>\n              <li>Baz</li>\n              <li>Qux</li>\n            </ul>\n          </li>\n          <li>Quxx</li>\n        </ul>`.replace(/\\s/g, ''),\n      );\n    });\n\n    test('ascending and descending many times', () => {\n      const doc = new DOMParser().parseFromString(\n        `\n  <!DOCTYPE html>\n  <body>\n    <h1>Heading1</h1>\n    <h2>Heading2a</h2>\n    <h2>Heading2b</h2>\n    <h3>Heading3a</h3>\n    <h3>Heading3b</h3>\n    <h4>Heading4</h3>\n    <h2>Heading2c</h2>\n  </body>`,\n        'text/html',\n      );\n      expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(\n        `<ul>\n          <li>\n            Heading1\n            <ul>\n              <li>Heading2a</li>\n              <li>\n                Heading2b\n                <ul>\n                  <li>Heading3a</li>\n                  <li>\n                    Heading3b\n                    <ul>\n                      <li>Heading4</li>\n                    </ul>\n                  </li>\n                </ul>\n              </li>\n              <li>Heading2c</li>\n            </ul>\n          </li>\n        </ul>`.replace(/\\s/g, ''),\n      );\n    });\n\n    test('ascending and descending all the way', () => {\n      const doc = new DOMParser().parseFromString(\n        `\n  <!DOCTYPE html>\n  <html>\n  <body>\n    <h2>Foo</h2>\n    <h2>Bar</h2>\n    <h3>Baz</h3>\n    <h4>Baz2</h4>\n    <h3>Qux</h3>\n    <h4>Baz3</h4>\n    <h4>Baz4</h4>\n    <h2>Quxx</h2>\n  </body>\n  </html>`,\n        'text/html',\n      );\n      expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(\n        `<ul>\n          <li>Foo</li>\n          <li>\n            Bar\n            <ul>\n              <li>\n                Baz\n                <ul>\n                  <li>Baz2</li>\n                </ul>\n              </li>\n              <li>\n                Qux\n                <ul>\n                  <li>Baz3</li>\n                  <li>Baz4</li>\n                </ul>\n              </li>\n            </ul>\n          </li>\n          <li>Quxx</li>\n        </ul>`.replace(/\\s/g, ''),\n      );\n    });\n\n    test('ascending and descending with nesting', () => {\n      const doc = new DOMParser().parseFromString(\n        `\n  <!DOCTYPE html>\n  <html>\n  <body>\n    <h2>Foo</h2>\n    <div>\n      <h2>Bar</h2>\n      <h3>Baz</h3>\n      <h3>Qux</h3>\n    </div>\n    <div>\n      <h2>Quxx</h2>\n    </div>\n  </body>\n  </html>`,\n        'text/html',\n      );\n      expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(\n        `<ul>\n          <li>Foo</li>\n          <li>\n            Bar\n            <ul>\n              <li>Baz</li>\n              <li>Qux</li>\n            </ul>\n          </li>\n          <li>Quxx</li>\n        </ul>`.replace(/\\s/g, ''),\n      );\n    });\n  });\n\n  test('ignores comment nodes', () => {\n    const doc = new DOMParser().parseFromString(\n      `\n  <!DOCTYPE html>\n  <html>\n  <body>\n    <h2>Foo</h2>\n    <!-- Comment -->\n    <div>\n      <h2>Bar</h2>\n      <h3>Baz<!-- Comment --></h3>\n      <h3>Qux</h3>\n    </div>\n    <div>\n      <h2>Quxx</h2>\n      <!-- Comment -->\n    </div>\n  </body>\n  </html>`,\n      'text/html',\n    );\n    expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(\n      `<ul>\n          <li>Foo</li>\n          <li>\n            Bar\n            <ul>\n              <li>Baz</li>\n              <li>Qux</li>\n            </ul>\n          </li>\n          <li>Quxx</li>\n        </ul>`.replace(/\\s/g, ''),\n    );\n  });\n\n  test('ignores text nodes', () => {\n    const doc = new DOMParser().parseFromString(\n      `\n  <!DOCTYPE html>\n  <html>\n  <body>\n    <h2>Foo</h2>\n    <div>\n      Text node\n      <h2>Bar</h2>\n      <h3>Baz</h3>\n      <h3>Qux</h3>\n    </div>\n    Text node\n    <div>\n      <h2>Quxx</h2>\n      Text node\n    </div>\n  </body>\n  </html>`,\n      'text/html',\n    );\n    expect(tableOfContents(doc).replace(/\\s/g, '')).toBe(\n      `<ul>\n          <li>Foo</li>\n          <li>\n            Bar\n            <ul>\n              <li>Baz</li>\n              <li>Qux</li>\n            </ul>\n          </li>\n          <li>Quxx</li>\n        </ul>`.replace(/\\s/g, ''),\n    );\n  });\n});\n",
    "/src/table-of-contents.ts": "type Node = {\n  text: string | null;\n  children: Array<Node>;\n};\n\nfunction stringify(contents: Node): string {\n  function stringifyNode(node: Node): string {\n    return `<li>${node.text}${stringifyChildren(node.children)}</li>`;\n  }\n\n  function stringifyChildren(children: Array<Node>): string {\n    return children.length > 0\n      ? `<ul>${children.map(stringifyNode).join('')}</ul>`\n      : '';\n  }\n\n  return stringifyChildren(contents.children);\n}\n\nconst headingTags = new Set(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\nexport default function tableOfContents(doc: Document): string {\n  const rootNode = {\n    text: null,\n    children: [],\n  };\n  const stack: Array<Node> = [rootNode];\n  let currentLevel = 0;\n\n  function traverse(element: Element) {\n    if (element == null || element.tagName == null) {\n      return;\n    }\n\n    if (headingTags.has(element.tagName.toLowerCase())) {\n      const level = parseInt(element.tagName[1], 10);\n      const node = {\n        text: element.textContent,\n        children: [],\n      };\n\n      for (let i = level; i < currentLevel + 1; i++) {\n        stack.pop();\n      }\n\n      stack[stack.length - 1].children.push(node);\n      stack.push(node);\n      currentLevel = level;\n    }\n\n    for (const child of element.children) {\n      traverse(child);\n    }\n  }\n\n  traverse(doc.body);\n\n  return stringify(stack[0]);\n}\n"
  },
  "metadata": {
    "access": "premium",
    "author": "yangshun",
    "companies": [
      "google"
    ],
    "created": 1649894400,
    "difficulty": "hard",
    "duration": 30,
    "excerpt": "实现一个从 HTML 文档构建目录的函数",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/table-of-contents",
    "importance": "medium",
    "languages": [
      "html",
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "table-of-contents",
    "subtitle": null,
    "title": "目录",
    "topics": [
      "recursion",
      "tree",
      "web-api"
    ]
  },
  "skeleton": {
    "js": "/**\n * @param {Document} doc\n * @return {string}\n */\nexport default function tableOfContents(doc) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function tableOfContents(doc: Document): string {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var f=Object.create;var c=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var N=(l,e)=>()=>(e||l((e={exports:{}}).exports,e),e.exports),v=(l,e)=>{for(var r in e)c(l,r,{get:e[r],enumerable:!0})},d=(l,e,r,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of p(e))!y.call(l,t)&&t!==r&&c(l,t,{get:()=>e[t],enumerable:!(i=m(e,t))||i.enumerable});return l};var C=(l,e,r)=>(r=l!=null?f(x(l)):{},d(e||!l||!l.__esModule?c(r,\"default\",{value:l,enumerable:!0}):r,l)),L=l=>d(c({},\"__esModule\",{value:!0}),l);var h=N((T,o)=>{o.exports=_jsx_runtime});var j={};v(j,{default:()=>O});var n=C(h());var s=MDXCodeBlock;var a=`function stringify(contents) {\n  function stringifyNode(node) {\n    return \\`<li>\\${node.text}\\${stringifyChildren(node.children)}</li>\\`;\n  }\n\n  function stringifyChildren(children) {\n    return children.length > 0\n      ? \\`<ul>\\${children.map(stringifyNode).join('')}</ul>\\`\n      : '';\n  }\n\n  return stringifyChildren(contents.children);\n}\n\nconst headingTags = new Set(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\n/**\n * @param {Document} doc\n * @return {string}\n */\nexport default function tableOfContents(doc) {\n  const rootNode = {\n    text: null,\n    children: [],\n  };\n  const stack = [rootNode];\n  let currentLevel = 0;\n\n  function traverse(element) {\n    if (element == null || element.tagName == null) {\n      return;\n    }\n\n    if (headingTags.has(element.tagName.toLowerCase())) {\n      const level = parseInt(element.tagName[1], 10);\n      const node = {\n        text: element.textContent,\n        children: [],\n      };\n\n      for (let i = level; i < currentLevel + 1; i++) {\n        stack.pop();\n      }\n\n      stack[stack.length - 1].children.push(node);\n      stack.push(node);\n      currentLevel = level;\n    }\n\n    for (const child of element.children) {\n      traverse(child);\n    }\n  }\n\n  traverse(doc.body);\n\n  return stringify(stack[0]);\n}\n`;var u=`type Node = {\n  text: string | null;\n  children: Array<Node>;\n};\n\nfunction stringify(contents: Node): string {\n  function stringifyNode(node: Node): string {\n    return \\`<li>\\${node.text}\\${stringifyChildren(node.children)}</li>\\`;\n  }\n\n  function stringifyChildren(children: Array<Node>): string {\n    return children.length > 0\n      ? \\`<ul>\\${children.map(stringifyNode).join('')}</ul>\\`\n      : '';\n  }\n\n  return stringifyChildren(contents.children);\n}\n\nconst headingTags = new Set(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\nexport default function tableOfContents(doc: Document): string {\n  const rootNode = {\n    text: null,\n    children: [],\n  };\n  const stack: Array<Node> = [rootNode];\n  let currentLevel = 0;\n\n  function traverse(element: Element) {\n    if (element == null || element.tagName == null) {\n      return;\n    }\n\n    if (headingTags.has(element.tagName.toLowerCase())) {\n      const level = parseInt(element.tagName[1], 10);\n      const node = {\n        text: element.textContent,\n        children: [],\n      };\n\n      for (let i = level; i < currentLevel + 1; i++) {\n        stack.pop();\n      }\n\n      stack[stack.length - 1].children.push(node);\n      stack.push(node);\n      currentLevel = level;\n    }\n\n    for (const child of element.children) {\n      traverse(child);\n    }\n  }\n\n  traverse(doc.body);\n\n  return stringify(stack[0]);\n}\n`;function g(l){let e=Object.assign({p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",ol:\"ol\",code:\"code\",h3:\"h3\",strong:\"strong\"},l.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"\\u8FD9\\u662F\\u4E00\\u4E2A\\u5B9E\\u7528\\u7684\\u95EE\\u9898\\uFF0C\\u5B83\\u88AB\\u7528\\u4E8E\\u8BB8\\u591A\\u5185\\u5BB9\\u4E30\\u5BCC\\u7684\\u7F51\\u7AD9\\uFF0C\\u5982\\u535A\\u5BA2\\u3001\\u6587\\u6863\\u7F51\\u7AD9\\u3001\\u8C37\\u6B4C\\u6587\\u6863\\uFF0C\\u4EE5\\u53CA\\u95EE\\u9898\\u4E2D\\u63D0\\u5230\\u7684\\u5C4F\\u5E55\\u9605\\u8BFB\\u5668\\u3002\"}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u6F84\\u6E05\\u95EE\\u9898\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5982\\u679C\\u9875\\u9762\\u4E0A\\u6CA1\\u6709\\u6807\\u9898\\uFF0C\\u5E94\\u8BE5\\u8FD4\\u56DE\\u4EC0\\u4E48\\uFF1F\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"\\u8FD4\\u56DE\\u4E00\\u4E2A\\u7A7A\\u5B57\\u7B26\\u4E32\\u3002\"}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,n.jsx)(e.p,{children:\"\\u8BE5\\u89E3\\u51B3\\u65B9\\u6848\\u53EF\\u4EE5\\u5206\\u4E3A\\u4E24\\u4E2A\\u90E8\\u5206\\uFF1A\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u904D\\u5386 \",(0,n.jsx)(e.code,{children:\"document\"}),\"\\uFF0C\\u8BC6\\u522B\\u6807\\u9898\\u6807\\u7B7E\\u5E76\\u521B\\u5EFA\\u5C42\\u6B21\\u7ED3\\u6784\\u6811\\u3002\"]}),`\n`,(0,n.jsx)(e.li,{children:\"\\u5C06\\u5C42\\u6B21\\u7ED3\\u6784\\u6811\\u5B57\\u7B26\\u4E32\\u5316\\u4E3A HTML \\u5B57\\u7B26\\u4E32\\u3002\"}),`\n`]}),`\n`,(0,n.jsxs)(e.h3,{children:[\"\\u904D\\u5386 \",(0,n.jsx)(e.code,{children:\"document\"}),\" \\u5E76\\u521B\\u5EFA\\u6807\\u9898\\u5C42\\u6B21\\u7ED3\\u6784\\u6811\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u7531\\u4E8E DOM \\u662F\\u4E00\\u68F5\\u6811\\uFF0C\\u6211\\u4EEC\\u5FC5\\u987B\\u4EE5\\u6DF1\\u5EA6\\u4F18\\u5148\\u7684\\u65B9\\u5F0F\\u904D\\u5386\\u5B83\\uFF0C\\u9012\\u5F52\\u5728\\u8FD9\\u91CC\\u975E\\u5E38\\u6709\\u6548\\u3002\\u4ECE\\u6839\\u5143\\u7D20\\uFF08\",(0,n.jsx)(e.code,{children:\"<body>\"}),\"\\uFF09\\u5F00\\u59CB\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u5904\\u7406\\u5F53\\u524D\\u5143\\u7D20\\uFF0C\\u7136\\u540E\\u4EE5\\u6DF1\\u5EA6\\u4F18\\u5148\\u7684\\u65B9\\u5F0F\\u904D\\u5386\\u5176\\u5B50\\u5143\\u7D20\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u4F7F\\u7528 \",(0,n.jsx)(e.code,{children:\"Element.tagName\"}),\" \\u6765\\u8BC6\\u522B\\u4E00\\u4E2A\\u5143\\u7D20\\u662F\\u5426\\u662F\\u6807\\u9898\\u5143\\u7D20\\u3002\\u8BF7\\u8BB0\\u4F4F\\uFF0C\",(0,n.jsx)(e.code,{children:\"tagName\"}),\" \\u90FD\\u662F\\u5927\\u5199\\u7684\\u3002\"]}),`\n`,(0,n.jsx)(e.p,{children:\"\\u6807\\u9898\\u5C42\\u6B21\\u7ED3\\u6784\\u4E5F\\u7C7B\\u4F3C\\u4E8E\\u4E00\\u68F5\\u6811\\u3002\\u5C42\\u6B21\\u7ED3\\u6784\\u6811\\u4E2D\\u7684\\u6BCF\\u4E2A\\u8282\\u70B9\\u90FD\\u5305\\u542B\\u4E24\\u4E2A\\u5C5E\\u6027\\uFF1A\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"text\"}),\"\\uFF1A\\u8282\\u70B9\\u7684\\u6807\\u7B7E\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"children\"}),\"\\uFF1A\\u4E00\\u4E2A\\u8282\\u70B9\\u6570\\u7EC4\\u3002\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u4E00\\u4E2A\\u6B63\\u786E\\u7684 HTML \\u6587\\u6863\\u7684\\u6807\\u9898\\u5C42\\u6B21\\u7ED3\\u6784\\u6811\\u5C06\\u9075\\u5FAA\\u4E00\\u4E2A\\u89C4\\u5219\\uFF0C\\u5373\\u8282\\u70B9\\u7684 \",(0,n.jsx)(e.code,{children:\"children\"}),\"\\uFF08\\u5982\\u679C\\u5B58\\u5728\\uFF09\\u5C06\\u59CB\\u7EC8\\u6BD4\\u5176\\u81EA\\u8EAB \",(0,n.jsx)(e.strong,{children:\"\\u4F4E\\u4E00\\u4E2A\\u6807\\u9898\\u7EA7\\u522B\"}),\"\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u6211\\u4EEC\\u5C06\\u4F7F\\u7528\\u4E00\\u4E2A \",(0,n.jsx)(e.code,{children:\"stack\"}),\" \\u6765\\u5F15\\u7528\\u6211\\u4EEC\\u5DF2\\u7ECF\\u904D\\u5386\\u8FC7\\u7684\\u6700\\u8FD1\\u7684\\u6807\\u9898\\u5143\\u7D20\\uFF0C\\u4EE5\\u53CA \",(0,n.jsx)(e.code,{children:\"currentLevel\"}),\"\\uFF0C\\u4E00\\u4E2A\\u6574\\u6570\\u53D8\\u91CF\\uFF0C\\u7528\\u4E8E\\u8DDF\\u8E2A\\u6700\\u8FD1\\u7684\\u6807\\u9898\\u5143\\u7D20\\u7684\\u7EA7\\u522B\\u3002\\u7EA7\\u522B\\u5F88\\u91CD\\u8981\\uFF0C\\u56E0\\u4E3A\\u5B83\\u4F1A\\u5F71\\u54CD\\u6211\\u4EEC\\u5982\\u4F55\\u5C06\\u5143\\u7D20\\u63A8\\u5165\\u6807\\u9898\\u5C42\\u6B21\\u7ED3\\u6784\\u3002\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u5F53\\u6211\\u4EEC\\u904D\\u5386\\u6811\\u65F6\\uFF0C\\u5982\\u679C\\u5F53\\u524D\\u5143\\u7D20\\u4E0D\\u662F\\u6807\\u9898\\u6807\\u7B7E\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u5FFD\\u7565\\u5B83\\u3002\\u5426\\u5219\\uFF0C\\u6211\\u4EEC\\u521B\\u5EFA\\u4E00\\u4E2A\\u5C42\\u6B21\\u7ED3\\u6784\\u8282\\u70B9\\uFF0C\\u5176\\u6587\\u672C\\u4E3A\\u5143\\u7D20\\u7684 \",(0,n.jsx)(e.code,{children:\"textContent\"}),\"\\uFF0C\",(0,n.jsx)(e.code,{children:\"children\"}),\" \\u4E3A\\u4E00\\u4E2A\\u7A7A\\u6570\\u7EC4\\u3002\\u7136\\u540E\\u6211\\u4EEC\\u67E5\\u770B\\u5F53\\u524D\\u5143\\u7D20\\u7684\\u7EA7\\u522B\\uFF1A\"]}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5982\\u679C\\u7EA7\\u522B\\u5927\\u4E8E \",(0,n.jsx)(e.code,{children:\"currentLevel\"}),\"\\uFF0C\\u6211\\u4EEC\\u5C06\\u6B64\\u8282\\u70B9\\u6DFB\\u52A0\\u4E3A\\u6700\\u8FD1\\u7684\\u6807\\u9898\\u8282\\u70B9\\uFF08\\u5806\\u6808\\u7684\\u9876\\u90E8\\u8282\\u70B9\\uFF09\\u7684\\u5B50\\u8282\\u70B9\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5982\\u679C\\u7EA7\\u522B\\u4E0E \",(0,n.jsx)(e.code,{children:\"currentLevel\"}),\" \\u76F8\\u540C\\uFF0C\\u6211\\u4EEC\\u9700\\u8981\\u5C06\\u6B64\\u8282\\u70B9\\u6DFB\\u52A0\\u4E3A\\u6700\\u8FD1\\u7684\\u6807\\u9898\\u8282\\u70B9\\u7684\\u5144\\u5F1F\\u8282\\u70B9\\u3002\\u6211\\u4EEC\\u53EF\\u4EE5\\u901A\\u8FC7\\u4ECE\\u5806\\u6808\\u4E2D\\u5F39\\u51FA\\u4EE5\\u8BBF\\u95EE\\u6700\\u8FD1\\u7684\\u6807\\u9898\\u8282\\u70B9\\u7684\\u7236\\u8282\\u70B9\\u6765\\u5B9E\\u73B0\\u8FD9\\u4E00\\u70B9\\u3002\\u7136\\u540E\\u5C06\\u8282\\u70B9 \",(0,n.jsx)(e.code,{children:\".push()\"}),\" \\u5230\\u7236\\u8282\\u70B9\\u7684 \",(0,n.jsx)(e.code,{children:\"children\"}),\" \\u4E2D\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u5982\\u679C\\u7EA7\\u522B\\u5C0F\\u4E8E \",(0,n.jsx)(e.code,{children:\"currentLevel\"}),\"\\uFF0C\\u6839\\u636E\\u7EA7\\u522B\\u5DEE\\u5F02\\uFF0C\\u6211\\u4EEC\\u53EF\\u80FD\\u9700\\u8981 \",(0,n.jsx)(e.code,{children:\".pop()\"}),\" \\u591A\\u6B21\\u3002\\u6807\\u9898\\u7EA7\\u522B\\u5728\\u589E\\u52A0\\u65F6\\u4E0D\\u4F1A\\u88AB\\u8DF3\\u8FC7\\uFF0C\\u4F46 \",(0,n.jsx)(e.code,{children:\"<h4>\"}),\" \\u540E\\u9762\\u8DDF\\u7740 \",(0,n.jsx)(e.code,{children:\"<h2>\"}),\" \\u662F\\u5B8C\\u5168\\u6709\\u6548\\u7684\\u3002\\u7531\\u4E8E\\u6807\\u9898\\u5C42\\u6B21\\u7ED3\\u6784\\u6811\\u7684\\u89C4\\u5219\\uFF0C\\u6211\\u4EEC\\u9700\\u8981\\u5F39\\u51FA\\u7684\\u6B21\\u6570\\u662F\\u7EA7\\u522B\\u5DEE + 1\\u3002\\u5728\\u5F39\\u51FA\\u4E86\\u90A3\\u4E48\\u591A\\u6B21\\u4E4B\\u540E\\uFF0C\\u6211\\u4EEC\\u5C06\\u53EF\\u4EE5\\u8BBF\\u95EE\\u6B63\\u786E\\u7684\\u7236\\u8282\\u70B9\\uFF0C\\u5E76\\u4E14\\u53EF\\u4EE5\\u5C06\\u5F53\\u524D\\u8282\\u70B9\\u63A8\\u5165\\u7236\\u8282\\u70B9\\u7684\\u5B50\\u8282\\u70B9\\u4E2D\\u3002\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"\\u5C06\\u5C42\\u6B21\\u7ED3\\u6784\\u6811\\u5B57\\u7B26\\u4E32\\u5316\\u4E3A HTML \\u5B57\\u7B26\\u4E32\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u540C\\u6837\\uFF0C\\u6211\\u4EEC\\u5728\\u8FD9\\u91CC\\u5C06\\u4F7F\\u7528\\u9012\\u5F52\\u3002\\u6211\\u4EEC\\u5C06\\u5B9A\\u4E49\\u4E24\\u4E2A\\u8F85\\u52A9\\u51FD\\u6570\\uFF0C\\u4E00\\u4E2A\\u7528\\u4E8E\\u5C06\\u8282\\u70B9\\u5B57\\u7B26\\u4E32\\u5316\\uFF0C\\u53E6\\u4E00\\u4E2A\\u7528\\u4E8E\\u5C06 \",(0,n.jsx)(e.code,{children:\"children\"}),\" \\u5B57\\u7B26\\u4E32\\u5316\\u3002\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"stringifyNode\"}),\"\\uFF1A\\u6BCF\\u4E2A\\u8282\\u70B9\\u90FD\\u5C06\\u5448\\u73B0\\u4E3A \",(0,n.jsx)(e.code,{children:\"<li>\"}),\" \\u5143\\u7D20\\u3002\\u6211\\u4EEC\\u5448\\u73B0 \",(0,n.jsx)(e.code,{children:\"text\"}),\" \\u548C \",(0,n.jsx)(e.code,{children:\"children\"}),\"\\uFF08\\u5982\\u679C\\u5B58\\u5728\\uFF09\\u3002\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"stringifyChildren\"}),\"\\uFF1A\\u6BCF\\u4E2A \",(0,n.jsx)(e.code,{children:\"children\"}),\" \\u90FD\\u662F\\u4E00\\u4E2A\\u6570\\u7EC4\\uFF0C\\u5B83\\u88AB\\u5448\\u73B0\\u4E3A \",(0,n.jsx)(e.code,{children:\"<ul>\"}),\"\\u3002\\u6211\\u4EEC\\u53EF\\u4EE5\\u5728 \",(0,n.jsx)(e.code,{children:\"children\"}),\" \\u4E2D\\u7684\\u6BCF\\u4E2A\\u8282\\u70B9\\u4E0A\\u8C03\\u7528 \",(0,n.jsx)(e.code,{children:\"stringifyNode\"}),\"\\u3002\\u6211\\u4EEC\\u4E0D\\u5E94\\u8BE5\\u5448\\u73B0\\u7A7A\\u7684 \",(0,n.jsx)(e.code,{children:\"<ul>\"}),\"\\uFF0C\\u56E0\\u6B64\\u5728\\u521B\\u5EFA\\u5B57\\u7B26\\u4E32\\u4E4B\\u524D\\uFF0C\\u6211\\u4EEC\\u5E94\\u8BE5\\u68C0\\u67E5 \",(0,n.jsx)(e.code,{children:\"children.length\"}),\" \\u662F\\u5426\\u5927\\u4E8E 0\\u3002\"]}),`\n`]}),`\n`,(0,n.jsx)(s,{languages:{jsx:a,tsx:u}}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u8FB9\\u7F18\\u60C5\\u51B5\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"\\u5FFD\\u7565 DOM \\u6811\\u4E2D\\u4E0D\\u76F8\\u5173\\u7684\\u8282\\u70B9\\uFF0C\\u4F8B\\u5982\\u6CE8\\u91CA\\u8282\\u70B9\\u548C\\u6587\\u672C\\u8282\\u70B9\\u3002\"}),`\n`,(0,n.jsx)(e.li,{children:\"\\u5177\\u6709\\u6DF1\\u5C42\\u5D4C\\u5957\\u7684 DOM \\u6811\\u3002\"}),`\n`,(0,n.jsx)(e.li,{children:\"\\u6839\\u672C\\u6CA1\\u6709\\u4EFB\\u4F55\\u6807\\u9898\\u7684 DOM \\u6811\\u3002\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u6280\\u672F\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"\\u9012\\u5F52\\u3002\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"DOM \\u904D\\u5386\\u57FA\\u7840 - \",(0,n.jsx)(e.code,{children:\"Element.textContent\"}),\"\\u3001\",(0,n.jsx)(e.code,{children:\"Element.tagName\"}),\"\\u3002\"]}),`\n`]})]})}function D(l={}){let{wrapper:e}=l.components||{};return e?(0,n.jsx)(e,Object.assign({},l,{children:(0,n.jsx)(g,l)})):g(l)}var O=D;return L(j);})();\n;return Component;",
  "workspace": {
    "main": "/src/table-of-contents.ts",
    "run": "/src/table-of-contents.run.test.ts",
    "submit": "/src/table-of-contents.submit.test.ts"
  }
}