{
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/sum\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/sum.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"target\": \"es2020\",\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\"\n  }\n}\n",
    "/src/sum.run.test.ts": "import sum from './sum';\n\ndescribe('sum', () => {\n  test('one number', () => {\n    expect(sum(1)()).toBe(1);\n  });\n\n  test('two numbers', () => {\n    // @ts-ignore\n    expect(sum(1)(2)()).toBe(3);\n  });\n});\n",
    "/src/sum.submit.test.ts": "import sum from './sum';\n\ndescribe('sum', () => {\n  test('one number', () => {\n    expect(sum(1)()).toBe(1);\n    expect(sum(-1)()).toBe(-1);\n  });\n\n  test('two numbers', () => {\n    // @ts-ignore\n    expect(sum(1)(2)()).toBe(3);\n    // @ts-ignore\n    expect(sum(89)(11)()).toBe(100);\n    // @ts-ignore\n    expect(sum(-1)(-2)()).toBe(-3);\n  });\n\n  test('zero works', () => {\n    // @ts-ignore\n    expect(sum(0)(0)(0)()).toBe(0);\n    // @ts-ignore\n    expect(sum(1)(2)(0)()).toBe(3);\n    // @ts-ignore\n    expect(sum(1)(0)(89)(10)()).toBe(100);\n    // @ts-ignore\n    expect(sum(-1)(0)(-2)()).toBe(-3);\n  });\n\n  test('negative numbers', () => {\n    // @ts-ignore\n    expect(sum(-1)(-2)()).toBe(-3);\n    // @ts-ignore\n    expect(sum(-89)(-2)()).toBe(-91);\n    // @ts-ignore\n    expect(sum(-42)(42)()).toBe(0);\n  });\n\n  test('returns function if not terminated', () => {\n    expect(sum(1)).toBeInstanceOf(Function);\n    // @ts-ignore\n    expect(sum(1)(2)).toBeInstanceOf(Function);\n    // @ts-ignore\n    expect(sum(1)(2)(3)).toBeInstanceOf(Function);\n  });\n\n  test('can be reused', () => {\n    const addTwo = sum(2);\n    // @ts-ignore\n    expect(addTwo(3)()).toBe(5);\n    // @ts-ignore\n    expect(addTwo(4)()).toBe(6);\n    // @ts-ignore\n    expect(addTwo(3)(4)()).toBe(9);\n  });\n});\n",
    "/src/sum.ts": "type SumResult = (value?: number) => number | SumResult;\n\nexport default function sum(numberA: number): SumResult {\n  return function (numberB) {\n    return numberB === undefined ? numberA : sum(numberA + numberB);\n  };\n}\n"
  },
  "skeleton": {
    "js": "/**\n * @param {number} value\n * @return {Function}\n */\nexport default function sum(value) {\n  throw 'Not implemented!';\n}",
    "ts": "type SumResult = (value?: number) => number | SumResult;\n\nexport default function sum(value: number): SumResult {\n  throw 'Not implemented!';\n}"
  },
  "workspace": {
    "main": "/src/sum.ts",
    "run": "/src/sum.run.test.ts",
    "submit": "/src/sum.submit.test.ts"
  }
}