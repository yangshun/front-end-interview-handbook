{
  "description": "var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var x=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),g=(n,e)=>{for(var o in e)r(n,o,{get:e[o],enumerable:!0})},i=(n,e,o,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of m(e))!f.call(n,c)&&c!==o&&r(n,c,{get:()=>e[c],enumerable:!(l=u(e,c))||l.enumerable});return n};var b=(n,e,o)=>(o=n!=null?d(p(n)):{},i(e||!n||!n.__esModule?r(o,\"default\",{value:n,enumerable:!0}):o,n)),j=n=>i(r({},\"__esModule\",{value:!0}),n);var a=x((k,s)=>{s.exports=_jsx_runtime});var y={};g(y,{default:()=>w,frontmatter:()=>_});var t=b(a()),_={title:\"useFocus\",excerpt:\"Implement a hook that enables programmatic focusing of an element\"};function h(n){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[\"Implement a \",(0,t.jsx)(e.code,{children:\"useFocus\"}),\" hook that enables programmatic focusing of an element.\"]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-jsx\",children:`export default function Component() {\n  const [ref, focus] = useFocus();\n\n  return (\n    <div>\n      <input ref={ref} type=\"text\" />\n      <button onClick={focus}>Focus input</button>\n    </div>\n  );\n}\n`})}),`\n`,(0,t.jsx)(e.h2,{children:\"Arguments\"}),`\n`,(0,t.jsx)(e.p,{children:\"Nothing.\"}),`\n`,(0,t.jsx)(e.h2,{children:\"Returns\"}),`\n`,(0,t.jsx)(e.p,{children:\"The hook returns an array with two elements:\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"A ref object that will be attached to the \",(0,t.jsx)(e.code,{children:\"ref\"}),\" prop of the element to focus. This has the type \",(0,t.jsx)(e.code,{children:\"RefObject<T>\"}),\", where \",(0,t.jsx)(e.code,{children:\"T\"}),\" extends \",(0,t.jsx)(e.code,{children:\"HTMLElement\"})]}),`\n`,(0,t.jsxs)(e.li,{children:[\"A function \",(0,t.jsx)(e.code,{children:\"() => void\"}),\" that can be called to programmatically focus the element\"]}),`\n`]})]})}function F(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(h,n)})):h(n)}var w=F;return j(y);})();\n;return Component;",
  "info": {
    "excerpt": "Implement a hook that enables programmatic focusing of an element",
    "title": "useFocus"
  },
  "solution": "var Component=(()=>{var h=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var j=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),g=(n,e)=>{for(var o in e)r(n,o,{get:e[o],enumerable:!0})},i=(n,e,o,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of p(e))!x.call(n,c)&&c!==o&&r(n,c,{get:()=>e[c],enumerable:!(s=m(e,c))||s.enumerable});return n};var F=(n,e,o)=>(o=n!=null?h(b(n)):{},i(e||!n||!n.__esModule?r(o,\"default\",{value:n,enumerable:!0}):o,n)),M=n=>i(r({},\"__esModule\",{value:!0}),n);var l=j((A,a)=>{a.exports=_jsx_runtime});var k={};g(k,{default:()=>T});var t=F(l());var d=MDXCodeBlock;var u=`import { RefObject, useCallback, useRef } from 'react';\n\nexport default function useFocus<T extends HTMLElement>(): [\n  RefObject<T>,\n  () => void,\n] {\n  const ref = useRef<T>(null);\n\n  const focusElement = useCallback(() => {\n    requestAnimationFrame(() => {\n      ref.current?.focus();\n    });\n  }, []);\n\n  return [ref, focusElement];\n}\n`;function f(n){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",a:\"a\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The \",(0,t.jsx)(e.code,{children:\"useFocus\"}),\" hook can be implemented by using \",(0,t.jsx)(e.code,{children:\"useRef\"}),\" to create the ref object and defining the function that calls the \",(0,t.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus\",children:(0,t.jsx)(e.code,{children:\"focus\"})}),\" method on the element referenced by the ref.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"We can additionally wrap the focus function in \",(0,t.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame\",children:(0,t.jsx)(e.code,{children:\"requestAnimationFrame\"})}),\" to ensure that the focus is applied by the next DOM repaint.\"]}),`\n`,(0,t.jsx)(d,{children:u})]})}function C(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(f,n)})):f(n)}var T=C;return M(k);})();\n;return Component;"
}