{
  "description": "var Component=(()=>{var s=Object.create;var t=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var x=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),y=(r,e)=>{for(var a in e)t(r,a,{get:e[a],enumerable:!0})},o=(r,e,a,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of m(e))!f.call(r,i)&&i!==a&&t(r,i,{get:()=>e[i],enumerable:!(c=u(e,i))||c.enumerable});return r};var b=(r,e,a)=>(a=r!=null?s(p(r)):{},o(e||!r||!r.__esModule?t(a,\"default\",{value:r,enumerable:!0}):a,r)),g=r=>o(t({},\"__esModule\",{value:!0}),r);var h=x((w,l)=>{l.exports=_jsx_runtime});var _={};y(_,{default:()=>W,frontmatter:()=>j});var n=b(h()),j={title:\"Unique With\",excerpt:\"Implement a function to remove all duplicate values from an array based on a specific comparison criteria\"};function d(r){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\",em:\"em\",ul:\"ul\",a:\"a\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Implement a function \",(0,n.jsx)(e.code,{children:\"uniqWith\"}),\" that takes in an array and returns a duplicate-free version of the array where only the first occurrence of each element compared to each other with \",(0,n.jsx)(e.code,{children:\"comparator\"}),\" is kept. The order of result values is determined by the order they occur in the array.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`uniqWith(array, iteratee);\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Arguments\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"array\"}),\" \",(0,n.jsx)(e.em,{children:\"(Array)\"}),\": The array to iterate over.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"comparator\"}),\" \",(0,n.jsx)(e.em,{children:\"(Function)\"}),\": The comparator invoked per element. The function is invoked with two arguments.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Returns\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.em,{children:(0,n.jsx)(e.code,{children:\"(Array)\"})}),\": Returns the unique array.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Examples\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`uniqWith([2.1, 1.2, 2.3], (a, b) => Math.floor(a) === Math.floor(b)); // => [2.1, 1.2]\n\nuniqWith([{ x: 1 }, { x: 2 }, { x: 1 }], (a, b) => a.x === b.x); //\\xA0=>\\xA0[{\\xA0x:\\xA01\\xA0},\\xA0{\\xA0x:\\xA02\\xA0}]\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The function should return an empty array if \",(0,n.jsx)(e.code,{children:\"array\"}),\" is empty.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`uniqWith([], (a, b) => a === b); // => []\n\nuniqWith([false, null, undefined, null], (a, b) => a === b); // => [false, null, undefined]\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://lodash.com/docs/#uniqWith\",children:[\"Lodash \",(0,n.jsx)(e.code,{children:\"_.uniqWith\"})]})}),`\n`]})]})}function q(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(d,r)})):d(r)}var W=q;return g(_);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/uniq-with\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/uniq-with.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/uniq-with.run.test.ts": "import uniqWith from './uniq-with';\n\ndescribe('uniqWith', () => {\n  test('empty array', () => {\n    expect(uniqWith([], (a, b) => a === b)).toEqual([]);\n  });\n\n  test('one value', () => {\n    expect(uniqWith([0], (a, b) => a === b)).toEqual([0]);\n  });\n\n  test('different values', () => {\n    expect(\n      uniqWith([2.1, 1.2, 2.3], (a, b) => Math.floor(a) === Math.floor(b)),\n    ).toEqual([2.1, 1.2]);\n  });\n\n  test('duplicate values', () => {\n    expect(\n      uniqWith([{ x: 1 }, { x: 2 }, { x: 1 }], (a, b) => a.x === b.x),\n    ).toEqual([{ x: 1 }, { x: 2 }]);\n  });\n});\n",
    "/src/uniq-with.submit.test.ts": "import uniqWith from './uniq-with';\n\ndescribe('uniqWith', () => {\n  test('empty array', () => {\n    expect(uniqWith([], (a, b) => a === b)).toEqual([]);\n  });\n\n  test('duplicate values', () => {\n    expect(uniqWith([2, 1, 2], (a, b) => a === b)).toEqual([2, 1]);\n    expect(uniqWith([2, 2, 1], (a, b) => a === b)).toEqual([2, 1]);\n    expect(uniqWith([2, 1, 2, 3], (a, b) => a === b)).toEqual([2, 1, 3]);\n  });\n\n  test('nested arrays', () => {\n    expect(\n      uniqWith([{ n: 1 }, { n: 2 }, { n: 1 }], (a, b) => a.n === b.n),\n    ).toEqual([{ n: 1 }, { n: 2 }]);\n    expect(\n      uniqWith(\n        [{ age: 30 }, { age: 22 }, { age: 22 }],\n        (a, b) => a['age'] === b['age'],\n      ),\n    ).toEqual([{ age: 30 }, { age: 22 }]);\n    expect(\n      uniqWith(\n        [{ data: { score: 10 } }, { data: { score: 10 } }],\n        (a: any, b: any) => a.data.score === b.data.score,\n      ),\n    ).toEqual([{ data: { score: 10 } }]);\n  });\n\n  test('strings comparison', () => {\n    expect(\n      uniqWith(\n        ['apple', 'pear', 'mango'],\n        (a: any, b: any) => a.length === b.length,\n      ),\n    ).toEqual(['apple', 'pear']);\n  });\n\n  test('mixed data types', () => {\n    expect(\n      uniqWith([1, '2', 3], (a: any, b: any) => Number(a) === Number(b)),\n    ).toEqual([1, '2', 3]);\n  });\n\n  test('non-existent value', () => {\n    expect(uniqWith([{ n: 1 }, { m: 2 }], (a, b) => a.m === b.m)).toEqual([\n      { n: 1 },\n      { m: 2 },\n    ]);\n  });\n\n  test('falsey values', () => {\n    expect(uniqWith([false, null, undefined, null], (a, b) => a === b)).toEqual(\n      [false, null, undefined],\n    );\n  });\n});\n",
    "/src/uniq-with.ts": "export default function uniqWith<T>(\n  array: Array<T>,\n  comparator: (a: T, b: T) => boolean,\n): Array<T> {\n  const result: Array<T> = [];\n\n  array.forEach((item) => {\n    // Check if result array contains the same value when compared with `comparator`.\n    const isUnique =\n      result.findIndex((resultItem) => comparator(item, resultItem)) === -1;\n    if (isUnique) {\n      result.push(item);\n    }\n  });\n\n  return result;\n}\n"
  },
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [],
    "created": 1712016000,
    "difficulty": "medium",
    "duration": 15,
    "excerpt": "Implement a function to remove all duplicate values from an array based on a specific comparison criteria",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/uniq-with",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": false,
    "ranking": 100,
    "similarQuestions": [
      "data-selection",
      "unique-array",
      "uniq-by"
    ],
    "slug": "uniq-with",
    "subtitle": null,
    "title": "Unique With",
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {Array} array The array to iterate over.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {Array} Returns the unique array.\n */\nexport default function uniqWith(array, comparator = (a, b) => a === b) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function uniqWith<T>(\n  array: Array<T>,\n  comparator: (a: T, b: T) => boolean,\n): Array<T> {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var p=Object.create;var o=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,q=Object.prototype.hasOwnProperty;var b=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),g=(t,e)=>{for(var n in e)o(t,n,{get:e[n],enumerable:!0})},c=(t,e,n,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of y(e))!q.call(t,a)&&a!==n&&o(t,a,{get:()=>e[a],enumerable:!(i=f(e,a))||i.enumerable});return t};var I=(t,e,n)=>(n=t!=null?p(x(t)):{},c(e||!t||!t.__esModule?o(n,\"default\",{value:t,enumerable:!0}):n,t)),T=t=>c(o({},\"__esModule\",{value:!0}),t);var l=b((W,s)=>{s.exports=_jsx_runtime});var C={};g(C,{default:()=>v});var r=I(l());var u=MDXCodeBlock;var d=`/**\n * @param {Array} array The array to iterate over.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {Array} Returns the unique array.\n */\nexport default function uniqWith(array, comparator = (a, b) => a === b) {\n  const result = [];\n\n  array.forEach((item) => {\n    // Check if result array contains the same value when compared with \\`comparator\\`.\n    const isUnique =\n      result.findIndex((resultItem) => comparator(item, resultItem)) === -1;\n    if (isUnique) {\n      result.push(item);\n    }\n  });\n\n  return result;\n}\n`;var h=`export default function uniqWith<T>(\n  array: Array<T>,\n  comparator: (a: T, b: T) => boolean,\n): Array<T> {\n  const result: Array<T> = [];\n\n  array.forEach((item) => {\n    // Check if result array contains the same value when compared with \\`comparator\\`.\n    const isUnique =\n      result.findIndex((resultItem) => comparator(item, resultItem)) === -1;\n    if (isUnique) {\n      result.push(item);\n    }\n  });\n\n  return result;\n}\n`;function m(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",ol:\"ol\",li:\"li\",ul:\"ul\",a:\"a\"},t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"Here's a solution that filters unique elements based obn a \",(0,r.jsx)(e.code,{children:\"comparator\"}),\". It iterates through the \",(0,r.jsx)(e.code,{children:\"array\"}),\", calls \",(0,r.jsx)(e.code,{children:\"findIndex\"}),\" to check for uniqueness based on \",(0,r.jsx)(e.code,{children:\"comparator\"}),\".\"]}),`\n`,(0,r.jsxs)(e.ol,{children:[`\n`,(0,r.jsxs)(e.li,{children:[\"Create an empty \",(0,r.jsx)(e.code,{children:\"result\"}),\" array to store the unique items.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[\"Iterate through \",(0,r.jsx)(e.code,{children:\"array\"}),\" and check if the current element is unique with items in \",(0,r.jsx)(e.code,{children:\"result\"}),\" based on \",(0,r.jsx)(e.code,{children:\"comparator\"}),\" using \",(0,r.jsx)(e.code,{children:\"findIndex\"}),\". If \",(0,r.jsx)(e.code,{children:\"findIndex\"}),\" gives -1, meaning value is unique, append the element into \",(0,r.jsx)(e.code,{children:\"result\"}),\".\"]}),`\n`]}),`\n`,(0,r.jsx)(u,{languages:{jsx:d,tsx:h}}),`\n`,(0,r.jsx)(e.h2,{children:\"Edge cases\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"To handle mixed data types, the \",(0,r.jsx)(e.code,{children:\"comparator\"}),\" function must be able to process them by either converting the elements to a common type.\"]}),`\n`,(0,r.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:(0,r.jsxs)(e.a,{href:\"https://lodash.com/docs/4.17.15#uniqWith\",children:[\"Lodash \",(0,r.jsx)(e.code,{children:\"_.uniqWith\"})]})}),`\n`]})]})}function k(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(m,t)})):m(t)}var v=k;return T(C);})();\n;return Component;",
  "workspace": {
    "main": "/src/uniq-with.ts",
    "run": "/src/uniq-with.run.test.ts",
    "submit": "/src/uniq-with.submit.test.ts"
  }
}