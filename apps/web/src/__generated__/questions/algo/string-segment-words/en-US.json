{
  "description": "var Component=(()=>{var u=Object.create;var c=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var x=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),w=(t,e)=>{for(var r in e)c(t,r,{get:e[r],enumerable:!0})},s=(t,e,r,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of p(e))!b.call(t,i)&&i!==r&&c(t,i,{get:()=>e[i],enumerable:!(d=g(e,i))||d.enumerable});return t};var j=(t,e,r)=>(r=t!=null?u(f(t)):{},s(e||!t||!t.__esModule?c(r,\"default\",{value:t,enumerable:!0}):r,t)),_=t=>s(c({},\"__esModule\",{value:!0}),t);var l=x((E,o)=>{o.exports=_jsx_runtime});var D={};w(D,{default:()=>M,frontmatter:()=>T});var n=j(l());var a=MDXTestExamples;var h=[{input:[[\"str\",\"greatfrontendgreat\"],[\"dict\",[\"frontend\",\"great\"]]],output:!0,explanation:\"The string can be segmented as 'great' + 'frontend' + 'great' as we can re-use 'great'.\"},{input:[[\"str\",\"abcd\"],[\"dict\",[\"a\",\"abc\",\"b\",\"cd\"]]],output:!0,explanation:\"The string can be segmented as 'a' + 'b' + 'cd'.\"},{input:[[\"str\",\"a\"],[\"dict\",[\"b\"]]],output:!1,explanation:\"The single character 'a' is not in the word dictionary.\"}];var T={title:\"Segment Words\",excerpt:\"Implement a function to check whether a string be formed from dictionary words\"};function m(t){let e=Object.assign({p:\"p\",code:\"code\",h3:\"h3\",ul:\"ul\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Given a string \",(0,n.jsx)(e.code,{children:\"str\"}),\" and a list of words \",(0,n.jsx)(e.code,{children:\"dict\"}),\", determine if \",(0,n.jsx)(e.code,{children:\"str\"}),\" can be segmented into a sequence of one or more words from \",(0,n.jsx)(e.code,{children:\"dict\"}),\". Words from \",(0,n.jsx)(e.code,{children:\"dict\"}),\" can be reused multiple times in the segmentation.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Return \",(0,n.jsx)(e.code,{children:\"true\"}),\" if it is possible to segment \",(0,n.jsx)(e.code,{children:\"str\"}),\", and \",(0,n.jsx)(e.code,{children:\"false\"}),\" otherwise.\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"Input\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"str: string\"}),\": A string representing the string to be segmented\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"dict: string[]\"}),\": An array of strings representing the dictionary of available words\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Notes\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Words from \",(0,n.jsx)(e.code,{children:\"dict\"}),\" can be used multiple times in the segmentation\"]}),`\n`]}),`\n`,(0,n.jsx)(a,{testCases:h}),`\n`,(0,n.jsx)(e.h3,{children:\"Constraints\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"1 <= \",(0,n.jsx)(e.code,{children:\"str.length\"}),\" <= 300\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"0 <= \",(0,n.jsx)(e.code,{children:\"dict.length\"}),\" <= 300\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"0 <= \",(0,n.jsx)(e.code,{children:\"dict[i].length\"}),\" <= 300\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"str\"}),\" and \",(0,n.jsx)(e.code,{children:\"dict[i]\"}),\" consist of only lowercase English letters\"]}),`\n`]})]})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(m,t)})):m(t)}var M=C;return _(D);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/string-segment-words\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/string-segment-words.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"resolveJsonModule\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/run.tests.json": "[\n  {\n    \"input\": [\n      [\"str\", \"greatfrontendgreat\"],\n      [\"dict\", [\"frontend\", \"great\"]]\n    ],\n    \"output\": true,\n    \"explanation\": \"The string can be segmented as 'great' + 'frontend' + 'great' as we can re-use 'great'.\"\n  },\n  {\n    \"input\": [\n      [\"str\", \"abcd\"],\n      [\"dict\", [\"a\", \"abc\", \"b\", \"cd\"]]\n    ],\n    \"output\": true,\n    \"explanation\": \"The string can be segmented as 'a' + 'b' + 'cd'.\"\n  },\n  {\n    \"input\": [\n      [\"str\", \"a\"],\n      [\"dict\", [\"b\"]]\n    ],\n    \"output\": false,\n    \"explanation\": \"The single character 'a' is not in the word dictionary.\"\n  }\n]\n",
    "/src/string-segment-words.run.test.ts": "import fn from './string-segment-words';\nimport runTestCases from './run.tests.json';\n\ndescribe('segmentWords', () => {\n  runTestCases.forEach((example: any) => {\n    test(`${example.input[0][0]} = ${example.input[0][1]} ${example.input[1][0]} = [${example.input[1][1]}]`, () => {\n      expect(fn(example.input[0][1], example.input[1][1])).toStrictEqual(\n        example.output,\n      );\n    });\n  });\n});\n",
    "/src/string-segment-words.submit.test.ts": "import segmentWords from './string-segment-words';\nimport submitTestCases from './submit.tests.json';\n\ndescribe('segmentWords', () => {\n  (submitTestCases as any[]).forEach((example: any) => {\n    test(`str = [${example.input[0][1]}] dict = ${example.input[1][1]}`, () => {\n      expect(\n        segmentWords(example.input[0][1], example.input[1][1]),\n      ).toStrictEqual(example.output);\n    });\n  });\n});\n",
    "/src/string-segment-words.ts": "export default function segmentWords(str: string, dict: string[]): boolean {\n  // Create a set from the word dictionary for quick lookup\n  const dictSet = new Set(dict);\n\n  // Create a DP array initialized to false, with an extra space for the base case\n  const dp: boolean[] = new Array(str.length + 1).fill(false);\n  dp[0] = true; // Base case: an empty string can always be segmented\n\n  // Iterate over the end positions of the substring\n  for (let end = 1; end <= str.length; end++) {\n    // Iterate over the start positions of the substring\n    for (let start = 0; start < end; start++) {\n      // If the substring from start to end can be segmented\n      if (dp[start] && dictSet.has(str.substring(start, end))) {\n        dp[end] = true; // Mark the end position as true\n        break; // No need to check further start positions for this end\n      }\n    }\n  }\n\n  // The last element in dp represents whether the entire string can be segmented\n  return dp[str.length];\n}\n",
    "/src/submit.tests.json": "[\n  {\n    \"input\": [\n      [\"s\", \"qptgkgpzm\"],\n      [\"wordDict\", [\"qptg\", \"kgpz\", \"m\"]]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"fu\"],\n      [\"wordDict\", []]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\"s\", \"ypibyhlthi\"],\n      [\"wordDict\", [\"ypibyhlthi\"]]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"z\"],\n      [\"wordDict\", [\"z\"]]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"ksowor\"],\n      [\"wordDict\", [\"ksowo\", \"r\"]]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"nvbjm\"],\n      [\"wordDict\", [\"n\"]]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\"s\", \"fmeavnxo\"],\n      [\"wordDict\", [\"fme\", \"vnxo\", \"a\"]]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"cafn\"],\n      [\"wordDict\", []]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\"s\", \"mezdplljk\"],\n      [\"wordDict\", [\"k\", \"lj\", \"mezdp\", \"l\"]]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"xvhut\"],\n      [\"wordDict\", [\"xvhu\"]]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"zsfwdurshywwvfdbassrtnepzrpeywlpnccelhnafqhumpzrjdrjtdyoczqjpiqgkbodxommehwrfwmxkgglnmepyabntas\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"s\",\n          \"shywwvfdbassrtnepzrpe\",\n          \"xommehwrfwmxk\",\n          \"zsfwdur\",\n          \"gglnmepyabnta\",\n          \"ywlpn\",\n          \"ccelhnafqhumpzrjdrjtdyoczqjpiqgkbod\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"dwwhslwhengfjvhxyxrcidcxgqzzwncotofnpwesozhodjsgkribffrcdhsvqhifhebvnboxzankdhajvqnctewfgjiyufpbefypxwqasctmtjnrbgnbqznblbakporswopaumaygzqqucxaeiurwbprsjjojndtirctrpsaurkzrkgceosoctvfhlueephfxfpodieqqphrxrokmexdicgcflnraulbvpetqymftqutpiaisbbbfcefyhcfuntknzbnmcyuyzyiwbcgnijvafmpgtxkuwbpukehiwpmoekp\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"oe\",\n          \"ntknzbnmcyuyzyiwbcgni\",\n          \"dwwhslwhengfjvhxyxrcidcxgqzzwncotofnpw\",\n          \"vafmpgtxkuwbpukehiwp\",\n          \"sozhodjsgkribffrcdhsvqhifhebvnboxzankdhajvqnctewfgjiyufpbefypxwqasctmtjnrbgnbqznblbakporswopaumaygzqqucxaeiurwbprsjjojndtirctrpsaurkzrkgceosoctvfhlueephfxfpodieqqphrxrokmexdicgcflnraulbvpetqymftqutpiaisbbbfcefyhcf\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"iedbguucnbgrlfmgcpjdrodywncvcujjnkflmocjjbavincpimcgoalhiatnqcmdehulzxlpsauwzzsnkapgxqgnmqdnjrzvklzfnifsdtjjqibmxgqsimwqspuzdqltcyefsrjxekslxoykiepmxbawjyjnzckrsplfygvvrrgiiuuvsnxodezksondwxgkdrcfoyihagkvblwachaplapjuwqgwklmayhqburbxveh\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"yhqburb\",\n          \"xve\",\n          \"h\",\n          \"qgnmqdnjrzvklzfnifsdtjjqibmxgqsimwqspuzdqltcyefsrjxekslxoykiepmxbawjyjnzckrsplfygvvrrgiiuuvsnxodezksondwxgkdrcfoyihagkvblwachaplapjuwqgwklma\",\n          \"iedbguucnbgrlfmgcpjdrodywncvcujjnkflmocjjbavincpimcgoalhiatnqcmdehulzxlpsauwzzsnkapgx\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"silmknnarvngndv\"],\n      [\"wordDict\", [\"n\", \"mknnarvn\", \"si\"]]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"ecqquaoxfqsyyqskpvgdnttoatvlxhyasxlmtyrpylbsoqbeqpjovydarvklruyfyycjenopuztkdgzivwynbwlwyqyvjdytsesoctygiwpkntzguhukuzzxdhbzzdaermaxuuiswxmflpihykaoufbixolxteqthympafwmhkupprpfvaxmkvjifretdzhnlvnveibltartllppvhjiyop\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"zdaermaxuuiswxmflpihykaoufbixolxteqthympafwmhkupprpfvaxmkvjifretdz\",\n          \"ecqquaoxfqsyyqskpvgdnttoatvlxhyasxlmtyrpylbsoqbeqpjovydarvklruyfyycjenopuztkdgzivwynbwlwyqyvjdytsesoctygiwpkntzguhukuzzxdhbz\",\n          \"hnlvnveibltartll\",\n          \"ppvhjiyop\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"lfbrdztidtgwkqfwonwpqpgimcipphikshsmaqwvryeyqjgerlmvxiomucmhddgzktpgixabmgetfkktutssfhvmlmewrjhpdiastwdlwmxiteuvklywrldhiilvqpgfqizjrxzeocpukpeopoujvcnkhuckcmmohy\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"fqizjrxz\",\n          \"lfbrdztidtgwkqfwonwpqpgi\",\n          \"ocpukpeopoujvcnkhuc\",\n          \"cipphikshsmaqwvryeyqjgerlmvxiomucmhddgzktpgixabmgetfkktutssfhvmlmewrjhpdiastwdlwmxiteuvklywrldhiilvqp\",\n          \"mmoh\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"wpiowrjfqxvapvszxnzdvbobhhmjnagvtdgcmztfhgnzwadgnhwbdlngqcgvabgrtvveszuluzfalulyecachtuypgwyzrvziznjeqtfxihkwfx\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"rvziznjeqtf\",\n          \"kwfx\",\n          \"htuypgwyz\",\n          \"wpiowrjfqxvapvszxnzdvbobhhmjnagvtdgcmztfhgnzwadgnhwbdlngqcgvabgrtvveszuluzfalulyecac\",\n          \"xih\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"yqiorsgvmzfhobrvzgkjzqkgidfqnzjxthlsiaqeatkqtwpmgfrhworkgpvxyqwkxpihccqfetlveyigbxspmxwdyyvtqybmwruiymirdodrwqcfachqsjaztrldevffmeocpagpzuzbmqcswzbbroxrbpfwhgqnzyfwtekrgbcbpvcoxxtthvwyvffjxmsyttgqcygghthdcwncewsbdedlbnuxyiwsohlmgncrsskcbqxdegcbxsifmdxzjjwuud\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"gncrsskcbqxdegcb\",\n          \"coxxtthvwyvffjxmsyttgqcygghthdcwncewsbdedlbnuxyiwsohl\",\n          \"yqiorsgvmzfhobrvzgkjzqkgidfqnzjxthlsiaqeatkqtwpmgfrhworkgpvxyqwkxpihccqfetlveyigbxspmxwdyyvtqybmwruiymirdodrwqcfachqsjaztrldevffmeocpagpzuzbmqcswzbbroxrbpfwhgqnzyfwtekrgbcbp\",\n          \"mdxzjjw\",\n          \"si\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"oajducqjjwmzwfiwvhttfdsjqjlvitypgebczxyngpsniqyhahsowdfypidusqwuudmsnmzfuyawquiedsrsxwarspvsgpnvtinsczcjtdefglygajhipjhaftojiycgmusujllnjnrajshgvfltkthncqjafpagpjjglsjephttaltgazhxpfeulosdrilwahtmiezuhdqheyrdjqpgwvyjsouvmjvowjazvzoqqzxkyklzglcgmlavqyjmvw\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"w\",\n          \"v\",\n          \"qyjm\",\n          \"oajducqjjwmzwfiwvhttfdsjqjlvitypgebczxyngpsniqyhahsowdfypidusqwuudmsnmzfu\",\n          \"yawquiedsrsxwarspvsgpnvtinsczcjtdefglygajhipjhaftojiycgmusujllnjnrajshgvfltkthncqjafpagpjjglsjephttaltgazhxpfeulosdrilwahtmiezuhdqheyrdjqpgwvyjsouvmjvowjazvzoqqzxkyklzglcgmlav\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"xmhklwitxmrhjaprotlvyfnnioohaatahpcwlduaryezofqkqwbezhvhfmzsvehdzbyaebchcqdtdiaxlfugbkmlxfbugmjwlrjntecpiyyxrximagvcixqeyoizxhnljpcfjnelooidiozwwvbuvjtmdkauvpdzszujdpzv\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"pdzs\",\n          \"ujd\",\n          \"xmhklwitxmrhjaprotlvyfnnioohaatahpcwlduaryezofqkqwbezhvhfmzsvehdzbyaebchcqdtdiaxlfugbkmlxfbugmjwlrjntecpiyyxrxi\",\n          \"agvcixqeyoizxhnljpcfjnelooidiozwwvbuvjtmdkau\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"bazpctjipewoqnxgbvrgbwntubflnqtoqhqbanwfkbiwfzrtoamybalomhvbiyvlwntdyzpgmjcomtzsfuueyofhphnmkqzxjryqcmlnyxewtutcvfymrejgzpymuxqnco\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"jgzpy\",\n          \"nqtoqhqbanwfkbiwfzrtoamybalomhvbiyvlwntdyzpgmjcomtzsfuueyofhphnmkqzxjryqcmlnyxewtutcv\",\n          \"o\",\n          \"c\",\n          \"muxqn\",\n          \"bazpctjipewoqnxgbvrgbwntubfl\",\n          \"fymre\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"dmuhqnlokbbcoofpgpcnxzluuaslhazzmkphweqtmcjcjqeqnpufxpvgdimhcrxgiokurxbhuhtd\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"ht\",\n          \"dmuhqnlokbbcoofpgpcnxzluuaslhazzmkphweqtmcjcjqeqnpufxpvgdimhcrxgiokurxbh\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"igodjyxjvktadxvzcbgheeqhimbweffststdenseccayunvrmagpkevftjwpizrsfzwgidozzqy\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"igodjyxjvktadxvzcbgheeqhimbweffststdenseccayunv\",\n          \"fzwgidozzqy\",\n          \"rmagpkevftjwpizrs\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"qaroccrysadxrqiqetmrkenoawnwcorbhynmsnlhsmvvkytifaeznmmpaiswckeqglmlptsiyvfoydjoucftxsyiojsbfcpudsqtkqipuwbwzmgngvkeytmgsfsrynydtreysbvpmuesyqzjaamwnqvdnodlndzixntbvrvs\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"iswckeqglmlptsiyvfoydjoucftxsyiojsbfcpudsqtkqipuwbwzmgngvkeytmgsfsrynydt\",\n          \"eysbvpmuesyqzjaamwnqv\",\n          \"odlndzixnt\",\n          \"q\",\n          \"roccrysadxrqiqetmrkenoawnwcorbhynmsnlhsmvv\",\n          \"ytifaeznmmp\",\n          \"vr\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"iacuqfhvuahzxzdssblimeotceqknssmddwphhmvikmlegkrmepztjbcrftdnhsrlndncypvikzlanjvrurktosgsaxjpffccprkyldlwozjgjtzuopbklmzaculebvzggnopjrpjqgjinmtljabhxrgeyfkzyusczgflqptpvwfqkjbdwppmlrnwmgtdgmmvtis\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"s\",\n          \"iacuqfhvuahzxzdssblimeotceqknssmddwphhmvikmlegkrmepztjbcrftdnhsrlndncypvikzlanjvrurktosgsaxjpffccprkyldlwozjgjtzuopbklmzaculebvzggnopjrpjqgjinmtljabhxrgeyfkzyusczgflqptpvwfqkjb\",\n          \"mvti\",\n          \"dwppmlrnwmgtdgm\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"syguizr\"],\n      [\"wordDict\", [\"iz\"]]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"lhqsgectgvdphykihdcsklfsyqsgsldqwczbcdbkpirsjjbhijydlgzgeafsqqetczfsdhpchwlpldlnlzrxblfzzdhlnbqljlaywvtiagljcqbdmegeqwqguvvhporfqtrpwnsqntamldtelsyijdwzyipezwqmqnjiefasgvfmlrwlaggtisymduzqraoxkkeymrzlkzjtrghqfhyilurlmfoadfysoblapgvwbfiaxozhwntywuwkcumokoruaogefhvpzopcpidcwuicjphbybjkylzicienqlo\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"cjphbybjkylzi\",\n          \"cienq\",\n          \"lhqsgectgvdphykihdcsklfsyqsgsld\",\n          \"l\",\n          \"qwczbcdbkpirsjjbhijydlgzgeafsqqetczfsdhpchwlpldlnlzrxblfzzdhlnbqljlaywvtiagljcqbdmegeqwqguvvhporfqtrpwnsqntamldtelsyijdwzyipezwqmqnjiefasgvfmlrwlaggtisymduzqraoxkkeymrzlkzjtrghqfhyilurlmfoadfysoblapgvwbfiaxozhwntywuwkcumok\",\n          \"o\",\n          \"oruaogef\",\n          \"hvpzopcpidcwui\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"esdjnpgqzuuremaljuxycwcyupeymkvuvroyesdxgpoxasyioqmcrnjarubccmachbmypndbfsszqjrdclvzefxhokgewovrjfe\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"esdjnpgqzuuremaljuxycwcyupeymkvuvroyesdxgpoxasyioqmcrnjarubccmachbmypndbfsszqjrdclvzef\",\n          \"h\",\n          \"e\",\n          \"o\",\n          \"k\",\n          \"rj\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"fbycgjhybxptpzuolwmtwcfkjwvplljbmstsfvrgcyrziarribunfpvmtmvgvsrqhmtehhlfdhbzqhwlfpseduvtzzesgvtccjvqflodhcnvvunoumlpujfljuhnheibiokyfeotvpttwjuqjtwqeivjocmikitpfngngiejzqnevatfxrecphfyayfdanqwkbmfmxaoghdvodicympazyukmnrilnoeudfvnpzpnhbybdfyckskzlmvyuezipovabftdprxogowevjjvihjo\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"wevjjv\",\n          \"j\",\n          \"ih\",\n          \"o\",\n          \"yckskzlmvyuezipovabftdprxogo\",\n          \"fbycgjhybxptpzuolwmtwcfkjwvplljbmstsfvrgcyrziarribunfpvmtmvgvsrqhmtehhlfdhbzqhwlfpseduvtzzesgvtccjvqflodhcnvvunoumlpujfljuhnheibiokyfeotvpttwjuqjtwqeivjocmikitpfngngiejzqnevatfxrecphfyayfdanqwkbmfmxaoghdvodicympazyukmnrilnoeudfvnpzpnhbybdf\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"wewyowoxnxondomkkitmaxldjhmprbriljdiasolkswindjbsgwoqjagytzrmqjbnwmwqlizrokajdenqaxmhvryupxolzputdjhvstejnyujrjhfojatxsnrgxszxwzdcscogjkreyhdnzclybvhjvyfdqeswqlkisgxiupmqvgqlpzgoicfvfpekfyjohnyktzthwarumqjfshigtgjoszdyuvaujbvarlcl\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"yujrjhfojatxsnrgxszxwzdcscogjkreyhdnzclybvhjvyfdqeswqlkisgxiupmqvgq\",\n          \"wewy\",\n          \"woxnxondomkkitmaxldjhmprbriljdiasolkswindjbsgwoqjagytzrmqjbnwmwqlizrokajdenqaxmhvryupxolzputdjhvstej\",\n          \"arl\",\n          \"pzgoicfvfpekfyjohnyktzthwarumqjfshigtgjoszdyuvaujb\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\"s\", \"bjzzubhzlsiphangegpmnutwheephxkxesrgxfvkecc\"],\n      [\n        \"wordDict\",\n        [\"bjzzubhzlsiphangegpmnutwheeph\", \"ke\", \"c\", \"xkxesrgxfv\", \"c\"]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"rvbofckidowaszslntbwvxjhwwgpvozgftgeskphtkursexajrntksysbwrvqwdirnjengylgoxqhxxzgiepomytzfsgwtsjwtvmzbwwjxiszqzfkrpjdekqyfzjhxplmseadizhgkysxtjdxdinbdcdylqlyarzxdjsgsjyldxsmfmezhyvqapidxfuiofipdxipmgyccvowfdfnuraugxiqlfrpxqdewxgaggnwwfjl\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"f\",\n          \"uraugxiqlfrpxqdewxgaggnw\",\n          \"zslntbwvxjhwwgpvozgftgeskphtkursexajrntksysbwrvqwdirnjengylgoxqhxxzgiepomytzfsgwtsjwtvmzbwwjxiszqzfkrpjdekqyfzjhxplmseadizhgkysxtjdxdinbdcdylqlyarzxdjsgsjyldxsmfmezhyvqapidxfuiofipdxipmgyccvowfdf\",\n          \"rvbofckidowa\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"lbeevjsyvhbvbgsxrubngspxccgghzjhsioerofwwnljvaolhsamhqvqnbuufwlncl\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"ofwwnljvaolh\",\n          \"l\",\n          \"vbgsxrubngspxccgghzjhsioer\",\n          \"lbeevjsyvhb\",\n          \"samhqv\",\n          \"qnbuuf\",\n          \"nc\",\n          \"l\",\n          \"w\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"xyoqcxgyalcubqndhjqrkynciwfxqcvxzivcoiolqcolnsxemtgqitemvtikisiucadcnpnwgfzdcvhcevhfaigaxotntlblmveihtkdjqwhvimbgggiupyoryxvjftptcidghyh\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"xyoqcxgyalcubqndhjqrkynciwfxqcvxzivcoiolqcolnsxemtgqitemvtikisiucadcnpnwgfzdcvhcevhfaigaxotntlblmveihtkdjqwhvimbgggiupyoryxvjftptcidg\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"rtwssocpflcghsdmziqomvapbcbalgpfcngflapjcdsnrfavzqlxnslcbivcqkmqdiutraftiphktecyz\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"rtwssocpflcghsdmziqomvapbcbalgpfcngflapjcdsnrfavzqlxnslcbivcqkmqdiutraftiphktecy\",\n          \"z\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"haognbbkplpfpzkcyouiryfutsnxmrohemqmcvwgcnetjwilbxpvoqilcdddmzkjqljxbnceigbbrzidnlpkiegd\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"wgcnetjwilbxpvoqilcdddmzkjqljxbnceigbb\",\n          \"g\",\n          \"zidnlpki\",\n          \"haognbbkplpfpzkcyouiryfutsnxmrohemqmc\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"fbtvtsoqsavrtrnoxmtyeacchwyujgehqqmsoxmmwtoansqfsfuquhnpqugfhdofirziqowbqaroiosjwlrfkevhtubhfngfijusulhimdmysneybyhlwpkfyiscscbnjvpgoanvleyfqchiacapgudfziubuigzcssfycjclcbpncpfrdwqeeylmzslwsdrnfxqmecarpsvdssxzvvrjehsevycsrhcmdnguqmccqahufnimescxlwqmumv\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"qmumv\",\n          \"ehsevycsr\",\n          \"eylmzslwsdrnfxqmecarpsvdssxzvvrj\",\n          \"sfycjclcbpncpfrdwqe\",\n          \"hcmdnguqm\",\n          \"ccqahufnimescxlw\",\n          \"fbtvtsoqsavrtrnoxmtyeacchwyujgehqqmsoxmmwtoansqfsfuquhnpqugfhdofirziqowbqaroiosjwlrfkevhtubhfngfijusulhimdmysneybyhlwpkfyiscscbnjvpgo\",\n          \"anvleyfqchiacapgudfziubuigzcs\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"mnzuelxiyzgeoyuewyzwfvbdkqpooerwjqlnrljjjamjnpydoqyfmfgfpowxoolmynwdbhtcsqmuqdcezcnyihcgmwmuxtelqravyahdoffrrswndddlbexouxikiliobuoanlfabhlzsdxypkrcvhrhmnmikkmdmcpipgtybzweytjouqoabikdxx\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"mnzuelxiyzgeoyuewyzwfvbdkqpooerwjqlnrljjjamjnpydoqyfmfgfpowxoolmynwdbhtcsqmuqdcezcnyihcgmwmuxtelqravyahdoffrrswndd\",\n          \"dx\",\n          \"lbexouxikiliobuoanlfabhlzsdxypkrcvhrhmnmikkmdmcpipgtybzweytjouqoab\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"dydujxxknocinzcpownhispcddpdqilewkssdghutebmqglmjzemunzqdkzkpwvkgmopopxyggstenavhxldjcajilhrjujopjhwowxtwuqxpccczdxypcctjixhdmlsdvyistgfctapllhtlokaxlijflddxinrjlsimpbkrkvvytwlwyvgtt\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"t\",\n          \"yvg\",\n          \"t\",\n          \"ytwlw\",\n          \"dydujxxknocinzcpownhispcddpdqilewkssdghutebmqglmjzemunzqdkzkpwvkgmopopxyggstenavhxldjcajilhrjujopjhwowxtwuqxpccczdxypcctjixhdmlsdvyistgfctapllhtlokaxlijflddxinrjlsimpbkrkvv\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"qjmpoixtgchbajtpxchfyibpgfuetzmexrwojiribxrvijwgihomvlgiqvsjeqaxbuuoopxgrwmztrqjvezrqwrnulldnrajdpblxslcbkwogmxpssqblwkzjnayirohybjckejjxa\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"jckejjx\",\n          \"qjmpoixtgchbajtpxchfyibpgfuetzmexrwojiribx\",\n          \"vijwgihomvlgiqvsjeqaxbuuoopxgrwmztrqjvez\",\n          \"rohy\",\n          \"qwrnulldnrajdpblxslcbkwogmxpssqblwkzjnay\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"ectsbqtdlzgdwsiprmjkhlpmsjcabxciftcnwcjxxzvsquiwqsnvhducucwudoagbdwidmheohavhjyblvmjpmeeehkingztpjfbeipdzloqbdgfmuujlemkmcpctaxaoqatfduqgokhbnvtmdpfjhkowftdxdiwmdvglxszcdzwucafunnjlceka\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"ek\",\n          \"a\",\n          \"wqsnvhducucwudoagbdwidmheohavhjyblvmjpmeeehkingztpjfbeipdzloqbdg\",\n          \"ectsbqtdlzgdwsiprmjkhlpmsjcabxciftcnwcjxxzvsqui\",\n          \"fmuujlemkmcpctaxaoqatfduqgokhbnvtmdpfjhkowftdxdiwmdvglxszcdzwucafunnjlc\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"idcymfawpcmfebmejkfzrungsphaonhruvmubnpmdivgbguslopyxszccmcadbhafw\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"zc\",\n          \"idcymfawpcmfebmejkfzrungsphaonhruvmubnpmdivgbguslo\",\n          \"yx\",\n          \"mcadbhaf\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"zdytkabffygnhpfwufteuwpqaypsobgbhnaavjymlflkzrdfqmcybkjngeocoeuaarucjkhcuksfaxodtympwpcjmnpvyqisaskvyxvlchexcisjiczeudrqmbaibxabdhcjfpmerpdbwmnwtgfaryuwaznfpkyjogleerkjuvokfiandpstcrnlnfegccnxfhvwauqffxnxikxofhmpjxoflgcjjibfkdjhbbhbxnmbmvuhtyofnderjdvhremangxzvzawpyoxmptifbmrzvknt\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"dhcjfpmerpdbwmnwtgfaryuwaznfpkyjogleerkjuvokfiandps\",\n          \"xm\",\n          \"pti\",\n          \"n\",\n          \"zdytkabffygnhpfwufteuwpqaypsobgbhnaavjymlflkzrdfqmcybkjngeocoeuaarucjkhcuksfaxodtympwpcjmnpvyqisaskvyxvlchexcisjiczeudrqmbaibxab\",\n          \"tcrnlnfegccnxfhvwauqffxnxikxofhmpjxoflgcjjibfkdjhbbhbxnmbmvuhtyofnderjdvhremangxzvz\",\n          \"fbmrzvk\",\n          \"awpyo\",\n          \"t\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"vmfnrgieasqdbsqbeqcwffgyazohshsyisuaezdunqwpqrmvwwbvblmpcjxghlcnuesjazrndkscwrrkmxortjyvqurmcnadnimumyeiclsreswgythfkqgwbxzyilrdvwmainippuwmbwmgnsiykvrtsjatqulwjatxmauipstzqhtnjgzmlwhybsiwfxfgwcboemsatewfpwqaxtintjwawvhqrwkgtyyipelhsgwcbnvbppxtfsedwoxmqa\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"wfpwqaxtintjwaw\",\n          \"vmfnrgieasqdbsqbeqcwffgyazohshsyisuaezdunqwpqrmvwwbvblmpcjxghlcnuesjazrndkscwrrkmxortjyvqurmcnadnimumyeiclsreswgy\",\n          \"elhsgwcbnvbppxtfs\",\n          \"d\",\n          \"xmq\",\n          \"h\",\n          \"zmlwhybsiwfxfgwcboemsat\",\n          \"fkqgwbxzyilrdvwmainippuwmbwmgnsiykvrtsjatqulwjatxmauipstzqhtnj\",\n          \"rwkgtyyi\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"akatxhxdlhwbzognyutdtgnzlsgxpghlobxalnvnjphtuqujxetoictrrbyzidqwjubkhicjywdnmttkhauxwwsssrtokbozjthwsxuo\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"hicjywdnmttkhauxwwsssrtokbozjthws\",\n          \"xu\",\n          \"o\",\n          \"akatxhxdlhwbzognyutdtgnzlsgxpghlobxalnvnjphtuqujxetoictrrbyzidqwjubk\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"ymyqpvarqjnxelyplltrpqwlluhddlbcnoyxtrqhbnffmyhbtkhujhmzaqynjdgvvciuwhbjegdwnpgchnmohcxrytssldciwlgpebagizlsqwvshgloqnabmspwqeusjcxomkamrirzdqowcibefqexaporqasknuppjiyiqxagcxaegxvxsdupxtycdelkfqjauhcpbuykponouoxpsaasjevqxklvura\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"myqpvarqjnxelyplltrpqwlluhddlbcnoyxtrqhbnffmyhbtkhujhmzaqynjdgvvciuwhbjegdwnpgchnmohcxrytssldciwlgpebagizlsqwvshgloqnabmspwqeusjcxomkamrirzdqowcibefqexaporqasknuppjiyiq\",\n          \"aasjevqxkl\",\n          \"agc\",\n          \"aegxvxsdupxtycdelkfqjauhcpbuykponouoxp\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\"s\", \"nwypryexmjkonsrrbrv\"],\n      [\"wordDict\", [\"nwypryexmjkons\", \"b\", \"rv\", \"rr\"]]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"eejjkmqptyxpjmqiqdntnxctiverefpxdtniixdpqsqwoirvzduavsygkwiobnzrsnsmlghsofjbtlsotgpttutnhgbhzzaabslpqpuvxlljqwcvdaosctzeagjxqkachapbfdsluvkrfxgntfixniucxhhoogedzsssbdurgpcjbbtrbzilageneozmniqfpjuplkghhelpv\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"kmqptyxpjmqiqdntnxctiverefpxdtniixdpqsqwoirvzduavsygkwiobnzrsnsmlghsofjbtlso\",\n          \"cvdaosctzeagjxqkachapbfdsluvkrfxgntfixniucxhhoogedzsssb\",\n          \"u\",\n          \"gpcjbbtrbzilageneozmniqfpj\",\n          \"gpttutnhgbhzzaabslpqpuvxlljq\",\n          \"eej\",\n          \"plkghhelp\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"luxqmogkrlhhjvdndtbgsnypgfxodlvexnttnovserudhxiwimywstkqmimqngqkkhjvletpydrilpvmflthrmkpd\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"jvletpydrilpvm\",\n          \"d\",\n          \"flthrmk\",\n          \"p\",\n          \"luxqmogkr\",\n          \"lhhjvdndtbgsnypgfxodlvexnttnovserudhxiwimywstkqmimqngqkkh\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"epzhvuizlsutxoruniachgvfiwwwdgrdsssyyuesdcohkzwzdlhewodwlmrblpksqcowbflocxntmddraifngjyuehereyxnkmobqnzoplzdyfmmaiirsgnxtaxkzfjiptgvydwbzurgwijwfpgqvpblitvnnfjxsylfczmvetdnvqzgfwtkwlrrmfbqxkrruicovccucljddhworvjttuamdvrzdx\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"b\",\n          \"nzoplzdyfmmaiirsgnxtaxkzfjiptgvydwbzurgwijwfpgqvpblitvnnfjxsylfcz\",\n          \"epzhvuizlsutxoruniachgvfiwwwdgrdsssyyuesdcohkzwzdlhewodwlmrblpksqcowbflocxntmddraifngjyuehereyxnkm\",\n          \"vetdnvqzgfwtkwlrrmfbqxkrruicovccucljddhworvjttuamdvrz\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"iclutrdkflodbhexuxnsqfampkcqfdduzfejfvkuorenihkivhocehxzjadheqqjbdfnuzmzdaknwdvbevwnilvlnzoutkvpxxfskpofehhhtktljfrtddancahocosiqketmnnmyqjeryiyhytgdnowzvurnzerlurcknewaoadzeoawcow\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"w\",\n          \"lur\",\n          \"o\",\n          \"cknewaoadzeoawc\",\n          \"iclutrdkflodbhexuxnsqfampkcqfdduzfejfvkuorenihkivhocehxzjadheqqjbdfnuzmzdaknwdvbevwnilvlnzoutkvpxxfskpofehhhtktljfrtddancahocosiqketmnnmyqjeryiyhytgdnowzvurnzer\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"muqmnerkpegetqkpvbaeqopvbspuvavcwkzjkzesbuibvqzw\"],\n      [\"wordDict\", [\"ib\", \"b\", \"qz\", \"muqmnerkpegetqkpvbaeqopvbspuvavcwkzjkze\"]]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\"s\", \"fpqmnretdih\"],\n      [\"wordDict\", [\"ih\", \"fpqmnretd\"]]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"ouqexuysdzjrbcccdwynpgmgjqjjxuqqyljhppgfhadfbgyfvlcgaulleqfoaldyvrddbiexetbbldx\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"leqfoaldyv\",\n          \"ddbiexetbbld\",\n          \"ouqexuysdzjrbc\",\n          \"ylj\",\n          \"cdwynpgmgjqjjxuq\",\n          \"ppgfhadfbgy\",\n          \"vlcgau\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"elzwxavwjfuhcqsedzglsysoplxkrfraxzrtdzkzzmizksyjvembrrogccgwboqgxzskpppsmobpeeklhftbqxdgfskurxezoqfdmywfxvwzzrpfgenrcwpiifssprkotknooxgbzrfterwqxpzpwohgpyoizovxxehghgvlrlmfrpdlffjrwgejuglbtbibalolyrkjzxudhardktf\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"lolyr\",\n          \"kjzxudhardk\",\n          \"elzwxavwjfuhcqsedzglsysoplxkrfraxzrtdzkzzmizksyjvembrrogccgwboqgxzskpppsmobpeeklhftbqxdgfskurxezoqfdmywfxvwzzrpfgenrcwpiifssprkotknooxgbzrfterwqxpzpwohgpyoizovxxehghgvl\",\n          \"f\",\n          \"rlmfr\",\n          \"pdlffjrwgejuglbtbiba\",\n          \"t\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"mvbawxqlgplvzeacakwhiurflmrrxycwogaawodtyuulazzcuqahlnmqzgvhmmcicggmcksuqzzanrstapcmgvjjounuvpldsmnkhdjwgmziabgsixdkregskhdnmbkwliohvrampmqhvzpjtbijbyfsntciazym\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"gsixdkregskhdnmbkwliohvrampmqhvzpjt\",\n          \"ijbyfsn\",\n          \"iaz\",\n          \"mvbawxqlgplvzeacakwhiurflmrrxycwogaawodtyuulazzcuqahlnmqzgvhmmcicggmcksuqzzanrstapcmgvjjounuvpldsmnkhdjwgmzia\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"golizaiixvvxjvruloixvnucxeynolqizaaqmtusmsxxetaystsqssvravbejsvnqszpoweekfalyphvqrffoktymxbqlpxopbnpxju\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"sqssvravbejsvnqszpoweekfalyphvqrffoktymxbql\",\n          \"u\",\n          \"golizaiixvvxjvruloixvnucxeynolqizaaqmtusmsxxetayst\",\n          \"pxopbnpxj\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"dusrzjjnetzycahhfyrfdlntdsbzdmigxsivyikdhgrhozhzvkknleopvthpdzynxcyozsjlbekqrtlgfrbebgp\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"zsjlbekqrtl\",\n          \"dusrzjjnetzycahhfyrfdlntdsbzdmigxsivyikdhgrhozhzvkknleopvthpdzynxcy\",\n          \"g\",\n          \"rbe\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"zanvoauugsoczhmowesmqjpvtqaxxtmsdujhatuatjxtydclfaykvftktpoklopbzxbrxpsvhfalwjxtjdzhajdfa\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"svhfa\",\n          \"lwjx\",\n          \"zanvoauugsoczhmowesmqjpvtqaxxtmsdujhatuatjxtydclfaykvftktpoklopbzxbr\",\n          \"dfa\",\n          \"xp\",\n          \"tjdzhaj\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"anzdwgaafzsimiewkgsvrdvvmodegyzcqshlxxbsncmnhigvwlohzbthzraczammcrnnkkykpsvrshsnqddrgphyqojalreliwnglpanmziunpqlkirpaxatchdvcmvkcsarftdunoflsfyrpioizbffzehnivmku\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"bffze\",\n          \"n\",\n          \"arftdu\",\n          \"vm\",\n          \"lsfyrpioi\",\n          \"o\",\n          \"anzdwgaafzsimiewkgsvrdvvmodegyzcqshlxxbsncmnhigvwlohzbthzraczammcrnnkkykpsvrshsnqddrgphyqojalreliwnglpanmziunpqlkirpaxatchdvcmvkc\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"mgfukztgeweneaicwxgeaiiiqacfioqrygrxtycyfwqfsrewtyzrkmlbybgoicqvjprvqcvxjksffyzgthcdxrtkffzcelmfssieyovtirustpqifdhvnerkhhelnwamljsqivpibywgaqgzbphgkmmsprcnpmmvzwbnwmfdsejzvaghpgzcokhqatmzaugazgbyeavqbtpdjlnkrfu\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"mgfukztgeweneaicwxgeaiiiqacfioqrygrxtycyfwqfsrewtyzrkmlbybgoicqvjprvqcvxjksffyzgthcdxrtkffzcelmfssieyovtirustpqifdhvnerkhhelnwamljsqivpibywgaqgzb\",\n          \"btpd\",\n          \"u\",\n          \"ejzvaghpgzcokhqatmzaugazgbyeavq\",\n          \"phgkmmsprcnpmmvzwbnwmfds\",\n          \"jlnkrf\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"oyfrsemjavlsjefduvvmejrgdctxdseiphlsymvesqyqxujakybpeqonbclixueluqjwsimwsupkakdrovafeufiqptewgdfhxiatslkemyxqdielnnyddvmqyiuwskytuofemsbjqtzfrwjjhsknhkzhsdxssssfftahgjmfd\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"hkzhsdxssssfftahgjm\",\n          \"oyfrsemjavlsjefduvvmejrgdctxdseiphlsymvesqyqxujakybpeqonbclixueluqjwsimwsupkakdrovafeufiqptewgdfhxiatslkemyxqdielnnyd\",\n          \"vmqyiuwskytuofemsbjqtzfrwjjhsk\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\"s\", \"x\"],\n      [\"wordDict\", [\"x\"]]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"oxxqrutzixtwbtgdikwbjoyqhtrtglpjmbfblewpzydqbmxsapufijhlebeiikepbmhetaivwejkqnbzhrczcyxabadvtryo\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"oxxqrutzixtwbtgdikwbjoyqhtrtglpjmbfblewpzy\",\n          \"vwejkqnbzhrczcyxabadv\",\n          \"kepbmheta\",\n          \"qbmxsapufijhlebei\",\n          \"ry\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"tyvsswirmjkvrqtvkyrplvgektpasctkbblpfyuxpensjxmarxqawkdhsohafvwufmpfpmkqmfyvedntmqnzbputydcjkgvpptzpbtfztqhszrenyauvbteybaetsislxyfzdqqnkhhiazgcdlfiefzfvldimqflmpzqjybaucsxizndcxedaizreonriuaopquuvghhlck\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"qjybaucsxizndcxedaizreonriuaopqu\",\n          \"ck\",\n          \"tyvsswirmjkvrqtvkyrplvgektpasctkbblpfyuxpensjxmarxqawkdhsohafvwufmpfpmkqmfyvedntmqnzbpu\",\n          \"ghhl\",\n          \"szrenyauvbteybaetsislxyfzdqqnkhhiazgcdlfiefzfvldimqflmpz\",\n          \"uv\",\n          \"tydcjkgvpptzpbtfztqh\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"lgqlchtoekwwcgfrhsyqcogyokhgvmreiziilibaojwfgabfmw\"],\n      [\"wordDict\", [\"lgqlchtoekwwcgfrhsyqcogyokhgvmreiziil\", \"aojwfgab\", \"m\"]]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"sxegnnbmmjaseqzhbijvtovhtbhiknkjjakffmuzlyhtbcfzrqhfjyciaiitixyokcvqjhytvjbpuefbmkxdquilomixmiorxpiziupjkhvjyksntjkxiqhparxnfezjjlmyztsefcjscavajlyjtzfcnjmufcdlmiujozopexwckrmdoatzoceiqiynsmnohsbzdusttxmwftmzephescrcfhuzqsbhlmhucjpwackaibwdrwfzdntgpwcnjo\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"qiynsmnohsbzdusttxmwftmzephescrcfhuzqsbhlmhucjpwackaibwdrwfzdntg\",\n          \"wcn\",\n          \"jo\",\n          \"sxegnnbmmjaseqzhbijvtovhtbhiknkjjakffmuzlyhtbcfzrqhfjyciaiitixyokcvqjhytvjbpuefbmkxdquilomixmiorxpiziupjkhvjyksn\",\n          \"tjkxiqhparxnfezjjlmyztsefcjscavajlyjtzfcnjmufcdlmiujozopexwckrmdoatzocei\",\n          \"p\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"qsicciqxiqynbsjwbnkmaxgjeqhktyyecikwoehcdmyemueovpwqgdsglmbvquponbshmqwboqancuxzeztuyptohucesdykzuddwxkqtnkpvn\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"qsicciqxiqynbsj\",\n          \"jeqhktyyecikwoehcdmyemueovpwqgdsglmbvquponbshmqwboqancuxzeztuyptohucesdykzuddwxkqtnkp\",\n          \"bnkmax\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"tyvsfnrxscixwhszishypvuouboznzdrzusluprorluuhatbpvkkohhgtvbghdzedbqtcdmmyljxtfbljdbldttdpmbcjrncroaeymwdmftouoyfqynsdnnouuqgogdglvzshzuwkgsipfvgwlcnlhaokqhceancrnsiitibfsrsjngsbepjtbtxzygdberkdrheqxlicaqidwuszufwugzkvyaialfsmltchptnonukwnriqmqozdhkkslnpqgzhctxoujyzgrcckacbsbggudktgddrm\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"tyvsfnrxscixwhszishypvuouboznzdrzusluprorluuhatbpvkkohhgtvbghdzedbqtcdmmyljxtfbljdbldttdpmbcjrncroaeymwdmftouoyfqynsdnnouuqgogdglvzshzuwkgsipfvgwlcnlhao\",\n          \"kqhceancrnsiitibfsrsjngsbepjtbtxzygdberkdrheqxlicaqidwuszufwugzkvyaialfsmltchptnonukwnriqmqozdhkkslnpqgzhctxoujyzgrcckacbsbggudktgd\",\n          \"drm\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"zfnmbrbxpyxwfdtpzzzjjxiqdsiwshsqxzfgcxjfvfmtactodofqhnbyfkxhrhgtpcfbjgknljechyaskglahasyqrlyekqqqsbtredqzqozisjkkbxdmosrvrlzvwhbmrcpuunnxywrdhmmfwqxyxdhesgvdvnpukxipparxriltao\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"edqzqozisjkkbxdmosr\",\n          \"l\",\n          \"rlzvwhbmrcpuunnxywrdhmmfwqxyx\",\n          \"hesgvdvnpukxipparxr\",\n          \"zfnmbrbxpyxwfdtpzzzjjxiqdsiwshsqxzfgcxjfvfmta\",\n          \"todofqhnbyfkxhrhgtpcfbjgknljechyaskglahasyqrlyekqqqsbt\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"waqapphyqdjflooviadjupypdacykspxaktcwhpmdayiiczhwwguxqwqgekgedaxffoydhzqqzkwqydaxgdyattygmdljyfcfvajacwcnvuptlgjqvyobqqkbutvyzmmacyidzosbxpppqhrbavfgqbhaorpkvdyaupcoomwnfltejayt\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"waqapphyqdjflooviadjupypd\",\n          \"yt\",\n          \"idzosbxpppqhrbavfgqbhaorpkvdyaupcoomwn\",\n          \"jqvyobqqkbutvyzmma\",\n          \"acykspxaktcwhpmdayiiczhwwguxqwqgekgedaxffoydhzqqzkwqydaxgdyattygmdljyfcfvajacwcnvuptlg\",\n          \"cy\",\n          \"flteja\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"cmgimbexzufhitnixmjcvbzzyanovpdlmaofqiyoqjgfkxwklfvjivointwslqwefozsurizxyknhgmnvgyaxsxnkpfbzrjqzpyxjolmgqvrqbbusypjozyuzditqrpzjbqekosrmxfqtqsxxwcmiaiksczrfexjaknoujipxyeukebqcptmaavvlovyetwfurierpufgryopuvgzznpxmrtbpdzdyrjswnrfkhkewhsjyqbopiknxyewfahzudyaeotkrtmhiyuqirvsivqskgayvwyfgsizxvdwyigueh\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"w\",\n          \"fgsizxvdw\",\n          \"mhiyuqirvsivqskgay\",\n          \"cmgimbexzufhitnixmjcvbzzyanovpdlmaofqiyoqjgfkxwklfvjivointwslqwefozsurizxyknhgmnvgyaxsxnkpfbzrjqzpyxjolmgqvrqbbusypjozyuzditqrpzjbqekosrmxfqtqsxxwcmiaiksczrfexjaknoujipxyeukebqcptmaavvlovyetwfurierpufgryopuvgzznpxmrtbpdzdyrjswnrfkhkewhsjyqbopiknxyewfahzudyaeotkr\",\n          \"igu\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\"s\", \"udamlvtxqfzfwqrqopbckoljvtfpuvgtcvzxepbepiknguyesuphazkw\"],\n      [\n        \"wordDict\",\n        [\n          \"qfzfwqrqopbckoljvtfpuvgt\",\n          \"w\",\n          \"uda\",\n          \"cvzxepbepiknguyesuphazk\",\n          \"mlvtx\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"gjthzslzgmqrktuvhuppzrrxjwjqzhfinwsrubiyakfcedjdrcykvicemxfpfhcsvtzrmvzlxvzheawpkjjygpgsdcwfqhfjvzedljbokwjonyispvucrkhkrwxabniugjlvoyupzhcguibwovqqjfpnrtshftwtgidwfzgnxs\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"jfpnrtshftwtgidwfzgnx\",\n          \"gjthzslzgmqrktuvhuppzrrxjwjqzhfinwsrubiyakfcedjdrcykvicemxfpfhcsvtzrmvzlxvzheawpkjjygpgsdcwfqhfjvzedljbokwjonyispvucrkhkrwxabniugjlvoyupzhcguibwovq\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"kxfpemvelaiepejfmqlsipbflsxhzzrpcwvcxgayjmgscxtpreltslsvtksxqkneqjbkugkrwhtdcgvrwmyeqyhifjrafculbbhajydxhcifjgihcbadyqshubtqlwknwrujkydodnebvkauhamkrdfbplybdgxnxqaakygeeifdvplbwxxtjpcldomgikwjtmxnbytvtswshqhaudiohxeorahtubqwj\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"kxfpemvelaiepejfmqlsipbflsxhzzrpcwvcxgayjmgscxtpreltslsvtksxqkneqjbkugkrwhtdcgvrwmyeqyhifjrafculbbhajydxhcifjgihcbadyqshubtqlwknwrujkydodnebvkauhamkrdfbplybdgxnxqaakygeeifdvplbwxxtj\",\n          \"qwj\",\n          \"ub\",\n          \"nbytvtswshqhaudiohxeoraht\",\n          \"pcldomgikwjtmx\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"ztnqbxjxieuphhwwzkgmyezytqwffcdgosv\"],\n      [\"wordDict\", [\"cdg\", \"zkgm\", \"f\", \"ezyt\", \"ztnqbxjxieuphhw\"]]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"vbopkztfrtxjcbvtdgecxagkkszuvowaljjivmcnrmofkudgesmcgzrntmdnpqpxcsrkkoyozzjrdhwrvgrbhvawtqohmvkiujsrhkflsyaepbkabnlvhxulznujcpt\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"p\",\n          \"vhxu\",\n          \"lzn\",\n          \"t\",\n          \"srhkflsyaepbkabnl\",\n          \"ujc\",\n          \"vbopkztfrtxjcbvtdgecxagkkszuvowaljjivmcnrmofkudgesmcgzrntmdnpqpxcsrkkoyozzjrdhwrvgrbhvawtqohmv\",\n          \"kiuj\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"ncpdubvlkpbavkgh\"],\n      [\"wordDict\", [\"ncpdub\", \"vk\", \"lkp\"]]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"xgvdopmbqomtxycusjoqobqmzgtopbhnhmvbmlnxwtdszkvwrkjbgeadjhhmhbtzvocmuvfdlaccpklqkzphxgdhoyxcuadfwwgozjkyrebgsvfsfsiiwpbvsnmisuzlpinqusgpkvjrbseqyxdfdowekuswqklqipttjpxhemnvvxuwroyrsvhachpxjcvucbi\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"i\",\n          \"seqyxdfdowekuswqklqi\",\n          \"hpxjcvu\",\n          \"cb\",\n          \"xgvdopmbqomtxycusjoqobqmzgtopbhnhmvbmlnxwtdszkvwrkjbgeadjhhmhbtzvocmuvfdlaccpklqkzphxgdhoyxcuadfwwg\",\n          \"pkvjrb\",\n          \"pttjpxh\",\n          \"ozjk\",\n          \"emnvvxuwroyrsvhac\",\n          \"yrebgsvfsfsiiwpbvsnmisuzlpinqusg\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"hehqhnwhjpnokmovsmafqsjgwgadwehhgbhpcqlepbf\"],\n      [\"wordDict\", [\"gbhp\", \"hehqhnwhjpnokmovsmafqsjgwg\", \"qlepb\", \"dweh\"]]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"pzctptxxtdnqzzdsqrwtfwioyeqdpnwfmpogrzqcpiljieezgprnbdzfsbsfofivxmwqfoqydyqgdnqjifsxnpvolxiqhpbzpsajayeppzraarzpreiznzyhnuusycknxdijntejpdjbzigklmlgewbbwyjspneabjprwxrcrcuaioprcgqvjesnqjgzvfdvqqwphmtw\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"aarzpreiznzyhnuusycknxdijntejpdjbzigklmlgewbbwyjspneabjprwxrcrcuaioprcgqvjesnq\",\n          \"tw\",\n          \"zr\",\n          \"jgzvfdvqqwp\",\n          \"pzctptxxtdnqzzdsqrwtfwioyeqdpnwfmpogrzqcpiljieezgprnbdzfsbsfofivxmwqfoqydyq\",\n          \"h\",\n          \"m\",\n          \"gdnqjifsxnpvolxiqhpbzpsajayepp\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"ccpjszfjiinvqmsyxpxrlxqn\"],\n      [\"wordDict\", [\"xrlx\", \"cc\", \"jszfjiinvqmsyx\"]]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"ohverotkhiupvvchqnhkhaahjafubacgwikzmkojohtkjgffmeoireykugsigueyjwrdnpkwvmovxrbqrbifnvrycnlcxokpqyydyuocbenzwawuuvakabslsjuvxxwvjlkrknmhlzsesncjlbsuzqlqhwrmagxxhyhdpfxxopyvqeantpeqccbismxnapyxkbghwyxbfuolhayskmcndmuhmcodyrgxuqtnrzmyfdhilszogicktnwsxyvbiw\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"zogicktnws\",\n          \"b\",\n          \"w\",\n          \"qtnrzmyfdhils\",\n          \"ohverotkhiupvvchqnhkhaahjafubacgwikzmkojohtkjgffmeoireykugsigueyjwrdnpkwvmovxrbqrbifnvrycnlcxokpqyydyuocbenzwawuuvakabslsjuvxxwvjlkrknmhlzsesncjlbsuzqlqhwrmagxxhyhdpfxxopyvqeantpeqccbismxnapyxkbghwyxbfuolhaysk\",\n          \"xyv\",\n          \"mcndmuhmcodyrgxu\",\n          \"i\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"ndhjirdaxivhstmrfcfmipnpzhzmltnxkjgbwsrrfkdaoer\"],\n      [\"wordDict\", [\"npzhzmltnxkjgbwsrrf\", \"e\", \"ndhjirdaxivhstmrfcfmi\"]]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\"s\", \"zkemuvpbfofywmzjvclmcxhhhdjqxsybkwdogmtihf\"],\n      [\"wordDict\", [\"hf\", \"ogm\", \"zkemuvpbfofywmzjvclmcxhhhdjqxsybkwd\", \"ti\"]]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"phwbffpbquiijbajiplolrgithaemgrocpziezqtfboaiwblwrranffcbdevsaq\"],\n      [\n        \"wordDict\",\n        [\n          \"anff\",\n          \"iwblwr\",\n          \"phwbffpbquiijbajiplolrgithaemgrocpziezqtfbo\",\n          \"bdevs\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"xbcadywfdhquuevvemdvlvlxtiwakecmzuoymcsnfkddsosroflautnqymghguskuwbkbqdyysyquvudgyeizqvytxdlzphxvnpwmgrpwbtexlqwguotedawknsfbybaauuneciugxnlzziysxyzmzmutfoxwfxthddutdrwzyziuoaicppchwsixyzhltzncgokgeedasxmbtlvmzcjvkfqzovbjjmhiuswfybbccvvzjhykftjuzojqlytpbjdwjnfqwhvhaiydjmlxdot\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"t\",\n          \"juzojqlytpbjdwjnfqwhvhaiydjmlxd\",\n          \"wfybbccvvzjhykft\",\n          \"o\",\n          \"xbcadywfdhquuevvemdvlvlxtiwakecmzuoymcsnfkddsosroflautnqymghguskuwbkbqdyysyquvudgyeizqvytxdlzphxvnpwmgrpwbtexlqwguotedawknsfbybaauuneciugxnlzziysxyzmzmutfoxwfxthddutdrwzyziuoaicppchwsixyzhltzncgokgeedasxmbtlvmzcjvkfqzovbjjmhius\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"rnqololsxrgvdxavvlirqwocdjaiwqbnskpwgzqknpgyiusweqmswzfsvgqlempvoqijubwemeuppczmfhzbaxnigoczzbsadotycjptxrytnjtfnbnbhhnkldgxybsmmseuoxfncdqgubcezoaellqigmuohvrjhoqfebxpnrmrmtarldxgpeacakkgv\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"rnqololsxrgvdxavvlirqwocdjaiw\",\n          \"kg\",\n          \"bnskpwgzqknpgyiusweqmswzfsvgqlempvoqijubwemeuppczmfhzbaxnigoczzbsadotycjptxrytnjtfnbnbhhnkldgxybsmmseuoxfncdqgubcezoaellqigmuohvrjhoqfebxpnrmrmtarldxgpeaca\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\"s\", \"hzcbvrzsysjeyfqgdaougwdvssxhtpepqvrnjsfxshijjrlgthtgfu\"],\n      [\n        \"wordDict\",\n        [\n          \"fu\",\n          \"hzcbvrzsysjeyfqgdaougwdvssxhtpepqvrnjsfxs\",\n          \"hijj\",\n          \"thtg\",\n          \"rlg\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"fnmzhbnqxzrgbgazvskkvauzkteslcyoscdloofkjklneielxcndssmdqkadfpkrvjyisxtlqsnjpbzyukbyqnyikatktgaezqkxcmmstksbilatasgnlwwootwjnhzhrwsilktsepwwekjrzalurlrlkwtiqrxkjtgzalffrexrvvflchjekkvrfuithjvxmlcqouuiidsfnpgmsd\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"fnmzhbnqxzrgbgazvskkvauzkteslcyoscdloofkjklneielxcnds\",\n          \"ds\",\n          \"gnlww\",\n          \"otwjnhzhrwsilktsepwwekjrzalurlrlkwtiqrxkjtgzalffrexrvvflchjekkvrfuithjvxmlcq\",\n          \"uui\",\n          \"mdqkadfpkrvjyisxtlqsnjpbzyukbyqnyikatktgaezqkxcmmstksbilata\",\n          \"np\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"qayewnspyurownqnohnedewszopguecxogblmouazknbdqsamgpyxluxrkkhvredpaldcltigywjzxabaulmmeoewmwjtroyzyzwdtvygikeedqslcjmnqfhyhsvjtxaveyysdbozszgcmgfvlxgtiybagnnohrsghnzpqhzrzrnvooxcomcggypkjnyphlj\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"j\",\n          \"zrn\",\n          \"hl\",\n          \"vooxcomcggypkjnyp\",\n          \"qayewnspyurownqnohnedewszopguecxogblmouazknbdqsamgpyxluxrkkhvredpaldcltigywjzxabaulmmeoewmwjtroyzyzwdtvygikeedqslcjmnqfhyhsvjtxaveyysdbozszgcmgfvlxgtiybagnnohrsghn\",\n          \"zpqhzr\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"ajdpyetdyrinugikgimsurdhhxbgkwaodtnuaalukbtgvtq\"],\n      [\"wordDict\", [\"ajdpyetdyrinugikgimsurdhhxb\", \"t\", \"dtnua\", \"lukb\", \"kwa\"]]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"nwtlkeczcxzlbalnclqjcufwxialhybbycyxtymjmicnnoqfoswtzuwzjyaxoveiwyknbxfvdrphwkqnywdftmtdmiscywamjsjuoexbjizjbztkppibuekkkuldtunhvkmobzdkhgrnhgwyypsxjmrnxsspkrmupfkxjjmbrspnjfaekkwmqaypeiubhqzgqdwrbopyrwchxakxmnxgiumndkjmvsgijpbdvxnruhozlznjdkmgfcvlzmvntpetmvmjndeapbyuzkzjzuxzvhoalvptcdjaosb\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"dj\",\n          \"nwtlkeczcxzlbalnclqjcufwxialhybbycyxtymjmicnnoqfoswtzuwzjyaxoveiwyknbxfvdrphwkqnywdftmtdmiscywamjsjuoexbjizjbztkppibuekkkuldtunhvkmobzdkhgrnhgwyypsxjmrn\",\n          \"gfcvlzmvntpetmvmjndeapbyu\",\n          \"zkzj\",\n          \"zuxzvhoalvptc\",\n          \"aosb\",\n          \"xsspkrmupfkxjjmbrspnjfaekkwmqaypeiubhqzgqdwrbopyrwchxakxmnxgiumndkjmvsgijpbdvxnruhozlznjdkm\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"qlmcziswvhvmzmbgxoahjqamipxcegeodxlpuwuhvzdismqlqaczkqunbetgornuvegdgyrjprdgmuuzudahplvawdbbxkyisojwnkbbzvwsibujcaceausxqsiypvbperqhjyhpblvaskdffrcxrsrnxurnhxqcvneyaylozerdkorbgbryzzrqkugzokxcfvttkknqzvchlzyslqienhqrryabhmxsojuowgqxczyiizcfvfdjtmjewggqpgvtmrxxeslydmblomvxylydrectlzzoalxkgpfsyrka\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"qlmcziswvhvmzmbgxoahjqamipxcegeodxlpuwuhvzdismqlqaczkqunbetgornuvegdgyrjprdgmuuzudahplvawdbbxkyisojwnkbbzvwsibujcaceausxqsiypvbperqhjyhpblvaskdffrcxrsrnxurnhxqcvneyaylozerdkorbgbryzzrqkugzokxcfvttkknqzvchlzyslqienhqrryabhmxsojuowgqxczyiizcfvfdjtmjewggqpgvtmrxxeslydmblomvxylydrectlzzoal\",\n          \"kgpfsy\",\n          \"k\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"oxmfifsgvavsbchvvkwszxngjoieryryffpamlmoomwxyprrugaypysyfmaikxkepcvctjeedmeyqwunjsknwpjqccrrslxrcttysqnoyarmarpivajsjwarvvggkkkiklkrqjhbiqnxgmkzfdixgquuccjshudiyowydstetmzbvshvzxytoirfuzjvysaaejpllidehmseuwehwpixwwmlrldujkfdblwfsphcubgtjvfqbbbzrxmgumhkfbypuxnvtwbiqjxsfinpianggcfbm\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"m\",\n          \"tmzbvshvzxytoirfuzjvysaaejp\",\n          \"llidehmseuwehwpixwwmlrldujkfdblwfsphcubgtjvfqbbbzrxmgumhkfbypuxnvtwbiqjxsfinpianggcf\",\n          \"b\",\n          \"oxmfifsgvavsbchvvkwszxngjoieryryffpamlmoomwxyprrugaypysyfmaikxkepcvctjeedmeyqwunjsknwpjqccrrslxrcttysqnoyarmarpivajsjwarvvggkkkiklkrqjhbiqnxgmkzfdixgquuccjshudiyowyds\",\n          \"te\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"akfsztpryqagxkqeoatxoxssidqskngnojhuxvokdllxrgwmhrhdzjzfznqaqqjbbvseudsdujucywctwnjppkeqwscucixyztiewikwbplvzyuetsbkfj\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"etsbkf\",\n          \"xvokdllxrgwmhrhdzjzfznqaqqjbbvseudsdujucywctwnjppkeqwscucixyztiewikwbplvzy\",\n          \"ojh\",\n          \"akfsztpryqagxkqeoatxoxssidqskng\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"faumwezmnaqeetphvmbzsytroqmccewtloednogdeacofbosczzeqjaninpkyngfdsbdqjsaeusybwjqdztsvawhbbtggpnlsdvllvafxolyvgiqshcrfgcuxkfvyxrwazemsddsgovnbbrlgegpehsijgkdciomnmxilbkvbsbvsumdptyvpzdyrojegjkgvidrbxxjluxmrrwbqomrnqnrkpepepibb\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"r\",\n          \"rnqn\",\n          \"bb\",\n          \"dztsvawhbbtggpnlsdvllvafxolyvgiqshcrfgcuxkfvyxrwazemsddsgovnbbrlgegpehsijgkdciomnmxilbkvbsbvsumdptyvpzdyrojegjkgvidrbxxjluxmrrwbqom\",\n          \"pepepi\",\n          \"zeqjaninpkyngfdsbdqjsaeusybwjq\",\n          \"k\",\n          \"faumwezmnaqeetphvmbzsytroqmccewtloednogdeacofboscz\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"xbfdxajweyvpzvyvphoiukhrfoyxoelmqnxpwfppgldwpkuuprhmzmjdjpjmnppgijulbcsdblqenskxvyrkbjmescwzwezxgfrrhxqfdevzijiyskxusethvxkdavaggtlnlynqjqkmdxebaliyndvszvphmuezbpvpjyaooxkjjkgoloepjzgjxdzltkbhcwayb\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"xkjjkgoloepjzgjxdzltkb\",\n          \"cwa\",\n          \"pjyao\",\n          \"xbfdxajweyvpzvyvphoiukhrfoyxoelmqnxpwfppgldwpkuuprhmzmjdjpjmnppgijulbcsdblqenskxvyrkbjmescwzwezxgfrrhxqfdevzijiyskxusethvxkdavaggtlnlynqjqkmdxeb\",\n          \"liyndvszvphmuezbp\"\n        ]\n      ]\n    ],\n    \"output\": false\n  },\n  {\n    \"input\": [\n      [\n        \"s\",\n        \"pwjpsglnlehbjyeftrtukixnezoudbbvdzaxemgdyowxpzdbnsfgljljuwisfwbsdjffooiqkfgzpcvjkuxxonwnwatoavlcpwdkllzunyyavhfobdnbhrvailypugfofopvgwwiggqjetqxgoljzhwxfuohqpcfms\"\n      ],\n      [\n        \"wordDict\",\n        [\n          \"f\",\n          \"iggqjetqxgoljz\",\n          \"pwjpsglnlehbjyeftrtukixnezoudbbvdzaxemgdyowxpzdbnsfgljljuwisfwbsdjffooiqkfgzpcvjkuxxonwnwatoavlcpwdkllzunyya\",\n          \"opvgww\",\n          \"h\",\n          \"qpc\",\n          \"hwxfuo\",\n          \"vhfobdn\",\n          \"bhrvailypugfof\",\n          \"ms\"\n        ]\n      ]\n    ],\n    \"output\": true\n  },\n  {\n    \"input\": [\n      [\"s\", \"okepxddfbfiqjafcvvpapsvxkgiooqakmmfcpagkzcoszh\"],\n      [\"wordDict\", [\"fcvvpapsvxkgiooqakmmfcpagkzcosz\", \"okep\", \"ddfbfiqj\"]]\n    ],\n    \"output\": false\n  }\n]\n"
  },
  "metadata": {
    "access": "standard",
    "author": "hiten",
    "companies": [],
    "created": 1720310400,
    "difficulty": "medium",
    "duration": 40,
    "excerpt": "Implement a function to check whether a string be formed from dictionary words",
    "featured": false,
    "format": "algo",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/algo/string-segment-words",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "string-segment-words",
    "subtitle": null,
    "title": "Segment Words",
    "topics": [
      "string",
      "dynamic-programming",
      "graph"
    ]
  },
  "skeleton": {
    "js": "/**\n * @param {string} str\n * @param {string[]} dict\n * @return {boolean}\n */\nexport default function segmentWords(str, dict) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function segmentWords(str: string, dict: string[]): boolean {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var m=Object.create;var s=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var k=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),x=(t,e)=>{for(var i in e)s(t,i,{get:e[i],enumerable:!0})},c=(t,e,i,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of f(e))!y.call(t,r)&&r!==i&&s(t,r,{get:()=>e[r],enumerable:!(o=p(e,r))||o.enumerable});return t};var w=(t,e,i)=>(i=t!=null?m(b(t)):{},c(e||!t||!t.__esModule?s(i,\"default\",{value:t,enumerable:!0}):i,t)),v=t=>c(s({},\"__esModule\",{value:!0}),t);var a=k((B,h)=>{h.exports=_jsx_runtime});var I={};x(I,{default:()=>C});var n=w(a());var d=MDXCodeBlock;var l=`export default function segmentWords(str: string, dict: string[]): boolean {\n  // Create a set from the word dictionary for quick lookup\n  const dictSet = new Set(dict);\n\n  // Create a DP array initialized to false, with an extra space for the base case\n  const dp: boolean[] = new Array(str.length + 1).fill(false);\n  dp[0] = true; // Base case: an empty string can always be segmented\n\n  // Iterate over the end positions of the substring\n  for (let end = 1; end <= str.length; end++) {\n    // Iterate over the start positions of the substring\n    for (let start = 0; start < end; start++) {\n      // If the substring from start to end can be segmented\n      if (dp[start] && dictSet.has(str.substring(start, end))) {\n        dp[end] = true; // Mark the end position as true\n        break; // No need to check further start positions for this end\n      }\n    }\n  }\n\n  // The last element in dp represents whether the entire string can be segmented\n  return dp[str.length];\n}\n`;var u=`export default function segmentWords(str: string, dict: string[]): boolean {\n  // Convert dict to a set for O(1) average time complexity lookups\n  const words = new Set(dict);\n\n  // Check for empty string as a base case\n  if (str.length === 0) return true;\n\n  // Initialize variables\n  const queue: number[] = [0];\n  const seen = new Set<number>();\n\n  // Breadth-first search loop\n  while (queue.length !== 0) {\n    // Check if queue is empty before dequeueing\n    if (queue.length === 0) return false; // String cannot be formed from words\n\n    const start = queue.shift()!; // Use non-null assertion after the check\n\n    // If we reached the end of the string, return true\n    if (start === str.length) return true;\n\n    // Iterate over all possible end indices from start + 1 to end of string\n    for (let end = start + 1; end <= str.length; end++) {\n      // Skip already processed end indices\n      if (seen.has(end)) continue;\n\n      // Check if substring from start to end exists in dict\n      if (words.has(str.substring(start, end))) {\n        // If found, enqueue the end index and mark as visited\n        queue.push(end);\n        seen.add(end);\n      }\n    }\n  }\n\n  // If no segmentation found, return false\n  return false;\n}\n`;function g(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",h3:\"h3\",ol:\"ol\",li:\"li\",ul:\"ul\",strong:\"strong\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"1. Using Dynamic Programming\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The dynamic programming approach solves the problem of segmenting a string into words from a given dictionary by breaking it into smaller subproblems. The key intuition is that if a prefix of the string can be segmented and the remaining substring exists in the dictionary, then the entire string can be segmented. A \",(0,n.jsx)(e.code,{children:\"dp\"}),\" array is used to store whether a substring ending at each position can be segmented.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"dp[i]\"}),\" represents whether the substring \",(0,n.jsx)(e.code,{children:\"str[0...i-1]\"}),\" can be segmented into valid words from the dictionary. This method ensures that overlapping subproblems are solved only once, avoiding redundant computations.\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"Algorithm\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Convert the word dictionary into a \",(0,n.jsx)(e.code,{children:\"Set\"}),\" for fast lookup of words.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Create a \",(0,n.jsx)(e.code,{children:\"dp\"}),\" array of size \",(0,n.jsx)(e.code,{children:\"str.length + 1\"}),\" initialized to \",(0,n.jsx)(e.code,{children:\"false\"}),\".\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Set \",(0,n.jsx)(e.code,{children:\"dp[0]\"}),\" to \",(0,n.jsx)(e.code,{children:\"true\"}),\" because an empty string can always be segmented.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Iterate through the string to check substrings ending at each position \",(0,n.jsx)(e.code,{children:\"end\"}),\":\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"For each \",(0,n.jsx)(e.code,{children:\"end\"}),\", iterate through possible starting positions \",(0,n.jsx)(e.code,{children:\"start\"}),\" of substrings.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Check if the substring \",(0,n.jsx)(e.code,{children:\"str[start...end-1]\"}),\" exists in the dictionary and if \",(0,n.jsx)(e.code,{children:\"dp[start]\"}),\" is \",(0,n.jsx)(e.code,{children:\"true\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"If both conditions are satisfied, set \",(0,n.jsx)(e.code,{children:\"dp[end]\"}),\" to \",(0,n.jsx)(e.code,{children:\"true\"}),\" and break the inner loop.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Return the value of \",(0,n.jsx)(e.code,{children:\"dp[str.length]\"}),\", which indicates whether the entire string can be segmented.\"]}),`\n`]}),`\n`,(0,n.jsx)(d,{children:l}),`\n`,(0,n.jsx)(e.h3,{children:\"Big-O analysis\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Time complexity: O(n.m.k)\"}),\". Calculating whether the substring exists in the dictionary costs O(m.k), where \",(0,n.jsx)(e.code,{children:\"m\"}),\" is the size of the dictionary and \",(0,n.jsx)(e.code,{children:\"k\"}),\" is the average word length. Since there are O(n) states to calculate, the total time complexity is O(n.m.k).\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Space complexity: O(n)\"}),\". The \",(0,n.jsx)(e.code,{children:\"dp\"}),\" array requires O(n) space.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"2. Using BFS\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The breadth-first search (BFS) approach solves the string segmentation problem by exploring all possible segmentations as levels in a graph. The key intuition is that the problem can be represented as navigating from the start to the end of the string, where each valid substring corresponds to an edge connecting two nodes (indices). A queue is used to perform BFS, starting from index \",(0,n.jsx)(e.code,{children:\"0\"}),\", and exploring all possible substrings that exist in the dictionary.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The use of BFS ensures that the solution checks all valid paths systematically. To prevent redundant computations, a \",(0,n.jsx)(e.code,{children:\"seen\"}),\" set is used to track already visited indices.\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"Algorithm\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Convert the dictionary \",(0,n.jsx)(e.code,{children:\"dict\"}),\" into a \",(0,n.jsx)(e.code,{children:\"Set\"}),\" for O(1) average time complexity lookups.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Check the base case where the string is empty. If the string is empty, return \",(0,n.jsx)(e.code,{children:\"true\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Initialize a queue with the starting index \",(0,n.jsx)(e.code,{children:\"0\"}),\" and a \",(0,n.jsx)(e.code,{children:\"seen\"}),\" set to track visited indices.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Perform BFS:\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Dequeue the front element of the queue, representing the current starting index.\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"If the starting index equals the length of the string, return \",(0,n.jsx)(e.code,{children:\"true\"}),\", as the string can be segmented.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Iterate over all possible ending indices from \",(0,n.jsx)(e.code,{children:\"start + 1\"}),\" to \",(0,n.jsx)(e.code,{children:\"str.length\"}),\":\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Skip indices that are already in the \",(0,n.jsx)(e.code,{children:\"seen\"}),\" set.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"If the substring from \",(0,n.jsx)(e.code,{children:\"start\"}),\" to \",(0,n.jsx)(e.code,{children:\"end\"}),\" exists in the dictionary:\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Add the \",(0,n.jsx)(e.code,{children:\"end\"}),\" index to the queue.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Mark the \",(0,n.jsx)(e.code,{children:\"end\"}),\" index as visited in the \",(0,n.jsx)(e.code,{children:\"seen\"}),\" set.\"]}),`\n`]}),`\n`]}),`\n`]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[\"If the queue is exhausted and no valid segmentation is found, return \",(0,n.jsx)(e.code,{children:\"false\"}),\".\"]}),`\n`]}),`\n`,(0,n.jsx)(d,{children:u}),`\n`,(0,n.jsx)(e.h3,{children:\"Big-O analysis\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsxs)(e.strong,{children:[\"Time complexity: O(n\",(0,n.jsx)(\"sup\",{children:\"3\"}),\" + m\\u22C5k)\"]}),\". There are O(n) nodes, and each node is visited at most once due to the \",(0,n.jsx)(e.code,{children:\"seen\"}),\" set. At each node, the algorithm iterates over the nodes in front of the current node (O(n)) and creates substrings (O(n)), resulting in O(n\",(0,n.jsx)(\"sup\",{children:\"2\"}),\") per node. Thus, the BFS costs O(n\",(0,n.jsx)(\"sup\",{children:\"3\"}),\"). Additionally, creating the \",(0,n.jsx)(e.code,{children:\"words\"}),\" set from the dictionary costs O(m\\u22C5k), where \",(0,n.jsx)(e.code,{children:\"m\"}),\" is the size of the dictionary and \",(0,n.jsx)(e.code,{children:\"k\"}),\" is the average word length.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Space complexity: O(n + m\\u22C5k)\"}),\". The \",(0,n.jsx)(e.code,{children:\"queue\"}),\" and \",(0,n.jsx)(e.code,{children:\"seen\"}),\" set require O(n) space, while the \",(0,n.jsx)(e.code,{children:\"words\"}),\" set requires O(m\\u22C5k) space.\"]}),`\n`]})]})}function q(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(g,t)})):g(t)}var C=q;return v(I);})();\n;return Component;",
  "workspace": {
    "main": "/src/string-segment-words.ts",
    "run": "/src/string-segment-words.run.test.ts",
    "submit": "/src/string-segment-words.submit.test.ts"
  }
}