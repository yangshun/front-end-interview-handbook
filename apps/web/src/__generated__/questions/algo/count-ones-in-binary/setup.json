{
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/count-ones-in-binary\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/count-ones-in-binary.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"resolveJsonModule\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/count-ones-in-binary.run.test.ts": "import fn from './count-ones-in-binary';\nimport runTestCases from './run.tests.json';\n\ndescribe('countOnesInBinary', () => {\n  runTestCases.forEach((example: any) => {\n    test(`${example.input[0][0]} = ${example.input[0][1]}`, () => {\n      expect(fn(example.input[0][1])).toStrictEqual(example.output);\n    });\n  });\n});\n",
    "/src/count-ones-in-binary.submit.test.ts": "import countOnesInBinary from './count-ones-in-binary';\nimport submitTestCases from './submit.tests.json';\n\ndescribe('countOnesInBinary', () => {\n  (submitTestCases as any[]).forEach((example: any) => {\n    test(`n = ${example.input[0][1]}`, () => {\n      expect(countOnesInBinary(example.input[0][1])).toStrictEqual(\n        example.output,\n      );\n    });\n  });\n});\n",
    "/src/count-ones-in-binary.ts": "export default function countOnesInBinary(num: number): number {\n  // Count the number of set bits using Brian Kernighan's algorithm\n  let count: number = 0;\n  while (num !== 0) {\n    count += num & 1; // Check the least significant bit whether it is a set bit and update the counting result\n    num >>>= 1; // Unsigned right shift by 1 bit\n  }\n  return count;\n}\n",
    "/src/run.tests.json": "[\n  {\n    \"input\": [[\"num\", 8]],\n    \"output\": 1,\n    \"explanation\": \"The given number in binary (1000) has a total of one set bit\"\n  },\n  {\n    \"input\": [[\"num\", 9]],\n    \"output\": 2,\n    \"explanation\": \"The given number in binary (1001) has a total of two set bit\"\n  },\n  {\n    \"input\": [[\"num\", 123]],\n    \"output\": 6,\n    \"explanation\": \"The given number in binary (1111011) has a total of six set bit\"\n  }\n]\n",
    "/src/submit.tests.json": "[\n  {\n    \"input\": [[\"num\", 10]],\n    \"output\": 2\n  },\n  {\n    \"input\": [[\"num\", 2]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"num\", 7]],\n    \"output\": 3\n  },\n  {\n    \"input\": [[\"num\", 4]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"num\", 10]],\n    \"output\": 2\n  },\n  {\n    \"input\": [[\"num\", 5]],\n    \"output\": 2\n  },\n  {\n    \"input\": [[\"num\", 10]],\n    \"output\": 2\n  },\n  {\n    \"input\": [[\"num\", 10]],\n    \"output\": 2\n  },\n  {\n    \"input\": [[\"num\", 7]],\n    \"output\": 3\n  },\n  {\n    \"input\": [[\"num\", 9]],\n    \"output\": 2\n  },\n  {\n    \"input\": [[\"num\", 89807355]],\n    \"output\": 17\n  },\n  {\n    \"input\": [[\"num\", 63916579]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 1003275]],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"num\", 81460777]],\n    \"output\": 16\n  },\n  {\n    \"input\": [[\"num\", 23592207]],\n    \"output\": 17\n  },\n  {\n    \"input\": [[\"num\", 40394595]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 96208418]],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"num\", 44285010]],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"num\", 81108551]],\n    \"output\": 15\n  },\n  {\n    \"input\": [[\"num\", 48150108]],\n    \"output\": 16\n  },\n  {\n    \"input\": [[\"num\", 88985995]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 12561831]],\n    \"output\": 17\n  },\n  {\n    \"input\": [[\"num\", 20278425]],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"num\", 2988186]],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"num\", 15087590]],\n    \"output\": 15\n  },\n  {\n    \"input\": [[\"num\", 63759468]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 24369565]],\n    \"output\": 16\n  },\n  {\n    \"input\": [[\"num\", 53592925]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 50415923]],\n    \"output\": 10\n  },\n  {\n    \"input\": [[\"num\", 85728049]],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"num\", 32637579]],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"num\", 18542961]],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"num\", 3114117]],\n    \"output\": 10\n  },\n  {\n    \"input\": [[\"num\", 77048027]],\n    \"output\": 15\n  },\n  {\n    \"input\": [[\"num\", 69631894]],\n    \"output\": 15\n  },\n  {\n    \"input\": [[\"num\", 29387774]],\n    \"output\": 15\n  },\n  {\n    \"input\": [[\"num\", 76554062]],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"num\", 72374529]],\n    \"output\": 8\n  },\n  {\n    \"input\": [[\"num\", 97034426]],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"num\", 97814978]],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"num\", 16433758]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 44762753]],\n    \"output\": 10\n  },\n  {\n    \"input\": [[\"num\", 54599412]],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"num\", 11025482]],\n    \"output\": 10\n  },\n  {\n    \"input\": [[\"num\", 24596374]],\n    \"output\": 16\n  },\n  {\n    \"input\": [[\"num\", 41544472]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 8109631]],\n    \"output\": 18\n  },\n  {\n    \"input\": [[\"num\", 41385647]],\n    \"output\": 19\n  },\n  {\n    \"input\": [[\"num\", 69431057]],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"num\", 80679277]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 23857058]],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"num\", 16318603]],\n    \"output\": 10\n  },\n  {\n    \"input\": [[\"num\", 15524713]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 34992701]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 93449065]],\n    \"output\": 15\n  },\n  {\n    \"input\": [[\"num\", 98629095]],\n    \"output\": 17\n  },\n  {\n    \"input\": [[\"num\", 95312957]],\n    \"output\": 16\n  },\n  {\n    \"input\": [[\"num\", 72280995]],\n    \"output\": 15\n  },\n  {\n    \"input\": [[\"num\", 46710957]],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"num\", 57210904]],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"num\", 55988491]],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"num\", 97611493]],\n    \"output\": 16\n  },\n  {\n    \"input\": [[\"num\", 43000900]],\n    \"output\": 7\n  },\n  {\n    \"input\": [[\"num\", 75173784]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 4400602]],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"num\", 63500695]],\n    \"output\": 15\n  },\n  {\n    \"input\": [[\"num\", 30123424]],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"num\", 88918315]],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"num\", 11244017]],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"num\", 54124014]],\n    \"output\": 18\n  },\n  {\n    \"input\": [[\"num\", 58640526]],\n    \"output\": 15\n  },\n  {\n    \"input\": [[\"num\", 26001927]],\n    \"output\": 10\n  },\n  {\n    \"input\": [[\"num\", 82538737]],\n    \"output\": 15\n  },\n  {\n    \"input\": [[\"num\", 28640466]],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"num\", 54535008]],\n    \"output\": 8\n  },\n  {\n    \"input\": [[\"num\", 10878068]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 66641430]],\n    \"output\": 16\n  },\n  {\n    \"input\": [[\"num\", 95008383]],\n    \"output\": 18\n  },\n  {\n    \"input\": [[\"num\", 44528311]],\n    \"output\": 16\n  },\n  {\n    \"input\": [[\"num\", 36538162]],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"num\", 28336553]],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"num\", 33847637]],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"num\", 742384]],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"num\", 20750834]],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"num\", 58086172]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 95838385]],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"num\", 36011237]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 97584705]],\n    \"output\": 10\n  },\n  {\n    \"input\": [[\"num\", 38282853]],\n    \"output\": 10\n  },\n  {\n    \"input\": [[\"num\", 52122773]],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"num\", 71344782]],\n    \"output\": 9\n  },\n  {\n    \"input\": [[\"num\", 72183162]],\n    \"output\": 15\n  },\n  {\n    \"input\": [[\"num\", 81524199]],\n    \"output\": 19\n  },\n  {\n    \"input\": [[\"num\", 31301903]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 78314288]],\n    \"output\": 14\n  },\n  {\n    \"input\": [[\"num\", 78668946]],\n    \"output\": 10\n  },\n  {\n    \"input\": [[\"num\", 82366582]],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"num\", 48696832]],\n    \"output\": 10\n  },\n  {\n    \"input\": [[\"num\", 44257440]],\n    \"output\": 9\n  },\n  {\n    \"input\": [[\"num\", 71697424]],\n    \"output\": 6\n  }\n]\n"
  },
  "skeleton": {
    "js": "/**\n * @param {number} num\n * @return {number}\n */\nexport default function countOnesInBinary(num) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function countOnesInBinary(num: number): number {\n  throw 'Not implemented!';\n}"
  },
  "workspace": {
    "main": "/src/count-ones-in-binary.ts",
    "run": "/src/count-ones-in-binary.run.test.ts",
    "submit": "/src/count-ones-in-binary.submit.test.ts"
  }
}