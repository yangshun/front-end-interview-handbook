{
  "description": "var Component=(()=>{var m=Object.create;var i=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var g=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),N=(n,e)=>{for(var o in e)i(n,o,{get:e[o],enumerable:!0})},a=(n,e,o,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of u(e))!T.call(n,r)&&r!==o&&i(n,r,{get:()=>e[r],enumerable:!(l=f(e,r))||l.enumerable});return n};var b=(n,e,o)=>(o=n!=null?m(x(n)):{},a(e||!n||!n.__esModule?i(o,\"default\",{value:n,enumerable:!0}):o,n)),_=n=>a(i({},\"__esModule\",{value:!0}),n);var d=g((D,h)=>{h.exports=_jsx_runtime});var M={};N(M,{default:()=>y,frontmatter:()=>v});var t=b(d());var s=MDXTestExamples;var c=[{input:[[\"root\",[1,2,3,4,5,6,7]]],output:3,explanation:\"The tree has a maximum depth of 3. The longest path from root (1) to leaves (4, 5, 6, or 7) is of length 3.\"},{input:[[\"root\",[1,null,2]]],output:2,explanation:\"The tree has a maximum depth of 2. The longest path from root (1) to leaf (2) is of length 2.\"},{input:[[\"root\",[10,5,15,null,null,12,20]]],output:3,explanation:\"The tree has a maximum depth of 3. The longest path from root (10) to leaves (12 or 20) is of length 3.\"}];var v={title:\"Binary Tree Maximum Depth\",excerpt:\"Implement a function to find the maximum depth of a binary tree\"};function p(n){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h3:\"h3\",ul:\"ul\",li:\"li\",a:\"a\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[\"Given the \",(0,t.jsx)(e.code,{children:\"root\"}),\" of a binary tree, determine the depth of the tree, which is defined as the number of nodes along the longest path from the root to the most distant leaf node.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"The binary tree is represented by a collection of \",(0,t.jsx)(e.code,{children:\"TreeNode\"}),\"s, where each node has optional \",(0,t.jsx)(e.code,{children:\"left\"}),\" and \",(0,t.jsx)(e.code,{children:\"right\"}),\" child nodes, which are also \",(0,t.jsx)(e.code,{children:\"TreeNode\"}),\"s.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"A \",(0,t.jsx)(e.code,{children:\"TreeNode\"}),\" has the following interface:\"]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-ts\",children:`interface TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n}\n`})}),`\n`,(0,t.jsx)(e.h3,{children:\"Input\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"root: TreeNode\"}),\": Root node of the tree. Examples display a \",(0,t.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/Breadth-first_search\",children:\"level-order traversal\"}),\" of the tree\"]}),`\n`]}),`\n`,(0,t.jsx)(s,{testCases:c}),`\n`,(0,t.jsx)(e.h3,{children:\"Constraints\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"1 <= Number of nodes <= 10,000\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"-100 <= \",(0,t.jsx)(e.code,{children:\"TreeNode.val\"}),\" <= 100\"]}),`\n`]})]})}function w(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(p,n)})):p(n)}var y=w;return _(M);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/binary-tree-maximum-depth\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/binary-tree-maximum-depth.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"resolveJsonModule\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"esnext\"],\n    \"jsx\": \"react-jsx\"\n  }\n}\n",
    "/src/binary-tree-maximum-depth.run.test.ts": "import fn from './binary-tree-maximum-depth';\nimport runTestCases from './run.tests.json';\n\nclass TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n\n  constructor(\n    val: number,\n    left: TreeNode | null = null,\n    right: TreeNode | null = null,\n  ) {\n    this.val = val;\n    this.left = left;\n    this.right = right;\n  }\n}\n\nfunction createTreeFromSerialized(\n  serializedTree: (string | null)[],\n): TreeNode | null {\n  if (serializedTree.length === 0) {\n    return null;\n  }\n\n  const nodeQueue: TreeNode[] = [];\n  let index = 0;\n\n  // Create the root node\n  const root = new TreeNode(Number(serializedTree[index]));\n  nodeQueue.push(root);\n  index++;\n\n  while (nodeQueue.length > 0 && index < serializedTree.length) {\n    const currentNode = nodeQueue.shift()!; // `!` asserts that `shift` does not return `null`\n\n    // Process left child\n    if (index < serializedTree.length && serializedTree[index] != null) {\n      currentNode.left = new TreeNode(Number(serializedTree[index]));\n      nodeQueue.push(currentNode.left);\n    }\n    index++;\n\n    // Process right child\n    if (index < serializedTree.length && serializedTree[index] != null) {\n      currentNode.right = new TreeNode(Number(serializedTree[index]));\n      nodeQueue.push(currentNode.right);\n    }\n    index++;\n  }\n\n  return root;\n}\n\ndescribe('binaryTreeMaximumDepth', () => {\n  runTestCases.forEach((example: any) => {\n    test(`${example.input[0][0]} = ${example.input[0][1]}`, () => {\n      expect(fn(createTreeFromSerialized(example.input[0][1]))).toStrictEqual(\n        example.output,\n      );\n    });\n  });\n});\n",
    "/src/binary-tree-maximum-depth.submit.test.ts": "import binaryTreeMaximumDepth from './binary-tree-maximum-depth';\nimport submitTestCases from './submit.tests.json';\n\nclass TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n\n  constructor(\n    val: number,\n    left: TreeNode | null = null,\n    right: TreeNode | null = null,\n  ) {\n    this.val = val;\n    this.left = left;\n    this.right = right;\n  }\n}\n\nfunction createTreeFromSerialized(\n  serializedTree: (string | null)[],\n): TreeNode | null {\n  if (serializedTree.length === 0) {\n    return null;\n  }\n\n  const nodeQueue: TreeNode[] = [];\n  let index = 0;\n\n  // Create the root node\n  const root = new TreeNode(Number(serializedTree[index]));\n  nodeQueue.push(root);\n  index++;\n\n  while (nodeQueue.length > 0 && index < serializedTree.length) {\n    const currentNode = nodeQueue.shift()!; // `!` asserts that `shift` does not return `null`\n\n    // Process left child\n    if (index < serializedTree.length && serializedTree[index] != null) {\n      currentNode.left = new TreeNode(Number(serializedTree[index]));\n      nodeQueue.push(currentNode.left);\n    }\n    index++;\n\n    // Process right child\n    if (index < serializedTree.length && serializedTree[index] != null) {\n      currentNode.right = new TreeNode(Number(serializedTree[index]));\n      nodeQueue.push(currentNode.right);\n    }\n    index++;\n  }\n\n  return root;\n}\n\ndescribe('binaryTreeMaximumDepth', () => {\n  (submitTestCases as any[]).forEach((example: any) => {\n    test(`root = ${example.input[0][1]}`, () => {\n      expect(\n        binaryTreeMaximumDepth(createTreeFromSerialized(example.input[0][1])),\n      ).toStrictEqual(example.output);\n    });\n  });\n});\n",
    "/src/binary-tree-maximum-depth.ts": "interface TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n}\n\nexport default function binaryTreeMaximumDepth(root: TreeNode | null): number {\n  // Base case: if the root is null, the depth is 0\n  if (root === null) {\n    return 0;\n  }\n\n  // Recursively compute the depth of the left subtree\n  const left_height = binaryTreeMaximumDepth(root.left);\n\n  // Recursively compute the depth of the right subtree\n  const right_height = binaryTreeMaximumDepth(root.right);\n\n  // The depth of the current node is 1 (for the current node)\n  // plus the maximum depth of the left and right subtrees\n  return 1 + Math.max(left_height, right_height);\n}\n",
    "/src/run.tests.json": "[\n  {\n    \"input\": [[\"root\", [1, 2, 3, 4, 5, 6, 7]]],\n    \"output\": 3,\n    \"explanation\": \"The tree has a maximum depth of 3. The longest path from root (1) to leaves (4, 5, 6, or 7) is of length 3.\"\n  },\n  {\n    \"input\": [[\"root\", [1, null, 2]]],\n    \"output\": 2,\n    \"explanation\": \"The tree has a maximum depth of 2. The longest path from root (1) to leaf (2) is of length 2.\"\n  },\n  {\n    \"input\": [[\"root\", [10, 5, 15, null, null, 12, 20]]],\n    \"output\": 3,\n    \"explanation\": \"The tree has a maximum depth of 3. The longest path from root (10) to leaves (12 or 20) is of length 3.\"\n  }\n]\n",
    "/src/submit.tests.json": "[\n  {\n    \"input\": [[\"root\", [97, null, 35]]],\n    \"output\": 2\n  },\n  {\n    \"input\": [[\"root\", [-43]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"root\", [83, 80, null, 30]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [[\"root\", [-39, 14, null, null, 55]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [[\"root\", [18, null, -23, -91, 21]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [[\"root\", [84, 49, -42, -60]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [[\"root\", [-75, 77, null, -57, null, -88]]],\n    \"output\": 4\n  },\n  {\n    \"input\": [[\"root\", [53, null, -36, 48, 27]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [[\"root\", [18]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"root\", [-89, null, 38, null, -21]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [[\"root\", [49]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          86,\n          -4,\n          null,\n          null,\n          -75,\n          -18,\n          null,\n          null,\n          -10,\n          null,\n          100,\n          null,\n          44,\n          3,\n          null,\n          null,\n          -71,\n          84,\n          -54,\n          -65,\n          null,\n          null,\n          1,\n          null,\n          null,\n          null,\n          17\n        ]\n      ]\n    ],\n    \"output\": 12\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -26,\n          -16,\n          -19,\n          null,\n          62,\n          -98,\n          -81,\n          null,\n          -62,\n          0,\n          null,\n          null,\n          19,\n          null,\n          86,\n          null,\n          null,\n          -93,\n          null,\n          -99,\n          null,\n          -67,\n          0,\n          null,\n          -42,\n          null,\n          -12,\n          null,\n          -84,\n          null,\n          -54,\n          0,\n          null,\n          null,\n          null,\n          -68,\n          24,\n          null,\n          null,\n          -71,\n          -31,\n          null,\n          61,\n          65,\n          null,\n          null,\n          -25,\n          8,\n          null,\n          -92,\n          null,\n          -25,\n          10,\n          -5,\n          -82\n        ]\n      ]\n    ],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"root\", [99]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"root\", [-35]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"root\", [-63]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"root\", [-47, null, -94]]],\n    \"output\": 2\n  },\n  {\n    \"input\": [\n      [\"root\", [55, -50, -65, null, -98, -91, null, null, null, null, 84]]\n    ],\n    \"output\": 4\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -62,\n          -77,\n          -61,\n          -41,\n          null,\n          32,\n          null,\n          86,\n          null,\n          -26,\n          -9,\n          null,\n          0,\n          null,\n          72,\n          null,\n          92,\n          null,\n          61,\n          null,\n          -55,\n          null,\n          null,\n          null,\n          -81,\n          -87,\n          -91,\n          null,\n          -24,\n          -22,\n          null,\n          -67,\n          25,\n          null,\n          null,\n          -51,\n          null,\n          null,\n          null,\n          null,\n          null,\n          -49,\n          null,\n          null,\n          53\n        ]\n      ]\n    ],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"root\", [-63]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          34,\n          47,\n          -54,\n          -40,\n          100,\n          99,\n          93,\n          null,\n          null,\n          null,\n          7,\n          25,\n          null,\n          66,\n          -67,\n          54,\n          null,\n          9,\n          -24,\n          null,\n          -83,\n          null,\n          null,\n          null,\n          null,\n          -2,\n          null,\n          -84,\n          40,\n          10,\n          null,\n          -19,\n          -35,\n          null,\n          53,\n          null,\n          null,\n          16,\n          null,\n          2,\n          null,\n          -35,\n          -87,\n          -45,\n          null,\n          6,\n          null,\n          null,\n          null,\n          null,\n          -31,\n          25,\n          61,\n          3,\n          -74,\n          66,\n          -68,\n          null,\n          -36,\n          -45,\n          null,\n          65,\n          34,\n          -76,\n          null,\n          null,\n          29,\n          -82,\n          13,\n          null,\n          null,\n          null,\n          12,\n          null,\n          null,\n          null,\n          -85,\n          null,\n          null,\n          9,\n          10,\n          5,\n          null,\n          26,\n          -39,\n          null,\n          null,\n          null,\n          -26,\n          -44,\n          83,\n          null,\n          85,\n          12,\n          -98,\n          null,\n          null,\n          -37,\n          null,\n          -90,\n          null,\n          -15,\n          -10,\n          null,\n          null,\n          -39,\n          null,\n          42,\n          47,\n          92,\n          null,\n          -48,\n          null,\n          82,\n          61,\n          20,\n          -55,\n          null,\n          null,\n          54,\n          null,\n          -47,\n          -34,\n          73,\n          -22,\n          null,\n          51,\n          -90,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          -24,\n          null,\n          null,\n          49,\n          -88\n        ]\n      ]\n    ],\n    \"output\": 14\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          17,\n          -63,\n          51,\n          null,\n          null,\n          null,\n          48,\n          26,\n          12,\n          62,\n          -9,\n          -88,\n          null,\n          13,\n          null,\n          null,\n          null,\n          null,\n          -61,\n          90,\n          -65,\n          70,\n          null,\n          36,\n          null,\n          -29,\n          null,\n          -83,\n          17,\n          null,\n          58,\n          -12,\n          -89,\n          -59,\n          null,\n          81,\n          0,\n          null,\n          -64,\n          20,\n          null,\n          90,\n          -99,\n          -8,\n          93,\n          -6,\n          null,\n          null,\n          null,\n          -27,\n          71,\n          null,\n          null,\n          null,\n          -53,\n          92,\n          68,\n          null,\n          -18,\n          -58,\n          null,\n          null,\n          -54,\n          -65,\n          29,\n          null,\n          -82,\n          -65,\n          null,\n          null,\n          -31,\n          null,\n          null,\n          10,\n          99,\n          -24,\n          null,\n          11,\n          93,\n          -7,\n          -39,\n          null,\n          null,\n          64,\n          45,\n          null,\n          null,\n          -21,\n          null,\n          -93,\n          null,\n          94,\n          -84,\n          null,\n          92,\n          null,\n          -93,\n          -25\n        ]\n      ]\n    ],\n    \"output\": 13\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          63,\n          null,\n          70,\n          47,\n          -1,\n          null,\n          97,\n          null,\n          52,\n          27,\n          89,\n          null,\n          null,\n          null,\n          -32,\n          -35,\n          null,\n          null,\n          null,\n          34,\n          22,\n          null,\n          -8,\n          -25,\n          -61,\n          77,\n          null,\n          null,\n          9,\n          null,\n          null,\n          11,\n          null,\n          null,\n          null,\n          null,\n          -46,\n          -4,\n          -76,\n          -98,\n          -30\n        ]\n      ]\n    ],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"root\", [56, -17, -4]]],\n    \"output\": 2\n  },\n  {\n    \"input\": [[\"root\", [-32]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"root\", [64, null, 37, 87]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -39,\n          null,\n          61,\n          -62,\n          -60,\n          null,\n          null,\n          null,\n          -3,\n          -97,\n          null,\n          4,\n          -67,\n          null,\n          null,\n          55,\n          null,\n          null,\n          58,\n          -7\n        ]\n      ]\n    ],\n    \"output\": 9\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -80,\n          -61,\n          34,\n          null,\n          7,\n          -60,\n          -84,\n          null,\n          null,\n          42,\n          -51,\n          null,\n          null,\n          27,\n          null,\n          -4,\n          null,\n          null,\n          -22,\n          -43,\n          63,\n          65,\n          null,\n          null,\n          54,\n          35,\n          -38,\n          null,\n          -80,\n          -83,\n          76,\n          -95,\n          null,\n          null,\n          null,\n          27,\n          null,\n          85,\n          -11,\n          null,\n          null,\n          58,\n          null,\n          -34,\n          -6,\n          null,\n          -38,\n          null,\n          null,\n          74,\n          null,\n          -35,\n          null,\n          -15,\n          null,\n          null,\n          null,\n          59,\n          null,\n          -40,\n          -66,\n          null,\n          -18,\n          null,\n          64,\n          -5,\n          -31,\n          -4,\n          73,\n          null,\n          -54,\n          2\n        ]\n      ]\n    ],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"root\", [-55]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"root\", [67, null, 14, null, 42]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -71,\n          -65,\n          -61,\n          null,\n          34,\n          -87,\n          null,\n          -13,\n          null,\n          null,\n          null,\n          null,\n          -21,\n          19\n        ]\n      ]\n    ],\n    \"output\": 6\n  },\n  {\n    \"input\": [[\"root\", [-1]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [\n      [\"root\", [-14, 22, -13, 28, null, -61, null, null, null, -86, null, 11]]\n    ],\n    \"output\": 5\n  },\n  {\n    \"input\": [[\"root\", [-90, -45]]],\n    \"output\": 2\n  },\n  {\n    \"input\": [[\"root\", [83]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          92,\n          null,\n          63,\n          15,\n          -4,\n          -31,\n          null,\n          64,\n          63,\n          -89,\n          -11,\n          -69,\n          -44,\n          null,\n          null,\n          null,\n          null,\n          43,\n          45,\n          65,\n          null,\n          null,\n          null,\n          65,\n          64,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          40,\n          -39,\n          -58,\n          null,\n          -18,\n          null,\n          -46,\n          null,\n          -58,\n          null,\n          42,\n          null,\n          null,\n          null,\n          null,\n          13,\n          99,\n          4\n        ]\n      ]\n    ],\n    \"output\": 13\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          53,\n          null,\n          40,\n          null,\n          21,\n          null,\n          -89,\n          null,\n          -62,\n          -99,\n          null,\n          -54,\n          11,\n          null,\n          -39,\n          null,\n          66,\n          null,\n          -75,\n          null,\n          94,\n          91,\n          -9,\n          -13,\n          null,\n          null,\n          44,\n          -13,\n          null,\n          40,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          69\n        ]\n      ]\n    ],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"root\", [86, null, 98]]],\n    \"output\": 2\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [12, -81, null, -84, 40, null, 4, -92, null, null, null, -18, null, -86]\n      ]\n    ],\n    \"output\": 6\n  },\n  {\n    \"input\": [[\"root\", [-27, 1, -20, null, null, 66, -18]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [[\"root\", [-4, null, -36, null, -100]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          15,\n          82,\n          -30,\n          null,\n          null,\n          -69,\n          -30,\n          null,\n          23,\n          -61,\n          88,\n          -38,\n          31,\n          null,\n          35,\n          null,\n          -59,\n          null,\n          77,\n          -1,\n          -10,\n          -10,\n          null,\n          -1,\n          null,\n          100,\n          null,\n          null,\n          -78,\n          5,\n          null,\n          23,\n          -72,\n          60,\n          null,\n          -92,\n          -97,\n          33,\n          null,\n          null,\n          46,\n          null,\n          -6,\n          null,\n          -86,\n          23,\n          null,\n          null,\n          null,\n          -63,\n          -100,\n          79,\n          null,\n          null,\n          -2,\n          -52,\n          -15,\n          34\n        ]\n      ]\n    ],\n    \"output\": 9\n  },\n  {\n    \"input\": [[\"root\", [-34, null, -91, null, -94]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [[\"root\", [11]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"root\", [-65]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -55,\n          69,\n          null,\n          17,\n          -73,\n          null,\n          -47,\n          29,\n          -14,\n          35,\n          null,\n          null,\n          null,\n          null,\n          1,\n          34,\n          -80,\n          62,\n          45,\n          -35,\n          null,\n          -58,\n          null,\n          7,\n          null,\n          null,\n          null,\n          3,\n          null,\n          -70,\n          58,\n          null,\n          null,\n          null,\n          -92,\n          63,\n          11,\n          52,\n          null,\n          92,\n          null,\n          null,\n          null,\n          78,\n          null,\n          null,\n          -93,\n          null,\n          9\n        ]\n      ]\n    ],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"root\", [0, -47, null, null, 76]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -41,\n          -53,\n          96,\n          null,\n          -36,\n          15,\n          null,\n          30,\n          -71,\n          null,\n          null,\n          5,\n          -16,\n          null,\n          null,\n          null,\n          null,\n          21,\n          28,\n          null,\n          77\n        ]\n      ]\n    ],\n    \"output\": 7\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          79,\n          -50,\n          70,\n          -75,\n          87,\n          null,\n          null,\n          null,\n          45,\n          8,\n          null,\n          null,\n          -95,\n          null,\n          42,\n          -43,\n          52,\n          null,\n          null,\n          null,\n          null,\n          null,\n          8,\n          60,\n          77,\n          null,\n          -38,\n          67,\n          -25,\n          -62,\n          null,\n          null,\n          72,\n          null,\n          null,\n          62,\n          -11,\n          null,\n          82,\n          -2,\n          43,\n          -63,\n          null,\n          null,\n          null,\n          15,\n          null,\n          null,\n          null,\n          42,\n          35\n        ]\n      ]\n    ],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"root\", [58]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -47,\n          32,\n          -44,\n          -95,\n          null,\n          -66,\n          null,\n          null,\n          72,\n          null,\n          null,\n          -28,\n          null,\n          -99,\n          55,\n          null,\n          null,\n          -100,\n          null,\n          null,\n          -8\n        ]\n      ]\n    ],\n    \"output\": 8\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          22,\n          68,\n          -41,\n          -79,\n          8,\n          null,\n          66,\n          12,\n          null,\n          null,\n          12,\n          null,\n          null,\n          null,\n          -14,\n          null,\n          null,\n          null,\n          66,\n          0,\n          null,\n          15,\n          25,\n          -40,\n          -18,\n          -40,\n          null,\n          -8,\n          null,\n          null,\n          null,\n          null,\n          76\n        ]\n      ]\n    ],\n    \"output\": 10\n  },\n  {\n    \"input\": [[\"root\", [29]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -32,\n          2,\n          null,\n          null,\n          33,\n          -20,\n          null,\n          null,\n          34,\n          -97,\n          82,\n          42,\n          null,\n          null,\n          -65,\n          84,\n          -31,\n          null,\n          -71,\n          22,\n          18,\n          null,\n          32,\n          -18,\n          null,\n          null,\n          null,\n          null,\n          null,\n          59,\n          -43,\n          null,\n          -44,\n          null,\n          null,\n          null,\n          null,\n          -52\n        ]\n      ]\n    ],\n    \"output\": 11\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -84,\n          null,\n          9,\n          -70,\n          100,\n          -35,\n          30,\n          null,\n          null,\n          23,\n          -94,\n          null,\n          null,\n          null,\n          57,\n          -39,\n          null,\n          null,\n          -83,\n          45,\n          null,\n          -23,\n          90,\n          null,\n          null,\n          -92,\n          null,\n          63,\n          null,\n          null,\n          null,\n          null,\n          7,\n          31,\n          92,\n          17,\n          -97,\n          null,\n          37\n        ]\n      ]\n    ],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"root\", [10]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"root\", [-26, 29, null, null, 70]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [[\"root\", [27, null, -7]]],\n    \"output\": 2\n  },\n  {\n    \"input\": [[\"root\", [26]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          91,\n          -93,\n          -44,\n          97,\n          null,\n          null,\n          58,\n          65,\n          18,\n          26,\n          null,\n          null,\n          null,\n          null,\n          -48,\n          96,\n          null,\n          null,\n          -67,\n          null,\n          -32,\n          null,\n          null,\n          48,\n          -63,\n          89,\n          null,\n          null,\n          -56,\n          null,\n          null,\n          null,\n          -33\n        ]\n      ]\n    ],\n    \"output\": 9\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -28,\n          76,\n          25,\n          18,\n          -59,\n          -63,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          42,\n          78,\n          89,\n          null,\n          -37,\n          null,\n          null,\n          -23,\n          56,\n          null,\n          39,\n          null,\n          null,\n          -24\n        ]\n      ]\n    ],\n    \"output\": 9\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          12,\n          38,\n          null,\n          29,\n          0,\n          null,\n          null,\n          82,\n          -6,\n          35,\n          58,\n          89,\n          -85,\n          null,\n          null,\n          null,\n          46,\n          -35,\n          null,\n          null,\n          null,\n          null,\n          null,\n          90,\n          0,\n          null,\n          25,\n          18,\n          70,\n          null,\n          6,\n          null,\n          20,\n          -77,\n          null,\n          0,\n          null,\n          null,\n          null,\n          null,\n          null,\n          36,\n          -98,\n          8,\n          95,\n          null,\n          null,\n          null,\n          null,\n          32\n        ]\n      ]\n    ],\n    \"output\": 13\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          96,\n          -33,\n          null,\n          54,\n          -17,\n          7,\n          null,\n          null,\n          null,\n          72,\n          null,\n          null,\n          36,\n          null,\n          31,\n          null,\n          81\n        ]\n      ]\n    ],\n    \"output\": 8\n  },\n  {\n    \"input\": [[\"root\", [-6, null, 45, -56, 35, -19, 75, null, null, -57]]],\n    \"output\": 5\n  },\n  {\n    \"input\": [[\"root\", [58, -19]]],\n    \"output\": 2\n  },\n  {\n    \"input\": [\n      [\"root\", [93, null, 21, -13, -84, 96, 71, null, null, 54, null, null, -3]]\n    ],\n    \"output\": 5\n  },\n  {\n    \"input\": [[\"root\", [54, -92]]],\n    \"output\": 2\n  },\n  {\n    \"input\": [[\"root\", [94]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [\n      [\"root\", [-23, null, -57, null, 85, null, -19, null, 12, null, -86, 38]]\n    ],\n    \"output\": 7\n  },\n  {\n    \"input\": [[\"root\", [77, null, -40, -96, null, null, 31]]],\n    \"output\": 4\n  },\n  {\n    \"input\": [[\"root\", [71, null, 52, 56, null, null, -12, null, 7]]],\n    \"output\": 5\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -68,\n          null,\n          -82,\n          null,\n          -89,\n          -44,\n          null,\n          37,\n          null,\n          95,\n          -98,\n          34,\n          null,\n          null,\n          78,\n          null,\n          -76,\n          null,\n          null,\n          null,\n          -35,\n          null,\n          14,\n          -22,\n          -89,\n          36,\n          97\n        ]\n      ]\n    ],\n    \"output\": 12\n  },\n  {\n    \"input\": [[\"root\", [-68, 47, 82, -21]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [[\"root\", [61]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"root\", [93, null, 97, -8, 61, null, -27]]],\n    \"output\": 4\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          52,\n          null,\n          55,\n          55,\n          -92,\n          66,\n          null,\n          93,\n          94,\n          23,\n          -95,\n          null,\n          -38,\n          53,\n          90,\n          -91,\n          -99,\n          null,\n          74,\n          69,\n          null,\n          -19,\n          null,\n          null,\n          -13,\n          42,\n          -26,\n          39,\n          100,\n          -19,\n          null,\n          -94,\n          79,\n          -40,\n          -23,\n          null,\n          9,\n          null,\n          null,\n          null,\n          -5,\n          null,\n          -98,\n          null,\n          22,\n          -76,\n          null,\n          -14,\n          null,\n          86,\n          -89,\n          null,\n          null,\n          -56,\n          -21,\n          -1,\n          null,\n          45,\n          null,\n          null,\n          null,\n          null,\n          -75,\n          -12,\n          98,\n          null,\n          21,\n          53,\n          null,\n          null,\n          null,\n          null,\n          -33,\n          null,\n          -80,\n          null,\n          null,\n          70,\n          84,\n          null,\n          -34,\n          null,\n          -52,\n          -9,\n          null,\n          null,\n          null,\n          -13,\n          98,\n          -77,\n          null,\n          87,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          100,\n          null,\n          null,\n          null,\n          33\n        ]\n      ]\n    ],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"root\", [98]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"root\", [5, 96]]],\n    \"output\": 2\n  },\n  {\n    \"input\": [[\"root\", [-21]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [[\"root\", [91, -62, null, null, 81]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [[\"root\", [-45, null, 85]]],\n    \"output\": 2\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -95,\n          null,\n          -68,\n          -39,\n          93,\n          -36,\n          null,\n          null,\n          18,\n          77,\n          73,\n          null,\n          null,\n          5,\n          null,\n          null,\n          -74,\n          13,\n          null,\n          null,\n          19,\n          -94,\n          -17,\n          26,\n          -74,\n          -45,\n          94,\n          null,\n          null,\n          null,\n          null,\n          -92,\n          null,\n          78,\n          -66,\n          null,\n          92,\n          null,\n          null,\n          null,\n          92,\n          -87,\n          null,\n          -79,\n          -4,\n          null,\n          -66,\n          -44,\n          -39,\n          -29,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          32,\n          null,\n          -57,\n          20\n        ]\n      ]\n    ],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"root\", [-34, 23, null, null, -84]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          24,\n          null,\n          -74,\n          -32,\n          -100,\n          21,\n          null,\n          53,\n          null,\n          null,\n          null,\n          -57,\n          -84,\n          -7,\n          null,\n          -91,\n          9,\n          -65,\n          16,\n          null,\n          null,\n          94,\n          6,\n          null,\n          null,\n          null,\n          62,\n          69,\n          null,\n          18,\n          -60,\n          null,\n          null,\n          61,\n          -27,\n          -80,\n          20,\n          -77,\n          null,\n          null,\n          null,\n          76,\n          -50,\n          null,\n          100,\n          null,\n          -13,\n          19,\n          null,\n          null,\n          -16,\n          -48,\n          -73,\n          null,\n          -15,\n          -30,\n          null,\n          86,\n          44,\n          null,\n          -8,\n          46,\n          14,\n          null,\n          10,\n          -50,\n          78,\n          null,\n          -53\n        ]\n      ]\n    ],\n    \"output\": 12\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -32,\n          -35,\n          null,\n          null,\n          -1,\n          27,\n          -48,\n          null,\n          96,\n          26,\n          null,\n          null,\n          null,\n          null,\n          -55,\n          -100,\n          99,\n          -13,\n          -37,\n          37,\n          -84,\n          12,\n          -50,\n          -63,\n          null,\n          null,\n          null,\n          50,\n          null,\n          -53,\n          null,\n          null,\n          null,\n          68,\n          null,\n          77,\n          -67,\n          null,\n          89,\n          81\n        ]\n      ]\n    ],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"root\", [-10, -61]]],\n    \"output\": 2\n  },\n  {\n    \"input\": [[\"root\", [86]]],\n    \"output\": 1\n  },\n  {\n    \"input\": [\n      [\"root\", [-21, null, 72, -58, null, null, -94, null, -2, null, -92]]\n    ],\n    \"output\": 6\n  },\n  {\n    \"input\": [[\"root\", [35, null, -56]]],\n    \"output\": 2\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -65,\n          null,\n          -97,\n          -100,\n          82,\n          null,\n          null,\n          -95,\n          33,\n          -53,\n          24,\n          null,\n          61,\n          null,\n          -61,\n          null,\n          4\n        ]\n      ]\n    ],\n    \"output\": 6\n  },\n  {\n    \"input\": [[\"root\", [88, null, 98, -14]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -86,\n          null,\n          11,\n          -40,\n          -63,\n          -12,\n          null,\n          null,\n          -100,\n          null,\n          null,\n          null,\n          43,\n          61,\n          null,\n          -2,\n          -9,\n          null,\n          73,\n          null,\n          36\n        ]\n      ]\n    ],\n    \"output\": 8\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -20,\n          65,\n          null,\n          -98,\n          57,\n          null,\n          -62,\n          -56,\n          null,\n          null,\n          -90,\n          null,\n          null,\n          -67,\n          -35,\n          null,\n          null,\n          null,\n          -56\n        ]\n      ]\n    ],\n    \"output\": 7\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -19,\n          76,\n          null,\n          71,\n          null,\n          66,\n          null,\n          null,\n          19,\n          64,\n          -86,\n          72,\n          null,\n          null,\n          null,\n          -47\n        ]\n      ]\n    ],\n    \"output\": 8\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          65,\n          -50,\n          95,\n          11,\n          42,\n          -93,\n          -67,\n          -45,\n          78,\n          23,\n          null,\n          null,\n          0,\n          71,\n          -14,\n          40,\n          -32,\n          null,\n          65,\n          -71,\n          null,\n          89,\n          null,\n          -91,\n          -76,\n          null,\n          null,\n          90,\n          null,\n          99,\n          6,\n          -29,\n          -35,\n          31,\n          59,\n          null,\n          -19,\n          null,\n          null,\n          -69,\n          6,\n          null,\n          null,\n          89,\n          -12,\n          null,\n          null,\n          null,\n          null,\n          4,\n          null,\n          97,\n          15,\n          77,\n          null,\n          53,\n          null,\n          -82,\n          94,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          -44,\n          -52,\n          -7,\n          null,\n          -59,\n          null,\n          -76,\n          -14,\n          -40,\n          null,\n          70,\n          -47,\n          43,\n          73,\n          -98,\n          -25,\n          74,\n          53,\n          -95,\n          -73,\n          -60,\n          null,\n          -36,\n          -82,\n          -100,\n          82,\n          -93,\n          52,\n          null,\n          -94,\n          null,\n          null,\n          null,\n          42,\n          1,\n          null,\n          null,\n          -53,\n          -89,\n          57,\n          67,\n          null,\n          null,\n          null,\n          -33,\n          null,\n          null,\n          null,\n          null,\n          null,\n          -56,\n          null,\n          38,\n          37,\n          -29,\n          null,\n          66,\n          null,\n          -37,\n          38,\n          null,\n          -50,\n          null,\n          -2,\n          null,\n          null,\n          null,\n          null,\n          null,\n          -64,\n          -2,\n          -58,\n          null,\n          40,\n          null,\n          67,\n          -19,\n          null,\n          50,\n          null,\n          92,\n          -41,\n          null,\n          null,\n          -93,\n          null,\n          null,\n          15,\n          1,\n          -69,\n          0,\n          null,\n          93,\n          94,\n          -21,\n          null,\n          null,\n          null,\n          null,\n          17,\n          null,\n          null,\n          -36,\n          null,\n          15,\n          3,\n          -7,\n          82,\n          -65,\n          -96,\n          49,\n          null,\n          -40,\n          -72,\n          -51,\n          30,\n          null,\n          -21,\n          null,\n          null,\n          81\n        ]\n      ]\n    ],\n    \"output\": 12\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -12,\n          45,\n          null,\n          -45,\n          null,\n          18,\n          -47,\n          -33,\n          96,\n          73,\n          -32,\n          -64,\n          null,\n          -7,\n          38,\n          null,\n          15,\n          -77,\n          -6,\n          -44,\n          28,\n          null,\n          null,\n          65,\n          32,\n          null,\n          84,\n          -75,\n          null,\n          -15,\n          -63,\n          -40,\n          null,\n          52,\n          26,\n          null,\n          null,\n          null,\n          40,\n          69,\n          0,\n          -72,\n          -72,\n          null,\n          null,\n          -85,\n          null,\n          -44,\n          null,\n          -50,\n          null,\n          null,\n          -93,\n          null,\n          -33,\n          -70,\n          16,\n          null,\n          null,\n          null,\n          null,\n          42,\n          null,\n          null,\n          null,\n          -49,\n          null,\n          54,\n          -82,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          32,\n          null,\n          null,\n          2,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          93,\n          -68\n        ]\n      ]\n    ],\n    \"output\": 11\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          85,\n          null,\n          -88,\n          -1,\n          61,\n          null,\n          -67,\n          null,\n          null,\n          -38,\n          null,\n          null,\n          33,\n          -10,\n          93,\n          null,\n          76,\n          null,\n          17,\n          null,\n          24,\n          null,\n          null,\n          -78,\n          null,\n          11,\n          -37\n        ]\n      ]\n    ],\n    \"output\": 11\n  },\n  {\n    \"input\": [[\"root\", [64, 88, -8, -89, null, 35, -34]]],\n    \"output\": 3\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -16,\n          -65,\n          null,\n          null,\n          -23,\n          -59,\n          null,\n          43,\n          17,\n          8,\n          null,\n          -78,\n          -59,\n          null,\n          60,\n          -19,\n          null,\n          36,\n          null,\n          79,\n          null,\n          -52,\n          -86,\n          null,\n          -68,\n          34,\n          37,\n          null,\n          null,\n          null,\n          -20,\n          -68,\n          null,\n          null,\n          null,\n          28,\n          -49,\n          null,\n          null,\n          null,\n          -8,\n          50,\n          -78,\n          93,\n          40,\n          -2,\n          80,\n          null,\n          80,\n          null,\n          -28,\n          -53,\n          null,\n          10,\n          null,\n          null,\n          -40,\n          -38,\n          null,\n          null,\n          null,\n          -33,\n          42,\n          null,\n          -45,\n          null,\n          null,\n          1,\n          null,\n          -2\n        ]\n      ]\n    ],\n    \"output\": 13\n  },\n  {\n    \"input\": [[\"root\", [18]]],\n    \"output\": 1\n  }\n]\n"
  },
  "metadata": {
    "access": "standard",
    "author": "hiten",
    "companies": [],
    "created": 1723161600,
    "difficulty": "easy",
    "duration": 20,
    "excerpt": "Implement a function to find the maximum depth of a binary tree",
    "featured": false,
    "format": "algo",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/algo/binary-tree-maximum-depth",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "binary-tree-maximum-depth",
    "subtitle": null,
    "title": "Binary Tree Maximum Depth",
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * Definition for a binary tree node\n * @param {number} val\n * @param {TreeNode | null} left\n * @param {TreeNode | null} right\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode | null} root\n * @return {number}\n */\nexport default function binaryTreeMaximumDepth(root) {\n  throw 'Not implemented!';\n}",
    "ts": "interface TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n}\n\nexport default function binaryTreeMaximumDepth(root: TreeNode | null): number {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var m=Object.create;var h=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var b=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),_=(t,e)=>{for(var n in e)h(t,n,{get:e[n],enumerable:!0})},u=(t,e,n,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of x(e))!T.call(t,o)&&o!==n&&h(t,o,{get:()=>e[o],enumerable:!(a=f(e,o))||a.enumerable});return t};var k=(t,e,n)=>(n=t!=null?m(g(t)):{},u(e||!t||!t.__esModule?h(n,\"default\",{value:t,enumerable:!0}):n,t)),M=t=>u(h({},\"__esModule\",{value:!0}),t);var l=b((w,d)=>{d.exports=_jsx_runtime});var v={};_(v,{default:()=>j});var r=k(l());var i=MDXCodeBlock;var s=`interface TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n}\n\nexport default function binaryTreeMaximumDepth(root: TreeNode | null): number {\n  // Base case: if the root is null, the depth is 0\n  if (root === null) {\n    return 0;\n  }\n\n  // Recursively compute the depth of the left subtree\n  const left_height = binaryTreeMaximumDepth(root.left);\n\n  // Recursively compute the depth of the right subtree\n  const right_height = binaryTreeMaximumDepth(root.right);\n\n  // The depth of the current node is 1 (for the current node)\n  // plus the maximum depth of the left and right subtrees\n  return 1 + Math.max(left_height, right_height);\n}\n`;var c=`interface TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n}\n\nexport default function binaryTreeMaximumDepth(root: TreeNode | null): number {\n  // If the root is null, the depth is 0\n  if (root == null) {\n    return 0;\n  }\n\n  // Initialize a stack for iterative traversal.\n  // The stack holds tuples of (TreeNode, current_depth)\n  let stack: [TreeNode | null, number][] = [];\n\n  // Start with the root node at depth 1\n  stack.push([root, 1]);\n\n  // Variable to keep track of the maximum depth encountered\n  let depth = 0;\n\n  // Iterate while there are nodes in the stack\n  while (stack.length !== 0) {\n    // Pop a node and its associated depth from the stack\n    let [node, current_depth] = stack.pop() as [TreeNode, number];\n\n    // If the node is not null, process it\n    if (node != null) {\n      // Update the maximum depth if the current depth is greater\n      depth = Math.max(depth, current_depth);\n\n      // Push left child and right child into the stack with updated depth\n      stack.push([node.left, current_depth + 1]);\n      stack.push([node.right, current_depth + 1]);\n    }\n  }\n\n  // Return the maximum depth found\n  return depth;\n}\n`;function p(t){let e=Object.assign({h2:\"h2\",p:\"p\"},t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"1. Using Recursion\"}),`\n`,(0,r.jsx)(e.p,{children:\"Time complexity: O(n)\"}),`\n`,(0,r.jsx)(i,{children:s}),`\n`,(0,r.jsx)(e.h2,{children:\"2. Using Iteration\"}),`\n`,(0,r.jsx)(e.p,{children:\"Time complexity: O(n)\"}),`\n`,(0,r.jsx)(i,{children:c})]})}function D(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(p,t)})):p(t)}var j=D;return M(v);})();\n;return Component;",
  "workspace": {
    "main": "/src/binary-tree-maximum-depth.ts",
    "run": "/src/binary-tree-maximum-depth.run.test.ts",
    "submit": "/src/binary-tree-maximum-depth.submit.test.ts"
  }
}