{
  "description": "var Component=(()=>{var p=Object.create;var i=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var D=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var C=(l,n)=>()=>(n||l((n={exports:{}}).exports,n),n.exports),A=(l,n)=>{for(var r in n)i(l,r,{get:n[r],enumerable:!0})},t=(l,n,r,h)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let c of g(n))!u.call(l,c)&&c!==r&&i(l,c,{get:()=>n[c],enumerable:!(h=s(n,c))||h.enumerable});return l};var B=(l,n,r)=>(r=l!=null?p(D(l)):{},t(n||!l||!l.__esModule?i(r,\"default\",{value:l,enumerable:!0}):r,l)),F=l=>t(i({},\"__esModule\",{value:!0}),l);var d=C((f,o)=>{o.exports=_jsx_runtime});var j={};A(j,{default:()=>E,frontmatter:()=>m});var e=B(d()),m={title:\"\\u62D3\\u6251\\u6392\\u5E8F\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u6267\\u884C\\u62D3\\u6251\\u6392\\u5E8F\\u7684\\u51FD\\u6570\"};function a(l){let n=Object.assign({p:\"p\",h2:\"h2\",pre:\"pre\",code:\"code\",ol:\"ol\",li:\"li\",h3:\"h3\",ul:\"ul\"},l.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u5BF9\\u6709\\u5411\\u56FE\\uFF08\\u90BB\\u63A5\\u8868\\u683C\\u5F0F\\uFF09\\u6267\\u884C\\u62D3\\u6251\\u6392\\u5E8F\\u7684\\u51FD\\u6570\\uFF0C\\u5176\\u4E2D\\u952E\\u8868\\u793A\\u8282\\u70B9\\uFF0C\\u503C\\u662F\\u5177\\u6709\\u6307\\u5411\\u5F53\\u524D\\u8282\\u70B9\\u7684\\u4F20\\u51FA\\u8FB9\\u7684\\u8282\\u70B9\\u6570\\u7EC4\\u3002\"}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u4F8B\\u5B50\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`const graph1 = {\n  A: ['B', 'C'],\n  B: ['C', 'D', 'E'],\n  C: ['F'],\n  D: [],\n  E: ['F'],\n  F: [],\n};\ntopologicalSort(graph1); // ['A', 'B', 'C', 'D', 'E', 'F']\n\nconst graph2 = {\n  A: ['B', 'C'],\n  B: ['C', 'D'],\n  C: ['D'],\n  D: ['E'],\n  E: ['F'],\n  F: [],\n};\ntopologicalSort(graph2); // ['A', 'B', 'C', 'D', 'E', 'F']\n\nconst graph3 = {\n  A: [],\n  B: ['A'],\n  C: ['B'],\n  D: ['C'],\n  E: ['D'],\n  F: ['E'],\n};\ntopologicalSort(graph3); // ['F', 'E', 'D', 'C', 'B', 'A']\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"\\u8BF7\\u6CE8\\u610F\\uFF0C\\u5BF9\\u4E8E\\u6709\\u5411\\u56FE\\uFF0C\\u53EF\\u4EE5\\u6709\\u591A\\u4E2A\\u6709\\u6548\\u7684\\u62D3\\u6251\\u6392\\u5E8F\\uFF0C\\u4F46\\u5BF9\\u4E8E\\u6211\\u4EEC\\u7684\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF0C\\u53EA\\u6709\\u4E00\\u4E2A\\u6709\\u6548\\u7684\\u89E3\\u51B3\\u65B9\\u6848\\u3002\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"\\u5728\\u9AA8\\u67B6\\u4EE3\\u7801\\u7684\\u5E95\\u90E8\\u4E5F\\u4E3A\\u60A8\\u63D0\\u4F9B\\u4E86\\u4E00\\u4E2A \",(0,e.jsx)(n.code,{children:\"Queue\"}),\" \\u6570\\u636E\\u7ED3\\u6784\\u3002\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u56DE\\u987E\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\u62D3\\u6251\\u6392\\u5E8F\\u662F\\u4E00\\u79CD\\u7B97\\u6CD5\\uFF0C\\u7528\\u4E8E\\u4EE5\\u7EBF\\u6027\\u987A\\u5E8F\\u5BF9\\u6709\\u5411\\u65E0\\u73AF\\u56FE (DAG) \\u7684\\u5143\\u7D20\\u8FDB\\u884C\\u6392\\u5E8F\\uFF0C\\u4F7F\\u5F97\\u987A\\u5E8F\\u9075\\u5FAA\\u56FE\\u4E2D\\u8FB9\\u5B9A\\u4E49\\u7684\\u987A\\u5E8F\\u3002\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\u7406\\u89E3\\u8FD9\\u4E00\\u70B9\\u7684\\u4E00\\u79CD\\u7B80\\u5355\\u65B9\\u6CD5\\u662F\\u5C06\\u56FE\\u7684\\u8282\\u70B9\\u89C6\\u4E3A\\u4EFB\\u52A1\\uFF0C\\u4ECE\\u8282\\u70B9 A \\u5230\\u8282\\u70B9 B \\u7684\\u8FB9\\u8868\\u793A\\u8282\\u70B9 B \\u4F9D\\u8D56\\u4E8E\\u8282\\u70B9 A\\u3002\\u62D3\\u6251\\u6392\\u5E8F\\u6240\\u505A\\u7684\\u662F\\u4ECE\\u56FE\\u4E2D\\u751F\\u6210\\u4E00\\u4E2A\\u8282\\u70B9\\u6570\\u7EC4\\uFF0C\\u4F7F\\u5F97\\u6570\\u7EC4\\u4E2D\\u8282\\u70B9\\u7684\\u987A\\u5E8F\\u9075\\u5FAA\\u56FE\\u4E2D\\u5B9A\\u4E49\\u7684\\u6240\\u6709\\u4F9D\\u8D56\\u5173\\u7CFB\\u3002\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\u4E3A\\u4EC0\\u4E48\\u62D3\\u6251\\u6392\\u5E8F\\u53EA\\u9002\\u7528\\u4E8E DAG \\u800C\\u4E0D\\u662F\\u4EFB\\u4F55\\u56FE\\uFF1F\\u8FD9\\u662F\\u56E0\\u4E3A\\u56FE\\u5FC5\\u987B\\u5177\\u6709\\u6709\\u5411\\u8FB9\\u624D\\u80FD\\u8868\\u793A\\u4F9D\\u8D56\\u5173\\u7CFB\\uFF0C\\u5E76\\u4E14\\u662F\\u65E0\\u73AF\\u7684\\uFF08\\u65E0\\u73AF\\uFF09\\uFF0C\\u56E0\\u4E3A\\u4EFB\\u4F55\\u73AF\\u90FD\\u5C06\\u8868\\u793A\\u8282\\u70B9\\u4E4B\\u95F4\\u65E0\\u6CD5\\u89E3\\u6790\\u7684\\u4F9D\\u8D56\\u5173\\u7CFB\\u3002\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\u62D3\\u6251\\u6392\\u5E8F\\u901A\\u5E38\\u7528\\u4E8E\\u8C03\\u5EA6\\u95EE\\u9898\\uFF0C\\u4F8B\\u5982\\u8C03\\u5EA6\\u5177\\u6709\\u4F9D\\u8D56\\u5173\\u7CFB\\u7684\\u4F5C\\u4E1A\\uFF0C\\u6216\\u5728\\u7F16\\u8BD1\\u4E2D\\uFF0C\\u7F16\\u8BD1\\u987A\\u5E8F\\u7531\\u6A21\\u5757\\u4E4B\\u95F4\\u7684\\u4F9D\\u8D56\\u5173\\u7CFB\\u51B3\\u5B9A\\u3002\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\u6709\\u5F88\\u591A\\u65B9\\u6CD5\\u53EF\\u4EE5\\u5B9E\\u73B0\\u62D3\\u6251\\u6392\\u5E8F\\uFF0C\\u4F46\\u4E00\\u79CD\\u7B80\\u5355\\u76F4\\u89C2\\u7684\\u65B9\\u6CD5\\u662F\\u4F7F\\u7528 Kahn \\u7B97\\u6CD5\\uFF0C\\u5176\\u5DE5\\u4F5C\\u539F\\u7406\\u5982\\u4E0B\\uFF1A\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:\"\\u521D\\u59CB\\u5316\\u4E00\\u4E2A\\u961F\\u5217\\u548C\\u4E00\\u4E2A\\u5217\\u8868\\u6765\\u5B58\\u50A8\\u6392\\u5E8F\\u540E\\u7684\\u8282\\u70B9\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u5BF9\\u4E8E\\u56FE\\u4E2D\\u7684\\u6BCF\\u4E2A\\u8282\\u70B9\\uFF0C\\u5982\\u679C\\u5B83\\u6CA1\\u6709\\u5165\\u8FB9\\uFF0C\\u5219\\u5C06\\u5176\\u6DFB\\u52A0\\u5230\\u961F\\u5217\\u4E2D\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u5F53\\u961F\\u5217\\u4E0D\\u4E3A\\u7A7A\\u65F6\\uFF1A\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u4ECE\\u961F\\u5217\\u7684\\u524D\\u9762\\u53D6\\u51FA\\u4E00\\u4E2A\\u8282\\u70B9\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u5C06\\u6B64\\u8282\\u70B9\\u6DFB\\u52A0\\u5230\\u5DF2\\u6392\\u5E8F\\u8282\\u70B9\\u7684\\u5217\\u8868\\u4E2D\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u5BF9\\u4E8E\\u6B64\\u8282\\u70B9\\u7684\\u6BCF\\u4E2A\\u5B50\\u8282\\u70B9\\uFF0C\\u5C06\\u5176\\u5165\\u5EA6\\uFF08\\u5165\\u8FB9\\u7684\\u6570\\u91CF\\uFF09\\u51CF 1\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u5982\\u679C\\u5B50\\u8282\\u70B9\\u7684\\u5165\\u5EA6\\u53D8\\u4E3A 0\\uFF0C\\u5219\\u5C06\\u5176\\u6DFB\\u52A0\\u5230\\u961F\\u5217\\u4E2D\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u5982\\u679C\\u6392\\u5E8F\\u5217\\u8868\\u7684\\u957F\\u5EA6\\u5C0F\\u4E8E\\u56FE\\u4E2D\\u7684\\u8282\\u70B9\\u6570\\uFF0C\\u8FD9\\u610F\\u5473\\u7740\\u56FE\\u4E2D\\u5B58\\u5728\\u4E00\\u4E2A\\u5FAA\\u73AF\\uFF0C\\u5E76\\u4E14\\u65E0\\u6CD5\\u8FDB\\u884C\\u62D3\\u6251\\u6392\\u5E8F\\u3002\"}),`\n`]}),`\n`,(0,e.jsx)(n.h3,{children:\"\\u7B14\\u8BB0\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"\\u4E25\\u683C\\u6765\\u8BF4\\uFF0C\\u6211\\u4EEC\\u4E5F\\u53EF\\u4EE5\\u4F7F\\u7528\\u4E00\\u4E2A\\u96C6\\u5408\\u800C\\u4E0D\\u662F\\u4E00\\u4E2A\\u961F\\u5217\\u3002\"}),`\n`]})]})}function x(l={}){let{wrapper:n}=l.components||{};return n?(0,e.jsx)(n,Object.assign({},l,{children:(0,e.jsx)(a,l)})):a(l)}var E=x;return F(j);})();\n;return Component;",
  "info": {
    "excerpt": "实现一个执行拓扑排序的函数",
    "title": "拓扑排序"
  },
  "solution": "var Component=(()=>{var p=Object.create;var i=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var v=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),q=(n,e)=>{for(var o in e)i(n,o,{get:e[o],enumerable:!0})},h=(n,e,o,u)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of f(e))!b.call(n,r)&&r!==o&&i(n,r,{get:()=>e[r],enumerable:!(u=g(e,r))||u.enumerable});return n};var _=(n,e,o)=>(o=n!=null?p(y(n)):{},h(e||!n||!n.__esModule?i(o,\"default\",{value:n,enumerable:!0}):o,n)),w=n=>h(i({},\"__esModule\",{value:!0}),n);var s=v((H,d)=>{d.exports=_jsx_runtime});var E={};q(E,{default:()=>k});var t=_(s());var a=MDXCodeBlock;var l=`/**\n * @param {Object} graph Node to array of neighboring nodes.\n * @return {Array<string>} A topological traversal of nodes.\n */\nexport default function topologicalSort(graph) {\n  // Initialize a Map object to store each node's incoming and outgoing edges,\n  // an array to store the output topological sort order,\n  // and a Queue object to store nodes to be processed\n  const nodes = new Map();\n  const queue = new Queue();\n  const order = [];\n\n  // Iterating over all the keys in the input graph object\n  // add each key to the \"nodes\" Map object\n  // with properties \"in\" with value 0\n  // and \"out\" with the value of set of neighboring nodes.\n  Object.keys(graph).forEach((node) => {\n    nodes.set(node, { in: 0, out: new Set(graph[node]) });\n  });\n\n  // Set the Map with the correct \\`in\\` values.\n  // Iterating over all the keys in the input graph object,\n  // for each node increase the \\`in\\` property of its neighbor node by 1.\n  Object.keys(graph).forEach((node) => {\n    graph[node].forEach((neighbor) => {\n      nodes.get(neighbor).in += 1;\n    });\n  });\n\n  // Iterate over the nodes and add all the nodes with \\`in: 0\\` to the queue.\n  nodes.forEach((value, node) => {\n    if (value.in === 0) {\n      queue.enqueue(node);\n    }\n  });\n\n  // While queue is not empty.\n  while (queue.length()) {\n    // Dequeue a node from the front of the queue.\n    const node = queue.dequeue();\n\n    // For each neighbor of this dequeued node decrease its \\`in\\` property by 1,\n    // if the \\`in\\` becomes 0, enqueue the neighbor node.\n    nodes.get(node).out.forEach((neighbor) => {\n      nodes.get(neighbor).in -= 1;\n      if (nodes.get(neighbor).in === 0) {\n        queue.enqueue(neighbor);\n      }\n    });\n\n    // Add the dequeued node to the output array.\n    order.push(node);\n  }\n\n  // Return topological-ordered array if it has the same length as\n  // the number of keys in the graph, otherwise there is a cycle\n  // and we return an empty array.\n  return order.length === Object.keys(graph).length ? order : [];\n}\n\nclass Node {\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n    this.prev = null;\n  }\n}\n\nclass Queue {\n  constructor() {\n    this._dummyHead = new Node();\n    this._dummyTail = new Node();\n    this._dummyHead.prev = this._dummyTail;\n    this._dummyTail.next = this._dummyHead;\n    this._length = 0;\n  }\n\n  /**\n   * Adds an item to the back of the queue.\n   * @param {*} item The item to be pushed onto the queue.\n   * @return {number} The new length of the queue.\n   */\n  enqueue(item) {\n    const node = new Node(item);\n    const prevLast = this._dummyTail.next;\n    prevLast.prev = node;\n\n    node.next = prevLast;\n    node.prev = this._dummyTail;\n    this._dummyTail.next = node;\n    this._length++;\n    return this._length;\n  }\n\n  /**\n   * Remove an item from the front of the queue.\n   * @return {*} The item at the front of the queue if it is not empty, \\`undefined\\` otherwise.\n   */\n  dequeue() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n\n    const node = this._dummyHead.prev;\n    const newFirst = node.prev;\n    this._dummyHead.prev = newFirst;\n    newFirst.next = this._dummyHead;\n    // Unlink the node to be dequeued.\n    node.prev = null;\n    node.next = null;\n    this._length--;\n    return node.value;\n  }\n\n  /**\n   * Determines if the queue is empty.\n   * @return {boolean} \\`true\\` if the queue has no items, \\`false\\` otherwise.\n   */\n  isEmpty() {\n    return this._length === 0;\n  }\n\n  /**\n   * Returns the item at the front of the queue without removing it from the queue.\n   * @return {*} The item at the front of the queue if it is not empty, \\`undefined\\` otherwise.\n   */\n  front() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n\n    return this._dummyHead.prev.value;\n  }\n\n  /**\n   * Returns the item at the back of the queue without removing it from the queue it.\n   * @return {*} The item at the back of the queue if it is not empty, \\`undefined\\` otherwise.\n   */\n  back() {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n\n    return this._dummyTail.next.value;\n  }\n\n  /**\n   * Returns the number of items in the queue.\n   * @return {number} The number of items in the queue.\n   */\n  length() {\n    return this._length;\n  }\n}\n`;var c=`export default function topologicalSort(\n  graph: Record<string, Array<string>>,\n): Array<string> {\n  // Initialize a Map object to store each node's incoming and outgoing edges,\n  // an array to store the output topological sort order,\n  // and a Queue object to store nodes to be processed\n  const nodes = new Map<string, { in: number; out: Set<string> }>();\n  const queue = new Queue<string>();\n  const order = [];\n\n  // Iterating over all the keys in the input graph object\n  // add each key to the \"nodes\" Map object\n  // with properties \"in\" with value 0\n  // and \"out\" with the value of set of neighboring nodes.\n  Object.keys(graph).forEach((node) => {\n    nodes.set(node, { in: 0, out: new Set(graph[node]) });\n  });\n\n  // Set the Map with the correct \\`in\\` values.\n  // Iterating over all the keys in the input graph object,\n  // for each node increase the \\`in\\` property of its neighbor node by 1.\n  Object.keys(graph).forEach((node) => {\n    graph[node].forEach((neighbor) => {\n      nodes.get(neighbor)!.in += 1;\n    });\n  });\n\n  // Iterate over the nodes and add all the nodes with \\`in: 0\\` to the queue.\n  nodes.forEach((value, node) => {\n    if (value.in === 0) {\n      queue.enqueue(node);\n    }\n  });\n\n  // While queue is not empty.\n  while (queue.length()) {\n    // Dequeue a node from the front of the queue.\n    const node = queue.dequeue()!;\n\n    // For each neighbor of this dequeued node decrease its \\`in\\` property by 1,\n    // if the \\`in\\` becomes 0, enqueue the neighbor node.\n    nodes.get(node)?.out.forEach((neighbor) => {\n      nodes.get(neighbor)!.in -= 1;\n      if (nodes.get(neighbor)!.in === 0) {\n        queue.enqueue(neighbor);\n      }\n    });\n\n    // Add the dequeued node to the output array.\n    order.push(node);\n  }\n\n  // Return topological-ordered array if it has the same length as\n  // the number of keys in the graph, otherwise there is a cycle\n  // and we return an empty array.\n  return order.length === Object.keys(graph).length ? order : [];\n}\n\nclass Node<T> {\n  value: T | undefined;\n  next: Node<T> | null;\n  prev: Node<T> | null;\n\n  constructor(value?: T) {\n    this.value = value;\n    this.next = null;\n    this.prev = null;\n  }\n}\n\nclass Queue<T> {\n  _dummyHead: Node<T>;\n  _dummyTail: Node<T>;\n  _length: number;\n\n  constructor() {\n    this._dummyHead = new Node<T>();\n    this._dummyTail = new Node<T>();\n    this._dummyHead.prev = this._dummyTail;\n    this._dummyTail.next = this._dummyHead;\n    this._length = 0;\n  }\n\n  /**\n   * Adds an item to the back of the queue.\n   */\n  enqueue(item: T) {\n    const node = new Node(item);\n    const prevLast = this._dummyTail.next;\n    prevLast!.prev = node;\n\n    node.next = prevLast;\n    node.prev = this._dummyTail;\n    this._dummyTail.next = node;\n    this._length++;\n    return this._length;\n  }\n\n  /**\n   * Remove an item from the front of the queue.\n   */\n  dequeue(): T | undefined {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n\n    const node = this._dummyHead.prev;\n    const newFirst = node!.prev;\n    this._dummyHead.prev = newFirst;\n    newFirst!.next = this._dummyHead;\n    // Unlink the node to be dequeued.\n    node!.prev = null;\n    node!.next = null;\n    this._length--;\n    return node!.value;\n  }\n\n  /**\n   * Determines if the queue is empty.\n   */\n  isEmpty(): boolean {\n    return this._length === 0;\n  }\n\n  /**\n   * Returns the item at the front of the queue without removing it from the queue.\n   */\n  front(): T | undefined {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n\n    return this._dummyHead.prev!.value;\n  }\n\n  /**\n   * Returns the item at the back of the queue without removing it from the queue it.\n   */\n  back(): T | undefined {\n    if (this.isEmpty()) {\n      return undefined;\n    }\n\n    return this._dummyTail.next!.value;\n  }\n\n  /**\n   * Returns the number of items in the queue.\n   * @return {number} The number of items in the queue.\n   */\n  length(): number {\n    return this._length;\n  }\n}\n`;function m(n){let e=Object.assign({p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",h3:\"h3\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\"\\u62D3\\u6251\\u6392\\u5E8F\\u662F\\u4E00\\u79CD\\u7B97\\u6CD5\\uFF0C\\u5B83\\u4EA7\\u751F\\u6709\\u5411\\u65E0\\u73AF\\u56FE\\uFF08DAG\\uFF09\\u7684\\u9876\\u70B9\\u7684\\u7EBF\\u6027\\u6392\\u5E8F\\uFF0C\\u4F7F\\u5F97\\u5BF9\\u4E8E\\u6BCF\\u4E2A\\u6709\\u5411\\u8FB9\\uFF08u\\uFF0Cv\\uFF09\\uFF0C\\u9876\\u70B9u\\u5728\\u6392\\u5E8F\\u4E2D\\u4F4D\\u4E8E\\u9876\\u70B9v\\u4E4B\\u524D\\u3002\\u4F7F\\u7528Kahn\\u7B97\\u6CD5\\u5B9E\\u73B0\\u7684\\u62D3\\u6251\\u6392\\u5E8F\\u5177\\u6709\\u7EBF\\u6027\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\uFF0C\\u8FD9\\u4F7F\\u5F97\\u5B83\\u5BF9\\u4E8E\\u5927\\u578B\\u56FE\\u76F8\\u5BF9\\u6709\\u6548\\u3002\"}),`\n`,(0,t.jsx)(e.h2,{children:\"\\u6F84\\u6E05\\u95EE\\u9898\"}),`\n`,(0,t.jsx)(e.p,{children:\"\\u5982\\u679C\\u672A\\u6307\\u5B9A\\uFF1A\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"\\u8F93\\u5165\\u548C\\u8F93\\u51FA\\u683C\\u5F0F\\uFF1A\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"\\u8F93\\u5165\\u56FE\\u5E94\\u8BE5\\u8868\\u793A\\u4E3A\\u90BB\\u63A5\\u77E9\\u9635\\u3001\\u90BB\\u63A5\\u8868\\u8FD8\\u662F\\u5176\\u4ED6\\u6570\\u636E\\u7ED3\\u6784\\uFF1F\"}),`\n`,(0,t.jsx)(e.li,{children:\"\\u8F93\\u51FA\\u5E94\\u8BE5\\u662F\\u62D3\\u6251\\u987A\\u5E8F\\u7684\\u8282\\u70B9\\u5217\\u8868\\u8FD8\\u662F\\u8868\\u793A\\u8282\\u70B9\\u62D3\\u6251\\u987A\\u5E8F\\u7684\\u6574\\u6570\\u6570\\u7EC4\\uFF1F\"}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,t.jsx)(a,{languages:{jsx:l,tsx:c}}),`\n`,(0,t.jsx)(e.h2,{children:\"\\u8FB9\\u7F18\\u60C5\\u51B5\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"\\u6CA1\\u6709\\u8FB9\\u7684\\u56FE\\uFF1A\\u8FD4\\u56DE\\u4E00\\u4E2A\\u7A7A\\u6570\\u7EC4\\u6216\\u9002\\u5F53\\u7684\\u9519\\u8BEF\\u6D88\\u606F\\u3002\"}),`\n`,(0,t.jsx)(e.li,{children:\"\\u5E26\\u6709\\u5FAA\\u73AF\\u7684\\u56FE\\uFF1A\\u8FD4\\u56DE\\u9519\\u8BEF\\u6216\\u7A7A\\u6570\\u7EC4\\u3002\"}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{children:\"Big-O \\u5206\\u6790\"}),`\n`,(0,t.jsx)(e.p,{children:\"\\u8BA9\\u6211\\u4EEC\\u5206\\u6790\\u4E00\\u4E0B\\u7B97\\u6CD5\\u7684\\u65F6\\u95F4\\u548C\\u7A7A\\u95F4\\u590D\\u6742\\u5EA6\\u3002\"}),`\n`,(0,t.jsx)(e.h3,{children:\"\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\"}),`\n`,(0,t.jsx)(e.p,{children:\"\\u4F7F\\u7528Kahn\\u7B97\\u6CD5\\u5B9E\\u73B0\\u7684\\u62D3\\u6251\\u6392\\u5E8F\\u59CB\\u7EC8\\u4EE5O(V + E)\\u7684\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\u8FD0\\u884C\\uFF0C\\u5176\\u4E2DV\\u662F\\u56FE\\u4E2D\\u9876\\u70B9\\u7684\\u6570\\u91CF\\uFF08\\u6216\\u8282\\u70B9\\uFF09\\uFF0CE\\u662F\\u56FE\\u4E2D\\u8FB9\\u7684\\u6570\\u91CF\\u3002\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"\\u521D\\u59CB\\u5316\",(0,t.jsx)(e.code,{children:\"Map\"}),\"\\u5BF9\\u8C61\\u4EE5\\u5B58\\u50A8\\u6BCF\\u4E2A\\u8282\\u70B9\\u7684\\u4F20\\u5165\\u548C\\u4F20\\u51FA\\u8FB9\\u7684\\u5FAA\\u73AF\\u7684\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\u4E3AO(V)\\uFF0C\\u56E0\\u4E3A\\u5B83\\u8BBF\\u95EE\\u4E86\\u56FE\\u7684\\u6240\\u6709\\u9876\\u70B9\\uFF08\\u8282\\u70B9\\uFF09\\u4E00\\u6B21\\u3002\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"\\u904D\\u5386\\u8F93\\u5165\\u56FE\\u4E2D\\u7684\\u6240\\u6709\\u952E\\uFF0C\\u5E76\\u4E14\\u5BF9\\u4E8E\\u6BCF\\u4E2A\\u8282\\u70B9\\uFF0C\\u5C06\\u5176\\u90BB\\u5C45\\u8282\\u70B9\\u7684\",(0,t.jsx)(e.code,{children:\"in\"}),\"\\u5C5E\\u6027\\u589E\\u52A01\\u7684\\u5FAA\\u73AF\\u7684\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\u4E3AO(E)\\uFF0C\\u56E0\\u4E3A\\u5B83\\u8BBF\\u95EE\\u4E86\\u56FE\\u7684\\u6240\\u6709\\u8FB9\\u4E00\\u6B21\\u3002\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"\\u904D\\u5386\\u8282\\u70B9\\uFF0C\\u5C06\\u6240\\u6709\",(0,t.jsx)(e.code,{children:\"in: 0\"}),\"\\u7684\\u8282\\u70B9\\u6DFB\\u52A0\\u5230\\u961F\\u5217\\u4E2D\\u7684\\u5FAA\\u73AF\\u7684\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\u4E5F\\u4E3AO(V)\\uFF0C\\u56E0\\u4E3A\\u5B83\\u8BBF\\u95EE\\u4E86\\u56FE\\u7684\\u6240\\u6709\\u9876\\u70B9\\u4E00\\u6B21\\u3002\"]}),`\n`,(0,t.jsx)(e.li,{children:\"while\\u5FAA\\u73AF\\u8FED\\u4EE3\\u76F4\\u5230\\u961F\\u5217\\u4E0D\\u4E3A\\u7A7A\\uFF0C\\u5176\\u6700\\u5927\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\u4E3AO(V + E)\\uFF0C\\u56E0\\u4E3A\\u5B83\\u6B63\\u5728\\u5904\\u7406\\u56FE\\u7684\\u6240\\u6709\\u9876\\u70B9\\u548C\\u8FB9\\u3002\"}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:\"\\u603B\\u7684\\u6765\\u8BF4\\uFF0CKahn\\u7B97\\u6CD5\\u5B9E\\u73B0\\u7684\\u7684\\u65F6\\u95F4\\u590D\\u6742\\u5EA6\\u4E3AO(V + E)\\u3002\"}),`\n`,(0,t.jsx)(e.h3,{children:\"\\u7A7A\\u95F4\\u590D\\u6742\\u5EA6\"}),`\n`,(0,t.jsx)(e.p,{children:\"\\u4F7F\\u7528Kahn\\u7B97\\u6CD5\\u5B9E\\u73B0\\u7684\\u62D3\\u6251\\u6392\\u5E8F\\u7684\\u7A7A\\u95F4\\u590D\\u6742\\u5EA6\\u4E3AO(V)\\uFF0C\\u5176\\u4E2DV\\u662F\\u56FE\\u4E2D\\u9876\\u70B9\\u7684\\u6570\\u91CF\\uFF08\\u6216\\u8282\\u70B9\\uFF09\\u3002\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Map\\u6570\\u636E\\u7ED3\\u6784\\u201Cnodes\\u201D\\u5B58\\u50A8\\u6BCF\\u4E2A\\u8282\\u70B9\\u7684\\u5C5E\\u6027\\uFF0C\\u5E76\\u5360\\u7528O(V)\\u7A7A\\u95F4\\u3002\"}),`\n`,(0,t.jsx)(e.li,{children:\"\\u8F93\\u51FA\\u6570\\u7EC4\\u201Corder\\u201D\\u5360\\u7528O(V)\\u7A7A\\u95F4\\uFF0C\\u56E0\\u4E3A\\u5B83\\u5B58\\u50A8\\u6240\\u6709\\u8282\\u70B9\\u7684\\u62D3\\u6251\\u987A\\u5E8F\\u3002\"}),`\n`,(0,t.jsx)(e.li,{children:\"\\u961F\\u5217\\u6570\\u636E\\u7ED3\\u6784\\u201Cqueue\\u201D\\u5B58\\u50A8\\u5165\\u5EA6\\u7B49\\u4E8E0\\u7684\\u8282\\u70B9\\uFF0C\\u8FD9\\u9700\\u8981\\u4E0E\\u8F93\\u5165\\u6570\\u636E\\u6210\\u7EBF\\u6027\\u5173\\u7CFB\\u7684\\u7A7A\\u95F4\\uFF0C\\u56E0\\u6B64\\u5360\\u7528O(V)\\u7A7A\\u95F4\\u3002\"}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:\"\\u56E0\\u6B64\\uFF0C\\u8BE5\\u7B97\\u6CD5\\u7684\\u7A7A\\u95F4\\u590D\\u6742\\u5EA6\\u4E3AO(V)\\u3002\"})]})}function j(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(m,n)})):m(n)}var k=j;return w(E);})();\n;return Component;"
}