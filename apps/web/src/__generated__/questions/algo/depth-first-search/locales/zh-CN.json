{
  "description": "var Component=(()=>{var a=Object.create;var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var F=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var m=(r,n)=>()=>(n||r((n={exports:{}}).exports,n),n.exports),x=(r,n)=>{for(var i in n)c(r,i,{get:n[i],enumerable:!0})},t=(r,n,i,h)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let l of D(n))!g.call(r,l)&&l!==i&&c(r,l,{get:()=>n[l],enumerable:!(h=p(n,l))||h.enumerable});return r};var E=(r,n,i)=>(i=r!=null?a(F(r)):{},t(n||!r||!r.__esModule?c(i,\"default\",{value:r,enumerable:!0}):i,r)),j=r=>t(c({},\"__esModule\",{value:!0}),r);var o=m((G,d)=>{d.exports=_jsx_runtime});var S={};x(S,{default:()=>C,frontmatter:()=>u});var e=E(o()),u={title:\"\\u6DF1\\u5EA6\\u4F18\\u5148\\u641C\\u7D22\",excerpt:\"\\u5B9E\\u73B0\\u4E00\\u4E2A\\u6DF1\\u5EA6\\u4F18\\u5148\\u641C\\u7D22\\u7B97\\u6CD5\\uFF0C\\u4EE5\\u6DF1\\u5EA6\\u4F18\\u5148\\u7684\\u65B9\\u5F0F\\u904D\\u5386\\u6709\\u5411\\u56FE\"};function s(r){let n=Object.assign({p:\"p\",h2:\"h2\",pre:\"pre\",code:\"code\",ol:\"ol\",li:\"li\"},r.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\"\\u7F16\\u5199\\u4E00\\u4E2A\\u51FD\\u6570\\uFF0C\\u8BE5\\u51FD\\u6570\\u5728\\u7ED9\\u5B9A\\u8D77\\u59CB\\u8282\\u70B9\\u7684\\u60C5\\u51B5\\u4E0B\\uFF0C\\u5BF9\\u6709\\u5411\\u56FE\\uFF08\\u90BB\\u63A5\\u8868\\u683C\\u5F0F\\uFF09\\u5B9E\\u73B0\\u6DF1\\u5EA6\\u4F18\\u5148\\u641C\\u7D22\\u7B97\\u6CD5\\u3002\"}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u4F8B\\u5B50\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`const graph1 = {\n  A: ['B', 'C', 'D'],\n  B: ['E', 'F'],\n  C: ['G', 'H'],\n  D: ['I', 'J'],\n  E: ['D'],\n  F: [],\n  G: [],\n  H: [],\n  I: [],\n  J: [],\n};\ndepthFirstSearch(graph1, 'A'); // ['A', 'B', 'E', 'D', 'I', 'J', 'F', 'C', 'G', 'H']\ndepthFirstSearch(graph1, 'B'); // ['B', 'E', 'D', 'I', 'J', 'F']\n\nconst graph2 = {\n  A: ['B', 'C'],\n  B: ['D', 'E'],\n  C: ['F', 'G'],\n  D: [],\n  E: [],\n  F: [],\n  G: [],\n};\ndepthFirstSearch(graph2, 'A'); // ['A', 'B', 'D', 'E', 'C', 'F', 'G']\ndepthFirstSearch(graph2, 'E'); // ['E']\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u56DE\\u987E\\uFF08\\u63D0\\u793A\\uFF09\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\u6DF1\\u5EA6\\u4F18\\u5148\\u641C\\u7D22 (DFS) \\u662F\\u4E00\\u79CD\\u7528\\u4E8E\\u904D\\u5386\\u56FE\\u6216\\u6811\\u7684\\u7B97\\u6CD5\\u3002DFS \\u7684\\u8F93\\u51FA\\u662F\\u56FE\\u4E2D\\u8282\\u70B9\\u6309\\u7167\\u904D\\u5386\\u987A\\u5E8F\\u6392\\u5217\\u7684\\u6570\\u7EC4\\u3002\\u6B64\\u8F93\\u51FA\\u5BF9\\u4E8E\\u5404\\u79CD\\u4E0D\\u540C\\u7684\\u7528\\u4F8B\\u548C\\u76EE\\u7684\\u90FD\\u5F88\\u6709\\u7528\\uFF0C\\u8FD9\\u4F7F\\u5F97 DFS \\u6210\\u4E3A\\u4E00\\u4E2A\\u6709\\u7528\\u7684\\u7B97\\u6CD5\\u3002\\u4E00\\u4E9B\\u7528\\u4F8B\\uFF1A\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:\"\\u67E5\\u627E\\u7279\\u5B9A\\u8282\\u70B9\\u6216\\u8282\\u70B9\\u7EC4\\u3002\\u8FD9\\u5728\\u524D\\u7AEF\\u5F88\\u5E38\\u89C1\\uFF0C\\u7528\\u4E8E\\u5728 DOM \\u6811\\u4E2D\\u67E5\\u627E\\u7279\\u5B9A\\u7684 DOM \\u8282\\u70B9\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u68C0\\u67E5\\u56FE\\u662F\\u5426\\u5DF2\\u8FDE\\u63A5\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u67E5\\u627E\\u56FE\\u4E2D\\u4E24\\u4E2A\\u8282\\u70B9\\u4E4B\\u95F4\\u7684\\u8DEF\\u5F84\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u751F\\u6210\\u6709\\u5411\\u65E0\\u73AF\\u56FE (DAG) \\u7684\\u62D3\\u6251\\u6392\\u5E8F\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u8BC6\\u522B\\u56FE\\u4E2D\\u7684\\u5FAA\\u73AF\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u4F5C\\u4E3A\\u5176\\u4ED6\\u7B97\\u6CD5\\u7684\\u6784\\u5EFA\\u5757\\u3002\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"\\u4EE5\\u4E0B\\u662F DFS \\u5982\\u4F55\\u904D\\u5386\\u56FE\\u7684\\u6982\\u8FF0\\uFF0C\\u4F7F\\u7528\\u63A5\\u53D7\\u90BB\\u63A5\\u8868\\uFF08\\u6211\\u4EEC\\u4F7F\\u7528\\u6570\\u7EC4\\u4EE3\\u66FF\\uFF09\\u548C\\u6839\\u8282\\u70B9\\u7684\\u6807\\u51C6\\u5B9E\\u73B0\\uFF1A\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:\"\\u521D\\u59CB\\u5316\\u4E00\\u4E2A\\u6570\\u7EC4\\u6216\\u5806\\u6808\\u6765\\u5B58\\u50A8\\u8981\\u8BBF\\u95EE\\u7684\\u8282\\u70B9\\u3002\\u63A8\\u9001\\u6839\\u8282\\u70B9\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u521D\\u59CB\\u5316\\u4E00\\u4E2A\\u96C6\\u5408\\u6765\\u8DDF\\u8E2A\\u5DF2\\u8BBF\\u95EE\\u7684\\u8282\\u70B9\\u3002\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"\\u8FDB\\u5165\\u4E00\\u4E2A\\u5FAA\\u73AF\\uFF0C\\u8BE5\\u5FAA\\u73AF\\u5C06\\u6301\\u7EED\\u5230\\u5806\\u6808\\u4E3A\\u7A7A\\u3002\\u5728\\u5FAA\\u73AF\\u7684\\u6BCF\\u6B21\\u8FED\\u4EE3\\u4E2D\\uFF1A\",`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:\"\\u4ECE\\u6570\\u7EC4/\\u5806\\u6808\\u4E2D\\u5F39\\u51FA\\u9876\\u90E8\\u8282\\u70B9\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u4ECE\\u8F93\\u5165\\u56FE\\u4E2D\\u68C0\\u7D22\\u8282\\u70B9\\u7684\\u90BB\\u5C45\\u3002\"}),`\n`,(0,e.jsx)(n.li,{children:\"\\u5BF9\\u4E8E\\u6BCF\\u4E2A\\u90BB\\u5C45\\uFF0C\\u68C0\\u67E5\\u5B83\\u662F\\u5426\\u5DF2\\u88AB\\u8BBF\\u95EE\\u3002\\u5982\\u679C\\u5C1A\\u672A\\u8BBF\\u95EE\\uFF0C\\u5219\\u5C06\\u5176\\u6DFB\\u52A0\\u5230\\u8981\\u8BBF\\u95EE\\u7684\\u8282\\u70B9\\u96C6\\u4E2D\\u3002\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.li,{children:\"\\u8FD4\\u56DE\\u5DF2\\u8BBF\\u95EE\\u8282\\u70B9\\u7684\\u96C6\\u5408\\u3002\"}),`\n`]})]})}function B(r={}){let{wrapper:n}=r.components||{};return n?(0,e.jsx)(n,Object.assign({},r,{children:(0,e.jsx)(s,r)})):s(r)}var C=B;return j(S);})();\n;return Component;",
  "info": {
    "excerpt": "实现一个深度优先搜索算法，以深度优先的方式遍历有向图",
    "title": "深度优先搜索"
  },
  "solution": "var Component=(()=>{var v=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var j=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),S=(t,e)=>{for(var i in e)s(t,i,{get:e[i],enumerable:!0})},d=(t,e,i,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let n of b(e))!m.call(t,n)&&n!==i&&s(t,n,{get:()=>e[n],enumerable:!(a=f(e,n))||a.enumerable});return t};var F=(t,e,i)=>(i=t!=null?v(y(t)):{},d(e||!t||!t.__esModule?s(i,\"default\",{value:t,enumerable:!0}):i,t)),k=t=>d(s({},\"__esModule\",{value:!0}),t);var c=j((_,h)=>{h.exports=_jsx_runtime});var D={};S(D,{default:()=>A});var r=F(c());var o=MDXCodeBlock;var g=`/**\n * @param {Record<string, Array<string>} graph The adjacency list representing the graph.\n * @param {string} source The source node to start traversal from. Has to be a valid node if graph is non-empty.\n * @return {string[]} A DFS-traversed order of nodes.\n */\nexport default function depthFirstSearch(graph, source) {\n  // If there are no nodes in the graph, just return an empty array\n  if (Object.keys(graph).length === 0) {\n    return [];\n  }\n\n  // Create an stack to store the nodes to be visited. We can simulate\n  // stacks using arrays in JavaScript.\n  // Add the root node since we're doing a pre-order DFS.\n  const toBeVisited = [];\n  toBeVisited.push(source);\n\n  // Initialize a set that tracks visited nodes.\n  const visited = new Set();\n\n  // Loop as long as array is empty (i.e. there are still nodes to be visited).\n  while (toBeVisited.length !== 0) {\n    // Pop top node from array (toBeVisited) and add it to the set (visited).\n    const node = toBeVisited.pop();\n    visited.add(node);\n\n    // Retrieve neighbors (values of the adjacency list input Object)\n    const neighbors = graph[node];\n    // Push neighbors, in reverse order, onto array to be visited\n    // to preserve original order of neighbors when visiting (popping off the array).\n    for (let i = neighbors.length - 1; i >= 0; i--) {\n      const neighbor = neighbors[i];\n      // First check if the neighbor has already been visited before adding it.\n      if (!visited.has(neighbor)) {\n        toBeVisited.push(neighbor);\n      }\n    }\n  }\n\n  // The visited nodes is the traversal order.\n  return Array.from(visited);\n}\n`;var l=`export default function depthFirstSearch(\n  graph: Record<string, Array<string>>,\n  source: string,\n): Array<string> {\n  // If there are no nodes in the graph, just return an empty array\n  if (Object.keys(graph).length === 0) {\n    return [];\n  }\n\n  // Create an stack to store the nodes to be visited. We can simulate\n  // stacks using arrays in JavaScript.\n  // Add the root node since we're doing a pre-order DFS.\n  const toBeVisited: Array<string> = [];\n  toBeVisited.push(source);\n\n  // Initialize a set that tracks visited nodes.\n  const visited = new Set<string>();\n\n  // Loop as long as array is empty (i.e. there are still nodes to be visited).\n  while (toBeVisited.length !== 0) {\n    // Pop top node from array (toBeVisited) and add it to the set (visited).\n    const node = toBeVisited.pop()!;\n    visited.add(node);\n\n    // Retrieve neighbors (values of the adjacency list input Object)\n    const neighbors = graph[node];\n    // Push neighbors, in reverse order, onto array to be visited\n    // to preserve original order of neighbors when visiting (popping off the array).\n    for (let i = neighbors.length - 1; i >= 0; i--) {\n      const neighbor = neighbors[i];\n      // First check if the neighbor has already been visited before adding it.\n      if (!visited.has(neighbor)) {\n        toBeVisited.push(neighbor);\n      }\n    }\n  }\n\n  // The visited nodes is the traversal order.\n  return Array.from(visited);\n}\n`;var p=`/**\n * @param {Object} graph Node to array of neighboring nodes.\n * @param {string} source Source node to start traversal from. Has to be a valid node if graph is non-empty.\n * @return {string[]} A DFS-traversed order of nodes.\n */\nexport default function depthFirstSearch(graph, source) {\n  // If there are no nodes in the graph, just return an empty array\n  if (Object.keys(graph).length === 0) {\n    return [];\n  }\n\n  // Initialize a set that tracks visited nodes.\n  const visited = new Set();\n\n  function traverse(node) {\n    // Visited before, we can ignore.\n    if (visited.has(node)) {\n      return;\n    }\n\n    visited.add(node);\n    // Recursively visit each neighbor.\n    graph[node].forEach((neighbor) => {\n      traverse(neighbor);\n    });\n  }\n\n  // Start traversing from the source.\n  traverse(source);\n\n  // The visited nodes is the traversal order.\n  return Array.from(visited);\n}\n`;function u(t){let e=Object.assign({h2:\"h2\",p:\"p\",ul:\"ul\",li:\"li\"},t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"\\u6F84\\u6E05\\u95EE\\u9898\"}),`\n`,(0,r.jsx)(e.p,{children:\"\\u5982\\u679C\\u672A\\u6307\\u5B9A\\uFF1A\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:\"\\u904D\\u5386\\u987A\\u5E8F\\uFF1A\\u6211\\u4EEC\\u5E94\\u8BE5\\u4F7F\\u7528\\u6807\\u51C6\\u7684\\u5148\\u5E8F\\u904D\\u5386\\u8FD8\\u662F\\u5176\\u4ED6\\u904D\\u5386\\u987A\\u5E8F\\uFF1F\"}),`\n`,(0,r.jsx)(e.li,{children:\"\\u8F93\\u5165\\u683C\\u5F0F\\uFF1A\\u8F93\\u5165\\u6570\\u636E\\u7684\\u683C\\u5F0F\\u662F\\u4EC0\\u4E48\\uFF1F\\u6211\\u4EEC\\u53EF\\u4EE5\\u5047\\u8BBE\\u8F93\\u5165\\u5C06\\u662F\\u4E00\\u4E2A JavaScript \\u5BF9\\u8C61\\u7684\\u90BB\\u63A5\\u8868\\uFF0C\\u5176\\u4E2D\\u952E\\u662F\\u8282\\u70B9\\uFF0C\\u503C\\u662F\\u5B50\\u8282\\u70B9\\u5417\\uFF1F\"}),`\n`,(0,r.jsx)(e.li,{children:\"\\u8F93\\u51FA\\u683C\\u5F0F\\uFF1A\\u8F93\\u51FA\\u5E94\\u8BE5\\u5982\\u4F55\\u683C\\u5F0F\\u5316\\uFF1F\\u662F\\u5426\\u6709\\u7279\\u5B9A\\u7684\\u8981\\u6C42\\uFF0C\\u6216\\u8005\\u6211\\u4EEC\\u53EF\\u4EE5\\u8FD4\\u56DE\\u4E00\\u4E2A\\u6570\\u7EC4\\uFF0C\\u5176\\u4E2D\\u5305\\u542B\\u6309\\u904D\\u5386\\u987A\\u5E8F\\u6392\\u5217\\u7684\\u5143\\u7D20\\uFF1F\"}),`\n`,(0,r.jsx)(e.li,{children:\"\\u975E\\u8FDE\\u901A\\u56FE\\uFF1A\\u6211\\u4EEC\\u662F\\u5426\\u5FC5\\u987B\\u8003\\u8651\\u6216\\u5904\\u7406\\u975E\\u8FDE\\u901A\\u56FE\\u7684\\u60C5\\u51B5\\uFF0C\\u5176\\u4E2D\\u6709\\u591A\\u4E2A\\u5B50\\u56FE\\u5F7C\\u6B64\\u4E0D\\u8FDE\\u63A5\\uFF1F\"}),`\n`]}),`\n`,(0,r.jsx)(e.h2,{children:\"\\u89E3\\u51B3\\u65B9\\u6848\"}),`\n`,(0,r.jsx)(e.p,{children:\"\\u8BE5\\u89E3\\u51B3\\u65B9\\u6848\\u5B9E\\u73B0\\u4E86\\u63CF\\u8FF0\\u4E2D\\u6982\\u8FF0\\u7684\\u7B97\\u6CD5\\u3002\"}),`\n`,(0,r.jsx)(o,{languages:{jsx:g,tsx:l}}),`\n`,(0,r.jsx)(e.p,{children:\"\\u6211\\u4EEC\\u4E5F\\u53EF\\u4EE5\\u9012\\u5F52\\u5730\\u6267\\u884C DFS\\uFF0C\\u8FD9\\u5728\\u67D0\\u4E9B\\u60C5\\u51B5\\u4E0B\\u53EF\\u80FD\\u66F4\\u76F4\\u89C2\\u3002\\u9012\\u5F52\\u8C03\\u7528\\u5806\\u6808\\u662F\\u4E00\\u4E2A\\u9690\\u5F0F\\u5806\\u6808\\uFF0C\\u7528\\u4E8E\\u8DDF\\u8E2A\\u63A5\\u4E0B\\u6765\\u8981\\u8BBF\\u95EE\\u7684\\u8282\\u70B9\\u3002\"}),`\n`,(0,r.jsx)(o,{children:p}),`\n`,(0,r.jsx)(e.h2,{children:\"\\u8FB9\\u7F18\\u60C5\\u51B5\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:\"\\u7A7A\\u56FE\\uFF1A\\u8FD4\\u56DE\\u4E00\\u4E2A\\u7A7A\\u6570\\u7EC4\\uFF0C\\u4E0D\\u4F1A\\u5D29\\u6E83\\u3002\"}),`\n`,(0,r.jsx)(e.li,{children:\"\\u53EA\\u6709\\u4E00\\u4E24\\u4E2A\\u8282\\u70B9\\u7684\\u56FE\\uFF1A\\u904D\\u5386\\u800C\\u4E0D\\u4F1A\\u5D29\\u6E83\\u3002\"}),`\n`,(0,r.jsx)(e.li,{children:\"\\u5FAA\\u73AF\\u56FE\\uFF1A\\u786E\\u4FDD\\u4E0D\\u518D\\u904D\\u5386\\u5DF2\\u8BBF\\u95EE\\u7684\\u8282\\u70B9\\u3002\"}),`\n`,(0,r.jsx)(e.li,{children:\"\\u4E0D\\u76F8\\u4EA4\\u7684\\u56FE\\uFF1A\\u4E0D\\u9700\\u8981\\u7279\\u6B8A\\u5904\\u7406\\uFF0C\\u4F46\\u6700\\u597D\\u77E5\\u9053\\u3002\"}),`\n`]})]})}function w(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(u,t)})):u(t)}var A=w;return k(D);})();\n;return Component;"
}