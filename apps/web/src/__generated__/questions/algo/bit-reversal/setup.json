{
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/bit-reversal\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/bit-reversal.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"resolveJsonModule\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/bit-reversal.run.test.ts": "import fn from './bit-reversal';\nimport runTestCases from './run.tests.json';\n\ndescribe('bitReversal', () => {\n  runTestCases.forEach((example: any) => {\n    test(`${example.input[0][0]} = ${example.input[0][1]}`, () => {\n      expect(fn(example.input[0][1])).toStrictEqual(example.output);\n    });\n  });\n});\n",
    "/src/bit-reversal.submit.test.ts": "import bitReversal from './bit-reversal';\nimport submitTestCases from './submit.tests.json';\n\ndescribe('bitReversal', () => {\n  (submitTestCases as any[]).forEach((example: any) => {\n    test(`n = ${example.input[0][1]}`, () => {\n      expect(bitReversal(example.input[0][1])).toStrictEqual(example.output);\n    });\n  });\n});\n",
    "/src/bit-reversal.ts": "export default function bitReversal(n: number): number {\n  // Initialize result as 0\n  let reversed = 0;\n\n  // Iterate over each bit position\n  for (let i = 0; i < 32; i++) {\n    // Extract the least significant bit (LSB)\n    const leastSignificantBit = n & 1;\n\n    // Shift the LSB to the most significant position of the reversed number\n    reversed = (reversed << 1) | leastSignificantBit;\n\n    // Right shift the original number to process the next bit\n    n >>= 1;\n  }\n\n  return reversed >>> 0; // Ensure the result is an unsigned 32-bit integer\n}\n",
    "/src/run.tests.json": "[\n  {\n    \"input\": [[\"n\", 8]],\n    \"output\": 268435456,\n    \"explanation\": \"8 in binary is 00000000000000000000000000001000. After reversing its bits, it becomes 00010000000000000000000000000000, which is 268435456 in decimal.\"\n  },\n  {\n    \"input\": [[\"n\", 3]],\n    \"output\": 3221225472,\n    \"explanation\": \"3 in binary is 00000000000000000000000000000011. After reversing its bits, it becomes 11000000000000000000000000000000, which is 3221225472 in decimal.\"\n  },\n  {\n    \"input\": [[\"n\", 0]],\n    \"output\": 0,\n    \"explanation\": \"0 in binary is 00000000000000000000000000000000. After reversing its bits, it becomes 00000000000000000000000000000000, which is 0 in decimal.\"\n  }\n]\n",
    "/src/submit.tests.json": "[\n  {\n    \"input\": [[\"n\", 8]],\n    \"output\": 268435456\n  },\n  {\n    \"input\": [[\"n\", 3]],\n    \"output\": 3221225472\n  },\n  {\n    \"input\": [[\"n\", 0]],\n    \"output\": 0\n  },\n  {\n    \"input\": [[\"n\", 7]],\n    \"output\": 3758096384\n  },\n  {\n    \"input\": [[\"n\", 8]],\n    \"output\": 268435456\n  },\n  {\n    \"input\": [[\"n\", 7]],\n    \"output\": 3758096384\n  },\n  {\n    \"input\": [[\"n\", 2]],\n    \"output\": 1073741824\n  },\n  {\n    \"input\": [[\"n\", 5]],\n    \"output\": 2684354560\n  },\n  {\n    \"input\": [[\"n\", 8]],\n    \"output\": 268435456\n  },\n  {\n    \"input\": [[\"n\", 7]],\n    \"output\": 3758096384\n  },\n  {\n    \"input\": [[\"n\", 832495]],\n    \"output\": 4157419520\n  },\n  {\n    \"input\": [[\"n\", 140117]],\n    \"output\": 2864988160\n  },\n  {\n    \"input\": [[\"n\", 933231]],\n    \"output\": 4139544576\n  },\n  {\n    \"input\": [[\"n\", 127046]],\n    \"output\": 1645182976\n  },\n  {\n    \"input\": [[\"n\", 931913]],\n    \"output\": 2451337216\n  },\n  {\n    \"input\": [[\"n\", 730860]],\n    \"output\": 929353728\n  },\n  {\n    \"input\": [[\"n\", 678872]],\n    \"output\": 467292160\n  },\n  {\n    \"input\": [[\"n\", 425424]],\n    \"output\": 197025792\n  },\n  {\n    \"input\": [[\"n\", 668596]],\n    \"output\": 768364544\n  },\n  {\n    \"input\": [[\"n\", 867147]],\n    \"output\": 3537678336\n  },\n  {\n    \"input\": [[\"n\", 160330]],\n    \"output\": 1380859904\n  },\n  {\n    \"input\": [[\"n\", 602062]],\n    \"output\": 1945407488\n  },\n  {\n    \"input\": [[\"n\", 785822]],\n    \"output\": 2042613760\n  },\n  {\n    \"input\": [[\"n\", 915787]],\n    \"output\": 3533680640\n  },\n  {\n    \"input\": [[\"n\", 52335]],\n    \"output\": 4130537472\n  },\n  {\n    \"input\": [[\"n\", 957808]],\n    \"output\": 247033856\n  },\n  {\n    \"input\": [[\"n\", 758620]],\n    \"output\": 986304512\n  },\n  {\n    \"input\": [[\"n\", 771484]],\n    \"output\": 967036928\n  },\n  {\n    \"input\": [[\"n\", 285074]],\n    \"output\": 1234837504\n  },\n  {\n    \"input\": [[\"n\", 463787]],\n    \"output\": 3586711552\n  },\n  {\n    \"input\": [[\"n\", 45326]],\n    \"output\": 1888288768\n  },\n  {\n    \"input\": [[\"n\", 988191]],\n    \"output\": 4163432448\n  },\n  {\n    \"input\": [[\"n\", 880842]],\n    \"output\": 1393471488\n  },\n  {\n    \"input\": [[\"n\", 181191]],\n    \"output\": 3821223936\n  },\n  {\n    \"input\": [[\"n\", 682625]],\n    \"output\": 2169917440\n  },\n  {\n    \"input\": [[\"n\", 533599]],\n    \"output\": 4196667392\n  },\n  {\n    \"input\": [[\"n\", 362687]],\n    \"output\": 4245790720\n  },\n  {\n    \"input\": [[\"n\", 379567]],\n    \"output\": 4115898368\n  },\n  {\n    \"input\": [[\"n\", 158451]],\n    \"output\": 3478536192\n  },\n  {\n    \"input\": [[\"n\", 774052]],\n    \"output\": 636735488\n  },\n  {\n    \"input\": [[\"n\", 3123]],\n    \"output\": 3425697792\n  },\n  {\n    \"input\": [[\"n\", 196885]],\n    \"output\": 2827010048\n  },\n  {\n    \"input\": [[\"n\", 16528]],\n    \"output\": 151126016\n  },\n  {\n    \"input\": [[\"n\", 857049]],\n    \"output\": 2613620736\n  },\n  {\n    \"input\": [[\"n\", 711358]],\n    \"output\": 2103136256\n  },\n  {\n    \"input\": [[\"n\", 710720]],\n    \"output\": 35344384\n  },\n  {\n    \"input\": [[\"n\", 405490]],\n    \"output\": 1341415424\n  },\n  {\n    \"input\": [[\"n\", 571065]],\n    \"output\": 2641170432\n  },\n  {\n    \"input\": [[\"n\", 586029]],\n    \"output\": 3029274624\n  },\n  {\n    \"input\": [[\"n\", 435897]],\n    \"output\": 2640666624\n  },\n  {\n    \"input\": [[\"n\", 234117]],\n    \"output\": 2705965056\n  },\n  {\n    \"input\": [[\"n\", 195666]],\n    \"output\": 1245659136\n  },\n  {\n    \"input\": [[\"n\", 245293]],\n    \"output\": 3028140032\n  },\n  {\n    \"input\": [[\"n\", 225585]],\n    \"output\": 2358165504\n  },\n  {\n    \"input\": [[\"n\", 719108]],\n    \"output\": 547311616\n  },\n  {\n    \"input\": [[\"n\", 54672]],\n    \"output\": 162201600\n  },\n  {\n    \"input\": [[\"n\", 679703]],\n    \"output\": 3908718592\n  },\n  {\n    \"input\": [[\"n\", 114704]],\n    \"output\": 134447104\n  },\n  {\n    \"input\": [[\"n\", 718441]],\n    \"output\": 2523877376\n  },\n  {\n    \"input\": [[\"n\", 661002]],\n    \"output\": 1349013504\n  },\n  {\n    \"input\": [[\"n\", 263850]],\n    \"output\": 1432363008\n  },\n  {\n    \"input\": [[\"n\", 529362]],\n    \"output\": 1271402496\n  },\n  {\n    \"input\": [[\"n\", 180988]],\n    \"output\": 1061371904\n  },\n  {\n    \"input\": [[\"n\", 547176]],\n    \"output\": 379195392\n  },\n  {\n    \"input\": [[\"n\", 134738]],\n    \"output\": 1248870400\n  },\n  {\n    \"input\": [[\"n\", 435167]],\n    \"output\": 4224016384\n  },\n  {\n    \"input\": [[\"n\", 451444]],\n    \"output\": 784818176\n  },\n  {\n    \"input\": [[\"n\", 93177]],\n    \"output\": 2681634816\n  },\n  {\n    \"input\": [[\"n\", 245457]],\n    \"output\": 2340274176\n  },\n  {\n    \"input\": [[\"n\", 23384]],\n    \"output\": 450494464\n  },\n  {\n    \"input\": [[\"n\", 663454]],\n    \"output\": 2046316544\n  },\n  {\n    \"input\": [[\"n\", 271019]],\n    \"output\": 3578011648\n  },\n  {\n    \"input\": [[\"n\", 994079]],\n    \"output\": 4174704640\n  },\n  {\n    \"input\": [[\"n\", 63749]],\n    \"output\": 2694774784\n  },\n  {\n    \"input\": [[\"n\", 66595]],\n    \"output\": 3290464256\n  },\n  {\n    \"input\": [[\"n\", 660516]],\n    \"output\": 606621696\n  },\n  {\n    \"input\": [[\"n\", 605002]],\n    \"output\": 1390186496\n  },\n  {\n    \"input\": [[\"n\", 29328]],\n    \"output\": 156106752\n  },\n  {\n    \"input\": [[\"n\", 25200]],\n    \"output\": 239468544\n  },\n  {\n    \"input\": [[\"n\", 15832]],\n    \"output\": 465305600\n  },\n  {\n    \"input\": [[\"n\", 59717]],\n    \"output\": 2727804928\n  },\n  {\n    \"input\": [[\"n\", 834570]],\n    \"output\": 1346187264\n  },\n  {\n    \"input\": [[\"n\", 87554]],\n    \"output\": 1080721408\n  },\n  {\n    \"input\": [[\"n\", 337861]],\n    \"output\": 2749669376\n  },\n  {\n    \"input\": [[\"n\", 740416]],\n    \"output\": 36884480\n  },\n  {\n    \"input\": [[\"n\", 40307]],\n    \"output\": 3468230656\n  },\n  {\n    \"input\": [[\"n\", 518203]],\n    \"output\": 3692552192\n  },\n  {\n    \"input\": [[\"n\", 902489]],\n    \"output\": 2594418688\n  },\n  {\n    \"input\": [[\"n\", 526237]],\n    \"output\": 3118469120\n  },\n  {\n    \"input\": [[\"n\", 241991]],\n    \"output\": 3800940544\n  },\n  {\n    \"input\": [[\"n\", 596335]],\n    \"output\": 4137193472\n  },\n  {\n    \"input\": [[\"n\", 553796]],\n    \"output\": 583929856\n  },\n  {\n    \"input\": [[\"n\", 493946]],\n    \"output\": 1586618368\n  },\n  {\n    \"input\": [[\"n\", 312447]],\n    \"output\": 4263714816\n  },\n  {\n    \"input\": [[\"n\", 642827]],\n    \"output\": 3505623040\n  },\n  {\n    \"input\": [[\"n\", 151735]],\n    \"output\": 3976871936\n  },\n  {\n    \"input\": [[\"n\", 880416]],\n    \"output\": 83275776\n  },\n  {\n    \"input\": [[\"n\", 553028]],\n    \"output\": 571346944\n  },\n  {\n    \"input\": [[\"n\", 128756]],\n    \"output\": 795836416\n  },\n  {\n    \"input\": [[\"n\", 931581]],\n    \"output\": 3211554816\n  }\n]\n"
  },
  "skeleton": {
    "js": "/**\n * @param {number} n\n * @return {number}\n */\nexport default function bitReversal(n) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function bitReversal(n: number): number {\n  throw 'Not implemented!';\n}"
  },
  "workspace": {
    "main": "/src/bit-reversal.ts",
    "run": "/src/bit-reversal.run.test.ts",
    "submit": "/src/bit-reversal.submit.test.ts"
  }
}