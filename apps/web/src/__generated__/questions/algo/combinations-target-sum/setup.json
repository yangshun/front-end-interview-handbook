{
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/combinations-target-sum\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/combinations-target-sum.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"resolveJsonModule\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/combinations-target-sum.run.test.ts": "import fn from './combinations-target-sum';\nimport runTestCases from './run.tests.json';\n\ndescribe('combinationTargetSum', () => {\n  runTestCases.forEach((example: any) => {\n    test(`${example.input[0][0]} = [${example.input[0][1]}] ${example.input[1][0]} = ${example.input[1][1]}`, () => {\n      expect(fn(example.input[0][1], example.input[1][1])).toStrictEqual(\n        example.output,\n      );\n    });\n  });\n});\n",
    "/src/combinations-target-sum.submit.test.ts": "import combinationTargetSum from './combinations-target-sum';\nimport submitTestCases from './submit.tests.json';\n\ndescribe('combinationTargetSum', () => {\n  (submitTestCases as any[]).forEach((example: any) => {\n    test(`numbers = [${example.input[0][1]}] target = ${example.input[1][1]}`, () => {\n      expect(\n        combinationTargetSum(example.input[0][1], example.input[1][1]),\n      ).toStrictEqual(example.output);\n    });\n  });\n});\n",
    "/src/combinations-target-sum.ts": "export default function combinationTargetSum(\n  numbers: number[],\n  target: number,\n): number {\n  // Initialize a dynamic programming (DP) array to store the number of\n  // combinations for each sum up to the target\n  const dp: number[] = new Array(target + 1).fill(0);\n\n  // Base case: There's one way to reach a sum of 0 (using no elements)\n  dp[0] = 1;\n\n  // Iterate through all possible target sums from 1 to the actual target\n  for (let combSum = 1; combSum <= target; combSum++) {\n    // Iterate through each number in the 'nums' array\n    for (const num of numbers) {\n      // Check if the current number can be subtracted from the current target sum\n      // without going below zero. This ensures we only consider valid combinations\n      if (combSum - num >= 0) {\n        // If valid, add the number of combinations for the remaining sum\n        // (combSum - num) to the current sum's combination count. This leverages\n        // previously calculated subproblems\n        dp[combSum] += dp[combSum - num];\n      }\n    }\n  }\n\n  // The final element in the DP array (dp[target]) holds the number of\n  // combinations that add up to the target sum\n  return dp[target];\n}\n",
    "/src/run.tests.json": "[\n  {\n    \"input\": [\n      [\"numbers\", [1, 2, 3]],\n      [\"target\", 4]\n    ],\n    \"output\": 7,\n    \"explanation\": \"The possible combinations are: (1, 1, 1, 1), (1, 1, 2), (1, 2, 1), (1, 3), (2, 1, 1), (2, 2), (3, 1)\"\n  },\n  {\n    \"input\": [\n      [\"numbers\", [7]],\n      [\"target\", 2]\n    ],\n    \"output\": 0,\n    \"explanation\": \"There is no combination of elements in [7] that can add up to 2.\"\n  },\n  {\n    \"input\": [\n      [\"numbers\", [2, 4]],\n      [\"target\", 6]\n    ],\n    \"output\": 3,\n    \"explanation\": \"The possible combinations are: (2, 2, 2), (2, 4), (4, 2)\"\n  }\n]\n",
    "/src/submit.tests.json": "[\n  {\n    \"input\": [\n      [\"numbers\", [5, 20, 17]],\n      [\"target\", 6]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [14, 3, 5]],\n      [\"target\", 4]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [3, 12, 2, 7, 9, 5, 13, 16, 15]],\n      [\"target\", 6]\n    ],\n    \"output\": 2\n  },\n  {\n    \"input\": [\n      [\"numbers\", [19, 4, 11, 1]],\n      [\"target\", 7]\n    ],\n    \"output\": 5\n  },\n  {\n    \"input\": [\n      [\"numbers\", [18, 16, 13, 7, 11, 15, 5, 4, 9]],\n      [\"target\", 8]\n    ],\n    \"output\": 1\n  },\n  {\n    \"input\": [\n      [\"numbers\", [12, 17, 13]],\n      [\"target\", 1]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [14, 12, 16, 3, 9]],\n      [\"target\", 5]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [2]],\n      [\"target\", 4]\n    ],\n    \"output\": 1\n  },\n  {\n    \"input\": [\n      [\"numbers\", [6, 2, 10, 5, 17, 3, 9, 13, 19]],\n      [\"target\", 7]\n    ],\n    \"output\": 5\n  },\n  {\n    \"input\": [\n      [\"numbers\", [18, 2, 12, 10, 9, 19, 3, 15, 4]],\n      [\"target\", 7]\n    ],\n    \"output\": 5\n  },\n  {\n    \"input\": [\n      [\"numbers\", [510, 824, 173, 515, 701, 297]],\n      [\"target\", 830]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          249, 821, 138, 949, 963, 284, 715, 51, 929, 936, 645, 958, 708, 42,\n          336, 637\n        ]\n      ],\n      [\"target\", 117]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [530, 971, 453, 123, 359, 918, 569]],\n      [\"target\", 94]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          635, 250, 677, 954, 693, 38, 290, 752, 724, 775, 667, 801, 792, 119,\n          117, 645, 872, 396, 739\n        ]\n      ],\n      [\"target\", 557]\n    ],\n    \"output\": 42\n  },\n  {\n    \"input\": [\n      [\"numbers\", [486, 458, 924, 936, 239, 14, 853]],\n      [\"target\", 389]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [531, 270, 237, 752, 403, 116, 609, 456, 851, 550, 371]],\n      [\"target\", 616]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [837, 152, 671, 565, 253]],\n      [\"target\", 203]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          67, 654, 406, 891, 120, 298, 155, 285, 142, 105, 204, 113, 808, 911,\n          625, 724, 307, 793, 372\n        ]\n      ],\n      [\"target\", 707]\n    ],\n    \"output\": 615\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          504, 51, 282, 606, 120, 952, 549, 856, 411, 182, 80, 247, 299, 902,\n          436, 391, 324\n        ]\n      ],\n      [\"target\", 948]\n    ],\n    \"output\": 21545\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [553, 512, 329, 806, 657, 647, 149, 771, 782, 496, 872, 39, 825, 34]\n      ],\n      [\"target\", 400]\n    ],\n    \"output\": 10\n  },\n  {\n    \"input\": [\n      [\"numbers\", [27, 384, 207, 72, 789, 280, 189, 371]],\n      [\"target\", 139]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [682, 420, 860, 405, 580, 740, 802, 432, 798, 742]],\n      [\"target\", 792]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [864, 117, 614, 734, 842, 490]],\n      [\"target\", 161]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [857, 297, 544, 967, 154, 14, 375, 627]],\n      [\"target\", 75]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [207, 463, 413, 461, 602, 426]],\n      [\"target\", 122]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [765, 178, 254, 855, 833, 857, 777, 610]],\n      [\"target\", 419]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [192, 92, 305, 876, 673, 589]],\n      [\"target\", 964]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [25, 237]],\n      [\"target\", 517]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [10, 558, 699, 962, 326, 366, 23, 744, 828, 787]],\n      [\"target\", 288]\n    ],\n    \"output\": 54264\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [666, 830, 222, 453, 230, 144, 550, 594, 967, 395, 88, 771, 625]\n      ],\n      [\"target\", 22]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [737, 364, 973, 878, 146, 625, 877, 901, 946, 342, 355, 393, 754]\n      ],\n      [\"target\", 244]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [914, 72, 406, 607, 947, 555, 292, 756, 30]],\n      [\"target\", 48]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [619, 915, 706, 253, 136, 214, 223, 184, 825]],\n      [\"target\", 322]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [61, 350, 156, 884, 907, 917, 875]],\n      [\"target\", 689]\n    ],\n    \"output\": 20\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          14, 13, 424, 433, 165, 972, 245, 301, 274, 979, 714, 199, 827, 871,\n          51, 542, 60, 794, 103, 201\n        ]\n      ],\n      [\"target\", 109]\n    ],\n    \"output\": 56\n  },\n  {\n    \"input\": [\n      [\"numbers\", [266, 806, 82, 404, 464, 1, 418, 258, 453, 405, 176, 689]],\n      [\"target\", 177]\n    ],\n    \"output\": 204\n  },\n  {\n    \"input\": [\n      [\"numbers\", [963, 832, 42, 61, 844, 696]],\n      [\"target\", 165]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          776, 628, 748, 180, 456, 82, 205, 186, 179, 484, 303, 554, 76, 271,\n          993, 371, 304, 441, 237\n        ]\n      ],\n      [\"target\", 443]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [556, 342, 764, 876, 26, 444, 70, 272, 796, 329, 477]],\n      [\"target\", 239]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          341, 71, 533, 220, 921, 510, 732, 718, 820, 985, 391, 709, 891, 960,\n          181, 705, 157, 986, 233, 549\n        ]\n      ],\n      [\"target\", 498]\n    ],\n    \"output\": 2\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [435, 193, 197, 727, 338, 639, 129, 36, 425, 441, 178, 801, 285]\n      ],\n      [\"target\", 660]\n    ],\n    \"output\": 112\n  },\n  {\n    \"input\": [\n      [\"numbers\", [20, 196, 76, 941, 77, 71, 973, 478, 36, 821, 490]],\n      [\"target\", 705]\n    ],\n    \"output\": 1474924998\n  },\n  {\n    \"input\": [\n      [\"numbers\", [321, 565, 532, 52, 548, 47]],\n      [\"target\", 139]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [356, 121, 280, 891]],\n      [\"target\", 79]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          921, 267, 698, 124, 850, 835, 33, 902, 85, 265, 140, 840, 514, 984,\n          182, 479\n        ]\n      ],\n      [\"target\", 773]\n    ],\n    \"output\": 24552\n  },\n  {\n    \"input\": [\n      [\"numbers\", [502, 64, 942, 939, 120, 245, 783, 529, 135, 644]],\n      [\"target\", 933]\n    ],\n    \"output\": 360\n  },\n  {\n    \"input\": [\n      [\"numbers\", [651, 814, 962, 896, 409, 561, 807, 335, 674, 307, 568, 318]],\n      [\"target\", 432]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [327, 349, 834, 427, 129]],\n      [\"target\", 537]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [135, 518, 862, 213, 26, 108, 771, 848, 120, 836]],\n      [\"target\", 876]\n    ],\n    \"output\": 112639\n  },\n  {\n    \"input\": [\n      [\"numbers\", [269, 569, 755, 859, 493, 907, 53, 925]],\n      [\"target\", 275]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [448, 263, 582, 540, 664, 537]],\n      [\"target\", 390]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [452, 839, 915, 849, 997, 950, 337, 966, 646, 244, 446, 757]],\n      [\"target\", 848]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [206, 916, 341, 415, 372, 299]],\n      [\"target\", 516]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [487, 16, 205, 237, 315, 540]],\n      [\"target\", 796]\n    ],\n    \"output\": 17\n  },\n  {\n    \"input\": [\n      [\"numbers\", [389, 883, 685, 881, 778, 263, 305, 664, 745, 564, 318, 220]],\n      [\"target\", 665]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [533, 292, 882, 600]],\n      [\"target\", 730]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [806, 783, 441, 401, 568, 744, 95]],\n      [\"target\", 268]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [998]],\n      [\"target\", 63]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [55, 639, 289, 4, 215, 295, 616, 96, 893, 93, 863]],\n      [\"target\", 307]\n    ],\n    \"output\": 16729\n  },\n  {\n    \"input\": [\n      [\"numbers\", [268, 808, 672, 69, 508, 433, 213, 427, 380, 451, 470, 461]],\n      [\"target\", 164]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          594, 541, 715, 440, 759, 639, 957, 817, 315, 684, 786, 215, 926, 637,\n          784, 792, 190\n        ]\n      ],\n      [\"target\", 883]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          995, 851, 919, 196, 533, 377, 998, 509, 695, 459, 836, 644, 843, 15,\n          72, 339, 960\n        ]\n      ],\n      [\"target\", 809]\n    ],\n    \"output\": 8770\n  },\n  {\n    \"input\": [\n      [\"numbers\", [320, 13, 659, 893, 462, 226]],\n      [\"target\", 386]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [639, 867, 642, 881]],\n      [\"target\", 470]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          320, 433, 531, 216, 181, 658, 42, 440, 750, 429, 237, 579, 409, 778,\n          962, 182, 917, 992\n        ]\n      ],\n      [\"target\", 900]\n    ],\n    \"output\": 663\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          703, 753, 946, 531, 153, 392, 881, 809, 217, 988, 301, 593, 746, 224,\n          775, 736\n        ]\n      ],\n      [\"target\", 465]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [528, 430, 318, 975, 737, 128, 443, 45, 209, 383, 562, 97, 586, 303]\n      ],\n      [\"target\", 296]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [333, 753, 290, 749, 206]],\n      [\"target\", 822]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [700, 255, 607, 780, 199, 355, 205, 899, 57, 963, 675, 170]],\n      [\"target\", 656]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [631, 860, 58, 33, 833, 461, 381, 832, 134, 112, 617, 146, 499, 90, 341]\n      ],\n      [\"target\", 870]\n    ],\n    \"output\": 8660913\n  },\n  {\n    \"input\": [\n      [\"numbers\", [924, 127, 821, 880, 780, 385, 676, 844, 519, 106, 995, 698]],\n      [\"target\", 915]\n    ],\n    \"output\": 6\n  },\n  {\n    \"input\": [\n      [\"numbers\", [40, 953, 153, 465]],\n      [\"target\", 767]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [754, 24, 275, 752, 621, 109, 281, 418, 105, 497, 834, 655]],\n      [\"target\", 695]\n    ],\n    \"output\": 89\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          467, 536, 889, 861, 531, 762, 966, 912, 48, 227, 213, 504, 458, 456,\n          261, 489, 565\n        ]\n      ],\n      [\"target\", 785]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [489, 885, 559, 623, 852, 422, 421, 858]],\n      [\"target\", 34]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [422, 198, 863, 437, 113, 518]],\n      [\"target\", 622]\n    ],\n    \"output\": 6\n  },\n  {\n    \"input\": [\n      [\"numbers\", [779, 540, 447, 9, 902, 690, 780]],\n      [\"target\", 133]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [854, 843, 128, 622, 320, 324, 895, 180, 388]],\n      [\"target\", 756]\n    ],\n    \"output\": 12\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          228, 140, 349, 914, 775, 631, 235, 787, 373, 995, 317, 51, 650, 902,\n          879, 752, 363, 993, 685, 279\n        ]\n      ],\n      [\"target\", 327]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [291, 33, 558, 929, 34, 455, 928]],\n      [\"target\", 614]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [756, 469, 130, 306, 322, 688, 110, 874, 42, 936, 1000, 785, 670, 919]\n      ],\n      [\"target\", 637]\n    ],\n    \"output\": 5\n  },\n  {\n    \"input\": [\n      [\"numbers\", [704, 15, 586, 693, 798, 922, 542]],\n      [\"target\", 297]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [241, 363, 524, 446, 496, 869, 893, 532, 986, 798, 596, 19, 334]\n      ],\n      [\"target\", 137]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [717, 147, 868, 890]],\n      [\"target\", 782]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [492, 898, 460, 253, 329, 896, 374, 765, 381, 123, 965]],\n      [\"target\", 275]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [26, 195, 766, 942, 572, 379, 268, 270, 187, 129, 960, 748]],\n      [\"target\", 51]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [314, 940, 475, 120, 106, 901, 575, 835, 511, 937, 258, 510, 796]\n      ],\n      [\"target\", 867]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [720, 781, 88, 685, 311, 452]],\n      [\"target\", 837]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [576, 723, 210, 131, 277, 230, 61, 175]],\n      [\"target\", 449]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [927, 751, 1]],\n      [\"target\", 313]\n    ],\n    \"output\": 1\n  },\n  {\n    \"input\": [\n      [\"numbers\", [356, 990, 361, 706, 87, 879, 598, 80, 768, 434, 606]],\n      [\"target\", 13]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [503, 858, 132, 178, 837, 859, 538, 211, 141]],\n      [\"target\", 45]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [143, 236, 825, 66, 747, 421, 582, 695, 585, 685]],\n      [\"target\", 619]\n    ],\n    \"output\": 4\n  },\n  {\n    \"input\": [\n      [\"numbers\", [537, 866, 159, 494, 123]],\n      [\"target\", 192]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [2, 226, 360, 763, 407, 863]],\n      [\"target\", 694]\n    ],\n    \"output\": 11152\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          51, 446, 990, 881, 391, 508, 794, 462, 557, 126, 769, 774, 986, 27,\n          437, 653, 284, 207, 555, 868\n        ]\n      ],\n      [\"target\", 799]\n    ],\n    \"output\": 1644\n  },\n  {\n    \"input\": [\n      [\"numbers\", [906, 28, 334, 449, 880, 447, 928]],\n      [\"target\", 71]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [559, 105, 910, 558, 575, 826, 916, 484, 791, 832, 252]],\n      [\"target\", 196]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\"numbers\", [667, 175, 410, 85, 119, 301, 403, 776, 595, 67, 76, 863]],\n      [\"target\", 283]\n    ],\n    \"output\": 0\n  },\n  {\n    \"input\": [\n      [\n        \"numbers\",\n        [\n          859, 325, 878, 922, 989, 603, 943, 977, 251, 792, 257, 828, 92, 616,\n          58, 223\n        ]\n      ],\n      [\"target\", 776]\n    ],\n    \"output\": 0\n  }\n]\n"
  },
  "skeleton": {
    "js": "/**\n * @param {number[]} numbers\n * @param {number} target\n * @return {number}\n */\nexport default function combinationTargetSum(numbers, target) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function combinationTargetSum(\n  numbers: number[],\n  target: number,\n): number {\n  throw 'Not implemented!';\n}"
  },
  "workspace": {
    "main": "/src/combinations-target-sum.ts",
    "run": "/src/combinations-target-sum.run.test.ts",
    "submit": "/src/combinations-target-sum.submit.test.ts"
  }
}