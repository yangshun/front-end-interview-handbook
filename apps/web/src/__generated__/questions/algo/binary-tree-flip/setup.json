{
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/binary-tree-flip\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/binary-tree-flip.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"resolveJsonModule\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n",
    "/src/binary-tree-flip.run.test.ts": "import fn from './binary-tree-flip';\nimport runTestCases from './run.tests.json';\n\nclass TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n\n  constructor(\n    val: number,\n    left: TreeNode | null = null,\n    right: TreeNode | null = null,\n  ) {\n    this.val = val;\n    this.left = left;\n    this.right = right;\n  }\n}\n\nfunction createTreeFromSerialized(\n  serializedTree: (number | null)[],\n): TreeNode | null {\n  if (serializedTree.length === 0) {\n    return null;\n  }\n\n  const nodeQueue: TreeNode[] = [];\n  let index = 0;\n\n  // Create the root node\n  const root = new TreeNode(Number(serializedTree[index]));\n  nodeQueue.push(root);\n  index++;\n\n  while (nodeQueue.length > 0 && index < serializedTree.length) {\n    const currentNode = nodeQueue.shift()!; // `!` asserts that `shift` does not return `null`\n\n    // Process left child\n    if (index < serializedTree.length && serializedTree[index] != null) {\n      currentNode.left = new TreeNode(Number(serializedTree[index]));\n      nodeQueue.push(currentNode.left);\n    }\n    index++;\n\n    // Process right child\n    if (index < serializedTree.length && serializedTree[index] != null) {\n      currentNode.right = new TreeNode(Number(serializedTree[index]));\n      nodeQueue.push(currentNode.right);\n    }\n    index++;\n  }\n\n  return root;\n}\n\nfunction serializeTree(root: TreeNode | null): (number | null)[] {\n  const result: (number | null)[] = [];\n  if (root === null) {\n    return result;\n  }\n\n  const nodeQueue: (TreeNode | null)[] = [];\n  nodeQueue.push(root);\n\n  while (nodeQueue.length > 0) {\n    const currentNode = nodeQueue.shift();\n\n    // Check if currentNode is not undefined\n    if (currentNode !== undefined) {\n      if (currentNode !== null) {\n        result.push(currentNode.val);\n        nodeQueue.push(currentNode.left);\n        nodeQueue.push(currentNode.right);\n      } else {\n        result.push(null);\n      }\n    }\n  }\n\n  // Remove trailing `null`s from the result\n  while (result.length > 0 && result[result.length - 1] == null) {\n    result.pop();\n  }\n\n  return result;\n}\n\ndescribe('binaryTreeFlip', () => {\n  runTestCases.forEach((example: any) => {\n    test(`${example.input[0][0]} = ${example.input[0][1]}`, () => {\n      expect(\n        serializeTree(fn(createTreeFromSerialized(example.input[0][1]))),\n      ).toStrictEqual(example.output);\n    });\n  });\n});\n",
    "/src/binary-tree-flip.submit.test.ts": "import binaryTreeFlip from './binary-tree-flip';\nimport submitTestCases from './submit.tests.json';\n\nclass TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n\n  constructor(\n    val: number,\n    left: TreeNode | null = null,\n    right: TreeNode | null = null,\n  ) {\n    this.val = val;\n    this.left = left;\n    this.right = right;\n  }\n}\n\nfunction createTreeFromSerialized(\n  serializedTree: (number | null)[],\n): TreeNode | null {\n  if (serializedTree.length === 0) {\n    return null;\n  }\n\n  const nodeQueue: TreeNode[] = [];\n  let index = 0;\n\n  // Create the root node\n  const root = new TreeNode(Number(serializedTree[index]));\n  nodeQueue.push(root);\n  index++;\n\n  while (nodeQueue.length > 0 && index < serializedTree.length) {\n    const currentNode = nodeQueue.shift()!; // `!` asserts that `shift` does not return `null`\n\n    // Process left child\n    if (index < serializedTree.length && serializedTree[index] != null) {\n      currentNode.left = new TreeNode(Number(serializedTree[index]));\n      nodeQueue.push(currentNode.left);\n    }\n    index++;\n\n    // Process right child\n    if (index < serializedTree.length && serializedTree[index] != null) {\n      currentNode.right = new TreeNode(Number(serializedTree[index]));\n      nodeQueue.push(currentNode.right);\n    }\n    index++;\n  }\n\n  return root;\n}\n\nfunction serializeTree(root: TreeNode | null): (number | null)[] {\n  const result: (number | null)[] = [];\n  if (root === null) {\n    return result;\n  }\n\n  const nodeQueue: (TreeNode | null)[] = [];\n  nodeQueue.push(root);\n\n  while (nodeQueue.length > 0) {\n    const currentNode = nodeQueue.shift();\n\n    // Check if currentNode is not undefined\n    if (currentNode !== undefined) {\n      if (currentNode !== null) {\n        result.push(currentNode.val);\n        nodeQueue.push(currentNode.left);\n        nodeQueue.push(currentNode.right);\n      } else {\n        result.push(null);\n      }\n    }\n  }\n\n  // Remove trailing `null`s from the result\n  while (result.length > 0 && result[result.length - 1] == null) {\n    result.pop();\n  }\n\n  return result;\n}\n\ndescribe('binaryTreeFlip', () => {\n  (submitTestCases as any[]).forEach((example: any) => {\n    test(`root = ${example.input[0][1]}`, () => {\n      expect(\n        serializeTree(\n          binaryTreeFlip(createTreeFromSerialized(example.input[0][1])),\n        ),\n      ).toStrictEqual(example.output);\n    });\n  });\n});\n",
    "/src/binary-tree-flip.ts": "interface TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n}\n\nexport default function binaryTreeFlip(root: TreeNode | null): TreeNode | null {\n  // Base case: if the node is null, return null\n  if (root === null) {\n    return null;\n  }\n\n  // Recursively invert the left and right subtrees\n  const right: TreeNode | null = binaryTreeFlip(root.right);\n  const left: TreeNode | null = binaryTreeFlip(root.left);\n\n  // Swap the left and right children of the current node\n  root.left = right;\n  root.right = left;\n\n  // Return the root of the inverted tree\n  return root;\n}\n",
    "/src/run.tests.json": "[\n  {\n    \"input\": [[\"root\", [2, 1, 3]]],\n    \"output\": [2, 3, 1],\n    \"explanation\": \"The left and right children are swapped.\"\n  },\n  {\n    \"input\": [[\"root\", [43, null, -55]]],\n    \"output\": [43, -55],\n    \"explanation\": \"The right child becomes the left child after inversion.\"\n  },\n  {\n    \"input\": [[\"root\", [12, 8, 18, 6, null, null, 20]]],\n    \"output\": [12, 18, 8, 20, null, null, 6],\n    \"explanation\": \"The tree is inverted, with left and right children of each node being swapped.\"\n  }\n]\n",
    "/src/submit.tests.json": "[\n  {\n    \"input\": [[\"root\", [43, null, -55]]],\n    \"output\": [43, -55]\n  },\n  {\n    \"input\": [[\"root\", [20]]],\n    \"output\": [20]\n  },\n  {\n    \"input\": [[\"root\", [53, -32, null, -60, -83, null, null, null, 32]]],\n    \"output\": [53, null, -32, -83, -60, 32]\n  },\n  {\n    \"input\": [[\"root\", [-5, null, 23, -48, -26]]],\n    \"output\": [-5, 23, null, -26, -48]\n  },\n  {\n    \"input\": [[\"root\", [41, -96, -65, 55]]],\n    \"output\": [41, -65, -96, null, null, null, 55]\n  },\n  {\n    \"input\": [[\"root\", [70, 34, null, -1, null, 91]]],\n    \"output\": [70, null, 34, null, -1, null, 91]\n  },\n  {\n    \"input\": [[\"root\", [-81, null, 55, 35, null, -52]]],\n    \"output\": [-81, 55, null, null, 35, null, -52]\n  },\n  {\n    \"input\": [[\"root\", [-48, null, 10, null, -30]]],\n    \"output\": [-48, 10, null, -30]\n  },\n  {\n    \"input\": [[\"root\", [76]]],\n    \"output\": [76]\n  },\n  {\n    \"input\": [[\"root\", [-23]]],\n    \"output\": [-23]\n  },\n  {\n    \"input\": [[\"root\", [13, 11, 53, null, 69, null, 99]]],\n    \"output\": [13, 53, 11, 99, null, 69]\n  },\n  {\n    \"input\": [\n      [\"root\", [-19, null, -32, null, -52, 83, null, null, 6, -27, -91]]\n    ],\n    \"output\": [-19, -32, null, -52, null, null, 83, 6, null, -91, -27]\n  },\n  {\n    \"input\": [[\"root\", [81]]],\n    \"output\": [81]\n  },\n  {\n    \"input\": [[\"root\", [76, -93, null, null, 25, null, -52]]],\n    \"output\": [76, null, -93, 25, null, -52]\n  },\n  {\n    \"input\": [[\"root\", [50, 33, null, null, 87, null, 56]]],\n    \"output\": [50, null, 33, 87, null, 56]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -78,\n          59,\n          22,\n          -5,\n          -86,\n          -9,\n          -69,\n          null,\n          23,\n          null,\n          -63,\n          79,\n          null,\n          null,\n          53,\n          null,\n          78,\n          -12,\n          38,\n          null,\n          null,\n          9,\n          null,\n          8,\n          -64,\n          63,\n          10,\n          null,\n          null,\n          -82,\n          -48,\n          -76,\n          45,\n          null,\n          null,\n          -66,\n          null,\n          -3,\n          -4,\n          null,\n          -73\n        ]\n      ]\n    ],\n    \"output\": [\n      -78,\n      22,\n      59,\n      -69,\n      -9,\n      -86,\n      -5,\n      53,\n      null,\n      null,\n      79,\n      -63,\n      null,\n      23,\n      null,\n      null,\n      9,\n      null,\n      null,\n      38,\n      -12,\n      78,\n      null,\n      -48,\n      -82,\n      null,\n      null,\n      10,\n      63,\n      -64,\n      8,\n      null,\n      null,\n      -73,\n      null,\n      -4,\n      -3,\n      null,\n      -66,\n      null,\n      null,\n      45,\n      -76\n    ]\n  },\n  {\n    \"input\": [[\"root\", [46, 74, null, null, 81]]],\n    \"output\": [46, null, 74, 81]\n  },\n  {\n    \"input\": [[\"root\", [-99]]],\n    \"output\": [-99]\n  },\n  {\n    \"input\": [[\"root\", [87]]],\n    \"output\": [87]\n  },\n  {\n    \"input\": [[\"root\", [52]]],\n    \"output\": [52]\n  },\n  {\n    \"input\": [[\"root\", [-80, null, -2]]],\n    \"output\": [-80, -2]\n  },\n  {\n    \"input\": [\n      [\"root\", [77, -45, -46, null, 14, 82, null, null, null, null, -42]]\n    ],\n    \"output\": [77, -46, -45, null, 82, 14, null, -42]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [-15, -3, null, -47, 54, 53, null, null, -38, null, 100, null, -27]\n      ]\n    ],\n    \"output\": [-15, null, -3, 54, -47, -38, null, null, 53, -27, null, 100]\n  },\n  {\n    \"input\": [[\"root\", [4]]],\n    \"output\": [4]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [-25, null, 60, -43, 5, -8, null, 8, 36, null, 60, 22, -53, null, 8]\n      ]\n    ],\n    \"output\": [-25, 60, null, 5, -43, 36, 8, null, -8, 8, null, -53, 22, 60]\n  },\n  {\n    \"input\": [[\"root\", [-79]]],\n    \"output\": [-79]\n  },\n  {\n    \"input\": [[\"root\", [-42]]],\n    \"output\": [-42]\n  },\n  {\n    \"input\": [[\"root\", [-92, null, 2, -11, -39]]],\n    \"output\": [-92, 2, null, -39, -11]\n  },\n  {\n    \"input\": [[\"root\", [-11, -22, null, null, 55]]],\n    \"output\": [-11, null, -22, 55]\n  },\n  {\n    \"input\": [[\"root\", [100]]],\n    \"output\": [100]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -98,\n          1,\n          -16,\n          83,\n          -42,\n          83,\n          -51,\n          null,\n          null,\n          null,\n          -68,\n          70,\n          null,\n          91,\n          null,\n          -35,\n          null,\n          51,\n          null,\n          null,\n          -82,\n          null,\n          null,\n          91,\n          null,\n          null,\n          68,\n          2,\n          70,\n          null,\n          -34\n        ]\n      ]\n    ],\n    \"output\": [\n      -98,\n      -16,\n      1,\n      -51,\n      83,\n      -42,\n      83,\n      null,\n      91,\n      null,\n      70,\n      -68,\n      null,\n      null,\n      null,\n      -82,\n      null,\n      null,\n      51,\n      null,\n      -35,\n      68,\n      null,\n      null,\n      91,\n      null,\n      null,\n      -34,\n      null,\n      70,\n      2\n    ]\n  },\n  {\n    \"input\": [\n      [\"root\", [62, -94, null, 88, -96, null, null, 33, 2, null, -3, 18]]\n    ],\n    \"output\": [62, null, -94, -96, 88, 2, 33, null, null, null, 18, -3]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          91,\n          null,\n          23,\n          -20,\n          54,\n          null,\n          -33,\n          null,\n          76,\n          -11,\n          -70,\n          null,\n          null,\n          null,\n          null,\n          60,\n          -96\n        ]\n      ]\n    ],\n    \"output\": [\n      91,\n      23,\n      null,\n      54,\n      -20,\n      76,\n      null,\n      -33,\n      null,\n      null,\n      null,\n      -70,\n      -11,\n      -96,\n      60\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          40,\n          null,\n          42,\n          38,\n          89,\n          null,\n          88,\n          -65,\n          -50,\n          -53,\n          95,\n          5,\n          75,\n          67,\n          45,\n          -71,\n          100,\n          null,\n          -78,\n          24,\n          null,\n          -55,\n          -7,\n          null,\n          null,\n          -18\n        ]\n      ]\n    ],\n    \"output\": [\n      40,\n      42,\n      null,\n      89,\n      38,\n      -50,\n      -65,\n      88,\n      null,\n      45,\n      67,\n      75,\n      5,\n      95,\n      -53,\n      null,\n      -18,\n      null,\n      null,\n      -7,\n      -55,\n      null,\n      24,\n      -78,\n      null,\n      100,\n      -71\n    ]\n  },\n  {\n    \"input\": [[\"root\", [-9]]],\n    \"output\": [-9]\n  },\n  {\n    \"input\": [[\"root\", [-28, null, -8]]],\n    \"output\": [-28, -8]\n  },\n  {\n    \"input\": [[\"root\", [2, null, -27, -92]]],\n    \"output\": [2, -27, null, null, -92]\n  },\n  {\n    \"input\": [[\"root\", [28, null, -9]]],\n    \"output\": [28, -9]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          80,\n          null,\n          -31,\n          59,\n          -68,\n          null,\n          17,\n          -85,\n          -47,\n          17,\n          -85,\n          null,\n          null,\n          null,\n          -91,\n          20,\n          -12,\n          -40,\n          -83,\n          null,\n          -46\n        ]\n      ]\n    ],\n    \"output\": [\n      80,\n      -31,\n      null,\n      -68,\n      59,\n      -47,\n      -85,\n      17,\n      null,\n      -91,\n      null,\n      null,\n      null,\n      -85,\n      17,\n      -46,\n      null,\n      -83,\n      -40,\n      -12,\n      20\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [-84, 3, null, -62, 34, null, null, -33, null, -64, -78, null, 97]\n      ]\n    ],\n    \"output\": [\n      -84,\n      null,\n      3,\n      34,\n      -62,\n      null,\n      -33,\n      null,\n      null,\n      -78,\n      -64,\n      null,\n      null,\n      97\n    ]\n  },\n  {\n    \"input\": [[\"root\", [30, null, -36]]],\n    \"output\": [30, -36]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          60,\n          55,\n          66,\n          null,\n          null,\n          null,\n          28,\n          87,\n          null,\n          23,\n          -61,\n          -49,\n          -10,\n          null,\n          -41\n        ]\n      ]\n    ],\n    \"output\": [\n      60,\n      66,\n      55,\n      28,\n      null,\n      null,\n      null,\n      null,\n      87,\n      -61,\n      23,\n      -41,\n      null,\n      -10,\n      -49\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          13,\n          -82,\n          71,\n          88,\n          -95,\n          null,\n          null,\n          81,\n          null,\n          null,\n          -67,\n          25,\n          null,\n          25,\n          -80,\n          -39,\n          93,\n          -77,\n          null,\n          60,\n          -19\n        ]\n      ]\n    ],\n    \"output\": [\n      13,\n      71,\n      -82,\n      null,\n      null,\n      -95,\n      88,\n      -67,\n      null,\n      null,\n      81,\n      -80,\n      25,\n      null,\n      25,\n      -19,\n      60,\n      null,\n      -77,\n      93,\n      -39\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          3,\n          null,\n          -25,\n          -20,\n          88,\n          null,\n          85,\n          0,\n          60,\n          75,\n          null,\n          null,\n          -55,\n          null,\n          null,\n          null,\n          null,\n          -30\n        ]\n      ]\n    ],\n    \"output\": [\n      3,\n      -25,\n      null,\n      88,\n      -20,\n      60,\n      0,\n      85,\n      null,\n      null,\n      null,\n      -55,\n      null,\n      null,\n      75,\n      null,\n      -30\n    ]\n  },\n  {\n    \"input\": [[\"root\", [2]]],\n    \"output\": [2]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          38,\n          -47,\n          43,\n          null,\n          null,\n          -53,\n          21,\n          null,\n          41,\n          -11,\n          -3,\n          -75,\n          -51,\n          null,\n          87,\n          -3,\n          56,\n          60,\n          31,\n          null,\n          -62,\n          -88,\n          -83,\n          18\n        ]\n      ]\n    ],\n    \"output\": [\n      38,\n      43,\n      -47,\n      21,\n      -53,\n      null,\n      null,\n      -3,\n      -11,\n      41,\n      null,\n      56,\n      -3,\n      87,\n      null,\n      -51,\n      -75,\n      null,\n      null,\n      null,\n      18,\n      -83,\n      -88,\n      -62,\n      null,\n      31,\n      60\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          46,\n          null,\n          96,\n          -72,\n          61,\n          73,\n          null,\n          null,\n          null,\n          null,\n          40,\n          29,\n          25,\n          null,\n          66,\n          16\n        ]\n      ]\n    ],\n    \"output\": [\n      46,\n      96,\n      null,\n      61,\n      -72,\n      null,\n      null,\n      null,\n      73,\n      40,\n      null,\n      25,\n      29,\n      null,\n      16,\n      66\n    ]\n  },\n  {\n    \"input\": [[\"root\", [-22]]],\n    \"output\": [-22]\n  },\n  {\n    \"input\": [\n      [\"root\", [-73, null, 32, -88, null, null, -26, 73, null, null, -36]]\n    ],\n    \"output\": [-73, 32, null, null, -88, -26, null, null, 73, -36]\n  },\n  {\n    \"input\": [[\"root\", [-36, 23, null, 20, -5]]],\n    \"output\": [-36, null, 23, -5, 20]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [-86, 76, null, -34, -24, -11, -88, null, null, null, -29, -43, -43]\n      ]\n    ],\n    \"output\": [-86, null, 76, -24, -34, null, null, -88, -11, -43, -43, -29]\n  },\n  {\n    \"input\": [[\"root\", [-66, null, -62, -58, -7, null, -88]]],\n    \"output\": [-66, -62, null, -7, -58, null, null, -88]\n  },\n  {\n    \"input\": [[\"root\", [44, null, 64, null, -51]]],\n    \"output\": [44, 64, null, -51]\n  },\n  {\n    \"input\": [[\"root\", [64, 100, 34]]],\n    \"output\": [64, 34, 100]\n  },\n  {\n    \"input\": [[\"root\", [-77]]],\n    \"output\": [-77]\n  },\n  {\n    \"input\": [[\"root\", [-25, null, 12, 23]]],\n    \"output\": [-25, 12, null, null, 23]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -7,\n          null,\n          -73,\n          -1,\n          -86,\n          null,\n          null,\n          null,\n          73,\n          -34,\n          -47,\n          94,\n          -5,\n          43,\n          null,\n          null,\n          null,\n          21\n        ]\n      ]\n    ],\n    \"output\": [\n      -7,\n      -73,\n      null,\n      -86,\n      -1,\n      73,\n      null,\n      null,\n      null,\n      -47,\n      -34,\n      null,\n      43,\n      -5,\n      94,\n      null,\n      null,\n      null,\n      21\n    ]\n  },\n  {\n    \"input\": [[\"root\", [-34]]],\n    \"output\": [-34]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -54,\n          -36,\n          -68,\n          null,\n          42,\n          -90,\n          92,\n          null,\n          null,\n          38,\n          9,\n          null,\n          null,\n          -13,\n          -78,\n          12,\n          null,\n          null,\n          -16,\n          -85,\n          96,\n          66,\n          -4,\n          46,\n          null,\n          36,\n          -24,\n          62,\n          -74,\n          null,\n          64,\n          null,\n          63\n        ]\n      ]\n    ],\n    \"output\": [\n      -54,\n      -68,\n      -36,\n      92,\n      -90,\n      42,\n      null,\n      null,\n      null,\n      9,\n      38,\n      null,\n      null,\n      null,\n      12,\n      -78,\n      -13,\n      -4,\n      66,\n      96,\n      -85,\n      -16,\n      null,\n      63,\n      null,\n      64,\n      null,\n      -74,\n      62,\n      -24,\n      36,\n      null,\n      46\n    ]\n  },\n  {\n    \"input\": [[\"root\", [95]]],\n    \"output\": [95]\n  },\n  {\n    \"input\": [[\"root\", [-32, -72, null, 11, 16, -92, null, 86, -68]]],\n    \"output\": [-32, null, -72, 16, 11, -68, 86, null, -92]\n  },\n  {\n    \"input\": [[\"root\", [42, 37, 86]]],\n    \"output\": [42, 86, 37]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -74,\n          72,\n          -48,\n          null,\n          null,\n          -34,\n          null,\n          -60,\n          null,\n          -52,\n          null,\n          -30,\n          77,\n          -45,\n          null,\n          51\n        ]\n      ]\n    ],\n    \"output\": [\n      -74,\n      -48,\n      72,\n      null,\n      -34,\n      null,\n      null,\n      null,\n      -60,\n      null,\n      -52,\n      77,\n      -30,\n      null,\n      51,\n      null,\n      -45\n    ]\n  },\n  {\n    \"input\": [[\"root\", [-2, null, 54]]],\n    \"output\": [-2, 54]\n  },\n  {\n    \"input\": [[\"root\", [-91, null, -35]]],\n    \"output\": [-91, -35]\n  },\n  {\n    \"input\": [[\"root\", [81]]],\n    \"output\": [81]\n  },\n  {\n    \"input\": [[\"root\", [-72, null, -58, null, -61]]],\n    \"output\": [-72, -58, null, -61]\n  },\n  {\n    \"input\": [[\"root\", [48, -37, null, null, -54, 2, null, null, 54, -20]]],\n    \"output\": [48, null, -37, -54, null, null, 2, 54, null, null, -20]\n  },\n  {\n    \"input\": [[\"root\", [-48, null, 94, -52]]],\n    \"output\": [-48, 94, null, null, -52]\n  },\n  {\n    \"input\": [[\"root\", [35]]],\n    \"output\": [35]\n  },\n  {\n    \"input\": [[\"root\", [24]]],\n    \"output\": [24]\n  },\n  {\n    \"input\": [\n      [\"root\", [8, -91, -6, 88, null, -79, null, null, null, 65, null, -52]]\n    ],\n    \"output\": [8, -6, -91, null, -79, null, 88, null, 65, null, null, null, -52]\n  },\n  {\n    \"input\": [[\"root\", [60, -78]]],\n    \"output\": [60, null, -78]\n  },\n  {\n    \"input\": [[\"root\", [-13]]],\n    \"output\": [-13]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          88,\n          null,\n          42,\n          47,\n          null,\n          73,\n          -70,\n          -8,\n          15,\n          -17,\n          58,\n          null,\n          null,\n          -84,\n          null,\n          -55,\n          null,\n          9,\n          null,\n          -35,\n          null,\n          -93,\n          47,\n          -47\n        ]\n      ]\n    ],\n    \"output\": [\n      88,\n      42,\n      null,\n      null,\n      47,\n      -70,\n      73,\n      58,\n      -17,\n      15,\n      -8,\n      null,\n      9,\n      null,\n      -55,\n      null,\n      -84,\n      null,\n      null,\n      null,\n      -47,\n      47,\n      -93,\n      null,\n      -35\n    ]\n  },\n  {\n    \"input\": [[\"root\", [-53, 64, 84, -65, null, null, null, -8]]],\n    \"output\": [-53, 84, 64, null, null, null, -65, null, -8]\n  },\n  {\n    \"input\": [[\"root\", [38, null, 89, -86, -64, 17, -64, null, null, -31]]],\n    \"output\": [\n      38,\n      89,\n      null,\n      -64,\n      -86,\n      null,\n      null,\n      -64,\n      17,\n      null,\n      null,\n      null,\n      -31\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          11,\n          null,\n          -42,\n          null,\n          -8,\n          null,\n          -28,\n          null,\n          15,\n          -42,\n          -76,\n          32,\n          null,\n          null,\n          -13\n        ]\n      ]\n    ],\n    \"output\": [\n      11,\n      -42,\n      null,\n      -8,\n      null,\n      -28,\n      null,\n      15,\n      null,\n      -76,\n      -42,\n      -13,\n      null,\n      null,\n      32\n    ]\n  },\n  {\n    \"input\": [[\"root\", [-76, -59, -93, null, -18, -86]]],\n    \"output\": [-76, -93, -59, null, -86, -18]\n  },\n  {\n    \"input\": [[\"root\", [8, 28, null, null, 76, null, -79, 76, -53, -56]]],\n    \"output\": [8, null, 28, 76, null, -79, null, -53, 76, null, null, null, -56]\n  },\n  {\n    \"input\": [[\"root\", [-52]]],\n    \"output\": [-52]\n  },\n  {\n    \"input\": [[\"root\", [9, null, -11]]],\n    \"output\": [9, -11]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [10, 68, null, -46, -24, null, 93, 88, null, null, null, 59, null, 42]\n      ]\n    ],\n    \"output\": [\n      10,\n      null,\n      68,\n      -24,\n      -46,\n      null,\n      88,\n      93,\n      null,\n      null,\n      59,\n      null,\n      null,\n      null,\n      42\n    ]\n  },\n  {\n    \"input\": [[\"root\", [-43]]],\n    \"output\": [-43]\n  },\n  {\n    \"input\": [[\"root\", [-18, 62, -51, null, null, 75, -66]]],\n    \"output\": [-18, -51, 62, -66, 75]\n  },\n  {\n    \"input\": [[\"root\", [-23, null, 91, null, -54]]],\n    \"output\": [-23, 91, null, -54]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [-97, -65, -88, null, null, 44, null, null, 10, 74, 33, null, -1, 65]\n      ]\n    ],\n    \"output\": [\n      -97,\n      -88,\n      -65,\n      null,\n      44,\n      null,\n      null,\n      10,\n      null,\n      33,\n      74,\n      null,\n      65,\n      -1\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -96,\n          36,\n          2,\n          -91,\n          -43,\n          null,\n          40,\n          -85,\n          -19,\n          -71,\n          -14,\n          null,\n          -49,\n          null,\n          74,\n          null,\n          -49,\n          null,\n          null,\n          77,\n          null,\n          35\n        ]\n      ]\n    ],\n    \"output\": [\n      -96,\n      2,\n      36,\n      40,\n      null,\n      -43,\n      -91,\n      -49,\n      null,\n      -14,\n      -71,\n      -19,\n      -85,\n      null,\n      35,\n      null,\n      77,\n      null,\n      null,\n      -49,\n      null,\n      74\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -64,\n          48,\n          -100,\n          61,\n          null,\n          null,\n          99,\n          63,\n          -70,\n          44,\n          null,\n          null,\n          -41,\n          null,\n          98,\n          92,\n          null,\n          -28,\n          95,\n          -21,\n          null,\n          24\n        ]\n      ]\n    ],\n    \"output\": [\n      -64,\n      -100,\n      48,\n      99,\n      null,\n      null,\n      61,\n      null,\n      44,\n      -70,\n      63,\n      null,\n      92,\n      98,\n      null,\n      -41,\n      null,\n      null,\n      24,\n      null,\n      -21,\n      95,\n      -28\n    ]\n  },\n  {\n    \"input\": [[\"root\", [-73]]],\n    \"output\": [-73]\n  },\n  {\n    \"input\": [[\"root\", [-76, null, -34, null, -81]]],\n    \"output\": [-76, -34, null, -81]\n  },\n  {\n    \"input\": [[\"root\", [-3]]],\n    \"output\": [-3]\n  },\n  {\n    \"input\": [[\"root\", [81]]],\n    \"output\": [81]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          76,\n          91,\n          null,\n          -86,\n          -82,\n          null,\n          97,\n          -22,\n          4,\n          -91,\n          -68,\n          null,\n          73,\n          null,\n          -85\n        ]\n      ]\n    ],\n    \"output\": [\n      76,\n      null,\n      91,\n      -82,\n      -86,\n      4,\n      -22,\n      97,\n      null,\n      -85,\n      null,\n      73,\n      null,\n      -68,\n      -91\n    ]\n  },\n  {\n    \"input\": [[\"root\", [-65]]],\n    \"output\": [-65]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [42, -80, 71, 2, 1, 30, null, -10, null, 50, null, null, 56, -83]\n      ]\n    ],\n    \"output\": [\n      42,\n      71,\n      -80,\n      null,\n      30,\n      1,\n      2,\n      56,\n      null,\n      null,\n      50,\n      null,\n      -10,\n      null,\n      null,\n      null,\n      null,\n      null,\n      -83\n    ]\n  },\n  {\n    \"input\": [[\"root\", [38]]],\n    \"output\": [38]\n  },\n  {\n    \"input\": [\n      [\"root\", [65, -7, null, 28, -34, null, null, null, -47, 55, 24, -44]]\n    ],\n    \"output\": [\n      65,\n      null,\n      -7,\n      -34,\n      28,\n      -47,\n      null,\n      null,\n      null,\n      24,\n      55,\n      null,\n      null,\n      null,\n      -44\n    ]\n  },\n  {\n    \"input\": [[\"root\", [-11, 89, null, null, -82]]],\n    \"output\": [-11, null, 89, -82]\n  },\n  {\n    \"input\": [\n      [\n        \"root\",\n        [\n          -95,\n          57,\n          52,\n          null,\n          -35,\n          null,\n          null,\n          32,\n          null,\n          1,\n          -30,\n          null,\n          null,\n          -82,\n          null,\n          null,\n          -34\n        ]\n      ]\n    ],\n    \"output\": [\n      -95,\n      52,\n      57,\n      null,\n      null,\n      -35,\n      null,\n      null,\n      32,\n      -30,\n      1,\n      null,\n      -82,\n      null,\n      null,\n      -34\n    ]\n  }\n]\n"
  },
  "skeleton": {
    "js": "/**\n * @param {TreeNode | null} root\n * @return {TreeNode | null}\n */\nexport default function binaryTreeFlip(root) {\n  throw 'Not implemented!';\n}",
    "ts": "interface TreeNode {\n  val: number;\n  left: TreeNode | null;\n  right: TreeNode | null;\n}\n\nexport default function binaryTreeFlip(root: TreeNode | null): TreeNode | null {\n  throw 'Not implemented!';\n}"
  },
  "workspace": {
    "main": "/src/binary-tree-flip.ts",
    "run": "/src/binary-tree-flip.run.test.ts",
    "submit": "/src/binary-tree-flip.submit.test.ts"
  }
}