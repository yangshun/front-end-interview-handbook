{
  "description": "var Component=(()=>{var p=Object.create;var l=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var k=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=>{for(var i in e)l(t,i,{get:e[i],enumerable:!0})},d=(t,e,i,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of f(e))!g.call(t,s)&&s!==i&&l(t,s,{get:()=>e[s],enumerable:!(o=m(e,s))||o.enumerable});return t};var w=(t,e,i)=>(i=t!=null?p(x(t)):{},d(e||!t||!t.__esModule?l(i,\"default\",{value:t,enumerable:!0}):i,t)),L=t=>d(l({},\"__esModule\",{value:!0}),t);var a=k((A,r)=>{r.exports=_jsx_runtime});var j={};b(j,{default:()=>_,frontmatter:()=>N});var n=w(a());var c=MDXTestExamples;var h=[{input:[[\"listA\",[-3,-1,9,10]],[\"listB\",[-10,3,4,6,9]]],output:[-10,-3,-1,3,4,6,9,9,10],explanation:\"Combining the sorted lists [-3, -1, 9, 10] and [-10, 3, 4, 6, 9] results in a single sorted list [-10, -3, -1, 3, 4, 6, 9, 9, 10].\"},{input:[[\"listA\",[1,2,4]],[\"listB\",[1,3,4]]],output:[1,1,2,3,4,4],explanation:\"Combining the sorted lists [1, 2, 4] and [1, 3, 4] results in a single sorted list [1, 1, 2, 3, 4, 4].\"},{input:[[\"listA\",[]],[\"listB\",[0]]],output:[0],explanation:\"Combining the empty list [] with the sorted list [0] results in the list [0].\"}];var N={title:\"Linked Lists Combine Two Sorted\",excerpt:\"Implement a function to combine two sorted linked list\"};function u(t){let e=Object.assign({p:\"p\",a:\"a\",code:\"code\",strong:\"strong\",pre:\"pre\",h3:\"h3\",ul:\"ul\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Given an array of \",(0,n.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/Linked_list\",children:\"linked list\"}),\", \",(0,n.jsx)(e.code,{children:\"lists\"}),\", where each linked list's node values are in \",(0,n.jsx)(e.strong,{children:\"ascending order\"}),\", combine all these linked lists into a single sorted linked list and return the head node of the combined linked list.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The linked list is represented by a sequence of \",(0,n.jsx)(e.code,{children:\"ListNode\"}),\"s, where each node points to the next node in the sequence, or \",(0,n.jsx)(e.code,{children:\"null\"}),\" if it is the last node.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"A \",(0,n.jsx)(e.code,{children:\"ListNode\"}),\" has the following interface:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-ts\",children:`interface ListNode {\n  val: number;\n  next: ListNode | null;\n}\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Input\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"listA: ListNode\"}),\": Head node of the first linked list. Examples display each linked list as an array of values within the list\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"listB: ListNode\"}),\": Head node of the second linked list. Examples display each linked list as an array of values within the list\"]}),`\n`]}),`\n`,(0,n.jsx)(c,{testCases:h}),`\n`,(0,n.jsx)(e.h3,{children:\"Constraints\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"1 <= Number of nodes <= 50\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"-100 <= \",(0,n.jsx)(e.code,{children:\"ListNode.val\"}),\" <= 100\"]}),`\n`]})]})}function y(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(u,t)})):u(t)}var _=y;return L(j);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/linked-list-combine-two-sorted\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/linked-list-combine-two-sorted.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"resolveJsonModule\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"esnext\"],\n    \"jsx\": \"react-jsx\"\n  }\n}\n",
    "/src/linked-list-combine-two-sorted.run.test.ts": "import fn from './linked-list-combine-two-sorted';\nimport runTestCases from './run.tests.json';\n\ninterface ListNode {\n  val: number;\n  next: ListNode | null;\n}\n\nfunction vectorToLinkedList(values: number[]): ListNode | null {\n  if (values.length === 0) {\n    return null; // Return null for an empty array\n  }\n\n  // Create the head node of the linked list\n  const head: ListNode = { val: values[0], next: null };\n  let current: ListNode = head;\n\n  // Iterate over the array to create the rest of the linked list\n  for (let i = 1; i < values.length; i++) {\n    current.next = { val: values[i], next: null };\n    current = current.next;\n  }\n\n  return head;\n}\n\nfunction linkedListToVector(head: ListNode | null): number[] {\n  const result: number[] = [];\n  let current: ListNode | null = head;\n\n  // Traverse the linked list and add node values to the array\n  while (current !== null) {\n    result.push(current.val);\n    current = current.next;\n  }\n\n  return result;\n}\n\ndescribe('linkedListCombineTwoSorted', () => {\n  (runTestCases as any[]).forEach((example: any) => {\n    test(`${example.input[0][0]} = [${example.input[0][1]}] ${example.input[1][0]} = [${example.input[1][1]}]`, () => {\n      expect(\n        linkedListToVector(\n          fn(\n            vectorToLinkedList(example.input[0][1]),\n            vectorToLinkedList(example.input[1][1]),\n          ),\n        ),\n      ).toStrictEqual(example.output);\n    });\n  });\n});\n",
    "/src/linked-list-combine-two-sorted.submit.test.ts": "import linkedListCombineTwoSorted from './linked-list-combine-two-sorted';\nimport submitTestCases from './submit.tests.json';\n\ninterface ListNode {\n  val: number;\n  next: ListNode | null;\n}\n\nfunction vectorToLinkedList(values: number[]): ListNode | null {\n  if (values.length === 0) {\n    return null; // Return null for an empty array\n  }\n\n  // Create the head node of the linked list\n  const head: ListNode = { val: values[0], next: null };\n  let current: ListNode = head;\n\n  // Iterate over the array to create the rest of the linked list\n  for (let i = 1; i < values.length; i++) {\n    current.next = { val: values[i], next: null };\n    current = current.next;\n  }\n\n  return head;\n}\n\nfunction linkedListToVector(head: ListNode | null): number[] {\n  const result: number[] = [];\n  let current: ListNode | null = head;\n\n  // Traverse the linked list and add node values to the array\n  while (current !== null) {\n    result.push(current.val);\n    current = current.next;\n  }\n\n  return result;\n}\n\ndescribe('linkedListCombineTwoSorted', () => {\n  (submitTestCases as any[]).forEach((example: any) => {\n    test(`listA = [${example.input[0][1]}] listB = [${example.input[1][1]}]`, () => {\n      expect(\n        linkedListToVector(\n          linkedListCombineTwoSorted(\n            vectorToLinkedList(example.input[0][1]),\n            vectorToLinkedList(example.input[1][1]),\n          ),\n        ),\n      ).toStrictEqual(example.output);\n    });\n  });\n});\n",
    "/src/linked-list-combine-two-sorted.ts": "interface ListNode {\n  val: number;\n  next: ListNode | null;\n}\n\nexport default function linkedListCombineTwoSorted(\n  listA: ListNode | null,\n  listB: ListNode | null,\n): ListNode | null {\n  // Dummy node to act as the previous node to the head of the combined list\n  let dummy: ListNode = { val: -1, next: null };\n\n  // Pointer to the last node in the combined list, initially set to dummy\n  let prev: ListNode = dummy;\n\n  // Iterate while both listA and listB are not null\n  while (listA !== null && listB !== null) {\n    // Compare the values of listA and listB nodes\n    if (listA.val <= listB.val) {\n      // If listA node is smaller or equal, add it to the combined list\n      prev.next = listA;\n      listA = listA.next; // Move to the next node in listA\n    } else {\n      // If listB node is smaller, add it to the combined list\n      prev.next = listB;\n      listB = listB.next; // Move to the next node in listB\n    }\n    // Move prev to the next node in the combined list\n    prev = prev.next!;\n  }\n\n  // At least one of listA and listB can still have nodes, add the remaining nodes to the combined list\n  if (listA !== null) {\n    prev.next = listA;\n  } else {\n    prev.next = listB;\n  }\n\n  // The combined list is next to the dummy node\n  return dummy.next;\n}\n",
    "/src/run.tests.json": "[\n  {\n    \"input\": [\n      [\"listA\", [-3, -1, 9, 10]],\n      [\"listB\", [-10, 3, 4, 6, 9]]\n    ],\n    \"output\": [-10, -3, -1, 3, 4, 6, 9, 9, 10],\n    \"explanation\": \"Combining the sorted lists [-3, -1, 9, 10] and [-10, 3, 4, 6, 9] results in a single sorted list [-10, -3, -1, 3, 4, 6, 9, 9, 10].\"\n  },\n  {\n    \"input\": [\n      [\"listA\", [1, 2, 4]],\n      [\"listB\", [1, 3, 4]]\n    ],\n    \"output\": [1, 1, 2, 3, 4, 4],\n    \"explanation\": \"Combining the sorted lists [1, 2, 4] and [1, 3, 4] results in a single sorted list [1, 1, 2, 3, 4, 4].\"\n  },\n  {\n    \"input\": [\n      [\"listA\", []],\n      [\"listB\", [0]]\n    ],\n    \"output\": [0],\n    \"explanation\": \"Combining the empty list [] with the sorted list [0] results in the list [0].\"\n  }\n]\n",
    "/src/submit.tests.json": "[\n  {\n    \"input\": [\n      [\"listA\", [-3, -1, 9, 10]],\n      [\"listB\", [-10, 3, 4, 6, 9]]\n    ],\n    \"output\": [-10, -3, -1, 3, 4, 6, 9, 9, 10]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-6, -2, -1, -1, 1, 5, 7, 7, 9]],\n      [\"listB\", [-6, 0, 7, 7, 8]]\n    ],\n    \"output\": [-6, -6, -2, -1, -1, 0, 1, 5, 7, 7, 7, 7, 8, 9]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-5, -3, -2, 1, 5, 7, 8, 10]],\n      [\"listB\", [-10, -8, -5, -5, 1, 4, 6, 8, 9, 9]]\n    ],\n    \"output\": [-10, -8, -5, -5, -5, -3, -2, 1, 1, 4, 5, 6, 7, 8, 8, 9, 9, 10]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-10, -6, -6, -3, 8]],\n      [\"listB\", [-9, -9, -3, -2, 0, 2, 2]]\n    ],\n    \"output\": [-10, -9, -9, -6, -6, -3, -3, -2, 0, 2, 2, 8]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-8, -3, -1, -1, 0, 1, 4, 8, 9]],\n      [\"listB\", [-10, -9, -6, -4, -4, 3, 5, 6]]\n    ],\n    \"output\": [-10, -9, -8, -6, -4, -4, -3, -1, -1, 0, 1, 3, 4, 5, 6, 8, 9]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-8, -5, 5]],\n      [\"listB\", [-1]]\n    ],\n    \"output\": [-8, -5, -1, 5]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-10, -10, -9, -6, -3, -1, -1, 3, 4, 9]],\n      [\"listB\", [-10, -5, 1, 2, 2, 5, 5, 7, 8, 10]]\n    ],\n    \"output\": [\n      -10, -10, -10, -9, -6, -5, -3, -1, -1, 1, 2, 2, 3, 4, 5, 5, 7, 8, 9, 10\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-7, -2, -1, 5, 10]],\n      [\"listB\", [-6, -3, 1]]\n    ],\n    \"output\": [-7, -6, -3, -2, -1, 1, 5, 10]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-5, -2, 1, 2, 2, 7, 8]],\n      [\"listB\", [-5, -4, 1]]\n    ],\n    \"output\": [-5, -5, -4, -2, 1, 1, 2, 2, 7, 8]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-10, -6, -3, -1, 7]],\n      [\"listB\", [-10, -3, 1, 2, 7, 8]]\n    ],\n    \"output\": [-10, -10, -6, -3, -3, -1, 1, 2, 7, 7, 8]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -95, -94, -91, -91, -90, -88, -83, -67, -66, -65, -50, -44, -43, -42,\n          -41, -29, -28, -27, -22, -20, -17, -15, -13, -8, 4, 15, 21, 26, 31,\n          36, 42, 44, 55, 56, 65, 67, 74, 75, 84, 100, 100\n        ]\n      ],\n      [\"listB\", [-100, -38, -34, 14, 34, 36, 84]]\n    ],\n    \"output\": [\n      -100, -95, -94, -91, -91, -90, -88, -83, -67, -66, -65, -50, -44, -43,\n      -42, -41, -38, -34, -29, -28, -27, -22, -20, -17, -15, -13, -8, 4, 14, 15,\n      21, 26, 31, 34, 36, 36, 42, 44, 55, 56, 65, 67, 74, 75, 84, 84, 100, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -100, -99, -94, -90, -86, -85, -77, -69, -62, -59, -58, -56, -56, -54,\n          -51, -46, -36, -29, -19, -9, -4, -2, 11, 18, 19, 34, 37, 38, 40, 42,\n          50, 56, 58, 58, 60, 61, 69, 70, 71, 90, 93, 97, 100\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -87, -83, -78, -76, -59, -57, -49, -31, -21, -13, -13, -6, 0, 4, 4,\n          15, 36, 45, 47, 52, 53, 61, 62, 79, 80, 81, 85, 87, 89, 92\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -99, -94, -90, -87, -86, -85, -83, -78, -77, -76, -69, -62, -59,\n      -59, -58, -57, -56, -56, -54, -51, -49, -46, -36, -31, -29, -21, -19, -13,\n      -13, -9, -6, -4, -2, 0, 4, 4, 11, 15, 18, 19, 34, 36, 37, 38, 40, 42, 45,\n      47, 50, 52, 53, 56, 58, 58, 60, 61, 61, 62, 69, 70, 71, 79, 80, 81, 85,\n      87, 89, 90, 92, 93, 97, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -86, -69, -66, -64, -63, -59, -58, -52, -51, -48, -45, -37, -35, -24,\n          -18, -10, -10, -8, -8, -6, -4, -1, 4, 9, 12, 13, 15, 18, 22, 25, 27,\n          28, 33, 40, 50, 52, 53, 63, 65, 68, 69, 71, 74, 89, 89, 92, 94, 100\n        ]\n      ],\n      [\n        \"listB\",\n        [-99, -73, -51, -44, -24, -18, -18, -6, 19, 25, 48, 75, 82, 92, 94]\n      ]\n    ],\n    \"output\": [\n      -99, -86, -73, -69, -66, -64, -63, -59, -58, -52, -51, -51, -48, -45, -44,\n      -37, -35, -24, -24, -18, -18, -18, -10, -10, -8, -8, -6, -6, -4, -1, 4, 9,\n      12, 13, 15, 18, 19, 22, 25, 25, 27, 28, 33, 40, 48, 50, 52, 53, 63, 65,\n      68, 69, 71, 74, 75, 82, 89, 89, 92, 92, 94, 94, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -97, -96, -86, -82, -81, -69, -68, -45, -41, -35, -27, -26, -23, -18,\n          -11, -7, -4, 0, 16, 20, 36, 67, 69, 73, 75, 76, 80, 90, 99\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -96, -90, -85, -67, -65, -61, -48, -36, -35, -31, -24, -23, -14, -6,\n          -1, 12, 34, 70, 82, 91, 94, 100\n        ]\n      ]\n    ],\n    \"output\": [\n      -97, -96, -96, -90, -86, -85, -82, -81, -69, -68, -67, -65, -61, -48, -45,\n      -41, -36, -35, -35, -31, -27, -26, -24, -23, -23, -18, -14, -11, -7, -6,\n      -4, -1, 0, 12, 16, 20, 34, 36, 67, 69, 70, 73, 75, 76, 80, 82, 90, 91, 94,\n      99, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-22, 3]],\n      [\n        \"listB\",\n        [\n          -96, -91, -86, -80, -74, -74, -71, -66, -63, -57, -47, -42, -34, -32,\n          -22, -15, -2, 2, 3, 11, 11, 28, 31, 32, 35, 38, 40, 40, 44, 48, 52,\n          53, 56, 59, 60, 71, 72, 77, 80, 80, 81, 82, 89, 98\n        ]\n      ]\n    ],\n    \"output\": [\n      -96, -91, -86, -80, -74, -74, -71, -66, -63, -57, -47, -42, -34, -32, -22,\n      -22, -15, -2, 2, 3, 3, 11, 11, 28, 31, 32, 35, 38, 40, 40, 44, 48, 52, 53,\n      56, 59, 60, 71, 72, 77, 80, 80, 81, 82, 89, 98\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-100, -92, -91, -46, -28, -26, 17, 37, 65, 88]],\n      [\n        \"listB\",\n        [\n          -88, -88, -75, -63, -61, -56, -48, -42, -40, -37, -31, -31, -26, -19,\n          -16, -9, -6, -5, -3, 4, 9, 14, 17, 17, 26, 31, 41, 42, 47, 47, 50, 54,\n          57, 62, 62, 64, 75, 75, 82, 82, 85, 93, 96\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -92, -91, -88, -88, -75, -63, -61, -56, -48, -46, -42, -40, -37,\n      -31, -31, -28, -26, -26, -19, -16, -9, -6, -5, -3, 4, 9, 14, 17, 17, 17,\n      26, 31, 37, 41, 42, 47, 47, 50, 54, 57, 62, 62, 64, 65, 75, 75, 82, 82,\n      85, 88, 93, 96\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [19, 61, 77]],\n      [\n        \"listB\",\n        [\n          -100, -91, -88, -76, -73, -71, -63, -60, -56, -51, -49, -46, -40, -33,\n          -31, -31, -30, -27, -11, -11, 10, 16, 21, 22, 22, 27, 27, 32, 46, 46,\n          49, 49, 52, 58, 60, 69, 70, 71, 73, 76, 77, 80, 84, 97\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -91, -88, -76, -73, -71, -63, -60, -56, -51, -49, -46, -40, -33,\n      -31, -31, -30, -27, -11, -11, 10, 16, 19, 21, 22, 22, 27, 27, 32, 46, 46,\n      49, 49, 52, 58, 60, 61, 69, 70, 71, 73, 76, 77, 77, 80, 84, 97\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -81, -64, -56, -46, -35, -29, -23, -15, -13, -5, -2, 3, 5, 7, 11, 28,\n          35, 36, 68, 75, 76, 81\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -100, -92, -85, -83, -80, -71, -47, -37, -30, -26, -7, -6, -4, 3, 6,\n          37, 40, 41, 45, 49, 55, 68, 74, 78, 86\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -92, -85, -83, -81, -80, -71, -64, -56, -47, -46, -37, -35, -30,\n      -29, -26, -23, -15, -13, -7, -6, -5, -4, -2, 3, 3, 5, 6, 7, 11, 28, 35,\n      36, 37, 40, 41, 45, 49, 55, 68, 68, 74, 75, 76, 78, 81, 86\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -93, -90, -89, -88, -86, -82, -78, -71, -70, -69, -69, -67, -58, -55,\n          -52, -49, -47, -47, -41, -35, -32, -21, -20, -13, -6, 3, 3, 9, 11, 16,\n          17, 21, 32, 32, 36, 40, 42, 55, 56, 57, 59, 61, 62, 81, 84, 92, 93, 94\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -96, -95, -85, -64, -60, -42, -40, -40, -31, -18, 13, 27, 31, 52, 56,\n          57, 58, 62, 73, 77, 88, 92, 94\n        ]\n      ]\n    ],\n    \"output\": [\n      -96, -95, -93, -90, -89, -88, -86, -85, -82, -78, -71, -70, -69, -69, -67,\n      -64, -60, -58, -55, -52, -49, -47, -47, -42, -41, -40, -40, -35, -32, -31,\n      -21, -20, -18, -13, -6, 3, 3, 9, 11, 13, 16, 17, 21, 27, 31, 32, 32, 36,\n      40, 42, 52, 55, 56, 56, 57, 57, 58, 59, 61, 62, 62, 73, 77, 81, 84, 88,\n      92, 92, 93, 94, 94\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-90, -81, -80, -63, -61, 24, 32, 43, 53, 71]],\n      [\n        \"listB\",\n        [-83, -52, -51, -50, -47, -31, -24, -7, 9, 28, 38, 48, 62, 67, 85, 99]\n      ]\n    ],\n    \"output\": [\n      -90, -83, -81, -80, -63, -61, -52, -51, -50, -47, -31, -24, -7, 9, 24, 28,\n      32, 38, 43, 48, 53, 62, 67, 71, 85, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-68, -22, -22, 26, 32, 60, 64]],\n      [\n        \"listB\",\n        [\n          -98, -96, -92, -87, -86, -86, -82, -82, -71, -64, -61, -43, -42, -18,\n          -17, -16, -11, 7, 27, 33, 41, 65, 66, 87\n        ]\n      ]\n    ],\n    \"output\": [\n      -98, -96, -92, -87, -86, -86, -82, -82, -71, -68, -64, -61, -43, -42, -22,\n      -22, -18, -17, -16, -11, 7, 26, 27, 32, 33, 41, 60, 64, 65, 66, 87\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -74, -74, -71, -67, -62, -62, -60, -57, -56, -48, -44, -44, -38, -32,\n          -31, -29, -26, -25, -25, -24, -21, -2, -1, 2, 19, 26, 32, 32, 38, 39,\n          46, 48, 51, 52, 53, 62, 62, 64, 67, 67, 70, 81, 88, 96, 98, 98\n        ]\n      ],\n      [\"listB\", [-79, -75, -53, -8, 1, 9, 28, 29, 36, 39, 42, 46, 86]]\n    ],\n    \"output\": [\n      -79, -75, -74, -74, -71, -67, -62, -62, -60, -57, -56, -53, -48, -44, -44,\n      -38, -32, -31, -29, -26, -25, -25, -24, -21, -8, -2, -1, 1, 2, 9, 19, 26,\n      28, 29, 32, 32, 36, 38, 39, 39, 42, 46, 46, 48, 51, 52, 53, 62, 62, 64,\n      67, 67, 70, 81, 86, 88, 96, 98, 98\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -98, -89, -82, -69, -59, -58, -56, -52, -40, -33, -25, -20, -10, -5,\n          7, 8, 11, 13, 14, 17, 27, 28, 39, 41, 57, 66, 67, 74, 79\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -98, -98, -98, -97, -94, -88, -86, -86, -84, -83, -79, -73, -59, -59,\n          -58, -55, -42, -34, -30, -27, -23, -21, -20, -8, -8, -3, -1, 3, 6, 8,\n          14, 26, 30, 38, 41, 50, 53, 58, 65, 68, 69, 73, 75, 80, 82, 87, 90,\n          93, 98, 99\n        ]\n      ]\n    ],\n    \"output\": [\n      -98, -98, -98, -98, -97, -94, -89, -88, -86, -86, -84, -83, -82, -79, -73,\n      -69, -59, -59, -59, -58, -58, -56, -55, -52, -42, -40, -34, -33, -30, -27,\n      -25, -23, -21, -20, -20, -10, -8, -8, -5, -3, -1, 3, 6, 7, 8, 8, 11, 13,\n      14, 14, 17, 26, 27, 28, 30, 38, 39, 41, 41, 50, 53, 57, 58, 65, 66, 67,\n      68, 69, 73, 74, 75, 79, 80, 82, 87, 90, 93, 98, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -81, -55, -46, -37, 3, 14, 18, 24, 26, 27, 30, 39, 49, 50, 53, 54, 58,\n          60, 61, 69, 71, 79, 97\n        ]\n      ],\n      [\"listB\", [-100, -89, -70, -55, 14, 29, 48, 52, 74, 76, 90, 95]]\n    ],\n    \"output\": [\n      -100, -89, -81, -70, -55, -55, -46, -37, 3, 14, 14, 18, 24, 26, 27, 29,\n      30, 39, 48, 49, 50, 52, 53, 54, 58, 60, 61, 69, 71, 74, 76, 79, 90, 95, 97\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-87, -84, -83, -44, 5, 6, 23, 30, 36, 38, 41, 48, 94, 97]],\n      [\"listB\", [-71, -43, -23, -20, -19, 22, 56, 58, 76, 79, 90]]\n    ],\n    \"output\": [\n      -87, -84, -83, -71, -44, -43, -23, -20, -19, 5, 6, 22, 23, 30, 36, 38, 41,\n      48, 56, 58, 76, 79, 90, 94, 97\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-61, 1, 32, 39, 65, 75, 75, 79, 81]],\n      [\"listB\", [-50]]\n    ],\n    \"output\": [-61, -50, 1, 32, 39, 65, 75, 75, 79, 81]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -99, -97, -84, -82, -82, -75, -70, -59, -57, -55, -54, -52, -49, -47,\n          -47, -40, -36, -29, -23, -22, 1, 1, 5, 7, 14, 16, 22, 24, 34, 36, 44,\n          56, 58, 59, 66, 69, 75, 82, 88, 90, 96\n        ]\n      ],\n      [\"listB\", [-90, -72, 15, 17, 40, 47, 48]]\n    ],\n    \"output\": [\n      -99, -97, -90, -84, -82, -82, -75, -72, -70, -59, -57, -55, -54, -52, -49,\n      -47, -47, -40, -36, -29, -23, -22, 1, 1, 5, 7, 14, 15, 16, 17, 22, 24, 34,\n      36, 40, 44, 47, 48, 56, 58, 59, 66, 69, 75, 82, 88, 90, 96\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-29, 35]],\n      [\n        \"listB\",\n        [\n          -98, -95, -83, -70, -62, -60, -59, -57, -56, -56, -53, -49, -47, -45,\n          -44, -39, -38, -38, -26, -22, -21, -20, -8, -4, -1, 0, 6, 10, 12, 16,\n          18, 26, 27, 31, 33, 38, 41, 46, 53, 59, 66, 72, 73, 75, 76, 78, 78,\n          83, 97\n        ]\n      ]\n    ],\n    \"output\": [\n      -98, -95, -83, -70, -62, -60, -59, -57, -56, -56, -53, -49, -47, -45, -44,\n      -39, -38, -38, -29, -26, -22, -21, -20, -8, -4, -1, 0, 6, 10, 12, 16, 18,\n      26, 27, 31, 33, 35, 38, 41, 46, 53, 59, 66, 72, 73, 75, 76, 78, 78, 83, 97\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-80, -61, -50, -3, 3, 10, 29, 44, 63, 81, 85]],\n      [\"listB\", [-91, -83, -24, -1, 6, 12, 18, 54, 61, 87, 87, 89]]\n    ],\n    \"output\": [\n      -91, -83, -80, -61, -50, -24, -3, -1, 3, 6, 10, 12, 18, 29, 44, 54, 61,\n      63, 81, 85, 87, 87, 89\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -99, -99, -94, -92, -87, -72, -69, -64, -53, -42, -5, 33, 41, 49, 55,\n          79, 79, 81, 91\n        ]\n      ],\n      [\"listB\", [-98, -89, -85, -62, -28, -20, -5, 26, 36, 39, 41, 79]]\n    ],\n    \"output\": [\n      -99, -99, -98, -94, -92, -89, -87, -85, -72, -69, -64, -62, -53, -42, -28,\n      -20, -5, -5, 26, 33, 36, 39, 41, 41, 49, 55, 79, 79, 79, 81, 91\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -88, -88, -86, -82, -80, -80, -47, 0, 17, 24, 38, 50, 51, 55, 68, 91,\n          93, 100\n        ]\n      ],\n      [\"listB\", [-25]]\n    ],\n    \"output\": [\n      -88, -88, -86, -82, -80, -80, -47, -25, 0, 17, 24, 38, 50, 51, 55, 68, 91,\n      93, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -95, -90, -88, -84, -70, -61, -56, -45, -44, -36, -35, -25, -19, -14,\n          -7, 13, 16, 30, 32, 33, 33, 53, 54, 56, 75, 79, 89, 90, 92\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -87, -86, -86, -59, -48, -44, -43, -37, -35, -29, -26, -22, -20, -16,\n          -3, 4, 4, 8, 38, 39, 58, 80, 93\n        ]\n      ]\n    ],\n    \"output\": [\n      -95, -90, -88, -87, -86, -86, -84, -70, -61, -59, -56, -48, -45, -44, -44,\n      -43, -37, -36, -35, -35, -29, -26, -25, -22, -20, -19, -16, -14, -7, -3,\n      4, 4, 8, 13, 16, 30, 32, 33, 33, 38, 39, 53, 54, 56, 58, 75, 79, 80, 89,\n      90, 92, 93\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -94, -90, -88, -72, -60, -51, -21, -14, -11, 10, 27, 33, 52, 56, 59,\n          59, 62, 92, 97, 100\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -81, -78, -69, -57, -43, -38, -29, -27, -20, -17, -6, -6, -3, 5, 14,\n          19, 24, 85, 86, 87, 95, 96, 99\n        ]\n      ]\n    ],\n    \"output\": [\n      -94, -90, -88, -81, -78, -72, -69, -60, -57, -51, -43, -38, -29, -27, -21,\n      -20, -17, -14, -11, -6, -6, -3, 5, 10, 14, 19, 24, 27, 33, 52, 56, 59, 59,\n      62, 85, 86, 87, 92, 95, 96, 97, 99, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -97, -95, -91, -90, -85, -83, -69, -68, -65, -45, -45, -43, -40, -27,\n          -20, -11, -11, -10, -5, -2, 4, 10, 13, 14, 36, 47, 56, 67, 72, 100\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -81, -78, -52, -52, -45, -40, -36, -26, -22, -17, -11, -6, 2, 6, 8, 9,\n          10, 25, 26, 32, 42, 44, 46, 47, 49, 50, 57, 63, 69, 83, 83, 98\n        ]\n      ]\n    ],\n    \"output\": [\n      -97, -95, -91, -90, -85, -83, -81, -78, -69, -68, -65, -52, -52, -45, -45,\n      -45, -43, -40, -40, -36, -27, -26, -22, -20, -17, -11, -11, -11, -10, -6,\n      -5, -2, 2, 4, 6, 8, 9, 10, 10, 13, 14, 25, 26, 32, 36, 42, 44, 46, 47, 47,\n      49, 50, 56, 57, 63, 67, 69, 72, 83, 83, 98, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -86, -78, -75, -64, -64, -50, -46, -35, -35, -22, -15, -13, -2, 17,\n          28, 29, 36, 37, 38, 39, 43, 49, 56, 57, 66, 77, 78, 82, 86, 90, 91,\n          100\n        ]\n      ],\n      [\"listB\", [-77, -46, -29, -26, 2, 38, 39, 55, 81, 84]]\n    ],\n    \"output\": [\n      -86, -78, -77, -75, -64, -64, -50, -46, -46, -35, -35, -29, -26, -22, -15,\n      -13, -2, 2, 17, 28, 29, 36, 37, 38, 38, 39, 39, 43, 49, 55, 56, 57, 66,\n      77, 78, 81, 82, 84, 86, 90, 91, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [23, 35, 47]],\n      [\n        \"listB\",\n        [\n          -97, -94, -70, -46, -43, -43, -39, -33, -28, -23, -18, -17, -9, -7,\n          -6, -2, 3, 4, 5, 11, 31, 35, 42, 43, 50, 52, 61, 80, 82, 85, 86, 86,\n          96, 97\n        ]\n      ]\n    ],\n    \"output\": [\n      -97, -94, -70, -46, -43, -43, -39, -33, -28, -23, -18, -17, -9, -7, -6,\n      -2, 3, 4, 5, 11, 23, 31, 35, 35, 42, 43, 47, 50, 52, 61, 80, 82, 85, 86,\n      86, 96, 97\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -86, -83, -80, -76, -70, -63, -57, -49, -44, -34, -30, -30, -13, -11,\n          -9, -4, 7, 17, 42, 47, 53, 65, 65, 66, 83, 91, 95, 99\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -96, -89, -89, -86, -67, -56, -53, -52, -46, -39, -32, -24, -21, 3,\n          12, 16, 50, 57, 67, 97\n        ]\n      ]\n    ],\n    \"output\": [\n      -96, -89, -89, -86, -86, -83, -80, -76, -70, -67, -63, -57, -56, -53, -52,\n      -49, -46, -44, -39, -34, -32, -30, -30, -24, -21, -13, -11, -9, -4, 3, 7,\n      12, 16, 17, 42, 47, 50, 53, 57, 65, 65, 66, 67, 83, 91, 95, 97, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -100, -93, -91, -87, -85, -84, -76, -75, -52, -38, -36, -34, -33, -20,\n          4, 8, 14, 19, 23, 30, 32, 36, 36, 38, 42, 46, 47, 59, 71, 76, 82, 82,\n          94\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -100, -82, -76, -72, -61, -54, -50, -41, -33, -27, -26, -4, -2, 2, 19,\n          20, 20, 22, 29, 31, 36, 51, 76, 93, 99\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -100, -93, -91, -87, -85, -84, -82, -76, -76, -75, -72, -61, -54,\n      -52, -50, -41, -38, -36, -34, -33, -33, -27, -26, -20, -4, -2, 2, 4, 8,\n      14, 19, 19, 20, 20, 22, 23, 29, 30, 31, 32, 36, 36, 36, 38, 42, 46, 47,\n      51, 59, 71, 76, 76, 82, 82, 93, 94, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -88, -82, -81, -70, -51, -34, -32, 4, 11, 28, 37, 40, 42, 60, 69, 74,\n          79, 97, 100\n        ]\n      ],\n      [\"listB\", [-88, -52, -2, 15, 73]]\n    ],\n    \"output\": [\n      -88, -88, -82, -81, -70, -52, -51, -34, -32, -2, 4, 11, 15, 28, 37, 40,\n      42, 60, 69, 73, 74, 79, 97, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -93, -89, -87, -80, -73, -69, -62, -59, -16, -16, -11, -7, 4, 11, 24,\n          31, 32, 36, 38, 41, 60, 66, 66, 69, 71, 78, 86, 94\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -98, -92, -86, -79, -63, -44, -44, -42, -40, -38, -34, -30, -19, -11,\n          -3, -2, 15, 23, 35, 50, 58, 74, 75, 85, 88\n        ]\n      ]\n    ],\n    \"output\": [\n      -98, -93, -92, -89, -87, -86, -80, -79, -73, -69, -63, -62, -59, -44, -44,\n      -42, -40, -38, -34, -30, -19, -16, -16, -11, -11, -7, -3, -2, 4, 11, 15,\n      23, 24, 31, 32, 35, 36, 38, 41, 50, 58, 60, 66, 66, 69, 71, 74, 75, 78,\n      85, 86, 88, 94\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-62, -9, 60, 99]],\n      [\n        \"listB\",\n        [\n          -98, -93, -89, -87, -83, -82, -79, -78, -76, -75, -74, -71, -70, -66,\n          -60, -59, -47, -46, -41, -39, -36, -19, -18, -17, -5, 0, 6, 22, 27,\n          41, 42, 50, 60, 72, 81, 92\n        ]\n      ]\n    ],\n    \"output\": [\n      -98, -93, -89, -87, -83, -82, -79, -78, -76, -75, -74, -71, -70, -66, -62,\n      -60, -59, -47, -46, -41, -39, -36, -19, -18, -17, -9, -5, 0, 6, 22, 27,\n      41, 42, 50, 60, 60, 72, 81, 92, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -100, -100, -91, -91, -85, -53, -50, -48, -37, -35, -13, -12, -12, -7,\n          -3, 4, 15, 15, 22, 24, 32, 46, 51, 72, 75, 76, 79, 86, 94\n        ]\n      ],\n      [\"listB\", [-100, -65, -57, 54]]\n    ],\n    \"output\": [\n      -100, -100, -100, -91, -91, -85, -65, -57, -53, -50, -48, -37, -35, -13,\n      -12, -12, -7, -3, 4, 15, 15, 22, 24, 32, 46, 51, 54, 72, 75, 76, 79, 86,\n      94\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [-99, -63, -61, -39, -39, -38, -20, -16, -1, 10, 25, 45, 63, 69, 76, 99]\n      ],\n      [\"listB\", [-100, 2, 32, 62, 65, 70]]\n    ],\n    \"output\": [\n      -100, -99, -63, -61, -39, -39, -38, -20, -16, -1, 2, 10, 25, 32, 45, 62,\n      63, 65, 69, 70, 76, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-78, -66, -55, -36, -5, 71]],\n      [\n        \"listB\",\n        [\n          -92, -88, -86, -80, -79, -68, -68, -66, -64, -59, -56, -50, -45, -43,\n          -11, 5, 8, 12, 23, 25, 25, 28, 36, 43, 44, 48, 49, 75, 75, 93, 98, 99\n        ]\n      ]\n    ],\n    \"output\": [\n      -92, -88, -86, -80, -79, -78, -68, -68, -66, -66, -64, -59, -56, -55, -50,\n      -45, -43, -36, -11, -5, 5, 8, 12, 23, 25, 25, 28, 36, 43, 44, 48, 49, 71,\n      75, 75, 93, 98, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -95, -75, -53, -49, -36, -20, -17, -10, -5, 6, 11, 57, 87, 93, 94, 96,\n          99\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -62, -61, -57, -52, -39, -38, -32, -22, -10, -10, 1, 3, 9, 11, 12, 17,\n          22, 26, 38, 43, 62, 71, 71, 94, 95\n        ]\n      ]\n    ],\n    \"output\": [\n      -95, -75, -62, -61, -57, -53, -52, -49, -39, -38, -36, -32, -22, -20, -17,\n      -10, -10, -10, -5, 1, 3, 6, 9, 11, 11, 12, 17, 22, 26, 38, 43, 57, 62, 71,\n      71, 87, 93, 94, 94, 95, 96, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [-85, -44, -9, -7, -4, 13, 18, 37, 43, 63, 78, 78, 80, 83, 83, 87, 96]\n      ],\n      [\"listB\", [-74, -63, -45, -33, -11, -7, 21, 87]]\n    ],\n    \"output\": [\n      -85, -74, -63, -45, -44, -33, -11, -9, -7, -7, -4, 13, 18, 21, 37, 43, 63,\n      78, 78, 80, 83, 83, 87, 87, 96\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -77, -62, -44, -39, -35, -28, -27, -18, -12, 1, 2, 7, 12, 14, 16, 36,\n          54, 73, 80, 90, 96\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -98, -95, -95, -87, -82, -78, -76, -75, -75, -54, -53, -30, -25, -20,\n          -19, -11, -5, 1, 1, 2, 5, 7, 18, 21, 23, 26, 28, 30, 31, 37, 39, 46,\n          48, 49, 51, 53, 55, 71, 73, 75, 79, 79, 84, 93, 94\n        ]\n      ]\n    ],\n    \"output\": [\n      -98, -95, -95, -87, -82, -78, -77, -76, -75, -75, -62, -54, -53, -44, -39,\n      -35, -30, -28, -27, -25, -20, -19, -18, -12, -11, -5, 1, 1, 1, 2, 2, 5, 7,\n      7, 12, 14, 16, 18, 21, 23, 26, 28, 30, 31, 36, 37, 39, 46, 48, 49, 51, 53,\n      54, 55, 71, 73, 73, 75, 79, 79, 80, 84, 90, 93, 94, 96\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -87, -82, -74, -72, -67, -66, -64, -58, -55, -52, -33, -30, -28, -28,\n          -22, -11, -10, -10, -9, -3, 0, 3, 3, 6, 12, 14, 16, 19, 19, 20, 24,\n          37, 42, 51, 57, 68, 71, 73, 79, 84, 86, 87, 92, 93, 98, 100\n        ]\n      ],\n      [\"listB\", [-61, -5, 46, 80, 86]]\n    ],\n    \"output\": [\n      -87, -82, -74, -72, -67, -66, -64, -61, -58, -55, -52, -33, -30, -28, -28,\n      -22, -11, -10, -10, -9, -5, -3, 0, 3, 3, 6, 12, 14, 16, 19, 19, 20, 24,\n      37, 42, 46, 51, 57, 68, 71, 73, 79, 80, 84, 86, 86, 87, 92, 93, 98, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", []],\n      [\n        \"listB\",\n        [\n          -92, -85, -79, -78, -73, -71, -58, -56, -49, -45, -43, -37, -36, -23,\n          -19, -18, -14, -13, -9, -8, 8, 10, 14, 18, 20, 26, 33, 36, 43, 47, 47,\n          50, 56, 62, 66, 79, 83, 86, 87, 90, 92, 95, 99\n        ]\n      ]\n    ],\n    \"output\": [\n      -92, -85, -79, -78, -73, -71, -58, -56, -49, -45, -43, -37, -36, -23, -19,\n      -18, -14, -13, -9, -8, 8, 10, 14, 18, 20, 26, 33, 36, 43, 47, 47, 50, 56,\n      62, 66, 79, 83, 86, 87, 90, 92, 95, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -99, -94, -82, -69, -54, -49, -49, -47, -35, -31, -28, -18, -10, -4,\n          0, 7, 15, 25, 31, 34, 48, 49, 55, 70, 83, 83, 88, 96, 100\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -91, -89, -78, -64, -62, -52, -16, -11, -9, 3, 8, 10, 28, 29, 32, 50,\n          61, 65, 69, 74, 76, 76, 93, 95, 97, 100\n        ]\n      ]\n    ],\n    \"output\": [\n      -99, -94, -91, -89, -82, -78, -69, -64, -62, -54, -52, -49, -49, -47, -35,\n      -31, -28, -18, -16, -11, -10, -9, -4, 0, 3, 7, 8, 10, 15, 25, 28, 29, 31,\n      32, 34, 48, 49, 50, 55, 61, 65, 69, 70, 74, 76, 76, 83, 83, 88, 93, 95,\n      96, 97, 100, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [-80, -57, -40, -39, -30, -6, -5, 19, 32, 42, 43, 71, 79, 86, 93]\n      ],\n      [\n        \"listB\",\n        [-87, -71, -45, -44, -37, -30, -16, -8, 15, 34, 35, 39, 41, 52, 90]\n      ]\n    ],\n    \"output\": [\n      -87, -80, -71, -57, -45, -44, -40, -39, -37, -30, -30, -16, -8, -6, -5,\n      15, 19, 32, 34, 35, 39, 41, 42, 43, 52, 71, 79, 86, 90, 93\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -87, -68, -61, -58, -40, -37, -22, -20, -17, -16, -9, -8, 9, 11, 21,\n          32, 41, 42, 46, 47, 52, 53, 57, 59, 84, 100\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -100, -95, -94, -88, -88, -76, -74, -73, -72, -70, -66, -64, -64, -58,\n          -51, -50, -40, -35, -30, -28, -24, -23, -17, -11, -3, -1, 0, 2, 11,\n          17, 24, 32, 32, 33, 45, 46, 52, 56, 59, 63, 64, 65, 74, 79, 80, 87,\n          90, 95, 99\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -95, -94, -88, -88, -87, -76, -74, -73, -72, -70, -68, -66, -64,\n      -64, -61, -58, -58, -51, -50, -40, -40, -37, -35, -30, -28, -24, -23, -22,\n      -20, -17, -17, -16, -11, -9, -8, -3, -1, 0, 2, 9, 11, 11, 17, 21, 24, 32,\n      32, 32, 33, 41, 42, 45, 46, 46, 47, 52, 52, 53, 56, 57, 59, 59, 63, 64,\n      65, 74, 79, 80, 84, 87, 90, 95, 99, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -95, -91, -68, -60, -58, -56, -55, -48, -45, -36, -30, -9, -1, 7, 9,\n          10, 13, 16, 21, 32, 54, 66, 67, 78, 80, 94, 96, 100\n        ]\n      ],\n      [\"listB\", []]\n    ],\n    \"output\": [\n      -95, -91, -68, -60, -58, -56, -55, -48, -45, -36, -30, -9, -1, 7, 9, 10,\n      13, 16, 21, 32, 54, 66, 67, 78, 80, 94, 96, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -98, -97, -94, -92, -86, -85, -72, -62, -61, -61, -61, -53, -52, -45,\n          -44, -36, -36, -36, -31, -31, -26, -22, -22, -17, -10, -9, -7, -5, -2,\n          6, 14, 16, 25, 28, 38, 48, 51, 57, 57, 76, 81, 84, 87, 87, 88, 89, 90,\n          100\n        ]\n      ],\n      [\n        \"listB\",\n        [-100, -99, -95, -80, -59, -57, -34, -17, -15, -9, 3, 32, 51, 57, 73]\n      ]\n    ],\n    \"output\": [\n      -100, -99, -98, -97, -95, -94, -92, -86, -85, -80, -72, -62, -61, -61,\n      -61, -59, -57, -53, -52, -45, -44, -36, -36, -36, -34, -31, -31, -26, -22,\n      -22, -17, -17, -15, -10, -9, -9, -7, -5, -2, 3, 6, 14, 16, 25, 28, 32, 38,\n      48, 51, 51, 57, 57, 57, 73, 76, 81, 84, 87, 87, 88, 89, 90, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -81, -73, -71, -56, -46, -46, -39, -27, -19, -16, -16, -4, -2, 2, 8,\n          30, 47, 49, 67, 74\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -100, -93, -89, -79, -75, -60, -57, -52, -52, -37, -11, 0, 15, 17, 19,\n          20, 20, 48, 56, 67, 76, 80, 90\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -93, -89, -81, -79, -75, -73, -71, -60, -57, -56, -52, -52, -46,\n      -46, -39, -37, -27, -19, -16, -16, -11, -4, -2, 0, 2, 8, 15, 17, 19, 20,\n      20, 30, 47, 48, 49, 56, 67, 67, 74, 76, 80, 90\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-87, -64, -56, -42, -15, 7, 19, 22, 38, 61, 85, 100]],\n      [\n        \"listB\",\n        [\n          -99, -94, -93, -84, -78, -78, -73, -73, -58, -58, -54, -53, -49, -44,\n          -23, -17, -6, -5, -2, -1, -1, 2, 7, 11, 12, 18, 21, 26, 32, 35, 35,\n          35, 39, 43, 52, 53, 56, 60, 69, 74, 75, 79, 81, 97, 97, 98\n        ]\n      ]\n    ],\n    \"output\": [\n      -99, -94, -93, -87, -84, -78, -78, -73, -73, -64, -58, -58, -56, -54, -53,\n      -49, -44, -42, -23, -17, -15, -6, -5, -2, -1, -1, 2, 7, 7, 11, 12, 18, 19,\n      21, 22, 26, 32, 35, 35, 35, 38, 39, 43, 52, 53, 56, 60, 61, 69, 74, 75,\n      79, 81, 85, 97, 97, 98, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -99, -97, -94, -90, -85, -84, -79, -49, -43, -35, -23, -20, -18, -12,\n          0, 2, 7, 13, 22, 30, 34, 39, 52, 69, 75, 88, 90, 90, 99\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -100, -86, -64, -54, -43, -28, -22, -17, -4, 6, 13, 17, 21, 28, 34,\n          41, 57, 81\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -99, -97, -94, -90, -86, -85, -84, -79, -64, -54, -49, -43, -43,\n      -35, -28, -23, -22, -20, -18, -17, -12, -4, 0, 2, 6, 7, 13, 13, 17, 21,\n      22, 28, 30, 34, 34, 39, 41, 52, 57, 69, 75, 81, 88, 90, 90, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-95, -46]],\n      [\n        \"listB\",\n        [\n          -100, -90, -88, -87, -86, -81, -79, -74, -65, -37, -33, -16, -14, -9,\n          7, 9, 18, 19, 21, 31, 33, 55, 56, 64, 67, 67, 67, 71, 71, 72, 74, 89\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -95, -90, -88, -87, -86, -81, -79, -74, -65, -46, -37, -33, -16,\n      -14, -9, 7, 9, 18, 19, 21, 31, 33, 55, 56, 64, 67, 67, 67, 71, 71, 72, 74,\n      89\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-85, -69, -42, -27, 26, 35, 39, 57]],\n      [\n        \"listB\",\n        [\n          -80, -77, -76, -61, -56, -56, -46, -44, -31, -31, -30, -23, -11, -10,\n          1, 5, 8, 14, 18, 18, 19, 24, 25, 26, 29, 30, 33, 36, 38, 52, 52, 57,\n          65, 66, 69, 77, 83, 90, 98\n        ]\n      ]\n    ],\n    \"output\": [\n      -85, -80, -77, -76, -69, -61, -56, -56, -46, -44, -42, -31, -31, -30, -27,\n      -23, -11, -10, 1, 5, 8, 14, 18, 18, 19, 24, 25, 26, 26, 29, 30, 33, 35,\n      36, 38, 39, 52, 52, 57, 57, 65, 66, 69, 77, 83, 90, 98\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -100, -86, -81, -59, -53, -49, -43, -39, -38, -37, -36, -35, -25, -22,\n          -10, -9, -7, -7, -5, 13, 15, 17, 23, 24, 25, 26, 27, 29, 33, 49, 54,\n          54, 54, 56, 59, 62, 65, 65, 66, 67, 71, 72, 77, 77, 78, 88\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -90, -82, -78, -72, -66, -64, -63, -61, -55, -36, -32, -22, -21, -3,\n          -1, 3, 31, 32, 44, 44, 45, 49, 56, 59, 61, 63, 78, 80, 82, 90, 91, 96,\n          97, 97\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -90, -86, -82, -81, -78, -72, -66, -64, -63, -61, -59, -55, -53,\n      -49, -43, -39, -38, -37, -36, -36, -35, -32, -25, -22, -22, -21, -10, -9,\n      -7, -7, -5, -3, -1, 3, 13, 15, 17, 23, 24, 25, 26, 27, 29, 31, 32, 33, 44,\n      44, 45, 49, 49, 54, 54, 54, 56, 56, 59, 59, 61, 62, 63, 65, 65, 66, 67,\n      71, 72, 77, 77, 78, 78, 80, 82, 88, 90, 91, 96, 97, 97\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -90, -72, -68, -65, -59, -59, -56, -52, -51, -46, -43, -32, -29, -19,\n          -15, -3, 8, 10, 12, 16, 16, 20, 22, 23, 33, 38, 39, 49, 49, 49, 51,\n          51, 57, 63, 63, 65, 66, 67, 70, 77, 85, 85, 89, 100\n        ]\n      ],\n      [\"listB\", [-36]]\n    ],\n    \"output\": [\n      -90, -72, -68, -65, -59, -59, -56, -52, -51, -46, -43, -36, -32, -29, -19,\n      -15, -3, 8, 10, 12, 16, 16, 20, 22, 23, 33, 38, 39, 49, 49, 49, 51, 51,\n      57, 63, 63, 65, 66, 67, 70, 77, 85, 85, 89, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -98, -87, -81, -80, -77, -75, -74, -70, -68, -63, -37, -37, -29, -13,\n          -11, -9, -7, -4, -2, -1, 20, 29, 35, 41, 44, 53, 56, 63, 79, 80, 94\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -99, -93, -62, -55, -43, -41, -38, -28, 23, 47, 49, 50, 53, 53, 54,\n          59, 72, 79, 91, 96, 100\n        ]\n      ]\n    ],\n    \"output\": [\n      -99, -98, -93, -87, -81, -80, -77, -75, -74, -70, -68, -63, -62, -55, -43,\n      -41, -38, -37, -37, -29, -28, -13, -11, -9, -7, -4, -2, -1, 20, 23, 29,\n      35, 41, 44, 47, 49, 50, 53, 53, 53, 54, 56, 59, 63, 72, 79, 79, 80, 91,\n      94, 96, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -96, -93, -88, -88, -85, -74, -72, -56, -43, -39, -39, -15, -12, -11,\n          1, 24, 25, 37, 37, 38, 47, 67\n        ]\n      ],\n      [\"listB\", [-35, 3, 3, 23, 37, 48, 49, 75, 78, 86]]\n    ],\n    \"output\": [\n      -96, -93, -88, -88, -85, -74, -72, -56, -43, -39, -39, -35, -15, -12, -11,\n      1, 3, 3, 23, 24, 25, 37, 37, 37, 38, 47, 48, 49, 67, 75, 78, 86\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-69]],\n      [\n        \"listB\",\n        [\n          -77, -64, -61, -52, -45, -25, -19, -2, 11, 13, 15, 18, 38, 38, 38, 42,\n          50, 56, 60, 65, 75, 82, 84, 84, 87, 98, 98, 100\n        ]\n      ]\n    ],\n    \"output\": [\n      -77, -69, -64, -61, -52, -45, -25, -19, -2, 11, 13, 15, 18, 38, 38, 38,\n      42, 50, 56, 60, 65, 75, 82, 84, 84, 87, 98, 98, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-97, -84, -58, -55, -39, 25, 27, 40, 43, 52, 61, 74, 88]],\n      [\n        \"listB\",\n        [\n          -99, -98, -98, -97, -95, -67, -65, -57, -54, -30, -25, -21, -19, -11,\n          5, 36, 46, 50, 53, 54, 58, 61, 77, 83, 91, 93, 100\n        ]\n      ]\n    ],\n    \"output\": [\n      -99, -98, -98, -97, -97, -95, -84, -67, -65, -58, -57, -55, -54, -39, -30,\n      -25, -21, -19, -11, 5, 25, 27, 36, 40, 43, 46, 50, 52, 53, 54, 58, 61, 61,\n      74, 77, 83, 88, 91, 93, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-55, 16]],\n      [\n        \"listB\",\n        [-89, -74, -70, -68, -52, -47, -8, 3, 16, 22, 23, 35, 39, 45, 65, 80]\n      ]\n    ],\n    \"output\": [\n      -89, -74, -70, -68, -55, -52, -47, -8, 3, 16, 16, 22, 23, 35, 39, 45, 65,\n      80\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -94, -82, -81, -61, -53, -51, -33, -24, -18, -17, -6, -6, 13, 14, 21,\n          27, 39, 44, 52, 83, 86, 92\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -99, -88, -87, -84, -79, -72, -65, -62, -62, -62, -61, -45, -45, -45,\n          -42, -39, -38, -37, -24, -23, -17, -16, -3, -3, -2, 0, 1, 11, 20, 27,\n          34, 56, 59, 63, 72, 75, 81, 83, 89, 90, 97\n        ]\n      ]\n    ],\n    \"output\": [\n      -99, -94, -88, -87, -84, -82, -81, -79, -72, -65, -62, -62, -62, -61, -61,\n      -53, -51, -45, -45, -45, -42, -39, -38, -37, -33, -24, -24, -23, -18, -17,\n      -17, -16, -6, -6, -3, -3, -2, 0, 1, 11, 13, 14, 20, 21, 27, 27, 34, 39,\n      44, 52, 56, 59, 63, 72, 75, 81, 83, 83, 86, 89, 90, 92, 97\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [-98, -85, -74, -72, -67, -53, -18, -7, -6, 8, 25, 48, 53, 53, 60, 84]\n      ],\n      [\n        \"listB\",\n        [\n          -99, -88, -69, -62, -58, -58, -43, -33, -13, -8, -8, -4, 7, 19, 20,\n          23, 47, 61, 65, 68, 69, 75, 80, 96\n        ]\n      ]\n    ],\n    \"output\": [\n      -99, -98, -88, -85, -74, -72, -69, -67, -62, -58, -58, -53, -43, -33, -18,\n      -13, -8, -8, -7, -6, -4, 7, 8, 19, 20, 23, 25, 47, 48, 53, 53, 60, 61, 65,\n      68, 69, 75, 80, 84, 96\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", []],\n      [\n        \"listB\",\n        [\n          -91, -75, -56, -52, -49, -40, -30, -24, -22, -18, -8, -7, 8, 25, 31,\n          36, 53, 55, 67, 69, 71, 83, 85, 97, 97\n        ]\n      ]\n    ],\n    \"output\": [\n      -91, -75, -56, -52, -49, -40, -30, -24, -22, -18, -8, -7, 8, 25, 31, 36,\n      53, 55, 67, 69, 71, 83, 85, 97, 97\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-81, -80, -63, -31, -9, 0, 73, 75, 79, 84, 90, 90, 99]],\n      [\n        \"listB\",\n        [\n          -91, -87, -80, -68, -68, -61, -54, -47, -39, -34, -31, -29, -27, -26,\n          -23, -19, -18, -14, -10, 11, 14, 16, 18, 19, 20, 23, 25, 27, 41, 45,\n          49, 50, 51, 53, 54, 60, 61, 62, 65, 74, 85, 87, 93, 95\n        ]\n      ]\n    ],\n    \"output\": [\n      -91, -87, -81, -80, -80, -68, -68, -63, -61, -54, -47, -39, -34, -31, -31,\n      -29, -27, -26, -23, -19, -18, -14, -10, -9, 0, 11, 14, 16, 18, 19, 20, 23,\n      25, 27, 41, 45, 49, 50, 51, 53, 54, 60, 61, 62, 65, 73, 74, 75, 79, 84,\n      85, 87, 90, 90, 93, 95, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-75, -35, -23, 25, 50, 64, 91]],\n      [\n        \"listB\",\n        [\n          -99, -95, -92, -77, -63, -61, -48, -42, -39, -31, -28, -25, -23, -20,\n          -20, -20, -15, 0, 2, 11, 20, 35, 36, 36, 42, 52, 55, 77, 83, 85, 91\n        ]\n      ]\n    ],\n    \"output\": [\n      -99, -95, -92, -77, -75, -63, -61, -48, -42, -39, -35, -31, -28, -25, -23,\n      -23, -20, -20, -20, -15, 0, 2, 11, 20, 25, 35, 36, 36, 42, 50, 52, 55, 64,\n      77, 83, 85, 91, 91\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -97, -89, -87, -82, -74, -70, -62, -40, -22, -13, 2, 17, 18, 32, 37,\n          40, 63, 68, 72, 83, 94\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -96, -92, -89, -89, -87, -76, -73, -69, -67, -65, -62, -47, -35, -20,\n          -19, -15, -11, 1, 5, 12, 30, 34, 36, 41, 49, 62, 65, 76, 98\n        ]\n      ]\n    ],\n    \"output\": [\n      -97, -96, -92, -89, -89, -89, -87, -87, -82, -76, -74, -73, -70, -69, -67,\n      -65, -62, -62, -47, -40, -35, -22, -20, -19, -15, -13, -11, 1, 2, 5, 12,\n      17, 18, 30, 32, 34, 36, 37, 40, 41, 49, 62, 63, 65, 68, 72, 76, 83, 94, 98\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -100, -82, -72, -69, -60, -53, -49, -49, -38, -35, 1, 4, 10, 66, 69,\n          72, 76, 85, 91\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -92, -86, -82, -78, -67, -66, -50, -50, -45, -39, -30, -18, -14, -13,\n          -11, -8, -3, -2, -2, 17, 19, 24, 26, 27, 27, 32, 32, 34, 35, 46, 50,\n          52, 55, 55, 62, 63, 66, 68, 68, 71, 74, 85, 87, 90, 100\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -92, -86, -82, -82, -78, -72, -69, -67, -66, -60, -53, -50, -50,\n      -49, -49, -45, -39, -38, -35, -30, -18, -14, -13, -11, -8, -3, -2, -2, 1,\n      4, 10, 17, 19, 24, 26, 27, 27, 32, 32, 34, 35, 46, 50, 52, 55, 55, 62, 63,\n      66, 66, 68, 68, 69, 71, 72, 74, 76, 85, 85, 87, 90, 91, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -98, -98, -97, -93, -92, -91, -85, -84, -83, -64, -61, -57, -53, -52,\n          -52, -47, -39, -35, -29, -24, -9, -6, -5, -2, 2, 3, 13, 15, 19, 22,\n          24, 38, 39, 50, 54, 60, 68, 74, 75, 77, 82, 87, 92, 93, 96, 97\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -98, -97, -88, -86, -82, -77, -75, -72, -72, -62, -60, -56, -52, -52,\n          -49, -47, -40, -36, -36, -29, -25, -23, -17, -16, -4, 8, 15, 22, 25,\n          26, 34, 51, 56, 62, 62, 67, 69, 69, 70, 70, 71, 74, 76, 77, 79, 80,\n          86, 89, 89, 100\n        ]\n      ]\n    ],\n    \"output\": [\n      -98, -98, -98, -97, -97, -93, -92, -91, -88, -86, -85, -84, -83, -82, -77,\n      -75, -72, -72, -64, -62, -61, -60, -57, -56, -53, -52, -52, -52, -52, -49,\n      -47, -47, -40, -39, -36, -36, -35, -29, -29, -25, -24, -23, -17, -16, -9,\n      -6, -5, -4, -2, 2, 3, 8, 13, 15, 15, 19, 22, 22, 24, 25, 26, 34, 38, 39,\n      50, 51, 54, 56, 60, 62, 62, 67, 68, 69, 69, 70, 70, 71, 74, 74, 75, 76,\n      77, 77, 79, 80, 82, 86, 87, 89, 89, 92, 93, 96, 97, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -100, -92, -92, -91, -83, -83, -82, -80, -79, -76, -69, -68, -66, -64,\n          -64, -60, -57, -44, -42, -37, -36, -25, -25, -24, -19, -16, -13, 10,\n          24, 24, 26, 29, 30, 31, 40, 47, 48, 77, 79, 80, 86, 87, 89, 94, 99\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -90, -89, -82, -72, -53, -51, 1, 6, 7, 12, 34, 45, 50, 72, 80, 81, 83,\n          84, 92, 96\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -92, -92, -91, -90, -89, -83, -83, -82, -82, -80, -79, -76, -72,\n      -69, -68, -66, -64, -64, -60, -57, -53, -51, -44, -42, -37, -36, -25, -25,\n      -24, -19, -16, -13, 1, 6, 7, 10, 12, 24, 24, 26, 29, 30, 31, 34, 40, 45,\n      47, 48, 50, 72, 77, 79, 80, 80, 81, 83, 84, 86, 87, 89, 92, 94, 96, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -95, -62, -55, -35, -18, -2, -1, 28, 40, 47, 52, 56, 59, 66, 66, 86,\n          92, 100\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -90, -78, -75, -63, -57, -55, -49, -47, -41, -37, -15, 0, 14, 16, 38,\n          38, 39, 44, 51, 66, 68, 80, 84, 84, 99\n        ]\n      ]\n    ],\n    \"output\": [\n      -95, -90, -78, -75, -63, -62, -57, -55, -55, -49, -47, -41, -37, -35, -18,\n      -15, -2, -1, 0, 14, 16, 28, 38, 38, 39, 40, 44, 47, 51, 52, 56, 59, 66,\n      66, 66, 68, 80, 84, 84, 86, 92, 99, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -93, -89, -81, -81, -76, -67, -62, -61, -58, -55, -49, -45, -45, -44,\n          -44, -43, -41, -41, -36, -29, -23, -23, -17, -9, -7, -5, -3, -3, 7,\n          14, 33, 34, 38, 43, 48, 54, 66, 73, 83, 84, 84, 97, 100\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -92, -92, -86, -84, -53, -44, -40, -37, -16, -13, 2, 3, 7, 8, 31, 52,\n          52, 55, 58, 58, 66, 74, 84\n        ]\n      ]\n    ],\n    \"output\": [\n      -93, -92, -92, -89, -86, -84, -81, -81, -76, -67, -62, -61, -58, -55, -53,\n      -49, -45, -45, -44, -44, -44, -43, -41, -41, -40, -37, -36, -29, -23, -23,\n      -17, -16, -13, -9, -7, -5, -3, -3, 2, 3, 7, 7, 8, 14, 31, 33, 34, 38, 43,\n      48, 52, 52, 54, 55, 58, 58, 66, 66, 73, 74, 83, 84, 84, 84, 97, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-65, -59, -42, -1, 5, 6, 46]],\n      [\n        \"listB\",\n        [\n          -97, -92, -67, -62, -60, -56, -55, -54, -48, -46, -45, -43, -41, -41,\n          -32, -31, -21, -18, -16, -15, -14, -11, -10, -5, 4, 9, 9, 20, 21, 23,\n          24, 28, 33, 38, 42, 47, 56, 59, 72, 76, 80, 84, 88, 94, 98, 100\n        ]\n      ]\n    ],\n    \"output\": [\n      -97, -92, -67, -65, -62, -60, -59, -56, -55, -54, -48, -46, -45, -43, -42,\n      -41, -41, -32, -31, -21, -18, -16, -15, -14, -11, -10, -5, -1, 4, 5, 6, 9,\n      9, 20, 21, 23, 24, 28, 33, 38, 42, 46, 47, 56, 59, 72, 76, 80, 84, 88, 94,\n      98, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-36, -30, -6, 12, 44]],\n      [\n        \"listB\",\n        [\n          -100, -87, -81, -68, -63, -50, -41, -26, -16, -14, -5, -4, 0, 57, 61,\n          74, 87\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -87, -81, -68, -63, -50, -41, -36, -30, -26, -16, -14, -6, -5, -4,\n      0, 12, 44, 57, 61, 74, 87\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -88, -79, -65, -58, -58, -56, -56, -53, -53, -39, -27, -24, -14, -5,\n          -2, 4, 4, 5, 12, 21, 24, 25, 29, 30, 30, 33, 34, 36, 44, 44, 44, 56,\n          62, 72, 73, 76, 80, 87, 89, 90, 91, 99\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -77, -74, -70, -64, -45, -44, -43, -42, -24, -22, -18, -6, 4, 4, 11,\n          15, 23, 29, 32, 47, 50, 60, 70, 71, 74, 79, 87, 88, 90, 95\n        ]\n      ]\n    ],\n    \"output\": [\n      -88, -79, -77, -74, -70, -65, -64, -58, -58, -56, -56, -53, -53, -45, -44,\n      -43, -42, -39, -27, -24, -24, -22, -18, -14, -6, -5, -2, 4, 4, 4, 4, 5,\n      11, 12, 15, 21, 23, 24, 25, 29, 29, 30, 30, 32, 33, 34, 36, 44, 44, 44,\n      47, 50, 56, 60, 62, 70, 71, 72, 73, 74, 76, 79, 80, 87, 87, 88, 89, 90,\n      90, 91, 95, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -98, -94, -78, -77, -73, -70, -59, -59, -57, -54, -51, -39, -38, -37,\n          -29, -29, -13, -5, -2, 1, 8, 12, 17, 32, 35, 39, 66, 66, 69\n        ]\n      ],\n      [\"listB\", [-88, -70, -70, -27, -6, 33, 65]]\n    ],\n    \"output\": [\n      -98, -94, -88, -78, -77, -73, -70, -70, -70, -59, -59, -57, -54, -51, -39,\n      -38, -37, -29, -29, -27, -13, -6, -5, -2, 1, 8, 12, 17, 32, 33, 35, 39,\n      65, 66, 66, 69\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -96, -95, -95, -91, -90, -82, -63, -58, -56, -43, -41, -37, -35, -28,\n          -21, -19, -18, -18, -11, -10, 0, 3, 7, 11, 24, 25, 28, 29, 29, 30, 38,\n          39, 39, 51, 58, 59, 72, 75, 76, 83, 91, 91, 92\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -73, -72, -65, -54, -42, -38, -28, -28, -15, 13, 17, 19, 20, 41, 53,\n          61, 78, 87, 87\n        ]\n      ]\n    ],\n    \"output\": [\n      -96, -95, -95, -91, -90, -82, -73, -72, -65, -63, -58, -56, -54, -43, -42,\n      -41, -38, -37, -35, -28, -28, -28, -21, -19, -18, -18, -15, -11, -10, 0,\n      3, 7, 11, 13, 17, 19, 20, 24, 25, 28, 29, 29, 30, 38, 39, 39, 41, 51, 53,\n      58, 59, 61, 72, 75, 76, 78, 83, 87, 87, 91, 91, 92\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -80, -80, -77, -54, -50, -46, -37, -36, -30, -27, -17, 14, 17, 17, 32,\n          32, 36, 47, 53, 58, 65, 89\n        ]\n      ],\n      [\"listB\", [12, 13, 61, 62]]\n    ],\n    \"output\": [\n      -80, -80, -77, -54, -50, -46, -37, -36, -30, -27, -17, 12, 13, 14, 17, 17,\n      32, 32, 36, 47, 53, 58, 61, 62, 65, 89\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -99, -97, -92, -91, -91, -82, -76, -75, -68, -66, -61, -53, -34, -24,\n          -13, -12, 3, 3, 13, 18, 19, 19, 20, 21, 23, 27, 30, 35, 36, 39, 39,\n          45, 51, 58, 64, 71, 75, 87, 95, 98\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -100, -92, -91, -90, -84, -78, -70, -68, -60, -59, -59, -55, -37, -36,\n          -35, -30, -25, -6, -5, -2, 7, 9, 10, 11, 13, 13, 15, 16, 26, 32, 37,\n          51, 57, 58, 60, 60, 64, 64, 64, 73, 77, 78, 80, 82, 85, 93\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -99, -97, -92, -92, -91, -91, -91, -90, -84, -82, -78, -76, -75,\n      -70, -68, -68, -66, -61, -60, -59, -59, -55, -53, -37, -36, -35, -34, -30,\n      -25, -24, -13, -12, -6, -5, -2, 3, 3, 7, 9, 10, 11, 13, 13, 13, 15, 16,\n      18, 19, 19, 20, 21, 23, 26, 27, 30, 32, 35, 36, 37, 39, 39, 45, 51, 51,\n      57, 58, 58, 60, 60, 64, 64, 64, 64, 71, 73, 75, 77, 78, 80, 82, 85, 87,\n      93, 95, 98\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -99, -93, -77, -75, -74, -74, -73, -66, -65, -64, -57, -48, -29, -25,\n          -18, -9, 14, 18, 36, 42, 80, 84, 90\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -99, -94, -94, -94, -91, -91, -89, -78, -77, -65, -64, -58, -57, -49,\n          -46, -39, -28, -25, -19, -18, -18, -17, 16, 33, 35, 56, 68, 78, 82\n        ]\n      ]\n    ],\n    \"output\": [\n      -99, -99, -94, -94, -94, -93, -91, -91, -89, -78, -77, -77, -75, -74, -74,\n      -73, -66, -65, -65, -64, -64, -58, -57, -57, -49, -48, -46, -39, -29, -28,\n      -25, -25, -19, -18, -18, -18, -17, -9, 14, 16, 18, 33, 35, 36, 42, 56, 68,\n      78, 80, 82, 84, 90\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -80, -79, -78, -77, -75, -70, -65, -64, -63, -51, -51, -47, -45, -37,\n          -35, -33, -29, -11, -9, -8, -8, -2, -1, 5, 6, 9, 14, 17, 20, 30, 30,\n          45, 47, 70, 70, 72, 73, 74, 81, 82, 83, 83, 84, 88, 97\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -97, -86, -78, -72, -69, -53, -44, -37, -36, -31, -28, -23, -16, -9,\n          -7, -2, 1, 18, 28, 34, 41, 42, 49, 50, 61, 62, 80, 81, 82, 86, 93, 94,\n          95, 96, 96, 98\n        ]\n      ]\n    ],\n    \"output\": [\n      -97, -86, -80, -79, -78, -78, -77, -75, -72, -70, -69, -65, -64, -63, -53,\n      -51, -51, -47, -45, -44, -37, -37, -36, -35, -33, -31, -29, -28, -23, -16,\n      -11, -9, -9, -8, -8, -7, -2, -2, -1, 1, 5, 6, 9, 14, 17, 18, 20, 28, 30,\n      30, 34, 41, 42, 45, 47, 49, 50, 61, 62, 70, 70, 72, 73, 74, 80, 81, 81,\n      82, 82, 83, 83, 84, 86, 88, 93, 94, 95, 96, 96, 97, 98\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", []],\n      [\n        \"listB\",\n        [\n          -99, -96, -61, -57, -55, -48, -35, -27, -26, -1, 6, 14, 19, 26, 45,\n          49, 55, 62, 63, 67, 78, 79, 83, 88, 91, 91, 93\n        ]\n      ]\n    ],\n    \"output\": [\n      -99, -96, -61, -57, -55, -48, -35, -27, -26, -1, 6, 14, 19, 26, 45, 49,\n      55, 62, 63, 67, 78, 79, 83, 88, 91, 91, 93\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -78, -59, -58, -55, -54, -42, -34, -27, -26, -14, -13, 2, 6, 14, 17,\n          18, 28, 29, 35, 40, 50, 53, 61, 65, 65, 65, 70, 74, 75, 76, 80, 82,\n          84, 86, 89, 90\n        ]\n      ],\n      [\"listB\", [-89, -52, -47, -28, -19, 32, 61, 61, 66]]\n    ],\n    \"output\": [\n      -89, -78, -59, -58, -55, -54, -52, -47, -42, -34, -28, -27, -26, -19, -14,\n      -13, 2, 6, 14, 17, 18, 28, 29, 32, 35, 40, 50, 53, 61, 61, 61, 65, 65, 65,\n      66, 70, 74, 75, 76, 80, 82, 84, 86, 89, 90\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", []],\n      [\n        \"listB\",\n        [\n          -97, -88, -65, -62, -47, -46, -42, -42, -40, -39, -29, -27, -22, -20,\n          -19, -18, -11, -6, -6, 5, 7, 15, 17, 17, 18, 29, 29, 31, 32, 34, 36,\n          39, 43, 48, 52, 52, 53, 54, 73, 77, 77, 85, 85, 91\n        ]\n      ]\n    ],\n    \"output\": [\n      -97, -88, -65, -62, -47, -46, -42, -42, -40, -39, -29, -27, -22, -20, -19,\n      -18, -11, -6, -6, 5, 7, 15, 17, 17, 18, 29, 29, 31, 32, 34, 36, 39, 43,\n      48, 52, 52, 53, 54, 73, 77, 77, 85, 85, 91\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-63]],\n      [\n        \"listB\",\n        [\n          -99, -81, -77, -76, -69, -67, -59, -57, -56, -46, -41, -39, -20, -18,\n          -18, -14, -12, -7, -5, -2, 1, 2, 2, 19, 20, 24, 28, 35, 50, 50, 53,\n          53, 55, 63, 66, 70, 73, 73, 79, 80, 96\n        ]\n      ]\n    ],\n    \"output\": [\n      -99, -81, -77, -76, -69, -67, -63, -59, -57, -56, -46, -41, -39, -20, -18,\n      -18, -14, -12, -7, -5, -2, 1, 2, 2, 19, 20, 24, 28, 35, 50, 50, 53, 53,\n      55, 63, 66, 70, 73, 73, 79, 80, 96\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-90, -57, -19, -18, 5, 15, 24, 24, 58, 63, 64]],\n      [\n        \"listB\",\n        [\n          -87, -81, -79, -78, -70, -60, -57, -54, -52, -51, -47, -42, -32, -29,\n          -25, -9, 14, 21, 33, 43, 47, 52, 53, 57, 71, 84, 92, 100\n        ]\n      ]\n    ],\n    \"output\": [\n      -90, -87, -81, -79, -78, -70, -60, -57, -57, -54, -52, -51, -47, -42, -32,\n      -29, -25, -19, -18, -9, 5, 14, 15, 21, 24, 24, 33, 43, 47, 52, 53, 57, 58,\n      63, 64, 71, 84, 92, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-95, -52, -43, -31, -12, -4, -1, 15, 19, 22, 35, 66]],\n      [\n        \"listB\",\n        [\n          -55, -44, -38, -32, -23, -21, -15, -14, 10, 13, 49, 62, 70, 80, 84,\n          85, 88, 90, 92, 93, 97, 98\n        ]\n      ]\n    ],\n    \"output\": [\n      -95, -55, -52, -44, -43, -38, -32, -31, -23, -21, -15, -14, -12, -4, -1,\n      10, 13, 15, 19, 22, 35, 49, 62, 66, 70, 80, 84, 85, 88, 90, 92, 93, 97, 98\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -98, -93, -93, -88, -83, -73, -63, -59, -57, -56, -53, -43, -37, -36,\n          -36, -32, -31, -19, -18, -15, -8, -1, 3, 4, 8, 13, 23, 26, 29, 38, 41,\n          41, 43, 44, 49, 58, 62, 65, 65, 68, 77, 85, 97, 100\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -99, -94, -94, -90, -83, -82, -78, -76, -76, -63, -59, -43, -43, -41,\n          -38, -36, -27, -25, -24, -22, -21, -13, -8, -8, 2, 3, 4, 5, 15, 19,\n          26, 26, 28, 30, 33, 34, 36, 39, 56, 61, 63, 68, 68, 79, 86, 88, 92\n        ]\n      ]\n    ],\n    \"output\": [\n      -99, -98, -94, -94, -93, -93, -90, -88, -83, -83, -82, -78, -76, -76, -73,\n      -63, -63, -59, -59, -57, -56, -53, -43, -43, -43, -41, -38, -37, -36, -36,\n      -36, -32, -31, -27, -25, -24, -22, -21, -19, -18, -15, -13, -8, -8, -8,\n      -1, 2, 3, 3, 4, 4, 5, 8, 13, 15, 19, 23, 26, 26, 26, 28, 29, 30, 33, 34,\n      36, 38, 39, 41, 41, 43, 44, 49, 56, 58, 61, 62, 63, 65, 65, 68, 68, 68,\n      77, 79, 85, 86, 88, 92, 97, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -95, -81, -81, -61, -44, -30, -19, -16, -16, -8, -2, 9, 12, 23, 38,\n          53, 65, 65, 74, 97\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -93, -91, -85, -84, -77, -75, -48, -44, -41, -32, -30, -21, -19, 2,\n          19, 24, 26, 32, 33, 43, 51, 65, 70\n        ]\n      ]\n    ],\n    \"output\": [\n      -95, -93, -91, -85, -84, -81, -81, -77, -75, -61, -48, -44, -44, -41, -32,\n      -30, -30, -21, -19, -19, -16, -16, -8, -2, 2, 9, 12, 19, 23, 24, 26, 32,\n      33, 38, 43, 51, 53, 65, 65, 65, 70, 74, 97\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -100, -94, -87, -84, -82, -80, -73, -68, -64, -53, -52, -45, -44, -34,\n          -34, -33, -32, -31, -31, -28, -28, -7, -7, -7, 1, 11, 20, 26, 32, 35,\n          37, 38, 53, 53, 57, 58, 61, 62, 63, 69, 73, 76, 76, 77, 80, 82, 90,\n          90, 97, 100\n        ]\n      ],\n      [\"listB\", []]\n    ],\n    \"output\": [\n      -100, -94, -87, -84, -82, -80, -73, -68, -64, -53, -52, -45, -44, -34,\n      -34, -33, -32, -31, -31, -28, -28, -7, -7, -7, 1, 11, 20, 26, 32, 35, 37,\n      38, 53, 53, 57, 58, 61, 62, 63, 69, 73, 76, 76, 77, 80, 82, 90, 90, 97,\n      100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -92, -91, -84, -80, -77, -74, -71, -62, -54, -53, -42, -39, -37, -32,\n          -26, -11, 1, 2, 6, 14, 14, 15, 20, 26, 27, 39, 42, 43, 44, 45, 49, 51,\n          53, 60, 62, 65, 67, 67, 67, 68, 78, 81, 81, 87, 88, 92, 94, 94\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -99, -98, -94, -91, -88, -86, -85, -80, -76, -75, -62, -62, -58, -52,\n          -50, -46, -46, -45, -45, -40, -38, -36, -33, -28, -25, -12, -9, -8, 0,\n          8, 9, 10, 11, 15, 24, 24, 29, 29, 36, 38, 47, 54, 54, 62, 69, 74, 75,\n          76, 78, 96\n        ]\n      ]\n    ],\n    \"output\": [\n      -99, -98, -94, -92, -91, -91, -88, -86, -85, -84, -80, -80, -77, -76, -75,\n      -74, -71, -62, -62, -62, -58, -54, -53, -52, -50, -46, -46, -45, -45, -42,\n      -40, -39, -38, -37, -36, -33, -32, -28, -26, -25, -12, -11, -9, -8, 0, 1,\n      2, 6, 8, 9, 10, 11, 14, 14, 15, 15, 20, 24, 24, 26, 27, 29, 29, 36, 38,\n      39, 42, 43, 44, 45, 47, 49, 51, 53, 54, 54, 60, 62, 62, 65, 67, 67, 67,\n      68, 69, 74, 75, 76, 78, 78, 81, 81, 87, 88, 92, 94, 94, 96\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -94, -80, -79, -74, -53, -47, -37, -29, -26, -21, -17, -4, -2, 2, 23,\n          34, 49, 50, 54, 56, 58, 66, 72, 85, 87, 87, 92, 94, 100\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -100, -87, -79, -76, -70, -33, -27, -17, -14, -12, -2, 10, 13, 17, 27,\n          38, 40, 42, 42, 50, 73, 75, 92, 93, 99, 100\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -94, -87, -80, -79, -79, -76, -74, -70, -53, -47, -37, -33, -29,\n      -27, -26, -21, -17, -17, -14, -12, -4, -2, -2, 2, 10, 13, 17, 23, 27, 34,\n      38, 40, 42, 42, 49, 50, 50, 54, 56, 58, 66, 72, 73, 75, 85, 87, 87, 92,\n      92, 93, 94, 99, 100, 100\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -79, -67, -65, -56, -56, -52, -44, -39, -27, -23, -22, 10, 11, 13, 20,\n          24, 25, 28, 32, 54, 62, 65, 71, 82, 87\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -91, -68, -66, -55, -45, -44, -43, -37, -26, -24, -23, -23, -19, -12,\n          -1, 12, 19, 22, 24, 37, 57, 60, 70, 71, 76\n        ]\n      ]\n    ],\n    \"output\": [\n      -91, -79, -68, -67, -66, -65, -56, -56, -55, -52, -45, -44, -44, -43, -39,\n      -37, -27, -26, -24, -23, -23, -23, -22, -19, -12, -1, 10, 11, 12, 13, 19,\n      20, 22, 24, 24, 25, 28, 32, 37, 54, 57, 60, 62, 65, 70, 71, 71, 76, 82, 87\n    ]\n  },\n  {\n    \"input\": [\n      [\n        \"listA\",\n        [\n          -100, -96, -81, -80, -78, -70, -57, -57, -54, -49, -41, -40, -36, -26,\n          -21, -3, 8, 12, 13, 29, 42, 51, 57, 58, 70, 76, 77, 85, 86, 90, 95,\n          95, 97, 99\n        ]\n      ],\n      [\n        \"listB\",\n        [\n          -93, -92, -89, -82, -71, -59, -52, -42, -39, -16, 10, 16, 16, 19, 20,\n          25, 47, 52, 53, 56, 76\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -96, -93, -92, -89, -82, -81, -80, -78, -71, -70, -59, -57, -57,\n      -54, -52, -49, -42, -41, -40, -39, -36, -26, -21, -16, -3, 8, 10, 12, 13,\n      16, 16, 19, 20, 25, 29, 42, 47, 51, 52, 53, 56, 57, 58, 70, 76, 76, 77,\n      85, 86, 90, 95, 95, 97, 99\n    ]\n  },\n  {\n    \"input\": [\n      [\"listA\", [-58, -50, -18, -13, 4, 8, 47, 54, 69, 73, 84]],\n      [\n        \"listB\",\n        [\n          -100, -97, -95, -91, -89, -64, -56, -55, -50, -47, -37, -30, -26, -13,\n          -8, 0, 5, 8, 10, 14, 20, 31, 39, 42, 48, 49, 49, 51, 57, 59, 59, 72,\n          72, 75, 81, 85, 88, 89, 92, 97\n        ]\n      ]\n    ],\n    \"output\": [\n      -100, -97, -95, -91, -89, -64, -58, -56, -55, -50, -50, -47, -37, -30,\n      -26, -18, -13, -13, -8, 0, 4, 5, 8, 8, 10, 14, 20, 31, 39, 42, 47, 48, 49,\n      49, 51, 54, 57, 59, 59, 69, 72, 72, 73, 75, 81, 84, 85, 88, 89, 92, 97\n    ]\n  }\n]\n"
  },
  "metadata": {
    "access": "standard",
    "author": "hiten",
    "companies": [],
    "created": 1722038400,
    "difficulty": "easy",
    "duration": 35,
    "excerpt": "Implement a function to combine two sorted linked list",
    "featured": false,
    "format": "algo",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/algo/linked-list-combine-two-sorted",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "linked-list-combine-two-sorted",
    "subtitle": null,
    "title": "Linked Lists Combine Two Sorted",
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {ListNode | null} listA\n * @param {ListNode | null} listB\n * @return {ListNode | null}\n */\nexport default function linkedListCombineTwoSorted(listA, listB) {\n  throw 'Not implemented!';\n}",
    "ts": "interface ListNode {\n  val: number;\n  next: ListNode | null;\n}\n\nexport default function linkedListCombineTwoSorted(\n  listA: ListNode | null,\n  listB: ListNode | null,\n): ListNode | null {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var x=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames;var B=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var b=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),p=(e,t)=>{for(var l in t)s(e,l,{get:t[l],enumerable:!0})},r=(e,t,l,d)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let n of A(t))!v.call(e,n)&&n!==l&&s(e,n,{get:()=>t[n],enumerable:!(d=f(t,n))||d.enumerable});return e};var L=(e,t,l)=>(l=e!=null?x(B(e)):{},r(t||!e||!e.__esModule?s(l,\"default\",{value:e,enumerable:!0}):l,e)),N=e=>r(s({},\"__esModule\",{value:!0}),e);var u=b((g,a)=>{a.exports=_jsx_runtime});var w={};p(w,{default:()=>j});var i=L(u());var o=MDXCodeBlock;var m=`interface ListNode {\n  val: number;\n  next: ListNode | null;\n}\n\nexport default function linkedListCombineTwoSorted(\n  listA: ListNode | null,\n  listB: ListNode | null,\n): ListNode | null {\n  // Dummy node to act as the previous node to the head of the combined list\n  let dummy: ListNode = { val: -1, next: null };\n\n  // Pointer to the last node in the combined list, initially set to dummy\n  let prev: ListNode = dummy;\n\n  // Iterate while both listA and listB are not null\n  while (listA !== null && listB !== null) {\n    // Compare the values of listA and listB nodes\n    if (listA.val <= listB.val) {\n      // If listA node is smaller or equal, add it to the combined list\n      prev.next = listA;\n      listA = listA.next; // Move to the next node in listA\n    } else {\n      // If listB node is smaller, add it to the combined list\n      prev.next = listB;\n      listB = listB.next; // Move to the next node in listB\n    }\n    // Move prev to the next node in the combined list\n    prev = prev.next!;\n  }\n\n  // At least one of listA and listB can still have nodes, add the remaining nodes to the combined list\n  if (listA !== null) {\n    prev.next = listA;\n  } else {\n    prev.next = listB;\n  }\n\n  // The combined list is next to the dummy node\n  return dummy.next;\n}\n`;var c=`interface ListNode {\n  val: number;\n  next: ListNode | null;\n}\n\nexport default function linkedListCombineTwoSorted(\n  listA: ListNode | null,\n  listB: ListNode | null,\n): ListNode | null {\n  // If listA is null, return listB because the combined list is just listB\n  if (listA === null) {\n    return listB;\n  }\n\n  // If listB is null, return listA because the combined list is just listA\n  if (listB === null) {\n    return listA;\n  }\n\n  // If listA's value is less than listB's value\n  if (listA.val < listB.val) {\n    // Recursively combine listA.next and listB, and set the next of listA to the combined list\n    listA.next = linkedListCombineTwoSorted(listA.next, listB);\n    // Return listA as the head of the combined list\n    return listA;\n  }\n\n  // If listB's value is less than or equal to listA's value\n  // Recursively combine listA and listB.next, and set the next of listB to the combined list\n  listB.next = linkedListCombineTwoSorted(listA, listB.next);\n\n  // Return listB as the head of the combined list\n  return listB;\n}\n`;function h(e){let t=Object.assign({h2:\"h2\",p:\"p\"},e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{children:\"1. Using Iterative Method\"}),`\n`,(0,i.jsx)(t.p,{children:\"Time complexity: O(N + M)\"}),`\n`,(0,i.jsx)(o,{children:m}),`\n`,(0,i.jsx)(t.h2,{children:\"2. Using Recursive Method\"}),`\n`,(0,i.jsx)(t.p,{children:\"Time complexity: O(N + M)\"}),`\n`,(0,i.jsx)(o,{children:c})]})}function C(e={}){let{wrapper:t}=e.components||{};return t?(0,i.jsx)(t,Object.assign({},e,{children:(0,i.jsx)(h,e)})):h(e)}var j=C;return N(w);})();\n;return Component;",
  "workspace": {
    "main": "/src/linked-list-combine-two-sorted.ts",
    "run": "/src/linked-list-combine-two-sorted.run.test.ts",
    "submit": "/src/linked-list-combine-two-sorted.submit.test.ts"
  }
}