[
  {
    "info": {
      "excerpt": "构建一个手风琴组件，该组件显示一个垂直堆叠的部分列表，每个部分包含一个标题和内容片段",
      "title": "Accordion"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "amazon"
      ],
      "created": 1671580800,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/accordion/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/accordion/vanilla"
        }
      ],
      "href": "/questions/user-interface/accordion",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [
        "accordion-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "accordion",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个具有正确 ARIA 角色、状态和属性的可访问手风琴组件",
      "title": "Accordion II"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "amazon"
      ],
      "created": 1671580800,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/accordion-ii/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/accordion-ii/vanilla"
        }
      ],
      "href": "/questions/user-interface/accordion-ii",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [
        "accordion-iii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "accordion-ii",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个完全可访问的手风琴组件，该组件根据 ARIA 规范具有键盘支持",
      "title": "Accordion III"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "amazon"
      ],
      "created": 1671580800,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/accordion-iii/react"
        }
      ],
      "href": "/questions/user-interface/accordion-iii",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "accordion-iii",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现 Array.prototype.at() 方法",
      "title": "Array.prototype.at"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1658102400,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/array-at",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "array-at",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现 Array.prototype.concat() 方法",
      "title": "Array.prototype.concat"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "apple"
      ],
      "created": 1699574400,
      "difficulty": "medium",
      "duration": 15,
      "featured": true,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/array-concat",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "array-filter",
        "array-map",
        "array-reduce"
      ],
      "slug": "array-concat",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现 Array.prototype.filter() 方法",
      "title": "Array.prototype.filter"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "amazon",
        "apple"
      ],
      "created": 1656201600,
      "difficulty": "easy",
      "duration": 15,
      "featured": true,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/array-filter",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "array-map",
        "array-reduce"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "array-square",
        "array-map",
        "array-reduce"
      ],
      "slug": "array-filter",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现 Array.prototype.map() 方法",
      "title": "Array.prototype.map"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "amazon",
        "apple",
        "bytedance"
      ],
      "created": 1652918400,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/array-map",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "contact-form",
        "curry",
        "deep-map",
        "object-map"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "array-square",
        "array-filter",
        "array-reduce"
      ],
      "slug": "array-map",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现 Array.prototype.reduce() 方法",
      "title": "Array.prototype.reduce"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [
        "adobe",
        "amazon",
        "apple",
        "sprinklr",
        "bytedance"
      ],
      "created": 1652659200,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/array-reduce",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "array-filter",
        "array-map"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "array-square",
        "array-map",
        "array-filter"
      ],
      "slug": "array-reduce",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个自定义的 Array.prototype.square() 方法，该方法将数组中的值平方。",
      "title": "Array.prototype.square"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "bytedance",
        "linkedin",
        "bytedance"
      ],
      "created": 1652832000,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/array-square",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "array-filter",
        "array-map",
        "array-reduce"
      ],
      "slug": "array-square",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "构建一个身份验证码输入组件，允许用户输入 6 位授权码",
      "title": "Auth Code Input"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1723766400,
      "difficulty": "hard",
      "duration": 25,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/auth-code-input/react"
        }
      ],
      "href": "/questions/user-interface/auth-code-input",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "auth-code-input",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个类似于 Backbone.Model 的类，该类允许存储属性/值并响应特定属性值的更改",
      "title": "Backbone Model"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "airbnb"
      ],
      "created": 1699660800,
      "difficulty": "hard",
      "duration": 30,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/backbone-model",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "event-emitter",
        "event-emitter-ii"
      ],
      "slug": "backbone-model",
      "subtitle": null,
      "topics": [
        "oop"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，将一个数字限制在包含下限和上限的范围内",
      "title": "Clamp"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1683331200,
      "difficulty": "easy",
      "duration": 5,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/clamp",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "in-range"
      ],
      "slug": "clamp",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个有条件地将 CSS 类名连接在一起的函数",
      "title": "Classnames"
    },
    "metadata": {
      "access": "free",
      "author": null,
      "companies": [],
      "created": 1651449600,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/classnames",
      "importance": "medium",
      "languages": [
        "css",
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "classnames",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个有条件地将 CSS 类名连接在一起的函数，并处理去重和函数值",
      "title": "Classnames II"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1701302400,
      "difficulty": "hard",
      "duration": 25,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/classnames-ii",
      "importance": "medium",
      "languages": [
        "css",
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "classnames"
      ],
      "slug": "classnames-ii",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数创建一个数组，其中移除了所有假值",
      "title": "Compact"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1682553600,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/compact",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "get",
        "chunk"
      ],
      "slug": "compact",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数返回一个对象，其中删除了所有假值",
      "title": "Compact II"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1690761600,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/compact-ii",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "compact"
      ],
      "slug": "compact-ii",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数将多个函数作为参数，并返回一个新函数，该函数以相反的顺序应用这些函数",
      "title": "Compose"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1689552000,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/compose",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "middlewares"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "compose",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个带有取消方法以取消延迟调用和立即调用它们的 flush 方法的 debounce 函数",
      "title": "Debounce II"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "flipkart",
        "google",
        "lyft",
        "walmart",
        "yelp",
        "microsoft",
        "linkedin"
      ],
      "created": 1670630400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/debounce-ii",
      "importance": "high",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "throttle"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "debounce",
        "throttle"
      ],
      "slug": "debounce-ii",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现 Dijkstra 算法，以找到图中从源顶点开始的最短路径，该图表示为邻接表。",
      "title": "Dijkstra 算法"
    },
    "metadata": {
      "access": "free",
      "author": null,
      "companies": [],
      "created": 1745539200,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/dijkstra",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "depth-first-search"
      ],
      "slug": "dijkstra",
      "subtitle": null,
      "topics": [
        "dfs",
        "graph"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数从数组末尾排除元素，直到谓词返回 false",
      "title": "Drop Right While"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1682553600,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/drop-right-while",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "drop-while"
      ],
      "slug": "drop-right-while",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数从数组的开头排除元素，直到谓词返回 false",
      "title": "Drop While"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1682553600,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/drop-while",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "drop-right-while"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "drop-while",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现 Function.prototype.apply() 函数，该函数使用给定的 `this` 值和作为数组的参数调用该函数",
      "title": "Function.prototype.apply"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1690329600,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/function-apply",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "function-bind",
        "function-call"
      ],
      "slug": "function-apply",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现 Function.prototype.bind() 函数，该函数创建一个新函数，并将 `this` 关键字设置为提供的值",
      "title": "Function.prototype.bind"
    },
    "metadata": {
      "access": "premium",
      "author": "zhenghao",
      "companies": [
        "amazon",
        "rippling",
        "atlassian",
        "tiktok",
        "bytedance"
      ],
      "created": 1656201600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/function-bind",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "curry"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "function-call",
        "function-apply"
      ],
      "slug": "function-bind",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现 Function.prototype.call() 函数，该函数使用给定的 `this` 值和提供的参数调用该函数",
      "title": "Function.prototype.call"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [],
      "created": 1690329600,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/function-call",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "function-bind",
        "function-apply"
      ],
      "slug": "function-call",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，获取包含指定类的所有 DOM 元素",
      "title": "getElementsByClassName"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "dropbox",
        "google",
        "linkedin",
        "amazon"
      ],
      "created": 1655337600,
      "difficulty": "medium",
      "duration": 25,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/get-elements-by-class-name",
      "importance": "medium",
      "languages": [
        "html",
        "css",
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "get-elements-by-tag-name",
        "get-elements-by-style"
      ],
      "slug": "get-elements-by-class-name",
      "subtitle": null,
      "topics": [
        "web-api"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，以获取使用指定样式呈现的所有 DOM 元素",
      "title": "getElementsByStyle"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "amazon"
      ],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/get-elements-by-style",
      "importance": "medium",
      "languages": [
        "html",
        "css",
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "get-elements-by-tag-name",
        "get-elements-by-class-name"
      ],
      "slug": "get-elements-by-style",
      "subtitle": null,
      "topics": [
        "web-api"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，获取所有匹配标签的 DOM 元素",
      "title": "getElementsByTagName"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "google",
        "dropbox"
      ],
      "created": 1655251200,
      "difficulty": "medium",
      "duration": 20,
      "featured": true,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/get-elements-by-tag-name",
      "importance": "low",
      "languages": [
        "html",
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "get-elements-by-class-name",
        "get-elements-by-style"
      ],
      "slug": "get-elements-by-tag-name",
      "subtitle": null,
      "topics": [
        "web-api"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，获取所有匹配标签层级的 DOM 元素",
      "title": "getElementsByTagNameHierarchy"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "dropbox"
      ],
      "created": 1723766400,
      "difficulty": "hard",
      "duration": 30,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/get-elements-by-tag-name-hierarchy",
      "importance": "low",
      "languages": [
        "html",
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "get-elements-by-class-name",
        "get-elements-by-style",
        "get-elements-by-tag-name"
      ],
      "slug": "get-elements-by-tag-name-hierarchy",
      "subtitle": null,
      "topics": [
        "web-api"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个将对象序列化为带有缩进的 HTML 字符串的函数",
      "title": "HTML 序列化器"
    },
    "metadata": {
      "access": "standard",
      "author": "zhenghao",
      "companies": [
        "tiktok"
      ],
      "created": 1654992000,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/html-serializer",
      "importance": "low",
      "languages": [
        "html",
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "json-stringify"
      ],
      "slug": "html-serializer",
      "subtitle": null,
      "topics": [
        "recursion"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数根据提供的迭代函数返回一个包含所有给定数组中包含的唯一值的数组。",
      "title": "Intersection By"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1687651200,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/intersection-by",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "intersection",
        "intersection-with"
      ],
      "slug": "intersection-by",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一组类似 jQuery 的函数，用于操作 DOM 元素的类",
      "title": "jQuery 类操作"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [],
      "created": 1655510400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/jquery-class-manipulation",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "jquery-css"
      ],
      "slug": "jquery-class-manipulation",
      "subtitle": null,
      "topics": [
        "oop",
        "web-api"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个类似 jQuery 的函数，用于设置 DOM 元素的样式",
      "title": "jQuery.css"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "linkedin"
      ],
      "created": 1654992000,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/jquery-css",
      "importance": "medium",
      "languages": [
        "html",
        "css",
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "jquery-class-manipulation"
      ],
      "slug": "jquery-css",
      "subtitle": null,
      "topics": [
        "oop",
        "web-api"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个将 JavaScript 值转换为 JSON 字符串的函数",
      "title": "JSON.stringify"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [
        "snap",
        "amazon",
        "google"
      ],
      "created": 1653177600,
      "difficulty": "medium",
      "duration": 20,
      "featured": true,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/json-stringify",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "json-stringify-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "html-serializer"
      ],
      "slug": "json-stringify",
      "subtitle": null,
      "topics": [
        "recursion"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个将 JavaScript 值转换为 JSON 字符串的函数",
      "title": "JSON.stringify II"
    },
    "metadata": {
      "access": "premium",
      "author": "zhenghao",
      "companies": [
        "snap",
        "amazon",
        "google"
      ],
      "created": 1653177600,
      "difficulty": "hard",
      "duration": 45,
      "featured": true,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/json-stringify-ii",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "html-serializer"
      ],
      "slug": "json-stringify-ii",
      "subtitle": null,
      "topics": [
        "recursion"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数使用异步映射函数映射一个项目数组",
      "title": "Map Async"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "google",
        "lyft",
        "uber",
        "apple",
        "tiktok",
        "bytedance"
      ],
      "created": 1699401600,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/map-async",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "map-async-limit"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "promise-all"
      ],
      "slug": "map-async",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数使用异步映射函数映射一个项目数组，同时不超过并发限制",
      "title": "Map Async Limit"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [
        "google",
        "lyft",
        "uber",
        "apple",
        "tiktok",
        "bytedance"
      ],
      "created": 1699401600,
      "difficulty": "medium",
      "duration": 25,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/map-async-limit",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "middlewares"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "promise-all"
      ],
      "slug": "map-async-limit",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数返回一个函数的记忆化版本，该函数接受单个参数",
      "title": "Memoize"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [
        "intuit",
        "linkedin",
        "atlassian",
        "uber"
      ],
      "created": 1690848000,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/memoize",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "memoize-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "memoize",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数返回一个函数的 memoized 版本，该函数接受任意数量的参数",
      "title": "Memoize II"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "linkedin"
      ],
      "created": 1690848000,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/memoize-ii",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "memoize-ii",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个基于指定条件的查找最小元素的函数",
      "title": "Min By"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [],
      "created": 1710720000,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/min-by",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "group-by",
        "max-by"
      ],
      "slug": "min-by",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个接受回调函数并将其调用限制为最多一次的函数",
      "title": "Once"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "amazon"
      ],
      "created": 1670803200,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/once",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "limit"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "once",
      "subtitle": null,
      "topics": [
        "closure"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，用于查找整数数组中两个相加等于目标整数的数字",
      "title": "Pair sum"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718236800,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/pair-sum",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "pair-sum",
      "subtitle": null,
      "topics": [
        "array"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，将两个 Promise 的结果合并成一个单一的值",
      "title": "Promise 合并"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1683331200,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/promise-merge",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "promise-all"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "promise-all",
        "promise-all-settled"
      ],
      "slug": "promise-merge",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，如果 promise 在超时期限内被 fulfilled，则解析该 promise，否则拒绝。",
      "title": "Promise 超时"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1689552000,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/promise-timeout",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "promise-timeout",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现 Promise.all() 函数，如果所有输入元素都已解决，则解析为结果数组，否则拒绝。",
      "title": "Promise.all"
    },
    "metadata": {
      "access": "free",
      "author": "yangshun",
      "companies": [
        "amazon",
        "bytedance",
        "google",
        "lyft",
        "tiktok",
        "microsoft",
        "qualcomm"
      ],
      "created": 1655337600,
      "difficulty": "medium",
      "duration": 20,
      "featured": true,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/promise-all",
      "importance": "high",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "flatten",
        "promise-any",
        "todo-list"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "promise-all-settled",
        "promise-any",
        "promise-race"
      ],
      "slug": "promise-all",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现 Promise.allSettled() 函数，当所有输入元素都已解决或已拒绝时，该函数将解析为一个结果数组。",
      "title": "Promise.allSettled"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [],
      "created": 1655337600,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/promise-all-settled",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "promise-all",
        "promise-any",
        "promise-race"
      ],
      "slug": "promise-all-settled",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现 Promise.any() 函数，当任何一个输入元素被解决时，它就会被解决",
      "title": "Promise.any"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [],
      "created": 1655596800,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/promise-any",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "promise-all",
        "promise-all-settled",
        "promise-race"
      ],
      "slug": "promise-any",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现 Promise.race() 函数，当任何一个输入元素被解决或拒绝时，它就会被解决或拒绝。",
      "title": "Promise.race"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "google"
      ],
      "created": 1655596800,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/promise-race",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "promise-all",
        "promise-all-settled",
        "promise-any"
      ],
      "slug": "promise-race",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，返回一个被拒绝的 Promise 对象，并附带一个原因",
      "title": "Promise.reject"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "google",
        "bytedance"
      ],
      "created": 1690329600,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/promise-reject",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "promise-with-resolvers"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "promise-resolve",
        "promise-timeout"
      ],
      "slug": "promise-reject",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，将给定值解析为 Promise",
      "title": "Promise.resolve"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "google",
        "bytedance"
      ],
      "created": 1690329600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/promise-resolve",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "promise-with-resolvers"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "promise-reject",
        "promise-timeout"
      ],
      "slug": "promise-resolve",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数返回一个包含新的 `Promise` 对象和两个用于解决或拒绝它的函数的对象",
      "title": "Promise.withResolvers"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/promise-with-resolvers",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "promise-resolve",
        "promise-reject"
      ],
      "slug": "promise-with-resolvers",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数接受一个遵循常见错误优先回调风格的函数，并返回一个返回 Promise 的版本",
      "title": "Promisify"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [
        "amazon",
        "microsoft"
      ],
      "created": 1690070400,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/promisify",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "promisify-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "promisify",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个 promisify 函数，允许原始函数覆盖返回值",
      "title": "Promisify II"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "amazon"
      ],
      "created": 1690070400,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/promisify-ii",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "promisify-ii",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个按降序返回数字序列的函数",
      "title": "Range Right"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1710633600,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/range-right",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "range"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "in-range",
        "range"
      ],
      "slug": "range-right",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个在恢复执行之前暂停指定时长的函数",
      "title": "Sleep"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1683331200,
      "difficulty": "easy",
      "duration": 5,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/sleep",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "sleep",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，在将输入对象压扁成单层深度后，返回一个新对象",
      "title": "Squash Object"
    },
    "metadata": {
      "access": "standard",
      "author": "zhenghao",
      "companies": [],
      "created": 1654992000,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/squash-object",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "flatten",
        "get"
      ],
      "slug": "squash-object",
      "subtitle": null,
      "topics": [
        "recursion"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个选项卡组件，该组件一次显示一个选项卡元素列表和一个关联的内容面板",
      "title": "Tabs"
    },
    "metadata": {
      "access": "free",
      "author": "yangshun",
      "companies": [
        "airbnb",
        "amazon",
        "openai"
      ],
      "created": 1670976000,
      "difficulty": "medium",
      "duration": 15,
      "featured": true,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/tabs/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/tabs/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/tabs/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/tabs/vue"
        }
      ],
      "href": "/questions/user-interface/tabs",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [
        "tabs-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "tabs",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个半可访问的标签组件，该组件具有正确的 ARIA 角色、状态和属性",
      "title": "Tabs II"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "airbnb",
        "amazon"
      ],
      "created": 1670976000,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/tabs-ii/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/tabs-ii/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/tabs-ii/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/tabs-ii/vue"
        }
      ],
      "href": "/questions/user-interface/tabs-ii",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [
        "tabs-iii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "tabs-ii",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个完全可访问的选项卡组件，该组件根据 ARIA 规范具有键盘支持",
      "title": "Tabs III"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "airbnb",
        "amazon"
      ],
      "created": 1671062400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/tabs-iii/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/tabs-iii/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/tabs-iii/vue"
        }
      ],
      "href": "/questions/user-interface/tabs-iii",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "tabs-iii",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个组件，允许在两个列表之间转移项目，批量选择/取消选择项目，以及添加新项目",
      "title": "Transfer List II"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "tiktok"
      ],
      "created": 1683158400,
      "difficulty": "hard",
      "duration": 40,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/transfer-list-ii/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/transfer-list-ii/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/transfer-list-ii/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/transfer-list-ii/svelte"
        }
      ],
      "href": "/questions/user-interface/transfer-list-ii",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "todo-list",
        "transfer-list"
      ],
      "slug": "transfer-list-ii",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个具有插入、搜索和以...开头功能的 trie 前缀树",
      "title": "Trie（前缀树）"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1724976000,
      "difficulty": "medium",
      "duration": 40,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/trie-prefix-tree",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "trie-prefix-tree",
      "subtitle": null,
      "topics": [
        "tree",
        "trie"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个类似于Twitter的Tweet组件",
      "title": "Tweet"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [],
      "created": 1658188800,
      "difficulty": "easy",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/tweet/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/tweet/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/tweet/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/tweet/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/tweet/svelte"
        }
      ],
      "href": "/questions/user-interface/tweet",
      "importance": "medium",
      "languages": [
        "html",
        "css"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "holy-grail"
      ],
      "slug": "tweet",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数从所有给定数组中创建一个按顺序排列的唯一值数组。",
      "title": "Union By"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1711929600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/union-by",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "unique-array",
        "union"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "union-by",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个管理项目数组的 Hook",
      "title": "useArray"
    },
    "metadata": {
      "access": "free",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-array"
        }
      ],
      "href": "/questions/javascript/use-array",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-map",
        "use-set",
        "use-object"
      ],
      "slug": "use-array",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个管理布尔状态的 Hook，并提供额外的便捷实用方法",
      "title": "useBoolean"
    },
    "metadata": {
      "access": "standard",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "easy",
      "duration": 10,
      "featured": true,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-boolean"
        }
      ],
      "href": "/questions/javascript/use-boolean",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "use-boolean-ii",
        "use-cycle",
        "use-toggle"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-counter"
      ],
      "slug": "use-boolean",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现 useBoolean hook 的优化版本",
      "title": "useBoolean II"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-boolean-ii"
        }
      ],
      "href": "/questions/javascript/use-boolean-ii",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-cycle",
        "use-toggle"
      ],
      "slug": "use-boolean-ii",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个基于当前窗口宽度返回当前断点名称的 Hook",
      "title": "useBreakpoint"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-breakpoint"
        }
      ],
      "href": "/questions/javascript/use-breakpoint",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-media-query",
        "use-window-size"
      ],
      "slug": "use-breakpoint",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个处理文档任何位置的点击事件的 Hook",
      "title": "useClickAnywhere"
    },
    "metadata": {
      "access": "standard",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-click-anywhere"
        }
      ],
      "href": "/questions/javascript/use-click-anywhere",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "use-click-outside"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "use-click-anywhere",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个检测指定元素外部点击的 Hook",
      "title": "useClickOutside"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-click-outside"
        }
      ],
      "href": "/questions/javascript/use-click-outside",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-click-anywhere"
      ],
      "slug": "use-click-outside",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个管理倒计时的 Hook",
      "title": "useCountdown"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-countdown"
        }
      ],
      "href": "/questions/javascript/use-countdown",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-interval",
        "use-timeout"
      ],
      "slug": "use-countdown",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个管理计数器状态的 Hook，并提供一些额外的便捷实用方法",
      "title": "useCounter"
    },
    "metadata": {
      "access": "free",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "easy",
      "duration": 10,
      "featured": true,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-counter"
        }
      ],
      "href": "/questions/javascript/use-counter",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "use-counter-ii",
        "use-cycle",
        "use-array"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-boolean"
      ],
      "slug": "use-counter",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现 useCounter hook 的优化版本",
      "title": "useCounter II"
    },
    "metadata": {
      "access": "free",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-counter-ii"
        }
      ],
      "href": "/questions/javascript/use-counter-ii",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "use-counter-ii",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个循环遍历一系列值的 hook",
      "title": "useCycle"
    },
    "metadata": {
      "access": "standard",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-cycle"
        }
      ],
      "href": "/questions/javascript/use-cycle",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "use-cycle",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个对值进行防抖的 Hook",
      "title": "useDebounce"
    },
    "metadata": {
      "access": "standard",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-debounce"
        }
      ],
      "href": "/questions/javascript/use-debounce",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "use-throttle"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-throttle"
      ],
      "slug": "use-debounce",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个在状态为 null 或 undefined 时返回默认值的 hook",
      "title": "useDefault"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-default"
        }
      ],
      "href": "/questions/javascript/use-default",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "use-default",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个只运行一次 effect 的 hook",
      "title": "useEffectOnce"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-effect-once"
        }
      ],
      "href": "/questions/javascript/use-effect-once",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "use-effect-once",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个订阅浏览器事件的 Hook",
      "title": "useEventListener"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-event-listener"
        }
      ],
      "href": "/questions/javascript/use-event-listener",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "use-event-listener",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个可以对元素进行程序化聚焦的 Hook",
      "title": "useFocus"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-focus"
        }
      ],
      "href": "/questions/javascript/use-focus",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "use-focus",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个跟踪元素是否被悬停的 Hook",
      "title": "useHover"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-hover"
        }
      ],
      "href": "/questions/javascript/use-hover",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "use-hover",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个检测用户不活动状态的 Hook",
      "title": "useIdle"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-idle"
        }
      ],
      "href": "/questions/javascript/use-idle",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "use-idle",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个管理受控输入值并跟踪其脏和已触及状态的 hook",
      "title": "useInputControl"
    },
    "metadata": {
      "access": "free",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-input-control"
        }
      ],
      "href": "/questions/javascript/use-input-control",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "use-input-control",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个创建间隔的 hook，该间隔在指定的延迟后调用回调函数",
      "title": "useInterval"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-interval"
        }
      ],
      "href": "/questions/javascript/use-interval",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-countdown",
        "use-timeout"
      ],
      "slug": "use-interval",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个订阅键盘事件的 Hook",
      "title": "useKeyPress"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-key-press"
        }
      ],
      "href": "/questions/javascript/use-key-press",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-event-listener"
      ],
      "slug": "use-key-press",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个管理 JavaScript map 的 Hook",
      "title": "useMap"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-map"
        }
      ],
      "href": "/questions/javascript/use-map",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-array",
        "use-set",
        "use-object"
      ],
      "slug": "use-map",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个订阅并响应媒体查询变化的 Hook（例如屏幕大小、分辨率、方向等）",
      "title": "useMediaQuery"
    },
    "metadata": {
      "access": "free",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-media-query"
        }
      ],
      "href": "/questions/javascript/use-media-query",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-breakpoint",
        "use-window-size"
      ],
      "slug": "use-media-query",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个类似于 useState 的 hook，但支持一个中介过程",
      "title": "useMediatedState"
    },
    "metadata": {
      "access": "standard",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-mediated-state"
        }
      ],
      "href": "/questions/javascript/use-mediated-state",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-state-with-reset"
      ],
      "slug": "use-mediated-state",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个管理对象值的 Hook",
      "title": "useObject"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-object"
        }
      ],
      "href": "/questions/javascript/use-object",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-array",
        "use-set",
        "use-map"
      ],
      "slug": "use-object",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个返回状态前一个值的 Hook",
      "title": "usePrevious"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-previous"
        }
      ],
      "href": "/questions/javascript/use-previous",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "use-previous",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个管理 promise 结果的 hook",
      "title": "useQuery"
    },
    "metadata": {
      "access": "free",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-query"
        }
      ],
      "href": "/questions/javascript/use-query",
      "importance": "high",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "use-query",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个管理 JavaScript Set 的 Hook",
      "title": "useSet"
    },
    "metadata": {
      "access": "standard",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-set"
        }
      ],
      "href": "/questions/javascript/use-set",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-array",
        "use-map",
        "use-object"
      ],
      "slug": "use-set",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个类似于 useState 的 hook，但它有一个额外的 reset 函数，可以将状态重置为其初始值",
      "title": "useStateWithReset"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-state-with-reset"
        }
      ],
      "href": "/questions/javascript/use-state-with-reset",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-mediated-state"
      ],
      "slug": "use-state-with-reset",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个管理多步骤流程的步骤计数器的 hook",
      "title": "useStep"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-step"
        }
      ],
      "href": "/questions/javascript/use-step",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "use-step",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个节流值的 Hook",
      "title": "useThrottle"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-throttle"
        }
      ],
      "href": "/questions/javascript/use-throttle",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-debounce"
      ],
      "slug": "use-throttle",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个在指定延迟后调用回调函数的 Hook",
      "title": "useTimeout"
    },
    "metadata": {
      "access": "free",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-timeout"
        }
      ],
      "href": "/questions/javascript/use-timeout",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-countdown",
        "use-interval"
      ],
      "slug": "use-timeout",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个管理布尔切换状态的 Hook",
      "title": "useToggle"
    },
    "metadata": {
      "access": "premium",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-toggle"
        }
      ],
      "href": "/questions/javascript/use-toggle",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "use-cycle"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-cycle"
      ],
      "slug": "use-toggle",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个返回窗口当前高度和宽度的 Hook",
      "title": "useWindowSize"
    },
    "metadata": {
      "access": "free",
      "author": "phillmont",
      "companies": [],
      "created": 1742169600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/javascript/use-window-size"
        }
      ],
      "href": "/questions/javascript/use-window-size",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "use-media-query",
        "use-breakpoint"
      ],
      "slug": "use-window-size",
      "subtitle": null,
      "topics": [
        "react-hooks"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建Wordle，这款风靡全球的猜词游戏",
      "title": "Wordle"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1684022400,
      "difficulty": "hard",
      "duration": 60,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/wordle/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/wordle/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/wordle/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/wordle/svelte"
        }
      ],
      "href": "/questions/user-interface/wordle",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "wordle",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，找到所有和为 0 且索引不同的唯一三元组。",
      "title": "三元组之和"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718928000,
      "difficulty": "medium",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/triplet-sum",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "triplet-sum",
      "subtitle": null,
      "topics": [
        "array"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，以确定需要移除的最小数量，以获得不重叠的区间",
      "title": "不相交的区间"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722384000,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/disjoint-intervals",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "disjoint-intervals",
      "subtitle": null,
      "topics": [
        "intervals",
        "greedy"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个类似于 Koa.js 中间件函数的异步中间件函数组合。",
      "title": "中间件"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "bytedance",
        "tiktok"
      ],
      "created": 1743206400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/middlewares",
      "importance": "high",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "compose"
      ],
      "slug": "middlewares",
      "subtitle": null,
      "topics": [
        "recursion",
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个可以订阅和发出事件的类，这些事件会触发附加的回调函数",
      "title": "事件发射器"
    },
    "metadata": {
      "access": "free",
      "author": null,
      "companies": [
        "google",
        "lyft",
        "rippling",
        "tiktok",
        "bytedance",
        "microsoft"
      ],
      "created": 1669420800,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/event-emitter",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "event-emitter-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "event-emitter-ii",
        "jquery-class-manipulation"
      ],
      "slug": "event-emitter",
      "subtitle": null,
      "topics": [
        "oop"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个可以订阅和发出事件的类，这些事件会触发附加的回调函数。返回订阅对象，并且可以取消订阅。",
      "title": "事件发射器 II"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "google",
        "lyft",
        "tiktok",
        "bytedance",
        "microsoft"
      ],
      "created": 1669939200,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/event-emitter-ii",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "event-emitter",
        "jquery-class-manipulation",
        "backbone-model"
      ],
      "slug": "event-emitter-ii",
      "subtitle": null,
      "topics": [
        "oop"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个对数字数组执行二分查找的函数",
      "title": "二分查找"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [],
      "created": 1671667200,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-search",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "selection-sort",
        "quick-sort",
        "merge-sort",
        "depth-first-search",
        "breadth-first-search"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "binary-search",
      "subtitle": null,
      "topics": [
        "binary-search",
        "sorting"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个二叉搜索树数据结构，包括基本的 BST 操作",
      "title": "二叉搜索树"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [],
      "created": 1745539200,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-search-tree",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "heap",
        "binary-search"
      ],
      "slug": "binary-search-tree",
      "subtitle": null,
      "topics": [
        "binary-tree",
        "binary-search-tree",
        "tree"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，以找到二叉搜索树中的 LCA",
      "title": "二叉搜索树的最低公共祖先"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1724284800,
      "difficulty": "medium",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-search-tree-lowest-common-ancestor",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "binary-search-tree-lowest-common-ancestor",
      "subtitle": null,
      "topics": [
        "binary-tree",
        "binary-search-tree",
        "tree"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，用于查找 BST 中第 k 个最小的节点",
      "title": "二叉搜索树第 K 小的元素"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1724284800,
      "difficulty": "medium",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-search-tree-kth-smallest",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "binary-search-tree-kth-smallest",
      "subtitle": null,
      "topics": [
        "binary-tree",
        "binary-search-tree",
        "tree"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个二叉树数据结构，包括基本操作",
      "title": "二叉树"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [],
      "created": 1716422400,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-tree",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "binary-search-tree",
        "binary-search"
      ],
      "slug": "binary-tree",
      "subtitle": null,
      "topics": [
        "binary-tree",
        "tree"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，以找到二叉树路径中节点的最大总和",
      "title": "二叉树最大路径和"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1724112000,
      "difficulty": "hard",
      "duration": 40,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-tree-maximum-total-path",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "binary-tree-maximum-total-path",
      "subtitle": null,
      "topics": [
        "binary-tree",
        "tree",
        "dfs"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来检查一个二叉树是否是另一个二叉树的子树",
      "title": "二叉树子树"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1723852800,
      "difficulty": "easy",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-tree-subtree",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "binary-tree-subtree",
      "subtitle": null,
      "topics": [
        "binary-tree",
        "tree"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来查找二叉树的层序遍历",
      "title": "二叉树层序遍历"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1723161600,
      "difficulty": "medium",
      "duration": 25,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-tree-level-order-traversal",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "binary-tree-level-order-traversal",
      "subtitle": null,
      "topics": [
        "binary-tree",
        "tree"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个序列化和反序列化二叉树的函数",
      "title": "二叉树序列化和反序列化"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1724889600,
      "difficulty": "hard",
      "duration": 20,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-tree-serialization-deserialization",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "binary-tree-serialization-deserialization",
      "subtitle": null,
      "topics": [
        "binary-tree",
        "tree",
        "dfs"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来查找二叉树的最大深度",
      "title": "二叉树的最大深度"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1723161600,
      "difficulty": "easy",
      "duration": 20,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-tree-maximum-depth",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "binary-tree-maximum-depth",
      "subtitle": null,
      "topics": [
        "binary-tree",
        "tree",
        "dfs"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来确定两个二叉树是否相等",
      "title": "二叉树相等"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1723161600,
      "difficulty": "easy",
      "duration": 25,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-tree-equal",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "binary-tree-equal",
      "subtitle": null,
      "topics": [
        "binary-tree",
        "tree"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个可供两名玩家玩井字棋游戏",
      "title": "井字棋"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [
        "google",
        "amazon",
        "microsoft",
        "twitter",
        "apple",
        "atlassian",
        "openai"
      ],
      "created": 1683763200,
      "difficulty": "medium",
      "duration": 25,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/tic-tac-toe/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/tic-tac-toe/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/tic-tac-toe/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/tic-tac-toe/svelte"
        }
      ],
      "href": "/questions/user-interface/tic-tac-toe",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [
        "tic-tac-toe-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "tic-tac-toe",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个 N x N 的井字棋游戏，需要 M 个连续的标记才能获胜",
      "title": "井字棋 II"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "google",
        "amazon",
        "microsoft",
        "twitter",
        "apple",
        "atlassian"
      ],
      "created": 1683763200,
      "difficulty": "hard",
      "duration": 40,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/tic-tac-toe-ii/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/tic-tac-toe-ii/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/tic-tac-toe-ii/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/tic-tac-toe-ii/svelte"
        }
      ],
      "href": "/questions/user-interface/tic-tac-toe-ii",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "tic-tac-toe-ii",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个计算数组交集的函数，返回一个新数组，其中包含所有给定数组中存在的唯一值。",
      "title": "交集"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1687651200,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/intersection",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "intersection-by",
        "intersection-with"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "intersection",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "使用自定义比较器函数计算数组的交集，以确定元素之间的相等性",
      "title": "交集运算"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1687651200,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/intersection-with",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "intersection",
        "intersection-with"
      ],
      "slug": "intersection-with",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个从键值对创建对象的函数",
      "title": "从键值对"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1687651200,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/from-pairs",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "from-pairs",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，用于查找具有冷却时间的任务的最小间隔",
      "title": "任务协调"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1725408000,
      "difficulty": "medium",
      "duration": 40,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/task-coordination",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "task-coordination",
      "subtitle": null,
      "topics": [
        "greedy",
        "heap"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来检查是否可以参加所有会议",
      "title": "会议日历"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1721779200,
      "difficulty": "easy",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/intervals-meeting-calendar",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "intervals-meeting-calendar",
      "subtitle": null,
      "topics": [
        "intervals",
        "sorting"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来翻转给定数字中的位顺序",
      "title": "位翻转"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718928000,
      "difficulty": "easy",
      "duration": 25,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/bit-reversal",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "bit-reversal",
      "subtitle": null,
      "topics": [
        "binary"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，用于查找从 0 到 n 的设置位数量",
      "title": "位计数"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718928000,
      "difficulty": "easy",
      "duration": 25,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/bit-counting",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "bit-counting",
      "subtitle": null,
      "topics": [
        "binary"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个像素画绘图工具，用户可以用选定的颜色绘制像素",
      "title": "像素画"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/pixel-art/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/pixel-art/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/pixel-art/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/pixel-art/svelte"
        }
      ],
      "href": "/questions/user-interface/pixel-art",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "pixel-art",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个执行冒泡排序的函数",
      "title": "冒泡排序"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [],
      "created": 1745539200,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/bubble-sort",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "quick-sort"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "insertion-sort",
        "selection-sort"
      ],
      "slug": "bubble-sort",
      "subtitle": null,
      "topics": [
        "sorting"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，通过买入和卖出股票一次来找到可实现的最大利润",
      "title": "最佳股票交易"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718582400,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/optimal-stock-trading",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "optimal-stock-trading",
      "subtitle": null,
      "topics": [
        "array",
        "greedy"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个基于指定条件查找最大元素的函数",
      "title": "最大值依据"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1710720000,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/max-by",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "group-by",
        "min-by"
      ],
      "slug": "max-by",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来确定整数数组中最常见的元素",
      "title": "最常见的元素"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1724889600,
      "difficulty": "medium",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/array-most-common-elements",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "array-most-common-elements",
      "subtitle": null,
      "topics": [
        "array",
        "heap"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来查找具有唯一字符的最长子串的长度",
      "title": "最长不重复子串"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1723161600,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/longest-non-repeating-substring",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "longest-non-repeating-substring",
      "subtitle": null,
      "topics": [
        "string"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来查找两个字符串中最长的公共子序列",
      "title": "最长公共子序列"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1719705600,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/longest-common-subsequence",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "longest-common-subsequence",
      "subtitle": null,
      "topics": [
        "array",
        "dynamic-programming"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来查找最长连续数字序列的长度",
      "title": "最长连续数字序列"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1721606400,
      "difficulty": "medium",
      "duration": 40,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/longest-consecutive-number-sequence",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "longest-consecutive-number-sequence",
      "subtitle": null,
      "topics": [
        "array"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来查找最长递增子序列的长度",
      "title": "最长递增子序列"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1733616000,
      "difficulty": "medium",
      "duration": 40,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/longest-increasing-subsequence",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "longest-increasing-subsequence",
      "subtitle": null,
      "topics": [
        "array",
        "binary-search",
        "greedy"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个小部件，从 API 获取出生年份数据，并在直方图上绘制它",
      "title": "出生年份直方图"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/birth-year-histogram/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/birth-year-histogram/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/birth-year-histogram/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/birth-year-histogram/svelte"
        }
      ],
      "href": "/questions/user-interface/birth-year-histogram",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "birth-year-histogram",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数返回函数期望的参数数量",
      "title": "函数长度"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1683331200,
      "difficulty": "easy",
      "duration": 5,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/function-length",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "curry"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "number-of-arguments"
      ],
      "slug": "function-length",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数将元素数组拆分成指定大小的较小组。",
      "title": "分块"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1682553600,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/chunk",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "get"
      ],
      "slug": "chunk",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数根据函数或属性名称对数组中的值进行分组",
      "title": "分组"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "linkedin"
      ],
      "created": 1690502400,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/group-by",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "count-by"
      ],
      "slug": "group-by",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，将项目列表格式化为单个可读字符串",
      "title": "列表格式"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "dropbox"
      ],
      "created": 1652832000,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/list-format",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "list-format",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数返回一个计数器对象，该对象具有用于检索和操作值的各种方法",
      "title": "创建计数器 II"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "amazon"
      ],
      "created": 1683331200,
      "difficulty": "medium",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/make-counter-ii",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "jquery-css"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "make-counter",
        "jquery-css"
      ],
      "slug": "make-counter-ii",
      "subtitle": null,
      "topics": [
        "closure"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，用于删除链表倒数第 n 个节点",
      "title": "删除链表倒数第 N 个节点"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722297600,
      "difficulty": "medium",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/linked-list-delete-nth-from-end",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "linked-list-delete-nth-from-end",
      "subtitle": null,
      "topics": [
        "linked-list"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个接受整数值的函数，并返回一个可以重复调用的函数，以返回递增的值",
      "title": "制作计数器"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [
        "amazon"
      ],
      "created": 1683331200,
      "difficulty": "easy",
      "duration": 5,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/make-counter",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "make-counter-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "counter"
      ],
      "slug": "make-counter",
      "subtitle": null,
      "topics": [
        "closure"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，返回包含来自另一个字符串的所有字符（包括重复字符）的字符串的最小子字符串",
      "title": "包含字符的最短子字符串"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1723161600,
      "difficulty": "hard",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/string-shortest-substring-containing-characters",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "string-shortest-substring-containing-characters",
      "subtitle": null,
      "topics": [
        "string"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个单例类，确保一个类只有一个实例，同时提供对该实例的全局访问点",
      "title": "单例模式"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1699747200,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/singleton",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "singleton",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来检查一个字符串是否可以由字典中的单词组成",
      "title": "单词分割"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1720310400,
      "difficulty": "medium",
      "duration": 40,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/string-segment-words",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "string-segment-words",
      "subtitle": null,
      "topics": [
        "string",
        "dynamic-programming",
        "graph"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个可以添加单词并支持通配符搜索的数据结构",
      "title": "单词查找器"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1724976000,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/word-finder",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "word-finder",
      "subtitle": null,
      "topics": [
        "matrix",
        "graph",
        "trie"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数返回它被调用时所带的参数个数",
      "title": "参数个数"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1683331200,
      "difficulty": "easy",
      "duration": 5,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/number-of-arguments",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "classnames",
        "curry"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "function-length"
      ],
      "slug": "number-of-arguments",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个类似于 setTimeout 的函数，但返回一个用于取消待处理回调的函数",
      "title": "可取消的超时"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1689552000,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/cancellable-timeout",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "cancellable-interval"
      ],
      "slug": "cancellable-timeout",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个类似于 setInterval 的函数，但返回一个用于取消间隔的函数",
      "title": "可取消的间隔"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1689552000,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/cancellable-interval",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "cancellable-timeout"
      ],
      "slug": "cancellable-interval",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个创建可恢复 interval 对象的函数",
      "title": "可恢复的 Interval"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1689552000,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/resumable-interval",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "resumable-timeout"
      ],
      "slug": "resumable-interval",
      "subtitle": null,
      "topics": [
        "async",
        "closure"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个具有值历史记录的计数器，并能够撤消/重做操作",
      "title": "可撤销计数器"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1681257600,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/undoable-counter/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/undoable-counter/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/undoable-counter/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/undoable-counter/svelte"
        }
      ],
      "href": "/questions/user-interface/undoable-counter",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "counter"
      ],
      "slug": "undoable-counter",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "构建一个界面，用户可以在网格内拖动以选择多个单元格",
      "title": "可选择的单元格"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [],
      "created": 1723766400,
      "difficulty": "hard",
      "duration": 40,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/selectable-cells/react"
        }
      ],
      "href": "/questions/user-interface/selectable-cells",
      "importance": "low",
      "languages": [
        "html",
        "js",
        "css"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "selectable-cells",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，将一个新区间插入给定的区间中",
      "title": "合并新区间"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722384000,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/intervals-merge-new",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "intervals-merge-new",
      "subtitle": null,
      "topics": [
        "binary-search",
        "intervals",
        "sorting"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个合并重叠区间的函数",
      "title": "合并重叠区间"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722384000,
      "difficulty": "medium",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/intervals-combine-overlapping",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "intervals-combine-overlapping",
      "subtitle": null,
      "topics": [
        "intervals",
        "sorting",
        "dfs"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，从数组中删除所有重复的值",
      "title": "唯一数组"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [],
      "created": 1655164800,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/unique-array",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "data-selection"
      ],
      "slug": "unique-array",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "为两名玩家构建一个游戏，他们轮流从顶部将彩色圆盘放入垂直悬挂的棋盘/网格中。",
      "title": "四子棋"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1719964800,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/connect-four/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/connect-four/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/connect-four/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/connect-four/svelte"
        }
      ],
      "href": "/questions/user-interface/connect-four",
      "importance": "low",
      "languages": [
        "html",
        "js",
        "css"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "connect-four",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来计算字符串中所有回文子串的数量",
      "title": "回文子串"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1723161600,
      "difficulty": "medium",
      "duration": 40,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/string-palindromic-substrings",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "string-palindromic-substrings",
      "subtitle": null,
      "topics": [
        "string"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来确定一个图是否为有效的树",
      "title": "图是否为树"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1721779200,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/graph-is-tree",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "graph-is-tree",
      "subtitle": null,
      "topics": [
        "graph",
        "dfs"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个显示一系列图片的图片轮播。",
      "title": "图片轮播"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "amazon",
        "google",
        "doordash",
        "dropbox",
        "microsoft",
        "snap",
        "squarespace",
        "bytedance",
        "tiktok"
      ],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/image-carousel/react"
        }
      ],
      "href": "/questions/user-interface/image-carousel",
      "importance": "low",
      "languages": [
        "html",
        "js",
        "css"
      ],
      "nextQuestions": [
        "image-carousel-ii",
        "image-carousel-iii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "image-carousel",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个在图像之间平滑过渡的图像轮播",
      "title": "图片轮播 II"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "amazon",
        "google",
        "doordash",
        "dropbox",
        "microsoft",
        "snap",
        "squarespace",
        "bytedance",
        "tiktok"
      ],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/image-carousel-ii/react"
        }
      ],
      "href": "/questions/user-interface/image-carousel-ii",
      "importance": "low",
      "languages": [
        "html",
        "js",
        "css"
      ],
      "nextQuestions": [
        "image-carousel-iii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "image-carousel-ii",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个图片轮播，在图片之间平滑过渡，并且 DOM 占用空间最小化",
      "title": "图片轮播 III"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "amazon",
        "bytedance",
        "google",
        "doordash",
        "dropbox",
        "microsoft",
        "snap",
        "squarespace",
        "tiktok"
      ],
      "created": 1723766400,
      "difficulty": "hard",
      "duration": 40,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/image-carousel-iii/react"
        }
      ],
      "href": "/questions/user-interface/image-carousel-iii",
      "importance": "low",
      "languages": [
        "html",
        "js",
        "css"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "image-carousel-iii",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，深度克隆一个连通的无向图",
      "title": "图的克隆"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1721260800,
      "difficulty": "medium",
      "duration": 50,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/graph-clone",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "graph-clone",
      "subtitle": null,
      "topics": [
        "graph",
        "dfs"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来计算图中连通分量的数量",
      "title": "图计算连通分量"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1721779200,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/graph-count-connected-components",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "graph-count-connected-components",
      "subtitle": null,
      "topics": [
        "graph",
        "dfs"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建著名的圣杯布局，它由页眉、3 列和页脚组成",
      "title": "圣杯布局"
    },
    "metadata": {
      "access": "free",
      "author": "yangshun",
      "companies": [
        "atlassian"
      ],
      "created": 1658275200,
      "difficulty": "easy",
      "duration": 15,
      "featured": true,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/holy-grail/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/holy-grail/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/holy-grail/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/holy-grail/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/holy-grail/svelte"
        }
      ],
      "href": "/questions/user-interface/holy-grail",
      "importance": "high",
      "languages": [
        "html",
        "css"
      ],
      "nextQuestions": [
        "flatten",
        "todo-list",
        "contact-form"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "tweet"
      ],
      "slug": "holy-grail",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，在旋转排序数组中查找一个整数",
      "title": "在旋转数组中查找元素"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718928000,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/array-rotated-find",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "array-rotated-find",
      "subtitle": null,
      "topics": [
        "array",
        "binary-search"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来检查单词在网格中是否存在",
      "title": "在网格中查找单词"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722729600,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/grid-find-word",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "grid-find-word",
      "subtitle": null,
      "topics": [
        "matrix",
        "dfs"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，用于查找网格中存在的所有单词",
      "title": "在网格中查找单词"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1724976000,
      "difficulty": "hard",
      "duration": 40,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/grid-find-words",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "grid-find-words",
      "subtitle": null,
      "topics": [
        "matrix",
        "tree",
        "trie"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来检查一个数字是否在两个数字之间",
      "title": "在范围内"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1683331200,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/in-range",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "clamp"
      ],
      "slug": "in-range",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个可以找到数组内数值均值的函数",
      "title": "均值"
    },
    "metadata": {
      "access": "free",
      "author": null,
      "companies": [],
      "created": 1710633600,
      "difficulty": "easy",
      "duration": 5,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/mean",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "array-reduce"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "mean",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个包含基本堆操作的堆数据结构",
      "title": "堆"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [],
      "created": 1745539200,
      "difficulty": "hard",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/heap",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "heap-sort"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "binary-search-tree"
      ],
      "slug": "heap",
      "subtitle": null,
      "topics": [
        "heap"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个执行堆排序的函数",
      "title": "堆排序"
    },
    "metadata": {
      "access": "free",
      "author": null,
      "companies": [],
      "created": 1673395200,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/heap-sort",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "quick-sort"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "selection-sort"
      ],
      "slug": "heap-sort",
      "subtitle": null,
      "topics": [
        "heap",
        "sorting"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个用指定值填充数组指定索引范围的函数",
      "title": "填充"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1682553600,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/fill",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "fill",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，用于查找墙壁数组中两个墙壁之间的最大蓄水体积",
      "title": "墙壁之间的最大蓄水"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718236800,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/maximum-water-between-walls",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "maximum-water-between-walls",
      "subtitle": null,
      "topics": [
        "array"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来验证并返回外星语言的字母表顺序",
      "title": "外星语言"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722384000,
      "difficulty": "hard",
      "duration": 55,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/extraterrestrial-language",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "extraterrestrial-language",
      "subtitle": null,
      "topics": [
        "graph",
        "topological-sort"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个返回集合大小的函数",
      "title": "大小"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1690502400,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/size",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "size",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来确定一个字符串是否是回文",
      "title": "字符串回文"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722729600,
      "difficulty": "easy",
      "duration": 25,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/string-palindrome",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "string-palindrome",
      "subtitle": null,
      "topics": [
        "string"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来确定两个字符串是否互为异位词",
      "title": "字符串异位词"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722729600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/string-anagram",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "string-anagram",
      "subtitle": null,
      "topics": [
        "string"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，将字符串数组分组为异位词",
      "title": "字符串异位词分组"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [
        "amazon"
      ],
      "created": 1723161600,
      "difficulty": "medium",
      "duration": 40,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/string-anagram-groups",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "string-anagram-groups",
      "subtitle": null,
      "topics": [
        "string"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来转换对象中的值",
      "title": "对象映射"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1690761600,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/object-map",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "deep-map"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "array-map"
      ],
      "slug": "object-map",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "构建一个带有父子选择逻辑的嵌套复选框组件",
      "title": "嵌套复选框"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "google"
      ],
      "created": 1723766400,
      "difficulty": "hard",
      "duration": 40,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/nested-checkboxes/react"
        }
      ],
      "href": "/questions/user-interface/nested-checkboxes",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "file-explorer"
      ],
      "slug": "nested-checkboxes",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数查找数组之间值的差异。",
      "title": "差异"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1682553600,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/difference",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "get",
        "compact",
        "chunk"
      ],
      "slug": "difference",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来确定一个字符串是否包含平衡的括号",
      "title": "平衡括号"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722729600,
      "difficulty": "easy",
      "duration": 25,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/array-balanced-brackets",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "array-balanced-brackets",
      "subtitle": null,
      "topics": [
        "array",
        "stack"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个广度优先搜索算法，该算法以广度优先的方式遍历有向图",
      "title": "广度优先搜索"
    },
    "metadata": {
      "access": "free",
      "author": null,
      "companies": [],
      "created": 1679788800,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/breadth-first-search",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "depth-first-search"
      ],
      "slug": "breadth-first-search",
      "subtitle": null,
      "topics": [
        "bfs"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个执行递归归并排序的函数",
      "title": "归并排序"
    },
    "metadata": {
      "access": "free",
      "author": null,
      "companies": [],
      "created": 1671667200,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/merge-sort",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "quick-sort"
      ],
      "slug": "merge-sort",
      "subtitle": null,
      "topics": [
        "sorting"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个待办事项列表，让用户可以添加新任务和删除现有任务",
      "title": "待办事项列表"
    },
    "metadata": {
      "access": "free",
      "author": "yangshun",
      "companies": [
        "grab",
        "toptal",
        "amazon",
        "atlassian"
      ],
      "created": 1656460800,
      "difficulty": "medium",
      "duration": 20,
      "featured": true,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/todo-list/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/todo-list/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/todo-list/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/todo-list/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/todo-list/svelte"
        }
      ],
      "href": "/questions/user-interface/todo-list",
      "importance": "high",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [
        "flatten",
        "promise-any",
        "holy-grail"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "temperature-converter"
      ],
      "slug": "todo-list",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数接受一个或多个值，并返回一个函数，该函数在每次调用时循环遍历这些值",
      "title": "循环"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [],
      "created": 1699488000,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/cycle",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "cycle",
      "subtitle": null,
      "topics": [
        "closure"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个执行递归快速排序的函数",
      "title": "快速排序"
    },
    "metadata": {
      "access": "free",
      "author": null,
      "companies": [],
      "created": 1671667200,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/quick-sort",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "merge-sort"
      ],
      "slug": "quick-sort",
      "subtitle": null,
      "topics": [
        "sorting"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来查找所需的最少会议室数量",
      "title": "所需最少会议室"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722038400,
      "difficulty": "medium",
      "duration": 55,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/intervals-minimum-meeting-rooms",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "intervals-minimum-meeting-rooms",
      "subtitle": null,
      "topics": [
        "heap",
        "intervals"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数将数组递归地扁平化为单层深度。",
      "title": "扁平化"
    },
    "metadata": {
      "access": "free",
      "author": "zhenghao",
      "companies": [
        "amazon",
        "apple",
        "lyft",
        "meta",
        "rippling",
        "salesforce",
        "google",
        "roblox",
        "bytedance",
        "tiktok"
      ],
      "created": 1649894400,
      "difficulty": "medium",
      "duration": 20,
      "featured": true,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/flatten",
      "importance": "high",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "todo-list",
        "holy-grail",
        "deep-equal"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "squash-object",
        "get"
      ],
      "slug": "flatten",
      "subtitle": null,
      "topics": [
        "recursion"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个流行的街机游戏，玩家试图击中从板上的洞中弹出的地鼠",
      "title": "打地鼠"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "lyft"
      ],
      "created": 1684195200,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/whack-a-mole/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/whack-a-mole/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/whack-a-mole/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/whack-a-mole/svelte"
        }
      ],
      "href": "/questions/user-interface/whack-a-mole",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "memory-game"
      ],
      "slug": "whack-a-mole",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，返回组成给定金额所需的最少硬币数",
      "title": "找零所需的最少硬币数"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1733616000,
      "difficulty": "medium",
      "duration": 40,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/coin-change",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "coin-change",
      "subtitle": null,
      "topics": [
        "dynamic-programming"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个计算贷款月供的计算器",
      "title": "抵押贷款计算器"
    },
    "metadata": {
      "access": "standard",
      "author": "dhillon",
      "companies": [
        "openai",
        "reddit"
      ],
      "created": 1681430400,
      "difficulty": "easy",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/mortgage-calculator/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/mortgage-calculator/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/mortgage-calculator/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/mortgage-calculator/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/mortgage-calculator/svelte"
        }
      ],
      "href": "/questions/user-interface/mortgage-calculator",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "mortgage-calculator",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个执行拓扑排序的函数",
      "title": "拓扑排序"
    },
    "metadata": {
      "access": "free",
      "author": null,
      "companies": [
        "snap"
      ],
      "created": 1673395200,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/topological-sort",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "quick-sort"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "selection-sort"
      ],
      "slug": "topological-sort",
      "subtitle": null,
      "topics": [
        "topological-sort",
        "graph"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个招聘版，显示来自 Hacker News 的最新招聘信息",
      "title": "招聘版"
    },
    "metadata": {
      "access": "standard",
      "author": "dhillon",
      "companies": [
        "microsoft",
        "tiktok",
        "atlassian",
        "openai",
        "stripe"
      ],
      "created": 1683849600,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/job-board/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/job-board/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/job-board/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/job-board/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/job-board/svelte"
        }
      ],
      "href": "/questions/user-interface/job-board",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "job-board",
      "subtitle": null,
      "topics": [
        "networking"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数根据函数或属性名称计算值在数组中出现的次数。",
      "title": "按…计数"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [],
      "created": 1690416000,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/count-by",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "group-by"
      ],
      "slug": "count-by",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个执行插入排序的函数",
      "title": "插入排序"
    },
    "metadata": {
      "access": "free",
      "author": null,
      "companies": [],
      "created": 1671667200,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/insertion-sort",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "quick-sort"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "selection-sort"
      ],
      "slug": "insertion-sort",
      "subtitle": null,
      "topics": [
        "sorting"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个显示当前时间的 7 段数码时钟。",
      "title": "数字时钟"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "lyft"
      ],
      "created": 1656892800,
      "difficulty": "medium",
      "duration": 25,
      "featured": true,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/digital-clock/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/digital-clock/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/digital-clock/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/digital-clock/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/digital-clock/svelte"
        }
      ],
      "href": "/questions/user-interface/digital-clock",
      "importance": "medium",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "digital-clock",
      "subtitle": null,
      "topics": [
        "a11y",
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来查找动态整数流的中位数",
      "title": "数字流的中位数"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1724976000,
      "difficulty": "hard",
      "duration": 55,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/number-stream-median",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "number-stream-median",
      "subtitle": null,
      "topics": [
        "heap"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，用于合并来自同一用户的数据行",
      "title": "数据合并"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [
        "soundcloud",
        "stripe"
      ],
      "created": 1690675200,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/data-merging",
      "importance": "high",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "unique-array",
        "data-selection"
      ],
      "slug": "data-merging",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "构建一个具有分页功能的users数据表",
      "title": "数据表"
    },
    "metadata": {
      "access": "free",
      "author": "yangshun",
      "companies": [
        "palantir",
        "amazon",
        "stripe"
      ],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/data-table/react"
        }
      ],
      "href": "/questions/user-interface/data-table",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [
        "data-table-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "data-table",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "构建一个具有排序功能的用户数据表",
      "title": "数据表 II"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "palantir",
        "amazon",
        "stripe"
      ],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/data-table-ii/react"
        }
      ],
      "href": "/questions/user-interface/data-table-ii",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "data-table-ii",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "构建一个具有分页和排序功能的通用数据表",
      "title": "数据表 III"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "palantir",
        "amazon",
        "stripe"
      ],
      "created": 1723766400,
      "difficulty": "hard",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/data-table-iii/react"
        }
      ],
      "href": "/questions/user-interface/data-table-iii",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "data-table-iii",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "构建一个具有分页、排序和过滤功能的通用数据表",
      "title": "数据表 IV"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "palantir",
        "amazon",
        "stripe"
      ],
      "created": 1723766400,
      "difficulty": "hard",
      "duration": 40,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/data-table-iv/react"
        }
      ],
      "href": "/questions/user-interface/data-table-iv",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "data-table-iv",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来过滤与指定要求匹配的数据行",
      "title": "数据选择"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "soundcloud",
        "amazon",
        "tiktok",
        "stripe"
      ],
      "created": 1655596800,
      "difficulty": "hard",
      "duration": 30,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/data-selection",
      "importance": "high",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "unique-array"
      ],
      "slug": "data-selection",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来确定数组的末端是否可达",
      "title": "数组末端可达"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1720828800,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/array-reachable-end",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "array-reachable-end",
      "subtitle": null,
      "topics": [
        "array",
        "dynamic-programming",
        "greedy"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，找到数组中除当前元素之外的所有元素的乘积。",
      "title": "数组的乘积，不包含当前元素"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718496000,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/array-product-excluding-current",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "array-product-excluding-current",
      "subtitle": null,
      "topics": [
        "array"
      ]
    }
  },
  {
    "info": {
      "excerpt": "使用扁平 DOM 结构构建文件浏览器组件",
      "title": "文件浏览器 III"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "amazon",
        "atlassian",
        "snap",
        "tiktok"
      ],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/file-explorer-iii/react"
        }
      ],
      "href": "/questions/user-interface/file-explorer-iii",
      "importance": "medium",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [
        "nested-checkboxes"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "file-explorer-iii",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "构建一个文件管理器组件，以树状层级视图的形式浏览文件和目录",
      "title": "文件管理器"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "amazon",
        "atlassian",
        "snap",
        "tiktok"
      ],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/file-explorer/react"
        }
      ],
      "href": "/questions/user-interface/file-explorer",
      "importance": "medium",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [
        "file-explorer-ii",
        "file-explorer-iii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "nested-checkboxes"
      ],
      "slug": "file-explorer",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个半可访问的文件管理器组件，该组件具有正确的 ARIA 角色、状态和属性",
      "title": "文件管理器 II"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "amazon",
        "atlassian",
        "snap",
        "tiktok"
      ],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/file-explorer-ii/react"
        }
      ],
      "href": "/questions/user-interface/file-explorer-ii",
      "importance": "medium",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [
        "file-explorer-iii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "file-explorer-ii",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，如果搜索词出现在文本中，则突出显示该文本",
      "title": "文本搜索"
    },
    "metadata": {
      "access": "premium",
      "author": "zhenghao",
      "companies": [],
      "created": 1656288000,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/text-search",
      "importance": "medium",
      "languages": [
        "html",
        "js",
        "ts"
      ],
      "nextQuestions": [
        "flatten",
        "promise-all",
        "todo-list"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "text-search-ii"
      ],
      "slug": "text-search",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，如果搜索词出现在文本中，则突出显示文本",
      "title": "文本搜索 II"
    },
    "metadata": {
      "access": "premium",
      "author": "zhenghao",
      "companies": [],
      "created": 1656288000,
      "difficulty": "medium",
      "duration": 25,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/text-search-ii",
      "importance": "low",
      "languages": [
        "html",
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "text-search"
      ],
      "slug": "text-search-ii",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，找到旋转排序数组中的最小元素",
      "title": "旋转排序数组中的最小元素"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718928000,
      "difficulty": "medium",
      "duration": 25,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/array-smallest-in-rotated",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "array-smallest-in-rotated",
      "subtitle": null,
      "topics": [
        "array",
        "binary-search"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，无需使用 + 和 - 运算符即可找到两个整数的和",
      "title": "无加法求和"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718928000,
      "difficulty": "medium",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/sum-without-addition",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "sum-without-addition",
      "subtitle": null,
      "topics": [
        "binary"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个星级评分组件，该组件显示一排星形图标，供用户选择与评分相对应的已填充星形数量。",
      "title": "星级评分"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "airbnb",
        "amazon",
        "uber"
      ],
      "created": 1658016000,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/star-rating/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/star-rating/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/star-rating/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/star-rating/vue"
        }
      ],
      "href": "/questions/user-interface/star-rating",
      "importance": "high",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "progress-bar"
      ],
      "slug": "star-rating",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来检查一个值是否为空对象、集合、映射或集合",
      "title": "是否为空"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1683331200,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/is-empty",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "is-empty",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，在最多进行 k 次替换后，找到最长的统一子串",
      "title": "替换后最长重复子串"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1723161600,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/longest-repeating-substring-after-replacements",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "longest-repeating-substring-after-replacements",
      "subtitle": null,
      "topics": [
        "string",
        "binary-search"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个为指定日期预订航班的组件",
      "title": "机票预订"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "openai",
        "reddit"
      ],
      "created": 1682121600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/flight-booker/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/flight-booker/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/flight-booker/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/flight-booker/svelte"
        }
      ],
      "href": "/questions/user-interface/flight-booker",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "flight-booker",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数返回数组中满足提供的测试函数的最后一个元素的索引",
      "title": "查找最后一个索引"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1682726400,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/find-last-index",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "find-index"
      ],
      "slug": "find-last-index",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来查找最长回文子串",
      "title": "查找最长回文子串"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1723161600,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/longest-palindromic-substring",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "longest-palindromic-substring",
      "subtitle": null,
      "topics": [
        "string"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来查找已排序数组中缺失的元素",
      "title": "查找序列中缺失的数字"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718928000,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/array-find-missing-number-in-sequence",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "array-find-missing-number-in-sequence",
      "subtitle": null,
      "topics": [
        "array"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来检查数组中是否有任何重复的数字",
      "title": "查找数组中的重复项"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718409600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/array-find-duplicate",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "array-find-duplicate",
      "subtitle": null,
      "topics": [
        "array"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数返回数组中满足提供的测试函数的第一个元素的索引",
      "title": "查找索引"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1682726400,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/find-index",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "find-last-index"
      ],
      "slug": "find-index",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数将接受多个参数的函数转换为一个可以重复调用，每次只接受一个参数的函数。",
      "title": "柯里化"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "intuit",
        "amazon",
        "qualcomm"
      ],
      "created": 1655510400,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/curry",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "curry-ii",
        "flatten",
        "promise-all"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "function-bind"
      ],
      "slug": "curry",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，将接受多个参数的函数转换为可以重复调用任意数量参数的函数",
      "title": "柯里化 II"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "qualcomm"
      ],
      "created": 1655510400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/curry-ii",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "curry-iii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "curry"
      ],
      "slug": "curry-ii",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，将接受可变参数的函数转换为可以重复调用任意数量参数的函数",
      "title": "柯里化 III"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "qualcomm"
      ],
      "created": 1670630400,
      "difficulty": "hard",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/curry-iii",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "curry",
        "curry-ii"
      ],
      "slug": "curry-iii",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个包含常见栈方法的栈数据结构",
      "title": "栈"
    },
    "metadata": {
      "access": "free",
      "author": "yangshun",
      "companies": [
        "amazon"
      ],
      "created": 1670025600,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/stack",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "queue"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "queue"
      ],
      "slug": "stack",
      "subtitle": null,
      "topics": [
        "stack"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个可重复使用的模态对话框组件，可以打开和关闭",
      "title": "模态对话框"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "amazon",
        "tiktok"
      ],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/modal-dialog/react"
        }
      ],
      "href": "/questions/user-interface/modal-dialog",
      "importance": "low",
      "languages": [
        "html",
        "js",
        "css"
      ],
      "nextQuestions": [
        "modal-dialog-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "modal-dialog",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个半可访问的模态对话框组件，该组件具有正确的 ARIA 角色、状态和属性",
      "title": "模态对话框 II"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "amazon",
        "tiktok"
      ],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/modal-dialog-ii/react"
        }
      ],
      "href": "/questions/user-interface/modal-dialog-ii",
      "importance": "low",
      "languages": [
        "html",
        "js",
        "css"
      ],
      "nextQuestions": [
        "modal-dialog-iii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "modal-dialog-ii",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个适度可访问的模态对话框组件，该组件支持关闭对话框的常用方法",
      "title": "模态对话框 III"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "amazon",
        "tiktok"
      ],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/modal-dialog-iii/react"
        }
      ],
      "href": "/questions/user-interface/modal-dialog-iii",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [
        "modal-dialog-iv"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "modal-dialog-iii",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个完全可访问的模态对话框组件，该组件支持所有必需的键盘交互",
      "title": "模态对话框 IV"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "amazon",
        "tiktok"
      ],
      "created": 1723766400,
      "difficulty": "hard",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/modal-dialog-iv/react"
        }
      ],
      "href": "/questions/user-interface/modal-dialog-iv",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "modal-dialog-iv",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个模拟时钟，其指针像真实时钟一样更新和移动",
      "title": "模拟时钟"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "lyft"
      ],
      "created": 1670198400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/analog-clock/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/analog-clock/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/analog-clock/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/analog-clock/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/analog-clock/svelte"
        }
      ],
      "href": "/questions/user-interface/analog-clock",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "digital-clock"
      ],
      "slug": "analog-clock",
      "subtitle": null,
      "topics": [
        "a11y",
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数通过接受一个数字进行求和，并允许重复调用，传入更多数字，直到不传入任何数字为止。",
      "title": "求和"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "amazon"
      ],
      "created": 1655251200,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/sum",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "curry",
        "curry-ii"
      ],
      "slug": "sum",
      "subtitle": null,
      "topics": [
        "closure"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个注册表单，该表单对用户详细信息进行验证并提交到后端 API",
      "title": "注册表单"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "lyft",
        "toptal",
        "amazon",
        "openai",
        "reddit"
      ],
      "created": 1658707200,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "vanilla",
      "frameworks": [
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/signup-form/vanilla"
        }
      ],
      "href": "/questions/user-interface/signup-form",
      "importance": "high",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "contact-form"
      ],
      "slug": "signup-form",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，返回可以流向两个大洋的单元格",
      "title": "海洋流动"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1721088000,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/ocean-flow",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "ocean-flow",
      "subtitle": null,
      "topics": [
        "graph",
        "dfs",
        "bfs"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个在二维平面上移动海龟的 Turtle 类",
      "title": "海龟"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1689638400,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/turtle",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "turtle",
      "subtitle": null,
      "topics": [
        "oop"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数从对象中删除指定的键及其对应的值，包括嵌套对象或数组。",
      "title": "深度 Omit"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [],
      "created": 1690761600,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/deep-omit",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "deep-map"
      ],
      "slug": "deep-omit",
      "subtitle": null,
      "topics": [
        "recursion"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个深度优先搜索算法，以深度优先的方式遍历有向图",
      "title": "深度优先搜索"
    },
    "metadata": {
      "access": "free",
      "author": null,
      "companies": [],
      "created": 1671667200,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/depth-first-search",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "breadth-first-search"
      ],
      "slug": "depth-first-search",
      "subtitle": null,
      "topics": [
        "dfs"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个对值进行深拷贝的函数，但也要处理循环引用",
      "title": "深度克隆 II"
    },
    "metadata": {
      "access": "premium",
      "author": "zhenghao",
      "companies": [
        "bytedance"
      ],
      "created": 1653177600,
      "difficulty": "hard",
      "duration": 45,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/deep-clone-ii",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "deep-clone"
      ],
      "slug": "deep-clone-ii",
      "subtitle": null,
      "topics": [
        "recursion"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个将两个对象合并在一起的函数",
      "title": "深度合并"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1690848000,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/deep-merge",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "deep-clone"
      ],
      "slug": "deep-merge",
      "subtitle": null,
      "topics": [
        "recursion"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个递归转换值的函数",
      "title": "深度映射"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1690761600,
      "difficulty": "medium",
      "duration": 25,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/deep-map",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "array-map",
        "object-map"
      ],
      "slug": "deep-map",
      "subtitle": null,
      "topics": [
        "recursion"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个确定两个值是否相等的函数",
      "title": "深度相等"
    },
    "metadata": {
      "access": "standard",
      "author": "zhenghao",
      "companies": [
        "google"
      ],
      "created": 1659916800,
      "difficulty": "medium",
      "duration": 25,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/deep-equal",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "deep-clone",
        "deep-clone-ii"
      ],
      "slug": "deep-equal",
      "subtitle": null,
      "topics": [
        "recursion"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个对值进行深拷贝的函数",
      "title": "深拷贝"
    },
    "metadata": {
      "access": "free",
      "author": "zhenghao",
      "companies": [
        "bytedance",
        "amazon",
        "tiktok"
      ],
      "created": 1653091200,
      "difficulty": "medium",
      "duration": 25,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/deep-clone",
      "importance": "high",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "todo-list",
        "deep-equal",
        "deep-clone-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "deep-equal",
        "deep-clone-ii"
      ],
      "slug": "deep-clone",
      "subtitle": null,
      "topics": [
        "recursion"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个温度转换器小部件，该小部件可在摄氏度和华氏度之间转换温度值",
      "title": "温度转换器"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [],
      "created": 1657065600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/temperature-converter/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/temperature-converter/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/temperature-converter/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/temperature-converter/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/temperature-converter/svelte"
        }
      ],
      "href": "/questions/user-interface/temperature-converter",
      "importance": "medium",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "todo-list"
      ],
      "slug": "temperature-converter",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "构建一个点赞按钮，其外观根据状态而变化",
      "title": "点赞按钮"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "amazon",
        "openai"
      ],
      "created": 1670976000,
      "difficulty": "medium",
      "duration": 20,
      "featured": true,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/like-button/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/like-button/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/like-button/angular"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/like-button/svelte"
        }
      ],
      "href": "/questions/user-interface/like-button",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "like-button",
      "subtitle": null,
      "topics": [
        "async",
        "networking"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，找到到达楼梯顶部的不同方式的数量",
      "title": "爬楼梯组合"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1719187200,
      "difficulty": "easy",
      "duration": 20,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/staircase-climbing-combinations",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "staircase-climbing-combinations",
      "subtitle": null,
      "topics": [
        "dynamic-programming"
      ]
    }
  },
  {
    "info": {
      "excerpt": "根据行数和列数生成一个数字表格",
      "title": "生成表格"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "google"
      ],
      "created": 1675123200,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/generate-table/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/generate-table/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/generate-table/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/generate-table/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/generate-table/svelte"
        }
      ],
      "href": "/questions/user-interface/generate-table",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "generate-table",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "构建一个UI来过滤、创建、更新和删除用户",
      "title": "用户数据库"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "tiktok"
      ],
      "created": 1723766400,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/users-database/react"
        }
      ],
      "href": "/questions/user-interface/users-database",
      "importance": "low",
      "languages": [
        "html",
        "js",
        "css"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "users-database",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个从 HTML 文档构建目录的函数",
      "title": "目录"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "google"
      ],
      "created": 1649894400,
      "difficulty": "hard",
      "duration": 30,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/table-of-contents",
      "importance": "medium",
      "languages": [
        "html",
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "table-of-contents",
      "subtitle": null,
      "topics": [
        "recursion",
        "tree",
        "web-api"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来计算总和为目标值的组合",
      "title": "目标和的组合"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1720310400,
      "difficulty": "medium",
      "duration": 40,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/combinations-target-sum",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "combinations-target-sum",
      "subtitle": null,
      "topics": [
        "dynamic-programming"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来确定两棵 DOM 树是否相同",
      "title": "相同的 DOM 树"
    },
    "metadata": {
      "access": "premium",
      "author": "zhenghao",
      "companies": [],
      "created": 1649894400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/identical-dom-trees",
      "importance": "low",
      "languages": [
        "html",
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "deep-equal"
      ],
      "slug": "identical-dom-trees",
      "subtitle": null,
      "topics": [
        "recursion",
        "tree",
        "web-api"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，将给定的矩阵旋转 90 度",
      "title": "矩阵旋转"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722038400,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/matrix-rotation",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "matrix-rotation",
      "subtitle": null,
      "topics": [
        "matrix"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个将矩阵的行和列设置为零的函数",
      "title": "矩阵置零"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722038400,
      "difficulty": "medium",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/matrix-zeroing",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "matrix-zeroing",
      "subtitle": null,
      "topics": [
        "matrix"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，以螺旋顺序遍历矩阵",
      "title": "矩阵螺旋遍历"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": null,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/matrix-spiral-traversal",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "matrix-spiral-traversal",
      "subtitle": null,
      "topics": [
        "matrix"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个可以测量经过时间的秒表小部件",
      "title": "秒表"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "cisco",
        "uber"
      ],
      "created": 1670889600,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/stopwatch/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/stopwatch/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/stopwatch/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/stopwatch/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/stopwatch/svelte"
        }
      ],
      "href": "/questions/user-interface/stopwatch",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "digital-clock"
      ],
      "slug": "stopwatch",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个允许在两个列表之间转移项目的组件",
      "title": "穿梭列表"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "tiktok",
        "openai"
      ],
      "created": 1682208000,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/transfer-list/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/transfer-list/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/transfer-list/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/transfer-list/svelte"
        }
      ],
      "href": "/questions/user-interface/transfer-list",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [
        "transfer-list-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "todo-list"
      ],
      "slug": "transfer-list",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，用于检查对象是否符合源对象",
      "title": "符合条件"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1712102400,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/conforms-to",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "count-by"
      ],
      "slug": "conforms-to",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现实用程序以确定 JavaScript 中的基本变量类型",
      "title": "类型实用程序"
    },
    "metadata": {
      "access": "free",
      "author": "yangshun",
      "companies": [],
      "created": 1649894400,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/type-utilities",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "type-utilities-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "type-utilities",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现实用程序以确定 JavaScript 中非原始变量类型",
      "title": "类型工具 II"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [],
      "created": 1649894400,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/type-utilities-ii",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "is-empty",
        "deep-clone",
        "deep-equal"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "type-utilities"
      ],
      "slug": "type-utilities-ii",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "构建一个红绿灯，在预定的时间间隔后，灯从绿色切换到黄色再到红色，并无限循环。",
      "title": "红绿灯"
    },
    "metadata": {
      "access": "free",
      "author": "yangshun",
      "companies": [
        "roblox"
      ],
      "created": 1670716800,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/traffic-light/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/traffic-light/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/traffic-light/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/traffic-light/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/traffic-light/svelte"
        }
      ],
      "href": "/questions/user-interface/traffic-light",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "digital-clock"
      ],
      "slug": "traffic-light",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来计算机器人移动在 m x n 网格中的不同路径",
      "title": "网格中的不同路径"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1720742400,
      "difficulty": "medium",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/grid-distinct-paths",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "grid-distinct-paths",
      "subtitle": null,
      "topics": [
        "dynamic-programming"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个灯光网格，灯光以与激活相反的顺序停用",
      "title": "网格灯"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "uber"
      ],
      "created": 1671148800,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/grid-lights/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/grid-lights/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/grid-lights/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/grid-lights/svelte"
        }
      ],
      "href": "/questions/user-interface/grid-lights",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "grid-lights",
      "subtitle": null,
      "topics": [
        "a11y",
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来翻转二叉树中的节点",
      "title": "翻转二叉树"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1723766400,
      "difficulty": "easy",
      "duration": 20,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-tree-flip",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "binary-tree-flip",
      "subtitle": null,
      "topics": [
        "binary-tree",
        "tree"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个联系表单，将用户的反馈和联系方式提交到后端 API",
      "title": "联系表单"
    },
    "metadata": {
      "access": "free",
      "author": "yangshun",
      "companies": [
        "lyft",
        "amazon",
        "openai",
        "reddit"
      ],
      "created": 1658880000,
      "difficulty": "easy",
      "duration": 15,
      "featured": true,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/contact-form/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/contact-form/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/contact-form/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/contact-form/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/contact-form/svelte"
        }
      ],
      "href": "/questions/user-interface/contact-form",
      "importance": "high",
      "languages": [
        "html"
      ],
      "nextQuestions": [
        "flatten",
        "signup-form"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "signup-form"
      ],
      "slug": "contact-form",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，通过限制其在一段时间内可以执行的次数来控制函数的执行。",
      "title": "节流"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "google",
        "tiktok",
        "walmart",
        "yelp",
        "tiktok",
        "atlassian",
        "uber"
      ],
      "created": 1649894400,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/throttle",
      "importance": "high",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "debounce"
      ],
      "slug": "throttle",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，该函数以升序返回一系列数字",
      "title": "范围"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [],
      "created": 1710633600,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/range",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "range-right"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "in-range",
        "range-right"
      ],
      "slug": "range",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，用于安全地访问 JavaScript 对象中深层嵌套的属性",
      "title": "获取"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "tiktok",
        "amazon",
        "tiktok"
      ],
      "created": 1649894400,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/get",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "squash-object"
      ],
      "slug": "get",
      "subtitle": null,
      "topics": [
        "recursion"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来计算解码数字字符串的方法",
      "title": "解码消息"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1720742400,
      "difficulty": "medium",
      "duration": 40,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/string-decode-message",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "string-decode-message",
      "subtitle": null,
      "topics": [
        "string",
        "dynamic-programming"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个简单的计数器，每当点击按钮时递增",
      "title": "计数器"
    },
    "metadata": {
      "access": "free",
      "author": "yangshun",
      "companies": [
        "amazon"
      ],
      "created": 1656028800,
      "difficulty": "easy",
      "duration": 5,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/counter/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/counter/vanilla"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/counter/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/counter/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/counter/svelte"
        }
      ],
      "href": "/questions/user-interface/counter",
      "importance": "low",
      "languages": [
        "html",
        "js"
      ],
      "nextQuestions": [
        "flatten",
        "todo-list",
        "contact-form"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "todo-list",
        "temperature-converter"
      ],
      "slug": "counter",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来查找给定整数的二进制表示中的设置位",
      "title": "计算二进制数中的设置位"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718928000,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/count-ones-in-binary",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "count-ones-in-binary",
      "subtitle": null,
      "topics": [
        "binary"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来计算二维二进制网格中不同的岛屿数量",
      "title": "计算网格中的岛屿数量"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1721001600,
      "difficulty": "medium",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/grid-count-islands",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "grid-count-islands",
      "subtitle": null,
      "topics": [
        "matrix",
        "dfs"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个记忆游戏，玩家需要匹配成对的卡片",
      "title": "记忆游戏"
    },
    "metadata": {
      "access": "premium",
      "author": null,
      "companies": [
        "airbnb"
      ],
      "created": 1684108800,
      "difficulty": "medium",
      "duration": 40,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/memory-game/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/memory-game/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/memory-game/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/memory-game/svelte"
        }
      ],
      "href": "/questions/user-interface/memory-game",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "memory-game",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，用于检查在给定先决条件的情况下是否可以完成所有课程",
      "title": "课程依赖"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1721260800,
      "difficulty": "medium",
      "duration": 40,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/course-dependency",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "course-dependency",
      "subtitle": null,
      "topics": [
        "graph",
        "topological-sort",
        "dfs"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个进度条组件，该组件显示操作的百分比完成情况",
      "title": "进度条"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "uber",
        "google",
        "amazon",
        "microsoft"
      ],
      "created": 1656720000,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/progress-bar/react"
        },
        {
          "framework": "vanilla",
          "href": "/questions/user-interface/progress-bar/vanilla"
        }
      ],
      "href": "/questions/user-interface/progress-bar",
      "importance": "medium",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [
        "progress-bars",
        "flatten",
        "star-rating"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "star-rating"
      ],
      "slug": "progress-bar",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "构建一个进度条列表，当它们被添加到页面时逐渐填充。",
      "title": "进度条"
    },
    "metadata": {
      "access": "standard",
      "author": "yangshun",
      "companies": [
        "uber"
      ],
      "created": 1671321600,
      "difficulty": "easy",
      "duration": 15,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/progress-bars/react"
        }
      ],
      "href": "/questions/user-interface/progress-bars",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [
        "progress-bars-ii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "progress-bars",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个进度条列表，这些进度条按顺序逐渐填充，一次一个",
      "title": "进度条 II"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "uber"
      ],
      "created": 1671321600,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/progress-bars-ii/react"
        }
      ],
      "href": "/questions/user-interface/progress-bars-ii",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [
        "progress-bars-iii"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "progress-bars-ii",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个进度条列表，这些进度条最多可以同时填充 3 个。",
      "title": "进度条 III"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "uber"
      ],
      "created": 1671321600,
      "difficulty": "medium",
      "duration": 25,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/progress-bars-iii/react"
        }
      ],
      "href": "/questions/user-interface/progress-bars-iii",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [
        "progress-bars-iv"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "progress-bars-iii",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个进度条列表，这些进度条同时逐渐填充，最多 3 个，并允许暂停和恢复",
      "title": "进度条 IV"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [
        "uber"
      ],
      "created": 1671321600,
      "difficulty": "hard",
      "duration": 25,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/progress-bars-iv/react"
        }
      ],
      "href": "/questions/user-interface/progress-bars-iv",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "progress-bars-iv",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来查找具有最大乘积的子数组",
      "title": "连续数组中的最大乘积"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718236800,
      "difficulty": "medium",
      "duration": 30,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/array-maximum-product-contiguous",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "array-maximum-product-contiguous",
      "subtitle": null,
      "topics": [
        "array"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来查找具有最大和的子数组",
      "title": "连续数组中的最大和"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718841600,
      "difficulty": "medium",
      "duration": 25,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/array-maximum-sum-contiguous",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "array-maximum-sum-contiguous",
      "subtitle": null,
      "topics": [
        "array"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个执行选择排序的函数",
      "title": "选择排序"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [],
      "created": 1671667200,
      "difficulty": "easy",
      "duration": 10,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/selection-sort",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "quick-sort"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "insertion-sort"
      ],
      "slug": "selection-sort",
      "subtitle": null,
      "topics": [
        "sorting"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个从先序和中序遍历构造二叉树的函数",
      "title": "通过先序和中序遍历重建二叉树"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1724889600,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-tree-rebuilding-from-traversals",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "binary-tree-rebuilding-from-traversals",
      "subtitle": null,
      "topics": [
        "binary-tree",
        "tree"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，找到在不惊动警察的情况下抢劫的最大金额",
      "title": "邻里盗窃"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1720828800,
      "difficulty": "medium",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/neighborhood-theft",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "neighborhood-theft",
      "subtitle": null,
      "topics": [
        "array",
        "dynamic-programming"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，用于在环形房屋中找到在不惊动警察的情况下抢劫的最大金额",
      "title": "邻里盗窃（环形）"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1720828800,
      "difficulty": "medium",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/neighborhood-theft-circular",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "neighborhood-theft-circular",
      "subtitle": null,
      "topics": [
        "array",
        "dynamic-programming"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来重新排列链表中的节点",
      "title": "重排链表"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722297600,
      "difficulty": "medium",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/linked-list-rearrange",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "linked-list-rearrange",
      "subtitle": null,
      "topics": [
        "linked-list"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个包含常见链表方法的链表数据结构",
      "title": "链表"
    },
    "metadata": {
      "access": "free",
      "author": null,
      "companies": [],
      "created": 1745539200,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/linked-list",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "stack",
        "queue"
      ],
      "slug": "linked-list",
      "subtitle": null,
      "topics": [
        "linked-list"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个反转链表的函数",
      "title": "链表反转"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722038400,
      "difficulty": "easy",
      "duration": 25,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/linked-list-reversal",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "linked-list-reversal",
      "subtitle": null,
      "topics": [
        "linked-list"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个合并 k 个已排序链表的函数",
      "title": "链表合并 K 个已排序列表"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722297600,
      "difficulty": "hard",
      "duration": 45,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/linked-list-combine-k-sorted",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "linked-list-combine-k-sorted",
      "subtitle": null,
      "topics": [
        "linked-list",
        "heap"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来合并两个已排序的链表",
      "title": "链表合并两个已排序的列表"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1722038400,
      "difficulty": "easy",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/linked-list-combine-two-sorted",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "linked-list-combine-two-sorted",
      "subtitle": null,
      "topics": [
        "linked-list"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来检测链表中是否有环",
      "title": "链表检测环"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1718928000,
      "difficulty": "easy",
      "duration": 30,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/linked-list-detect-cycle",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "linked-list-detect-cycle",
      "subtitle": null,
      "topics": [
        "linked-list"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个包含常见队列方法的队列数据结构",
      "title": "队列"
    },
    "metadata": {
      "access": "free",
      "author": "yangshun",
      "companies": [],
      "created": 1670457600,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/queue",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "stack"
      ],
      "slug": "queue",
      "subtitle": null,
      "topics": [
        "queue"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，通过延迟函数执行，直到其最后一次执行尝试后经过指定时间，来限制函数可以执行的次数。",
      "title": "防抖"
    },
    "metadata": {
      "access": "free",
      "author": "yangshun",
      "companies": [
        "flipkart",
        "google",
        "lyft",
        "walmart",
        "yelp",
        "tiktok",
        "bytedance",
        "microsoft",
        "linkedin",
        "uber",
        "qualcomm"
      ],
      "created": 1649894400,
      "difficulty": "medium",
      "duration": 15,
      "featured": true,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/debounce",
      "importance": "high",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [
        "debounce-ii",
        "holy-grail"
      ],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "throttle"
      ],
      "slug": "debounce",
      "subtitle": null,
      "topics": [
        "async"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个接受回调函数并将其调用限制为最多 N 次的函数",
      "title": "限制"
    },
    "metadata": {
      "access": "premium",
      "author": "yangshun",
      "companies": [],
      "created": 1670803200,
      "difficulty": "medium",
      "duration": 15,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/limit",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "once"
      ],
      "slug": "limit",
      "subtitle": null,
      "topics": []
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数，将对象中的所有键转换为驼峰命名。",
      "title": "驼峰命名转换"
    },
    "metadata": {
      "access": "premium",
      "author": "zhenghao",
      "companies": [],
      "created": 1656460800,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "javascript",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/javascript/camel-case-keys",
      "importance": "medium",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [
        "deep-equal",
        "squash-object"
      ],
      "slug": "camel-case-keys",
      "subtitle": null,
      "topics": [
        "recursion"
      ]
    }
  },
  {
    "info": {
      "excerpt": "实现一个函数来验证二叉树是否为有效的二叉搜索树",
      "title": "验证二叉搜索树"
    },
    "metadata": {
      "access": "standard",
      "author": "hiten",
      "companies": [],
      "created": 1724284800,
      "difficulty": "medium",
      "duration": 35,
      "featured": false,
      "format": "algo",
      "frameworkDefault": null,
      "frameworks": [],
      "href": "/questions/algo/binary-search-tree-validate",
      "importance": "low",
      "languages": [
        "js",
        "ts"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "binary-search-tree-validate",
      "subtitle": null,
      "topics": [
        "binary-tree",
        "binary-search-tree",
        "tree"
      ]
    }
  },
  {
    "info": {
      "excerpt": "构建一个骰子滚动器应用程序，模拟掷 6 面骰子的结果",
      "title": "骰子滚动器"
    },
    "metadata": {
      "access": "standard",
      "author": null,
      "companies": [],
      "created": 1719964800,
      "difficulty": "medium",
      "duration": 20,
      "featured": false,
      "format": "user-interface",
      "frameworkDefault": "react",
      "frameworks": [
        {
          "framework": "react",
          "href": "/questions/user-interface/dice-roller/react"
        },
        {
          "framework": "angular",
          "href": "/questions/user-interface/dice-roller/angular"
        },
        {
          "framework": "vue",
          "href": "/questions/user-interface/dice-roller/vue"
        },
        {
          "framework": "svelte",
          "href": "/questions/user-interface/dice-roller/svelte"
        }
      ],
      "href": "/questions/user-interface/dice-roller",
      "importance": "low",
      "languages": [
        "html",
        "css",
        "js"
      ],
      "nextQuestions": [],
      "published": true,
      "ranking": 100,
      "similarQuestions": [],
      "slug": "dice-roller",
      "subtitle": null,
      "topics": [
        "a11y"
      ]
    }
  }
]