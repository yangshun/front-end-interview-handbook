{
  "description": "var Component=(()=>{var m=Object.create;var i=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var x=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),w=(e,n)=>{for(var o in n)i(e,o,{get:n[o],enumerable:!0})},r=(e,n,o,l)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let a of p(n))!u.call(e,a)&&a!==o&&i(e,a,{get:()=>n[a],enumerable:!(l=h(n,a))||l.enumerable});return e};var f=(e,n,o)=>(o=e!=null?m(g(e)):{},r(n||!e||!e.__esModule?i(o,\"default\",{value:e,enumerable:!0}):o,e)),M=e=>r(i({},\"__esModule\",{value:!0}),e);var s=x((y,c)=>{c.exports=_jsx_runtime});var v={};w(v,{default:()=>_,frontmatter:()=>j});var t=f(s()),j={title:\"Modal Dialog\",excerpt:\"Design a modal/dialog component that shows a window overlaying the contents on the page\"};function d(e){let n=Object.assign({h2:\"h2\",p:\"p\",img:\"img\",h3:\"h3\",ul:\"ul\",li:\"li\",a:\"a\"},e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{children:\"Question\"}),`\n`,(0,t.jsx)(n.p,{children:\"Design a modal/dialog component that shows content in a window overlaying the page.\"}),`\n`,(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:\"/img/questions/modal-dialog/modal-dialog-example.png\",alt:\"Modal Dialog Example\"})}),`\n`,(0,t.jsx)(n.h3,{children:\"Real-life examples\"}),`\n`,(0,t.jsxs)(n.ul,{children:[`\n`,(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:\"https://getbootstrap.com/docs/5.3/components/modal\",children:\"Modal \\xB7 Bootstrap v5.3\"})}),`\n`,(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:\"https://mui.com/material-ui/react-modal/\",children:\"React Modal component - Material UI\"})}),`\n`,(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:\"https://www.radix-ui.com/docs/primitives/components/dialog\",children:\"Dialog \\u2014 Radix UI\"})}),`\n`]})]})}function D(e={}){let{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(d,e)})):d(e)}var _=D;return M(v);})();\n;return Component;",
  "metadata": {
    "access": "premium",
    "author": null,
    "companies": [
      "tiktok"
    ],
    "created": 1674950400,
    "difficulty": "medium",
    "duration": 30,
    "excerpt": "Design a modal/dialog component that shows a window overlaying the contents on the page",
    "featured": false,
    "format": "system-design",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/system-design/modal-dialog",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 11,
    "similarQuestions": [],
    "slug": "modal-dialog",
    "subtitle": null,
    "title": "Modal Dialog",
    "topics": [
      "a11y",
      "ui-component"
    ]
  },
  "solution": "var Component=(()=>{var s=Object.create;var d=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var f=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports),b=(t,n)=>{for(var o in n)d(t,o,{get:n[o],enumerable:!0})},a=(t,n,o,l)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let i of p(n))!g.call(t,i)&&i!==o&&d(t,i,{get:()=>n[i],enumerable:!(l=m(n,i))||l.enumerable});return t};var v=(t,n,o)=>(o=t!=null?s(u(t)):{},a(n||!t||!t.__esModule?d(o,\"default\",{value:t,enumerable:!0}):o,t)),w=t=>a(d({},\"__esModule\",{value:!0}),t);var h=f((I,r)=>{r.exports=_jsx_runtime});var x={};b(x,{default:()=>k,tableOfContents:()=>y});var e=v(h()),y=[{depth:2,value:\"Requirements exploration\",id:\"requirements-exploration\",children:[{depth:3,value:\"What are the components of the modal?\",id:\"what-are-the-components-of-the-modal\"},{depth:3,value:\"What amount of flexibility does the user have in customizing the design?\",id:\"what-amount-of-flexibility-does-the-user-have-in-customizing-the-design\"},{depth:3,value:\"What devices will this component be used on?\",id:\"what-devices-will-this-component-be-used-on\"}]},{depth:2,value:\"Architecture / high-level design\",id:\"architecture--high-level-design\"},{depth:2,value:\"Data model\",id:\"data-model\"},{depth:2,value:\"Interface definition (API)\",id:\"interface-definition-api\",children:[{depth:3,value:\"General props\",id:\"general-props\"},{depth:3,value:\"Modal\",id:\"modal\"},{depth:3,value:\"Modal.Header\",id:\"modalheader\"},{depth:3,value:\"Modal.Body\",id:\"modalbody\"},{depth:3,value:\"Modal.Footer\",id:\"modalfooter\"},{depth:3,value:\"Customizing appearance\",id:\"customizing-appearance\"}]},{depth:2,value:\"Optimizations and deep dive\",id:\"optimizations-and-deep-dive\",children:[{depth:3,value:\"Rendering\",id:\"rendering\",children:[{depth:4,value:\"Breaking out of DOM hierarchy\",id:\"breaking-out-of-dom-hierarchy\"},{depth:4,value:\"Overlay\",id:\"overlay\"},{depth:4,value:\"Centered modal\",id:\"centered-modal\"},{depth:4,value:\"Maximum height\",id:\"maximum-height\"},{depth:4,value:\"Scroll lock\",id:\"scroll-lock\"},{depth:4,value:\"Rendering in HTML or JavaScript\",id:\"rendering-in-html-or-javascript\"}]},{depth:3,value:\"Accessibility (a11y)\",id:\"accessibility-a11y\",children:[{depth:4,value:\"Mouse interactions\",id:\"mouse-interactions\"},{depth:4,value:\"Focus management\",id:\"focus-management\"},{depth:4,value:\"Keyboard interactions\",id:\"keyboard-interactions\"},{depth:4,value:\"WAI-ARIA roles, states, and properties\",id:\"wai-aria-roles-states-and-properties\"},{depth:4,value:\"<dialog> element\",id:\"dialog-element\"}]},{depth:3,value:\"Animations and transitions\",id:\"animations-and-transitions\"},{depth:3,value:\"Internationalization (i18n)\",id:\"internationalization-i18n\"},{depth:3,value:\"Stacked modals\",id:\"stacked-modals\"},{depth:3,value:\"Advanced topics\",id:\"advanced-topics\"}]},{depth:2,value:\"References\",id:\"references\"}];function c(t){let n=Object.assign({h2:\"h2\",h3:\"h3\",p:\"p\",hr:\"hr\",pre:\"pre\",code:\"code\",table:\"table\",thead:\"thead\",tr:\"tr\",th:\"th\",tbody:\"tbody\",td:\"td\",a:\"a\",h4:\"h4\",ol:\"ol\",li:\"li\",strong:\"strong\",ul:\"ul\",img:\"img\"},t.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h2,{id:\"requirements-exploration\",children:\"Requirements exploration\"}),`\n`,(0,e.jsx)(n.h3,{id:\"what-are-the-components-of-the-modal\",children:\"What are the components of the modal?\"}),`\n`,(0,e.jsx)(n.p,{children:\"It's up to you to decide. At the basic level it should allow customization of the contents. Whether to add built-in support for close buttons, titles, footer actions will be up to you.\"}),`\n`,(0,e.jsx)(n.h3,{id:\"what-amount-of-flexibility-does-the-user-have-in-customizing-the-design\",children:\"What amount of flexibility does the user have in customizing the design?\"}),`\n`,(0,e.jsx)(n.p,{children:\"Users should be able to customize colors, fonts, padding, etc, of the modal elements to match their branding.\"}),`\n`,(0,e.jsx)(n.h3,{id:\"what-devices-will-this-component-be-used-on\",children:\"What devices will this component be used on?\"}),`\n`,(0,e.jsx)(n.p,{children:\"All devices \\u2014 mobile, tablet, desktop.\"}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,`\n`,(0,e.jsx)(n.h2,{id:\"architecture--high-level-design\",children:\"Architecture / high-level design\"}),`\n`,(0,e.jsx)(n.p,{children:\"Modals, like many components that reveal content, have a trigger element and the contents elements. Modals can be opened through user actions or background actions, so we should decouple the trigger source from the modal contents.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Basic modals that only include the contents don't have complicated architecture. However, many modals from UI libraries have three distinct sections: header, body, footer.\"}),`\n`,(0,e.jsx)(n.p,{children:\"An example usage of modal components in React, with event handlers omitted.\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",children:`<Modal>\n  <Modal.Header>My Modal Title</Modal.Header>\n  <Modal.Body>\n    <p>Modal body text goes here.</p>\n  </Modal.Body>\n  <Modal.Footer>\n    <button>Close</button>\n    <button>Confirm</button>\n  </Modal.Footer>\n</Modal>\n`})}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Component\"}),(0,e.jsx)(n.th,{children:\"Role\"})]})}),(0,e.jsxs)(n.tbody,{children:[(0,e.jsxs)(n.tr,{children:[(0,e.jsxs)(n.td,{children:[\"Modal Root (\",(0,e.jsx)(n.code,{children:\"Modal\"}),\")\"]}),(0,e.jsx)(n.td,{children:\"Root component, coordinates events between the inner components.\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"Modal Overlay\"}),(0,e.jsx)(n.td,{children:\"Component that renders the background overlay, usually dimming out the page contents.\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsxs)(n.td,{children:[\"Modal Header (\",(0,e.jsx)(n.code,{children:\"Modal.Header\"}),\")\"]}),(0,e.jsx)(n.td,{children:\"The top section of the modal, contains the title and a close button.\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsxs)(n.td,{children:[\"Modal Body (\",(0,e.jsx)(n.code,{children:\"Modal.Body\"}),\")\"]}),(0,e.jsx)(n.td,{children:\"The main contents of the modal.\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsxs)(n.td,{children:[\"Modal Footer (\",(0,e.jsx)(n.code,{children:\"Modal.Footer\"}),\")\"]}),(0,e.jsx)(n.td,{children:\"Optional bottom section of the modal, usually contains close/submit buttons.\"})]})]})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"In React, components can communicate with its parents using context or props. We choose to use context here since we are using a composition model here and passing props is inconvenient. \",(0,e.jsx)(n.code,{children:\"<Modal>\"}),\" should contain a context provider that provides the config options (\",(0,e.jsx)(n.code,{children:\"<Modal>\"}),\"'s \",(0,e.jsx)(n.code,{children:\"props\"}),\") to all its child components in case they need it.\"]}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.h2,{id:\"data-model\",children:\"Data model\"}),`\n`,(0,e.jsx)(n.p,{children:\"Note that for designing components, it might make sense to design the interface/API first or both data model and API concurrently. It depends on the component at hand. Feel free to jump between the two sections.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Modal components do not need much state. We'll build the modal as a controlled component, which is the usual approach taken by libraries. Hence the open/closed state is managed outside the component.\"}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"State\"}),(0,e.jsx)(n.th,{children:\"Type\"}),(0,e.jsx)(n.th,{children:\"Description\"})]})}),(0,e.jsx)(n.tbody,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"previousFocusElement\"})}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"HTMLElement\"})}),(0,e.jsxs)(n.td,{children:[\"The DOM element in focus before the modal was shown. Read more on why this is needed in the \",(0,e.jsx)(n.a,{href:\"#focus-management\",children:\"Focus Management\"}),\" section.\"]})]})})]}),`\n`,(0,e.jsx)(n.p,{children:\"See below for configuration options which are also part of the data model.\"}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.h2,{id:\"interface-definition-api\",children:\"Interface definition (API)\"}),`\n`,(0,e.jsx)(n.h3,{id:\"general-props\",children:\"General props\"}),`\n`,(0,e.jsx)(n.p,{children:\"These props apply to most of the components.\"}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Prop\"}),(0,e.jsx)(n.th,{children:\"Type\"}),(0,e.jsx)(n.th,{children:\"Description\"})]})}),(0,e.jsxs)(n.tbody,{children:[(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"children\"})}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"React.Node\"})}),(0,e.jsxs)(n.td,{children:[\"Children of the component. If using TypeScript/Flow, you can enforce specific components to be used as \",(0,e.jsx)(n.code,{children:\"children\"}),\".\"]})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"as\"})}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"string | Component\"})}),(0,e.jsx)(n.td,{children:\"In case there is a need to customize the underlying DOM element/component.\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"className\"})}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"string\"})}),(0,e.jsx)(n.td,{children:\"Classnames to add to components in case further visual customization is needed. May or may not be needed depending on theming approach.\"})]})]})]}),`\n`,(0,e.jsx)(n.h3,{id:\"modal\",children:(0,e.jsx)(n.code,{children:\"Modal\"})}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Prop\"}),(0,e.jsx)(n.th,{children:\"Type\"}),(0,e.jsx)(n.th,{children:\"Description\"})]})}),(0,e.jsxs)(n.tbody,{children:[(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"isOpen\"})}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the modal is open or closed.\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"onClose\"})}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"Function\"})}),(0,e.jsx)(n.td,{children:'Callback to be triggered when the modal is closed, possibly from pressing the close button or hitting the \"Escape\" key\".'})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"maxHeight\"})}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"number | undefined\"})}),(0,e.jsx)(n.td,{children:\"Max height of the modal. There should be a sensible default of around 80% of the viewport height.\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"width\"})}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"number | undefined\"})}),(0,e.jsx)(n.td,{children:\"Width of the modal. There should be a sensible default of 500-600px.\"})]})]})]}),`\n`,(0,e.jsx)(n.h3,{id:\"modalheader\",children:(0,e.jsx)(n.code,{children:\"Modal.Header\"})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Basic version doesn't need props other than \",(0,e.jsx)(n.code,{children:\"children\"}),\".\"]}),`\n`,(0,e.jsx)(n.h3,{id:\"modalbody\",children:(0,e.jsx)(n.code,{children:\"Modal.Body\"})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Basic version doesn't need props other than \",(0,e.jsx)(n.code,{children:\"children\"}),\".\"]}),`\n`,(0,e.jsx)(n.h3,{id:\"modalfooter\",children:(0,e.jsx)(n.code,{children:\"Modal.Footer\"})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Basic version doesn't need props other than \",(0,e.jsx)(n.code,{children:\"children\"}),\".\"]}),`\n`,(0,e.jsx)(n.h3,{id:\"customizing-appearance\",children:\"Customizing appearance\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Designing good APIs for customizing UI components can be found in the \",(0,e.jsx)(n.a,{href:\"/front-end-interview-guidebook/user-interface-components-api-design-principles\",children:\"Front End Interview Guidebook's UI Components API Design Principles Section\"}),\".\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Most of the modal's contents in the header/body/footer will be provided by the user, hence there isn't that much default styling a modal component need to provide.\"}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.h2,{id:\"optimizations-and-deep-dive\",children:\"Optimizations and deep dive\"}),`\n`,(0,e.jsx)(n.h3,{id:\"rendering\",children:\"Rendering\"}),`\n`,(0,e.jsx)(n.h4,{id:\"breaking-out-of-dom-hierarchy\",children:\"Breaking out of DOM hierarchy\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Rendering the modal is more tricky than it seems due to the fact that modals are being displayed over the page and does not follow the normal flow of page elements. It's important to render the modal outside of the DOM hierarchy of the parents, because if the parents contain styling that clips its contents, the modal contents might not be fully visible. Here's an example from the \",(0,e.jsx)(n.a,{href:\"https://beta.reactjs.org/reference/react-dom/createPortal#rendering-a-modal-dialog-with-a-portal\",children:\"React docs\"}),\" demonstrating the issue.\"]}),`\n`,(0,e.jsx)(\"iframe\",{src:\"https://codesandbox.io/embed/wnr51p?fontsize=14&hidenavigation=1&theme=dark&module=/App.js,/NoPortalExample.js,/PortalExample.js,/ModalContent.js,/styles.css&view=split\",style:{width:\"100%\",height:500,border:0,borderRadius:4,overflow:\"hidden\"},title:\"Modal Clipping Example\",allow:\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"In React, rendering outside the DOM hierarchy of the parent component can be achieved using \",(0,e.jsx)(n.a,{href:\"https://beta.reactjs.org/reference/react-dom/createPortal\",children:\"React Portals\"}),\". Common use cases of portals include tooltips, dropdown menus, popovers.\"]}),`\n`,(0,e.jsx)(n.h4,{id:\"overlay\",children:\"Overlay\"}),`\n`,(0,e.jsx)(n.p,{children:\"To help users focus on the content within the modal, there is usually an overlay/backdrop to dim out the page's contents. To render an element that covers the whole page, we can use the following CSS:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-css\",children:`.modal-overlay {\n  /* Black color with some opacity. */\n  background-color: rgba(0, 0, 0, 0.7);\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n`})}),`\n`,(0,e.jsx)(n.h4,{id:\"centered-modal\",children:\"Centered modal\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"To center the modal contents within the modal overlay, we can add the following styles to the \",(0,e.jsx)(n.code,{children:\".modal-overlay\"}),\":\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-css\",children:`.modal-overlay {\n  /* Original styles are omitted. */\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n}\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"which will work with the following HTML structure.\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-html\",children:`<div className=\"modal-overlay\">\n  <div className=\"modal-contents\">...</div>\n</div>\n`})}),`\n`,(0,e.jsxs)(n.p,{children:[\"If vertical centering of the contents is desired, \",(0,e.jsx)(n.code,{children:\"align-items: center\"}),\" can be added to \",(0,e.jsx)(n.code,{children:\".modal-overlay\"}),\".\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Here's a basic example of a modal with an overlay and optional vertical center mode:\"}),`\n`,(0,e.jsx)(\"iframe\",{src:\"https://codesandbox.io/embed/t1oldf?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split\",style:{width:\"100%\",height:500,border:0,borderRadius:4,overflow:\"hidden\"},title:\"Modal Example\",allow:\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"}),`\n`,(0,e.jsx)(n.h4,{id:\"maximum-height\",children:\"Maximum height\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Since the modal can contain a lot of contents, we can set a default maximum height for the modal such that the excess items will be scrollable within \",(0,e.jsx)(n.code,{children:\"Modal.Body\"}),\". This height can also be customized by specifying the \",(0,e.jsx)(n.code,{children:\"maxHeight\"}),\" prop.\"]}),`\n`,(0,e.jsx)(n.h4,{id:\"scroll-lock\",children:\"Scroll lock\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"When the modal is shown, the modal contents are in focus. To prevent the user from scrolling the background contents, the page should lock page-level scrolling. One way is to add \",(0,e.jsx)(n.code,{children:\"overflow: hidden\"}),\" to \",(0,e.jsx)(n.code,{children:\"<body>\"}),\".\"]}),`\n`,(0,e.jsx)(n.h4,{id:\"rendering-in-html-or-javascript\",children:\"Rendering in HTML or JavaScript\"}),`\n`,(0,e.jsx)(n.p,{children:\"The modal can either be:\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Rendered into the HTML like \",(0,e.jsx)(n.a,{href:\"https://getbootstrap.com/docs/5.3/components/modal/\",children:\"Bootstrap's Modals\"}),\". The modal is initially hidden from view via \",(0,e.jsx)(n.code,{children:\"display: none\"}),\" / \",(0,e.jsx)(n.code,{children:\"opacity: 0\"}),\" / \",(0,e.jsx)(n.code,{children:\"hidden\"}),\" attribute, and those styles are toggled when the modal is to be shown.\"]}),`\n`,(0,e.jsx)(n.li,{children:\"Rendered on the fly via JavaScript after the modal trigger button is activated.\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"The pros of rendering in the HTML first is better runtime performance due to fewer DOM operations needed to show the modal. The downside is that the HTML can be unnecessarily bloated especially if the modal is never shown at all. Since modal contents usually contain secondary information, they shouldn't contribute towards SEO and doesn't need to be server side-rendered. The benefits of rendering the modal beforehand in HTML are relatively minor.\"}),`\n`,`\n`,(0,e.jsx)(n.h3,{id:\"accessibility-a11y\",children:\"Accessibility (a11y)\"}),`\n`,(0,e.jsx)(n.h4,{id:\"mouse-interactions\",children:\"Mouse interactions\"}),`\n`,(0,e.jsx)(n.p,{children:\"Typically, clicking outside the modal (on the overlay) will close the modal. We have to ensure that clicks within the modal do not close the modal.\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`function clickListener(event) {\n  // No-op if clicked element is a\n  // descendant of the modal contents.\n  if ($modalContentsElement.contains(event.target)) {\n    return;\n  }\n\n  closeModal();\n}\n\ndocument.addEventListener('mousedown', clickListener);\ndocument.addEventListener('touchstart', clickListener);\n`})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Remember to remove the \",(0,e.jsx)(n.code,{children:\"clickListener\"}),\"s when the modal is closed.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Here's an example in React:\"}),`\n`,(0,e.jsx)(\"iframe\",{src:\"https://codesandbox.io/embed/74fyqc?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split\",style:{width:\"100%\",height:500,border:0,borderRadius:4,overflow:\"hidden\"},title:\"Modal Dismiss On Click Outside\",allow:\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"}),`\n`,(0,e.jsx)(n.h4,{id:\"focus-management\",children:\"Focus management\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"The most complicated aspect of implementing a modal is probably focus management. Contents within modals are meant to be treated like a separate document; using the \",(0,e.jsx)(\"kbd\",{children:\"Tab\"}),' key cycles through focusable elements within the dialog only and focus can never be on elements outside of the component for as long as the modal is shown. This behavior/phenomenon is known as \"focus trapping\".']}),`\n`,(0,e.jsxs)(n.p,{children:[\"When a modal opens, focus moves to an element inside the modal. Generally, focus is set on the first focusable element, but there are some exceptions as mentioned in \",(0,e.jsx)(n.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/\",children:\"Dialog (Modal) pattern\"}),\".\"]}),`\n`,(0,e.jsx)(n.p,{children:\"When a modal closes, focus returns to the element that opened the modal (unless the element no longer exists, then focus on another reasonable element).\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"How to implement focus management for modals\"}),\":\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:\"When the modal is first opened, keep a reference to the element that opened the modal in the modal's state.\"}),`\n`,(0,e.jsx)(n.li,{children:\"Focus on an element inside the modal.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Add \",(0,e.jsx)(n.code,{children:\"keydown\"}),\" listeners for the \",(0,e.jsx)(\"kbd\",{children:\"Tab\"}),\" key that contains the following logic:\",`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"When the \",(0,e.jsx)(\"kbd\",{children:\"Tab\"}),\" key is pressed, determine if the focus should be shifted to the next or previous tabbable element by checking if the \",(0,e.jsx)(\"kbd\",{children:\"Shift\"}),\" key is also pressed (via the \",(0,e.jsx)(n.code,{children:\"shiftKey\"}),\" value on the \",(0,e.jsx)(n.code,{children:\"KeyboardEvent\"}),\").\"]}),`\n`,(0,e.jsx)(n.li,{children:\"Find all tabbable elements within the modal.\"}),`\n`,(0,e.jsx)(n.li,{children:\"From the current focused element, find the next/previous tabbable element.\"}),`\n`,(0,e.jsx)(n.li,{children:\"Focus on that new element.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.li,{children:\"When the modal is closed, hide the modal and move focus to the element that opened the modal.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"In practice, focus trapping can be done via \",(0,e.jsx)(n.a,{href:\"https://focus-trap.github.io/focus-trap/\",children:\"focus-trap\"}),\" libraries. If using React, the \",(0,e.jsx)(n.a,{href:\"https://github.com/theKashey/react-focus-lock\",children:(0,e.jsx)(n.code,{children:\"react-focus-lock\"})}),\" library which is what \",(0,e.jsx)(n.a,{href:\"https://reach.tech/dialog\",children:\"Reach UI's Dialog component\"}),\" uses.\"]}),`\n`,(0,e.jsx)(n.h4,{id:\"keyboard-interactions\",children:\"Keyboard interactions\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"The following is extracted from the \",(0,e.jsx)(n.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/\",children:\"Dialog (Modal) pattern\"}),\":\"]}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Key\"}),(0,e.jsx)(n.th,{children:\"Description\"})]})}),(0,e.jsxs)(n.tbody,{children:[(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:(0,e.jsx)(\"kbd\",{children:\"Tab\"})}),(0,e.jsx)(n.td,{children:\"Moves focus to the next tabbable element inside the modal. If focus is on the last tabbable element inside the modal, moves focus to the first tabbable element inside the modal.\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsxs)(n.td,{children:[(0,e.jsx)(\"kbd\",{children:\"Shift\"}),\" + \",(0,e.jsx)(\"kbd\",{children:\"Tab\"})]}),(0,e.jsx)(n.td,{children:\"Moves focus to the previous tabbable element inside the modal. If focus is on the first tabbable element inside the modal, moves focus to the last tabbable element inside the modal.\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:(0,e.jsx)(\"kbd\",{children:\"Esc\"})}),(0,e.jsx)(n.td,{children:\"Closes the modal.\"})]})]})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Focus trapping is essential for the required \",(0,e.jsx)(\"kbd\",{children:\"Tab\"}),'-ing behavior, otherwise the focus will \"leak\" out of the modal:']}),`\n`,(0,e.jsx)(n.h4,{id:\"wai-aria-roles-states-and-properties\",children:\"WAI-ARIA roles, states, and properties\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"The following is extracted from the \",(0,e.jsx)(n.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/\",children:\"Dialog (Modal) pattern\"}),\".\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"The element that serves as the modal container has a role of \",(0,e.jsx)(n.code,{children:\"dialog\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"All elements required to operate the modal are descendants of the element that has role \",(0,e.jsx)(n.code,{children:\"dialog\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"The modal container element has \",(0,e.jsx)(n.code,{children:\"aria-modal\"}),\" set to \",(0,e.jsx)(n.code,{children:\"true\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"The modal has either:\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"A value set for the \",(0,e.jsx)(n.code,{children:\"aria-labelledby\"}),\" property that refers to a visible modal title.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"A label specified by \",(0,e.jsx)(n.code,{children:\"aria-label\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Optional \",(0,e.jsx)(n.code,{children:\"aria-describedby\"}),\" property is set on the element with the \",(0,e.jsx)(n.code,{children:\"dialog\"}),\" role to indicate which element or elements in the dialog contain content that describes the primary purpose or message of the dialog. Read the full guidance at \",(0,e.jsx)(n.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/\",children:\"Dialog (Modal) pattern\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.h4,{id:\"dialog-element\",children:[(0,e.jsx)(n.code,{children:\"<dialog>\"}),\" element\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"HTML now has a native \",(0,e.jsx)(n.code,{children:\"<dialog>\"}),\" element that can be used in creating modal dialogs as it provides usability and accessibility features that must be replicated if using other elements for a similar purpose.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"However, it is still relatively new and browser compatibility is not great. Moreover, behaviors like focus trapping still has to be manually implemented, which makes using a native \",(0,e.jsx)(n.code,{children:\"<dialog>\"}),\" element less compelling.\"]}),`\n`,(0,e.jsx)(n.h3,{id:\"animations-and-transitions\",children:\"Animations and transitions\"}),`\n`,(0,e.jsx)(n.p,{children:\"If animation of the modal elements is desired and the transitions of the overlay and the contents need to be independent (e.g. overlay fades in while the contents translates up vertically), the DOM structure will have to be changed and the contents cannot be rendered within the overlay's DOM. A structure similar to like this will be required:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-html\",children:`<div>\n  <!-- The overlay, rendered as a fixed sibling to the contents. -->\n  <div class=\"modal-overlay\" aria-hidden=\"true\"></div>\n  <!-- Full screen container to center the panel. -->\n  <div class=\"modal-contents-container\">\n    <div class=\"modal-contents\">...</div>\n  </div>\n</div>\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"Here's an example of the entrance animation in React:\"}),`\n`,(0,e.jsx)(\"iframe\",{src:\"https://codesandbox.io/embed/imlco8?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split\",style:{width:\"100%\",height:500,border:0,borderRadius:4,overflow:\"hidden\"},title:\"Modal Animations\",allow:\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"}),`\n`,(0,e.jsx)(n.p,{children:\"Exit transitions are non-trivial to implement properly in React because conditional rendering causes the DOM elements to be removed from the document when they are no longer needed on the page. Here's an example of a modal where the entrance and exit are both animated.\"}),`\n`,(0,e.jsx)(\"iframe\",{src:\"https://codesandbox.io/embed/t3wwxr?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split\",style:{width:\"100%\",height:500,border:0,borderRadius:4,overflow:\"hidden\"},title:\"Modal Animations\",allow:\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"}),`\n`,(0,e.jsx)(n.h3,{id:\"internationalization-i18n\",children:\"Internationalization (i18n)\"}),`\n`,(0,e.jsx)(n.p,{children:\"Since all user-facing strings are provided by the user, strings can be displayed as-is. However, do note that some strings can be long in certain languages, so overflowing text should either by truncated or wrapped. Text shouldn't overflow out of the modal elements. You usually don't want the modal title/footer to be more than a line long, so truncation is recommended here.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"For RTL languages, the modal elements have to be horizontally flipped. To achieve this, the root modal component can take in a \",(0,e.jsx)(n.code,{children:\"direction\"}),\" config option/prop and render contents depending on the value.\"]}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{src:\"/img/questions/modal-dialog/modal-dialog-rtl.png\",alt:\"Modal Dialog Right-to-left Example\"})}),`\n`,(0,e.jsx)(n.h3,{id:\"stacked-modals\",children:\"Stacked modals\"}),`\n`,(0,e.jsx)(n.p,{children:\"It is possible for modal contents to contain triggers that present even more modals, so the following needs to be considered:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Decide whether there should be an overlay per modal level, which will visually make the backdrop darker the higher the level of stacking.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Dismissing a modal via the \",(0,e.jsx)(\"kbd\",{children:\"Esc\"}),\" key or clicking outside the topmost modal's contents should only dismiss the topmost modal and not all the modals.\"]}),`\n`,(0,e.jsx)(n.li,{children:\"Dismissing a lower layer modal should also dismiss all the modals on top of it (or make this behavior customizable).\"}),`\n`]}),`\n`,(0,e.jsx)(n.h3,{id:\"advanced-topics\",children:\"Advanced topics\"}),`\n`,`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Tooltips and dropdown menus within a modal.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Alert dialog role and \",(0,e.jsx)(n.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/alertdialog/\",children:\"ARIA pattern\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.h2,{id:\"references\",children:\"References\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Themed examples\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"https://getbootstrap.com/docs/5.3/components/modal\",children:\"Modal \\xB7 Bootstrap v5.3\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"https://mui.com/material-ui/react-modal/\",children:\"React Modal component - Material UI\"})}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Headless examples\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"https://www.radix-ui.com/docs/primitives/components/dialog\",children:\"Dialog \\u2014 Radix UI\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"https://reach.tech/dialog\",children:\"Dialog (Modal) \\u2014 Reach UI\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"https://headlessui.com/react/dialog\",children:\"Dialog (Modal) - Headless UI\"})}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Aria Authoring Practices Guide (APG)\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/\",children:\"Dialog (Modal) Pattern\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/alertdialog/\",children:\"Alert and Message Dialogs Pattern\"})}),`\n`]}),`\n`]}),`\n`]})]})}function M(t={}){let{wrapper:n}=t.components||{};return n?(0,e.jsx)(n,Object.assign({},t,{children:(0,e.jsx)(c,t)})):c(t)}var k=M;return w(x);})();\n;return Component;"
}