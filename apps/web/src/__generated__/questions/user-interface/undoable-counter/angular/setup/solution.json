{
  "author": "michalgrzegorczyk-dev",
  "files": {
    "/angular.json": {
      "code": "{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"version\": 1,\n  \"newProjectRoot\": \"projects\",\n  \"defaultProject\": \"greatfrontend\",\n  \"projects\": {\n    \"greatfrontend\": {\n      \"projectType\": \"application\",\n      \"schematics\": {},\n      \"root\": \"\",\n      \"sourceRoot\": \"src\",\n      \"prefix\": \"app\",\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:browser\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app\",\n            \"index\": \"src/index.html\",\n            \"main\": \"src/main.ts\",\n            \"polyfills\": [\"zone.js\"],\n            \"tsConfig\": \"tsconfig.app.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          },\n          \"configurations\": {\n            \"production\": {\n              \"budgets\": [\n                {\n                  \"type\": \"initial\",\n                  \"maximumWarning\": \"500kb\",\n                  \"maximumError\": \"1mb\"\n                },\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"2kb\",\n                  \"maximumError\": \"4kb\"\n                }\n              ],\n              \"outputHashing\": \"all\"\n            },\n            \"development\": {\n              \"buildOptimizer\": false,\n              \"optimization\": false,\n              \"vendorChunk\": true,\n              \"extractLicenses\": false,\n              \"sourceMap\": true,\n              \"namedChunks\": true\n            }\n          },\n          \"defaultConfiguration\": \"production\"\n        },\n        \"serve\": {\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\n          \"configurations\": {\n            \"production\": {\n              \"browserTarget\": \"greatfrontend:build:production\"\n            },\n            \"development\": {\n              \"browserTarget\": \"greatfrontend:build:development\"\n            }\n          },\n          \"defaultConfiguration\": \"development\"\n        },\n        \"extract-i18n\": {\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n          \"options\": {\n            \"browserTarget\": \"greatfrontend:build\"\n          }\n        },\n        \"test\": {\n          \"builder\": \"@angular-devkit/build-angular:karma\",\n          \"options\": {\n            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],\n            \"tsConfig\": \"tsconfig.spec.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          }\n        }\n      }\n    }\n  },\n  \"cli\": {\n    \"analytics\": \"7ca5c4d0-e5db-4d23-9ffd-8c8c042e34e7\"\n  }\n}\n"
    },
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\n    \"/src/app/app.component.ts\",\n    \"/src/app/app.component.html\",\n    \"/src/styles.css\"\n  ],\n  \"activeFile\": \"/src/app/app.component.ts\",\n  \"environment\": \"angular-cli\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/undoable-counter-angular-solution\",\n  \"author\": \"michalgrzegorczyk-dev\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/common\": \"16.2.4\",\n    \"@angular/compiler\": \"16.2.4\",\n    \"@angular/core\": \"16.2.4\",\n    \"@angular/forms\": \"16.2.4\",\n    \"@angular/platform-browser\": \"16.2.4\",\n    \"@angular/platform-browser-dynamic\": \"16.2.4\",\n    \"rxjs\": \"7.8.0\",\n    \"zone.js\": \"0.13.1\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"16.2.1\",\n    \"@angular/cli\": \"16.2.1\",\n    \"@angular/compiler-cli\": \"16.2.4\",\n    \"@types/jasmine\": \"4.3.5\",\n    \"jasmine-core\": \"4.6.0\",\n    \"karma\": \"6.4.2\",\n    \"karma-chrome-launcher\": \"3.2.0\",\n    \"karma-coverage\": \"2.2.1\",\n    \"karma-jasmine\": \"5.1.0\",\n    \"karma-jasmine-html-reporter\": \"2.1.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\"\n  }\n}\n"
    },
    "/src/app/app.component.css": {
      "code": ""
    },
    "/src/app/app.component.html": {
      "code": "<div>\n  <div class=\"row\">\n    <button\n      [disabled]=\"counterService.history.length === 0\"\n      (click)=\"onUndo()\">\n      Undo\n    </button>\n    <button\n      [disabled]=\"counterService.undoHistory.length === 0\"\n      (click)=\"onRedo()\">\n      Redo\n    </button>\n    <button (click)=\"onReset()\">Reset</button>\n  </div>\n  <hr />\n  <div class=\"row\">\n    <button (click)=\"onClickOperation('/2')\">/2</button>\n    <button (click)=\"onClickOperation('-1')\">-1</button>\n    <div class=\"counter\">{{ counterService.counter }}</div>\n    <button (click)=\"onClickOperation('+1')\">+1</button>\n    <button (click)=\"onClickOperation('x2')\">x2</button>\n  </div>\n  <hr />\n  <div class=\"row\">\n    <table *ngIf=\"counterService.history.length > 0\">\n      <thead>\n        <tr>\n          <th>Operation</th>\n          <th>Old</th>\n          <th>New</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of counterService.history\">\n          <td>{{ item.operation }}</td>\n          <td>{{ item.oldCounter }}</td>\n          <td>{{ item.newCounter }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n"
    },
    "/src/app/app.component.ts": {
      "code": "import { Component, inject } from '@angular/core';\nimport { UndoableCounterService } from './undoable-counter.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  counterService = inject(UndoableCounterService);\n\n  onReset() {\n    this.counterService.resetCounter();\n  }\n\n  onUndo() {\n    this.counterService.undo();\n  }\n\n  onRedo() {\n    this.counterService.redo();\n  }\n\n  onClickOperation(operation: string) {\n    this.counterService.clickOperation(operation);\n  }\n}\n"
    },
    "/src/app/app.models.ts": {
      "code": "export interface Operation {\n  type: string;\n  number: number;\n}\n\nexport interface History {\n  operation: string;\n  oldCounter: number;\n  newCounter: number;\n}\n"
    },
    "/src/app/app.module.ts": {
      "code": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, FormsModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n"
    },
    "/src/app/undoable-counter.service.ts": {
      "code": "import { Injectable } from '@angular/core';\nimport { Operation, History } from './app.models';\n\nconst OPERATIONS: { [key: string]: Operation } = {\n  '/2': { type: 'divide', number: 2 },\n  '-1': { type: 'decrement', number: 1 },\n  '+1': { type: 'increment', number: 1 },\n  x2: { type: 'multiply', number: 2 },\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UndoableCounterService {\n  counter = 0;\n  history: History[] = [];\n  undoHistory: History[] = [];\n\n  performOperation(\n    counter: number,\n    operationLabel: string,\n  ): number {\n    const operation = OPERATIONS[operationLabel];\n    switch (operation.type) {\n      case 'increment':\n        return counter + operation.number;\n      case 'decrement':\n        return counter - operation.number;\n      case 'multiply':\n        return counter * operation.number;\n      case 'divide':\n        return counter / operation.number;\n      default:\n        return counter;\n    }\n  }\n\n  resetCounter() {\n    this.counter = 0;\n    this.history = [];\n    this.undoHistory = [];\n  }\n\n  undo() {\n    const [latest, ...earlierHistory] = this.history;\n    this.counter = latest.oldCounter;\n    this.undoHistory = [latest, ...this.undoHistory];\n    this.history = earlierHistory;\n  }\n\n  redo() {\n    const [latest, ...earlierUndoHistory] =\n      this.undoHistory;\n    this.counter = latest.newCounter;\n    this.undoHistory = earlierUndoHistory;\n    this.history = [latest, ...this.history];\n  }\n\n  clickOperation(operation: string) {\n    const oldCounter = this.counter;\n    const newCounter = this.performOperation(\n      this.counter,\n      operation,\n    );\n    this.counter = newCounter;\n    this.history = [\n      { operation, oldCounter, newCounter },\n      ...this.history,\n    ];\n    this.undoHistory = [];\n  }\n}\n"
    },
    "/src/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Angular</title>\n    <base href=\"/\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n  </head>\n  <body>\n    <app-root></app-root>\n  </body>\n</html>\n"
    },
    "/src/main.ts": {
      "code": "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"
    },
    "/src/styles.css": {
      "code": "/* You can add global styles to this file, and also import other style files */\nbody {\n  font-family: sans-serif;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.counter {\n  font-size: 24px;\n  margin-left: 24px;\n  margin-right: 24px;\n}\n"
    },
    "/tsconfig.app.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/app\",\n    \"types\": []\n  },\n  \"files\": [\"src/main.ts\"],\n  \"include\": [\"src/**/*.d.ts\"]\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"compileOnSave\": false,\n  \"compilerOptions\": {\n    \"baseUrl\": \"./\",\n    \"outDir\": \"./dist/out-tsc\",\n    \"forceConsistentCasingInFileNames\": true,\n    \"strict\": true,\n    \"noImplicitOverride\": true,\n    \"noPropertyAccessFromIndexSignature\": true,\n    \"noImplicitReturns\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"sourceMap\": true,\n    \"declaration\": false,\n    \"downlevelIteration\": true,\n    \"experimentalDecorators\": true,\n    \"moduleResolution\": \"node\",\n    \"target\": \"es2020\",\n    \"module\": \"esnext\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"]\n  },\n  \"angularCompilerOptions\": {\n    \"enableI18nLegacyMessageIdFormat\": false,\n    \"strictInjectionParameters\": true,\n    \"strictInputAccessModifiers\": true,\n    \"strictTemplates\": true\n  }\n}\n"
    },
    "/tsconfig.spec.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/spec\",\n    \"types\": [\"jasmine\"]\n  },\n  \"include\": [\"src/**/*.spec.ts\", \"src/**/*.d.ts\"]\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/app/app.component.ts",
      "/src/app/app.component.html",
      "/src/styles.css"
    ],
    "activeFile": "/src/app/app.component.ts",
    "environment": "angular-cli"
  }
}