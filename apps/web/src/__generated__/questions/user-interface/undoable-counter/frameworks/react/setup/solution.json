{
  "author": "yangshun",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\"/src/App.js\", \"/src/styles.css\"],\n  \"activeFile\": \"/src/App.js\",\n  \"environment\": \"create-react-app\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/undoable-counter-react-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useState } from 'react';\n\nconst OPERATIONS = {\n  '/2': { type: 'divide', number: 2 },\n  '-1': { type: 'decrement', number: 1 },\n  '+1': { type: 'increment', number: 1 },\n  x2: { type: 'multiply', number: 2 },\n};\n\nfunction performOperation(counter, operationLabel) {\n  const operation = OPERATIONS[operationLabel];\n  switch (operation.type) {\n    case 'increment':\n      return counter + operation.number;\n    case 'decrement':\n      return counter - operation.number;\n    case 'multiply':\n      return counter * operation.number;\n    case 'divide':\n      return counter / operation.number;\n    default:\n      return counter;\n  }\n}\n\nfunction UndoableCounterHistory({ history }) {\n  if (history.length === 0) {\n    return null;\n  }\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Operation</th>\n          <th>Old</th>\n          <th>New</th>\n        </tr>\n      </thead>\n      <tbody>\n        {history.map((item, index) => (\n          <tr key={index}>\n            <td>{item.operation}</td>\n            <td>{item.oldCounter}</td>\n            <td>{item.newCounter}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default function UndoableCounter() {\n  const [counter, setCounter] = useState(0);\n  const [history, setHistory] = useState([]);\n  const [undoHistory, setUndoHistory] = useState([]);\n\n  function onReset() {\n    setCounter(0);\n    setHistory([]);\n    setUndoHistory([]);\n  }\n\n  function onUndo() {\n    const [latest, ...earlierHistory] = history;\n    setCounter(latest.oldCounter);\n    setUndoHistory([latest, ...undoHistory]);\n    setHistory(earlierHistory);\n  }\n\n  function onRedo() {\n    const [latest, ...earlierUndoHistory] = undoHistory;\n    setCounter(latest.newCounter);\n    setUndoHistory(earlierUndoHistory);\n    setHistory([latest, ...history]);\n  }\n\n  function onClickOperation(operation) {\n    const oldCounter = counter;\n    const newCounter = performOperation(counter, operation);\n    setCounter(newCounter);\n    setHistory([\n      { operation, oldCounter, newCounter },\n      ...history,\n    ]);\n    setUndoHistory([]);\n  }\n\n  return (\n    <div>\n      <div className=\"row\">\n        <button\n          disabled={history.length === 0}\n          onClick={onUndo}>\n          Undo\n        </button>\n        <button\n          disabled={undoHistory.length === 0}\n          onClick={onRedo}>\n          Redo\n        </button>\n        <button onClick={onReset}>Reset</button>\n      </div>\n      <hr />\n      <div className=\"row\">\n        <button onClick={() => onClickOperation('/2')}>\n          /2\n        </button>\n        <button onClick={() => onClickOperation('-1')}>\n          -1\n        </button>\n        <div className=\"counter\">{counter}</div>\n        <button onClick={() => onClickOperation('+1')}>\n          +1\n        </button>\n        <button onClick={() => onClickOperation('x2')}>\n          x2\n        </button>\n      </div>\n      <hr />\n      <div className=\"row\">\n        <UndoableCounterHistory history={history} />\n      </div>\n    </div>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.counter {\n  font-size: 24px;\n  margin-left: 24px;\n  margin-right: 24px;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  }
}