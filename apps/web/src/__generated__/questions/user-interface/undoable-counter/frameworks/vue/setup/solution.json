{
  "author": "willnguyen1312",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\"/src/App.vue\"],\n  \"activeFile\": \"/src/App.vue\",\n  \"environment\": \"vue-cli\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/undoable-counter-vue-solution\",\n  \"author\": \"willnguyen1312\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/main.js\",\n  \"scripts\": {\n    \"serve\": \"vue-cli-service serve\",\n    \"build\": \"vue-cli-service build\"\n  },\n  \"dependencies\": {\n    \"core-js\": \"3.32.2\",\n    \"vue\": \"3.3.4\"\n  },\n  \"devDependencies\": {\n    \"@vue/cli-plugin-babel\": \"5.0.8\",\n    \"@vue/cli-service\": \"5.0.8\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width,initial-scale=1.0\" />\n    <title>Vue</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <!-- Built files will be auto injected -->\n  </body>\n</html>\n"
    },
    "/src/App.vue": {
      "code": "<script setup>\nimport { ref } from 'vue';\n\nconst OPERATIONS = {\n  '/2': (value) => value / 2,\n  '-1': (value) => value - 1,\n  '+1': (value) => value + 1,\n  x2: (value) => value * 2,\n};\n\nconst counter = ref(0);\nconst history = ref([]);\nconst undoHistory = ref([]);\n\nfunction reset() {\n  counter.value = 0;\n  history.value.length = 0;\n  undoHistory.value.length = 0;\n}\n\nfunction undo() {\n  const [latest, ...earlierHistory] = history.value;\n  counter.value = latest.oldCounter;\n  undoHistory.value.unshift(latest);\n  history.value = earlierHistory;\n}\n\nfunction redo() {\n  const [latest, ...earlierUndoHistory] = undoHistory.value;\n  counter.value = latest.newCounter;\n  undoHistory.value = earlierUndoHistory;\n  history.value.unshift(latest);\n}\n\nfunction performOperation(operation) {\n  const oldCounter = counter.value;\n  const operationFunction = OPERATIONS[operation];\n  if (!operationFunction) return;\n\n  counter.value = operationFunction(counter.value);\n  history.value.unshift({\n    operation,\n    oldCounter,\n    newCounter: counter.value,\n  });\n  undoHistory.value.length = 0;\n}\n</script>\n\n<template>\n  <div class=\"row\">\n    <button :disabled=\"history.length === 0\" @click=\"undo\">\n      Undo\n    </button>\n    <button\n      :disabled=\"undoHistory.length === 0\"\n      @click=\"redo\">\n      Redo\n    </button>\n    <button @click=\"reset\">Reset</button>\n  </div>\n  <hr />\n  <div class=\"row\">\n    <button @click=\"() => performOperation('/2')\">\n      /2\n    </button>\n    <button @click=\"() => performOperation('-1')\">\n      -1\n    </button>\n    <div class=\"counter\">{{ counter }}</div>\n    <button @click=\"() => performOperation('+1')\">\n      +1\n    </button>\n    <button @click=\"() => performOperation('x2')\">\n      x2\n    </button>\n  </div>\n  <hr />\n  <div class=\"row\">\n    <table v-if=\"history.length > 0\">\n      <thead>\n        <tr>\n          <th>Operation</th>\n          <th>Old</th>\n          <th>New</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(item, index) in history\" :key=\"index\">\n          <td>{{ item.operation }}</td>\n          <td>{{ item.oldCounter }}</td>\n          <td>{{ item.newCounter }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<style>\n.row {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.counter {\n  font-size: 24px;\n  margin-left: 24px;\n  margin-right: 24px;\n}\n</style>\n"
    },
    "/src/main.js": {
      "code": "import { createApp } from 'vue';\nimport App from './App.vue';\n\nimport './styles.css';\n\ncreateApp(App).mount('#app');\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.vue"
    ],
    "activeFile": "/src/App.vue",
    "environment": "vue-cli"
  }
}