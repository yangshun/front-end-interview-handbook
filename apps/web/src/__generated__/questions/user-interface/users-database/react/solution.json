{
  "author": "willnguyen1312",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/users-database-react-solution\",\n  \"author\": \"willnguyen1312\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useState } from 'react';\n\nconst generateId = (() => {\n  let id = 0;\n  return () => `${id++}`;\n})();\n\nexport default function App() {\n  const [selected, setSelected] = useState(null);\n  const [search, setSearch] = useState('');\n  const [first, setFirst] = useState('');\n  const [last, setLast] = useState('');\n  const [users, setUsers] = useState([\n    { first: 'Hans', last: 'Emil', id: generateId() },\n    { first: 'Max', last: 'Mustermann', id: generateId() },\n    { first: 'Roman', last: 'Tisch', id: generateId() },\n  ]);\n\n  const filteredUsers = users.filter(\n    (user) =>\n      user.first\n        .toLowerCase()\n        .includes(search.toLowerCase()) ||\n      user.last\n        .toLowerCase()\n        .includes(search.toLowerCase()),\n  );\n\n  const hasSelectedUser = selected != null;\n\n  const canCreateUser =\n    !hasSelectedUser && first !== '' && last !== '';\n\n  const canUpdateUser =\n    hasSelectedUser && first !== '' && last !== '';\n\n  function create() {\n    setUsers(\n      users.concat({\n        first,\n        last,\n        id: generateId(),\n      }),\n    );\n    setFirst('');\n    setLast('');\n  }\n\n  function update() {\n    const newUsers = [...users];\n    const foundUser = newUsers.find(\n      ({ id }) => selected === id,\n    );\n    foundUser.first = first;\n    foundUser.last = last;\n    setUsers(newUsers);\n  }\n\n  function del() {\n    setUsers(users.filter((user) => user.id !== selected));\n    cancel();\n  }\n\n  function cancel() {\n    setSelected(null);\n    setFirst('');\n    setLast('');\n  }\n\n  function onSubmit(event) {\n    // To prevent a page reload.\n    event.preventDefault();\n    const formData = new FormData(\n      event.target,\n      event.nativeEvent.submitter,\n    );\n    const intent = formData.get('intent');\n\n    switch (intent) {\n      case 'create':\n        create();\n        break;\n\n      case 'update':\n        update();\n        break;\n\n      case 'delete':\n        del();\n        break;\n\n      case 'cancel':\n        cancel();\n        break;\n\n      default:\n        throw new Error(`Invalid intent: ${intent}`);\n    }\n  }\n\n  return (\n    <form className=\"app\" onSubmit={onSubmit}>\n      <div>\n        <input\n          aria-label=\"Search users\"\n          type=\"text\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          placeholder=\"Search\"\n        />\n      </div>\n\n      <div className=\"middle-row\">\n        <select\n          size={5}\n          className=\"users-list\"\n          value={selected}\n          onChange={(e) => {\n            const newSelected = e.target.value;\n            setSelected(newSelected);\n\n            const foundUser = users.find(\n              ({ id }) => id === newSelected,\n            );\n            setFirst(foundUser.first);\n            setLast(foundUser.last);\n          }}>\n          {filteredUsers.map((user) => (\n            <option key={user.id} value={user.id}>\n              {user.first} {user.last}\n            </option>\n          ))}\n        </select>\n        <div className=\"inputs\">\n          <label>\n            First Name:\n            <input\n              type=\"text\"\n              required\n              value={first}\n              onChange={(e) => setFirst(e.target.value)}\n            />\n          </label>\n          <label>\n            Last Name:\n            <input\n              type=\"text\"\n              required\n              value={last}\n              onChange={(e) => setLast(e.target.value)}\n            />\n          </label>\n        </div>\n      </div>\n\n      <div className=\"buttons\">\n        <button\n          name=\"intent\"\n          value=\"create\"\n          disabled={!canCreateUser}>\n          Create\n        </button>\n        <button\n          name=\"intent\"\n          value=\"update\"\n          disabled={!canUpdateUser}>\n          Update\n        </button>\n        <button\n          name=\"intent\"\n          value=\"delete\"\n          disabled={!hasSelectedUser}>\n          Delete\n        </button>\n        <button\n          name=\"intent\"\n          value=\"cancel\"\n          disabled={!hasSelectedUser}>\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "* {\n  font-size: inherit;\n}\n\nbody {\n  font-family: sans-serif;\n}\n\n.app {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.inputs {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\ninput {\n  display: block;\n}\n\n.middle-row {\n  display: flex;\n  gap: 16px;\n}\n\n.users-list {\n  width: 14em;\n}\n\n.buttons {\n  display: flex;\n  gap: 4px;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  },
  "writeup": "var Component=(()=>{var j=Object.create;var c=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var M=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),D=(n,e)=>{for(var l in e)c(n,l,{get:e[l],enumerable:!0})},u=(n,e,l,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of _(e))!v.call(n,a)&&a!==l&&c(n,a,{get:()=>e[a],enumerable:!(o=T(e,a))||o.enumerable});return n};var h=(n,e,l)=>(l=n!=null?j(C(n)):{},u(e||!n||!n.__esModule?c(l,\"default\",{value:n,enumerable:!0}):l,n)),F=n=>u(c({},\"__esModule\",{value:!0}),n);var d=M((q,f)=>{f.exports=_jsx_runtime});var S={};D(S,{default:()=>A});var r=h(d());var t=h(d());function m(n){let e=Object.assign({h2:\"h2\",p:\"p\",ol:\"ol\",li:\"li\",h3:\"h3\",ul:\"ul\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsx)(e.p,{children:\"The solution can be broken down into a few parts:\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Collecting form data.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Performing actions.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Displaying the final result.\"}),`\n`]}),`\n`,(0,t.jsx)(e.h3,{children:\"State\"}),`\n`,(0,t.jsx)(e.p,{children:\"We need several pieces of information to keep track of the state of the application:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"selected\"}),\": the state variable for the selected user's id\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"search\"}),\": the state variable for the search term\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"first\"}),\": the state variable for the first name\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"last\"}),\": the state variable for the last name\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"users\"}),\": the state variable for the list of users\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h3,{children:\"Collecting form data\"}),`\n`,(0,t.jsx)(e.p,{children:\"We use several input fields for collecting the search term, the first and last names. The search term is used to filter the list of users. The first and last names are used to create / update users.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"By using \",(0,t.jsx)(e.code,{children:\"<input required />\"}),\" on first and last names, we ensure that the fields are validated and cannot be empty.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Performing actions\"}),`\n`,(0,t.jsx)(e.p,{children:\"As user is selected, the first and last name fields are updated with the selected user's data. These fields are empty if there is no selected user.\"}),`\n`,(0,t.jsx)(e.p,{children:\"We use simple buttons for creating / updating / deleting / canceling actions:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Create: if there is no selected user, and the first and last name are not empty, we create a new user and add it to the list of users. The button is disabled otherwise.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Update: if there is a selected user, and the new first and last names are not empty, we update the selected user's first and last name. The button is disabled otherwise.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Delete: if there is a selected user, we remove the selected user from the list of users. The button is disabled otherwise.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Cancel: we de-select the current selected user. The button is disabled if there is no selected user\"}),`\n`]}),`\n`,(0,t.jsx)(e.h3,{children:\"Displaying the final result\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"We use a simple select field for the list of users. The value of the select field is the \",(0,t.jsx)(e.code,{children:\"selected\"}),\" state variable. The list of users are computed based on the search term.\"]})]})}function k(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(m,n)})):m(n)}var p=k;var s=h(d());function b(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,s.jsxs)(e.ul,{children:[`\n`,(0,s.jsxs)(e.li,{children:[\"Search input\",`\n`,(0,s.jsxs)(e.ul,{children:[`\n`,(0,s.jsx)(e.li,{children:\"The value is updated as the user types\"}),`\n`,(0,s.jsx)(e.li,{children:\"The list of users are updated on search input changes\"}),`\n`]}),`\n`]}),`\n`,(0,s.jsxs)(e.li,{children:[\"Listbox\",`\n`,(0,s.jsxs)(e.ul,{children:[`\n`,(0,s.jsx)(e.li,{children:\"Only one user can be selected at a time\"}),`\n`,(0,s.jsx)(e.li,{children:\"Upon search input changes, show the correctly filtered result of all users in the database\"}),`\n`]}),`\n`]}),`\n`,(0,s.jsxs)(e.li,{children:[\"First name and last name inputs\",`\n`,(0,s.jsxs)(e.ul,{children:[`\n`,(0,s.jsx)(e.li,{children:\"The first name and last name inputs are empty by default and updated as the user types\"}),`\n`,(0,s.jsx)(e.li,{children:\"The first name and last name are required fields for create / update upon form submission\"}),`\n`]}),`\n`]}),`\n`,(0,s.jsxs)(e.li,{children:[\"Form\",`\n`,(0,s.jsxs)(e.ul,{children:[`\n`,(0,s.jsx)(e.li,{children:\"The create button is disabled when first name or last name is empty. New user is added to the list when the create button is clicked\"}),`\n`,(0,s.jsx)(e.li,{children:\"The update buttons are disabled when first name or last name is empty or no user is selected. The selected user is updated when the update button is clicked\"}),`\n`,(0,s.jsx)(e.li,{children:\"The delete button is disabled when no user is selected. The selected user is deleted when the delete button is clicked.\"}),`\n`,(0,s.jsx)(e.li,{children:\"The cancel button is disabled when no user is selected. The selected user is cleared when the cancel button is clicked, first name and last name inputs are empty.\"}),`\n`]}),`\n`]}),`\n`]})]})}function O(n={}){let{wrapper:e}=n.components||{};return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(b,n)})):b(n)}var g=O;var i=h(d());function w(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[\"Use of \",(0,i.jsx)(e.code,{children:\"<form>\"}),\" submit for performing actions.\"]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:'<input type=\"text\">'}),\" are paired with \",(0,i.jsx)(e.code,{children:\"<label>\"}),\"s. Clicking on labels also focuses the input.\"]}),`\n`,(0,i.jsx)(e.li,{children:\"All required functionality should be achievable just by using the keyboard.\"}),`\n`]})]})}function X(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(w,n)})):w(n)}var x=X;function y(n){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(p,{}),`\n`,(0,r.jsx)(g,{}),`\n`,(0,r.jsx)(x,{})]})}function L(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(y,n)})):y(n)}var A=L;return F(S);})();\n;return Component;"
}