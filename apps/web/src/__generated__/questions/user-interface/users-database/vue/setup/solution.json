{
  "author": "yangshun",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\"/src/App.vue\", \"/src/styles.css\"],\n  \"activeFile\": \"/src/App.vue\",\n  \"environment\": \"vue-cli\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/users-database-vue-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/main.js\",\n  \"scripts\": {\n    \"serve\": \"vue-cli-service serve\",\n    \"build\": \"vue-cli-service build\"\n  },\n  \"dependencies\": {\n    \"core-js\": \"3.32.2\",\n    \"vue\": \"3.3.4\"\n  },\n  \"devDependencies\": {\n    \"@vue/cli-plugin-babel\": \"5.0.8\",\n    \"@vue/cli-service\": \"5.0.8\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width,initial-scale=1.0\" />\n    <title>Vue</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <!-- Built files will be auto injected -->\n  </body>\n</html>\n"
    },
    "/src/App.vue": {
      "code": "<script setup>\nimport { computed, reactive, ref, watch } from 'vue';\n\nconst generateId = (() => {\n  let id = 0;\n  return () => id++;\n})();\nconst selected = ref(null);\nconst search = ref('');\nconst first = ref('');\nconst last = ref('');\nconst users = reactive([\n  { first: 'Hans', last: 'Emil', id: generateId() },\n  { first: 'Max', last: 'Mustermann', id: generateId() },\n  { first: 'Roman', last: 'Tisch', id: generateId() },\n]);\n\nconst filteredUsers = computed(() =>\n  users.filter(\n    (user) =>\n      user.first\n        .toLowerCase()\n        .includes(search.value.toLowerCase()) ||\n      user.last\n        .toLowerCase()\n        .includes(search.value.toLowerCase()),\n  ),\n);\n\nwatch(selected, (selectedId) => {\n  if (selectedId == null) {\n    first.value = '';\n    last.value = '';\n    return;\n  }\n\n  const foundUser = users.find(\n    ({ id }) => selectedId === id,\n  );\n  first.value = foundUser.first;\n  last.value = foundUser.last;\n});\n\nfunction create() {\n  users.push({\n    first: first.value,\n    last: last.value,\n    id: generateId(),\n  });\n  first.value = '';\n  last.value = '';\n}\n\nfunction update() {\n  const foundUser = users.find(\n    ({ id }) => selected.value === id,\n  );\n  foundUser.first = first.value;\n  foundUser.last = last.value;\n}\n\nfunction del() {\n  const index = users.findIndex(\n    ({ id }) => selected.value === id,\n  );\n  users.splice(index, 1);\n  cancel();\n}\n\nfunction cancel() {\n  selected.value = null;\n}\n\nconst hasSelectedUser = computed(\n  () => selected.value != null,\n);\n\nconst canCreateUser = computed(() => {\n  return (\n    !hasSelectedUser.value &&\n    first.value.trim() !== '' &&\n    last.value.trim() !== ''\n  );\n});\n</script>\n\n<template>\n  <div class=\"app\">\n    <div>\n      <input\n        aria-label=\"Search users\"\n        v-model=\"search\"\n        placeholder=\"Search\" />\n    </div>\n    <div class=\"middle-row\">\n      <select\n        class=\"users-list\"\n        size=\"5\"\n        v-model=\"selected\">\n        <option\n          v-for=\"user in filteredUsers\"\n          :key=\"user.id\"\n          :value=\"user.id\">\n          {{ user.first }} {{ user.last }}\n        </option>\n      </select>\n      <div class=\"inputs\">\n        <label>First Name: <input v-model=\"first\" /></label>\n        <label>Last Name: <input v-model=\"last\" /></label>\n      </div>\n    </div>\n    <div class=\"buttons\">\n      <button @click=\"create\" :disabled=\"!canCreateUser\">\n        Create\n      </button>\n      <button @click=\"update\" :disabled=\"!hasSelectedUser\">\n        Update\n      </button>\n      <button @click=\"del\" :disabled=\"!hasSelectedUser\">\n        Delete\n      </button>\n      <button @click=\"cancel\" :disabled=\"!hasSelectedUser\">\n        Cancel\n      </button>\n    </div>\n  </div>\n</template>\n\n<style>\n* {\n  font-size: inherit;\n}\n\n.app {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.inputs {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\ninput {\n  display: block;\n}\n\n.middle-row {\n  display: flex;\n  gap: 16px;\n}\n\n.users-list {\n  width: 14em;\n}\n\n.buttons {\n  display: flex;\n  gap: 4px;\n}\n</style>\n"
    },
    "/src/main.js": {
      "code": "import { createApp } from 'vue';\nimport App from './App.vue';\n\nimport './styles.css';\n\ncreateApp(App).mount('#app');\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.vue",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.vue",
    "environment": "vue-cli"
  }
}