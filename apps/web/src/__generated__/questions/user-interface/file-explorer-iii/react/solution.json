{
  "author": "yangshun",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/file-explorer-iii-react-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"devDependencies\": {\n    \"@types/react\": \"18.2.0\",\n    \"@types/react-dom\": \"18.2.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.tsx": {
      "code": "import FileExplorer from './FileExplorer';\n\nexport default function App() {\n  const data = [\n    {\n      id: 1,\n      name: 'README.md',\n    },\n    {\n      id: 2,\n      name: 'Documents',\n      children: [\n        {\n          id: 3,\n          name: 'Word.doc',\n        },\n        {\n          id: 4,\n          name: 'Powerpoint.ppt',\n        },\n      ],\n    },\n    {\n      id: 5,\n      name: 'Downloads',\n      children: [\n        {\n          id: 6,\n          name: 'unnamed.txt',\n        },\n        {\n          id: 7,\n          name: 'Misc',\n          children: [\n            {\n              id: 8,\n              name: 'foo.txt',\n            },\n            {\n              id: 9,\n              name: 'bar.txt',\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  return <FileExplorer data={data} />;\n}\n"
    },
    "/src/FileExplorer.tsx": {
      "code": "import { useState } from 'react';\nimport FileList from './FileList';\n\nexport type FileData = Readonly<{\n  id: number;\n  name: string;\n  children?: ReadonlyArray<FileData>;\n}>;\n\nexport default function FileExplorer({\n  data,\n}: Readonly<{ data: ReadonlyArray<FileData> }>) {\n  return (\n    <ul className=\"file-list\">\n      <FileList fileList={data} level={1} />\n    </ul>\n  );\n}\n\nexport function FileObject({\n  file,\n  level,\n}: Readonly<{\n  file: FileData;\n  level: number;\n}>) {\n  const [expanded, setExpanded] = useState(false);\n  const { children: fileChildren, name: fileName } = file;\n  // If the children field is present, the item is a directory.\n  const isDirectory = Boolean(fileChildren);\n\n  return (\n    <>\n      <li\n        className=\"file-item\"\n        style={{\n          paddingLeft: (level - 1) * 16,\n        }}>\n        <button\n          className={[\n            'file-item-button',\n            isDirectory && 'file-item-button--directory',\n          ]\n            .filter(Boolean)\n            .join(' ')}\n          onClick={() => {\n            if (!isDirectory) {\n              return;\n            }\n\n            setExpanded(!expanded);\n          }}>\n          <span>{fileName}</span>{' '}\n          {isDirectory && <>[{expanded ? '-' : '+'}]</>}\n        </button>\n      </li>\n      {fileChildren &&\n        fileChildren.length > 0 &&\n        expanded && (\n          <FileList\n            fileList={fileChildren}\n            level={level + 1}\n          />\n        )}\n    </>\n  );\n}\n"
    },
    "/src/FileList.tsx": {
      "code": "import { FileObject, FileData } from './FileExplorer';\n\nexport default function FileList({\n  fileList,\n  level,\n}: Readonly<{\n  fileList: ReadonlyArray<FileData>;\n  level: number;\n}>) {\n  const directories = fileList.filter(\n    (fileItem) => fileItem.children,\n  );\n  directories.sort((a, b) => a.name.localeCompare(b.name));\n\n  const nonDirectories = fileList.filter(\n    (fileItem) => !fileItem.children,\n  );\n  nonDirectories.sort((a, b) =>\n    a.name.localeCompare(b.name),\n  );\n\n  const items = [...directories, ...nonDirectories];\n\n  return (\n    <>\n      {items.map((file) => (\n        <FileObject\n          key={file.id}\n          file={file}\n          level={level}\n        />\n      ))}\n    </>\n  );\n}\n"
    },
    "/src/index.tsx": {
      "code": "import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root')!);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.file-list {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.file-item {\n  padding: 0;\n}\n\n.file-item-button {\n  background-color: transparent;\n  border: none;\n  line-height: 1.5;\n  cursor: pointer;\n  font-size: 16px;\n  padding: 0;\n}\n\n.file-item-button--directory {\n  display: flex;\n  gap: 4px;\n  font-weight: bold;\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/FileExplorer.tsx",
      "/src/FileList.tsx",
      "/src/styles.css"
    ],
    "activeFile": "/src/FileExplorer.tsx",
    "environment": "create-react-app"
  },
  "writeup": "var Component=(()=>{var g=Object.create;var s=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var F=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),D=(e,n)=>{for(var l in n)s(e,l,{get:n[l],enumerable:!0})},p=(e,n,l,c)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let r of y(n))!M.call(e,r)&&r!==l&&s(e,r,{get:()=>n[r],enumerable:!(c=j(n,r))||c.enumerable});return e};var d=(e,n,l)=>(l=e!=null?g(_(e)):{},p(n||!e||!e.__esModule?s(l,\"default\",{value:e,enumerable:!0}):l,e)),w=e=>p(s({},\"__esModule\",{value:!0}),e);var a=F((v,u)=>{u.exports=_jsx_runtime});var E={};D(E,{default:()=>X});var i=d(a());var o=d(a());function h(e){let n=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",pre:\"pre\"},e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{children:\"Test cases\"}),`\n`,(0,o.jsxs)(n.p,{children:[\"The resulting DOM should be similar to the following. Notice that there's a single \",(0,o.jsx)(n.code,{children:\"<ul>\"}),\" with a flat layer of \",(0,o.jsx)(n.code,{children:\"<li>\"}),\".\"]}),`\n`,(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:\"language-html\",children:`<ul>\n  <li style=\"padding-left: 0px;\">\n    <button><span>Documents</span> [-]</button>\n  </li>\n  <li style=\"padding-left: 16px;\">\n    <button>\n      <span>Powerpoint.ppt</span>\n    </button>\n  </li>\n  <li style=\"padding-left: 16px;\">\n    <button>\n      <span>Word.doc</span>\n    </button>\n  </li>\n  <li style=\"padding-left: 0px;\">\n    <button><span>Downloads</span> [-]</button>\n  </li>\n  <li style=\"padding-left: 16px;\">\n    <button><span>Misc</span> [-]</button>\n  </li>\n  <li style=\"padding-left: 32px;\">\n    <button>\n      <span>bar.txt</span>\n    </button>\n  </li>\n  <li style=\"padding-left: 32px;\">\n    <button>\n      <span>foo.txt</span>\n    </button>\n  </li>\n  <li style=\"padding-left: 16px;\">\n    <button>\n      <span>unnamed.txt</span>\n    </button>\n  </li>\n  <li style=\"padding-left: 0px;\">\n    <button>\n      <span>README.md</span>\n    </button>\n  </li>\n</ul>\n`})})]})}function C(e={}){let{wrapper:n}=e.components||{};return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(h,e)})):h(e)}var f=C;var t=d(a());function m(e){let n=Object.assign({h2:\"h2\",p:\"p\",a:\"a\",h3:\"h3\",code:\"code\"},e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{children:\"Solution\"}),`\n`,(0,t.jsxs)(n.p,{children:[\"We'll build on top of \",(0,t.jsx)(n.a,{href:\"/questions/user-interface/file-explorer/react/solution\",children:\"File Explorer's solution\"}),\".\"]}),`\n`,(0,t.jsx)(n.h3,{children:\"Returning fragments\"}),`\n`,(0,t.jsxs)(n.p,{children:[\"The main change is to return fragments instead of \",(0,t.jsx)(n.code,{children:\"<ul>\"}),\". The root \",(0,t.jsx)(n.code,{children:\"<ul>\"}),\" is rendered by the \",(0,t.jsx)(n.code,{children:\"FileExplorer\"}),\" component and \",(0,t.jsx)(n.code,{children:\"FileObject\"}),\" and \",(0,t.jsx)(n.code,{children:\"FileList\"}),\" should return fragments and rendered as direct children of the \",(0,t.jsx)(n.code,{children:\"<ul>\"}),\" in \",(0,t.jsx)(n.code,{children:\"FileExplorer\"}),\".\"]}),`\n`,(0,t.jsx)(n.h3,{children:\"Rendering indentation\"}),`\n`,(0,t.jsxs)(n.p,{children:[\"The amount of left padding to use for each indentation level can be determined by the \",(0,t.jsx)(n.code,{children:\"level\"}),\" prop \\u2013 multiply the level (subtract one first) by the indentation width.\"]})]})}function O(e={}){let{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(m,e)})):m(e)}var x=O;function b(e){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(x,{}),`\n`,(0,i.jsx)(f,{})]})}function T(e={}){let{wrapper:n}=e.components||{};return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(b,e)})):b(e)}var X=T;return w(E);})();\n;return Component;"
}