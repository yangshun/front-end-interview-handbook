{
  "author": "willnguyen1312",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/pixel-art-svelte-skeleton\",\n  \"author\": \"willnguyen1312\",\n  \"version\": \"0.0.1\",\n  \"main\": \"src/index.js\",\n  \"dependencies\": {\n    \"svelte\": \"^3.58.0\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf8\" />\n    <meta name=\"viewport\" content=\"width=device-width\" />\n    <title>Svelte</title>\n    <link rel=\"stylesheet\" href=\"public/bundle.css\" />\n  </head>\n\n  <body>\n    <script src=\"bundle.js\"></script>\n  </body>\n</html>\n"
    },
    "/src/App.svelte": {
      "code": "<script>\n  const COLORS = {\n    white: '#fff',\n    gray: '#e9ecef',\n    black: '#000',\n    red: '#cc0001',\n    orange: '#fb940b',\n    yellow: '#ffff01',\n    green: '#01cc00',\n    teal: '#38d9a9',\n    blue: '#228be6',\n    purple: '#7950f2',\n    beige: '#ff8787',\n  };\n\n  let message = 'Hello World!';\n</script>\n\n<div>\n  {message}\n  <ul>\n    {#each Object.entries(COLORS) as [color, hex] (color)}\n      <li>\n        <span style:color={hex}>{color}</span>\n      </li>\n    {/each}\n  </ul>\n</div>\n"
    },
    "/src/index.js": {
      "code": "import App from './App.svelte';\nimport './styles.css';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.svelte"
    ],
    "activeFile": "/src/App.svelte",
    "environment": "svelte"
  },
  "writeup": "var Component=(()=>{var f=Object.create;var c=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var v=(l,e)=>()=>(e||l((e={exports:{}}).exports,e),e.exports),j=(l,e)=>{for(var i in e)c(l,i,{get:e[i],enumerable:!0})},o=(l,e,i,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of x(e))!b.call(l,r)&&r!==i&&c(l,r,{get:()=>e[r],enumerable:!(d=g(e,r))||d.enumerable});return l};var h=(l,e,i)=>(i=l!=null?f(w(l)):{},o(e||!l||!l.__esModule?c(i,\"default\",{value:l,enumerable:!0}):i,l)),C=l=>o(c({},\"__esModule\",{value:!0}),l);var a=v((B,s)=>{s.exports=_jsx_runtime});var M={};j(M,{default:()=>_});var t=h(a());var n=h(a());function u(l){let e=Object.assign({p:\"p\",img:\"img\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\",a:\"a\"},l.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"Build a pixel art drawing tool where users can paint pixels with selected colors and also erase colored pixels.\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/img/questions/pixel-art/pixel-art-example.png\",alt:\"Pixel art example\"})}),`\n`,(0,n.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Canvas\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"A 15 x 15 grid of cells. Each cell is 20px x 20px.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Pixels alternate between white and gray.\"}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Modes\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:'There are 2 modes available: \"Draw\" and \"Erase\"'}),`\n`,(0,n.jsx)(e.li,{children:\"Clicking on the individual tab item will activate the respective mode.\"}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Colorpicker\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"A color can be selected from the list of colors. Selected colors will have a black border to indicate the selected state.\"}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Drawing mode\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Clicking on a cell with paint it with the currently-selected color.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Dragging on the canvas will fill the underlying pixel with the selected color.\"}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Erasing mode\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Clicking on a cell with remove any color from that cell.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Dragging on the canvas while this mode is selected will remove colors from that cell.\"}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Colors:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"White: \",(0,n.jsx)(e.code,{children:\"#ffffff\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Gray: \",(0,n.jsx)(e.code,{children:\"#e9ecef\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Black: \",(0,n.jsx)(e.code,{children:\"#000\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Red: \",(0,n.jsx)(e.code,{children:\"#cc0001\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Orange: \",(0,n.jsx)(e.code,{children:\"#fb940b\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Yellow: \",(0,n.jsx)(e.code,{children:\"#ffff01\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Green: \",(0,n.jsx)(e.code,{children:\"#01cc00\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Teal: \",(0,n.jsx)(e.code,{children:\"#38d9a9\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Blue: \",(0,n.jsx)(e.code,{children:\"#228be6\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Purple: \",(0,n.jsx)(e.code,{children:\"#7950f2\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Beige: \",(0,n.jsx)(e.code,{children:\"#ff8787\"})]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Source\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"This question is adapted from \",(0,n.jsx)(e.a,{href:\"https://sadanandpai.github.io/frontend-mini-challenges/javascript/src/challenges/pixel-art/\",children:\"Front End Mini Challenges\"}),\".\"]})]})}function y(l={}){let{wrapper:e}=l.components||{};return e?(0,n.jsx)(e,Object.assign({},l,{children:(0,n.jsx)(u,l)})):u(l)}var m=y;function p(l){return(0,t.jsx)(m,{})}function D(l={}){let{wrapper:e}=l.components||{};return e?(0,t.jsx)(e,Object.assign({},l,{children:(0,t.jsx)(p,l)})):p(l)}var _=D;return C(M);})();\n;return Component;"
}