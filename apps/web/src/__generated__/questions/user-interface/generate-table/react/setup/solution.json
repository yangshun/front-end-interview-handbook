{
  "author": "yangshun",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\"/src/App.js\", \"/src/styles.css\"],\n  \"activeFile\": \"/src/App.js\",\n  \"environment\": \"create-react-app\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/generate-table-react-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useState } from 'react';\n\nfunction Table({ rows, columns }) {\n  return (\n    <table>\n      <tbody>\n        {Array.from({ length: rows }, () => 0).map(\n          (_, row) => (\n            <tr key={row}>\n              {Array.from({ length: columns }, () => 0).map(\n                (_, col) => (\n                  <td key={col}>\n                    {col % 2 === 0\n                      ? rows * col + (row + 1)\n                      : rows * (col + 1) - row}\n                  </td>\n                ),\n              )}\n            </tr>\n          ),\n        )}\n      </tbody>\n    </table>\n  );\n}\n\nexport default function App() {\n  const [rows, setRows] = useState('');\n  const [columns, setColumns] = useState('');\n\n  return (\n    <div className=\"app\">\n      <form\n        onSubmit={(event) => {\n          // To prevent a page reload.\n          event.preventDefault();\n\n          // Obtain data from the form.\n          const data = new FormData(event.target);\n          const rows = data.get('rows');\n          setRows(Number(rows));\n          const columns = data.get('columns');\n          setColumns(Number(columns));\n        }}>\n        <div>\n          <label htmlFor=\"rows\">Rows</label>\n          <input\n            id=\"rows\"\n            name=\"rows\"\n            type=\"number\"\n            min={1}\n            defaultValue={rows}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"columns\">Columns</label>\n          <input\n            id=\"columns\"\n            name=\"columns\"\n            type=\"number\"\n            min={1}\n            defaultValue={columns}\n          />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n      {Boolean(rows) && Boolean(columns) && (\n        <Table rows={rows} columns={columns} />\n      )}\n    </div>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.app {\n  align-items: center;\n  display: flex;\n  font-size: 12px;\n  flex-direction: column;\n  gap: 16px;\n  justify-content: center;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\nlabel + input {\n  margin-left: 8px;\n}\n\ntable {\n  border-collapse: collapse;\n}\n\ntable td {\n  border: 1px solid #000;\n  padding: 8px;\n  text-align: center;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  }
}