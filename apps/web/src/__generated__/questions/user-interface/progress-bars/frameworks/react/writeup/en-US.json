{
  "skeleton": "var Component=(()=>{var m=Object.create;var a=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var y=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),_=(t,e)=>{for(var n in e)a(t,n,{get:e[n],enumerable:!0})},c=(t,e,n,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of f(e))!j.call(t,s)&&s!==n&&a(t,s,{get:()=>e[s],enumerable:!(l=x(e,s))||l.enumerable});return t};var p=(t,e,n)=>(n=t!=null?m(b(t)):{},c(e||!t||!t.__esModule?a(n,\"default\",{value:t,enumerable:!0}):n,t)),M=t=>c(a({},\"__esModule\",{value:!0}),t);var i=y((X,d)=>{d.exports=_jsx_runtime});var B={};_(B,{default:()=>D});var o=p(i());var r=p(i());function h(t){let e=Object.assign({p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",img:\"img\"},t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:'Build an app where clicking the \"Add\" button adds progress bars to the page. The progress bars fill up gradually as soon as they are shown.'}),`\n`,(0,r.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:'Clicking on the \"Add\" button adds a progress bar to the page.'}),`\n`,(0,r.jsx)(e.li,{children:\"Each progress bar start filling up smoothly as soon as they're added\"}),`\n`,(0,r.jsx)(e.li,{children:\"Each bar takes approximately 2000ms to completely fill up.\"}),`\n`]}),`\n`,(0,r.jsx)(e.h2,{children:\"Example\"}),`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:\"/img/questions/progress-bars/progress-bars-example.png\",alt:\"Progress Bars Example\"})})]})}function w(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(h,t)})):h(t)}var u=w;function g(t){return(0,o.jsx)(u,{})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(g,t)})):g(t)}var D=C;return M(B);})();\n;return Component;",
  "solution": "var Component=(()=>{var p=Object.create;var s=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var j=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),S=(e,n)=>{for(var a in n)s(e,a,{get:n[a],enumerable:!0})},h=(e,n,a,c)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let o of b(n))!x.call(e,o)&&o!==a&&s(e,o,{get:()=>n[o],enumerable:!(c=g(n,o))||c.enumerable});return e};var l=(e,n,a)=>(a=e!=null?p(w(e)):{},h(n||!e||!e.__esModule?s(a,\"default\",{value:e,enumerable:!0}):a,e)),y=e=>h(s({},\"__esModule\",{value:!0}),e);var i=j((A,d)=>{d.exports=_jsx_runtime});var M={};S(M,{default:()=>v});var t=l(i());var r=l(i());function m(e){let n=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{children:\"Test cases\"}),`\n`,(0,r.jsxs)(n.ul,{children:[`\n`,(0,r.jsx)(n.li,{children:'Hitting \"Add\" appends a new empty progress bar to the bottom of the list which starts filling up as soon as it appears.'}),`\n`,(0,r.jsx)(n.li,{children:\"Can add multiple progress bars, which fill up independently.\"}),`\n`]})]})}function _(e={}){let{wrapper:n}=e.components||{};return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(m,e)})):m(e)}var u=_;function f(e){let n=Object.assign({h2:\"h2\",p:\"p\",h3:\"h3\",a:\"a\",code:\"code\",pre:\"pre\"},e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{children:\"Solution\"}),`\n`,(0,t.jsx)(n.p,{children:\"The solution can be split into three parts: (1) State, (2) Styling, and (3) Animation.\"}),`\n`,(0,t.jsx)(n.h3,{children:\"State\"}),`\n`,(0,t.jsx)(n.p,{children:'Since the progress bars do not interact with each other and the animation uses a \"fire-and-forget\" model, we only need a single numerical value as state, which is the number of bars onscreen. Hitting the \"Add\" button increases the number of bars to be rendered.'}),`\n`,(0,t.jsx)(n.h3,{children:\"Styling\"}),`\n`,(0,t.jsxs)(n.p,{children:[\"Have a look at the \",(0,t.jsx)(n.a,{href:\"/questions/user-interface/progress-bar\",children:\"Progress Bar\"}),\" question for how to style a progress bar given a value out of 100. However, we'll use CSS \",(0,t.jsx)(n.code,{children:\"transform\"}),\"s instead of changing the \",(0,t.jsx)(n.code,{children:\"width\"}),\" as CSS transforms run on the GPU which results in better performance for animations.\"]}),`\n`,(0,t.jsx)(n.h3,{children:\"Animation\"}),`\n`,(0,t.jsxs)(n.p,{children:[`As mentioned above, each progress bar's animation uses a \"fire-and-forget\" model, meaning they are not interruptible and do not interact with each other. CSS transitions work very well for animating the bars from 0 to 100 and there's no need to resort to JavaScript. Note that `,(0,t.jsx)(n.code,{children:\"transform-origin: left\"}),' is necessary so that the filled bar is \"anchored\" on the left and expands rightwards. Without that, the transition will appear to expand outwards from the center.']}),`\n`,(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:\"language-css\",children:`.bar-contents {\n  background-color: green;\n  height: 100%;\n  transform: scaleX(0);\n  transform-origin: left;\n  transition-duration: 2000ms;\n  transition-property: transform;\n  transition-timing-function: linear;\n}\n\n.bar-contents--filled {\n  transform: scaleX(1);\n}\n`})}),`\n`,(0,t.jsx)(u,{})]})}function C(e={}){let{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(f,e)})):f(e)}var v=C;return y(M);})();\n;return Component;"
}