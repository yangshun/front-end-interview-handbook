{
  "author": "tanhauhau",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/accordion-svelte-skeleton\",\n  \"author\": \"tanhauhau\",\n  \"version\": \"0.0.1\",\n  \"main\": \"src/index.js\",\n  \"dependencies\": {\n    \"svelte\": \"^3.58.0\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf8\" />\n    <meta name=\"viewport\" content=\"width=device-width\" />\n    <title>Svelte</title>\n    <link rel=\"stylesheet\" href=\"public/bundle.css\" />\n  </head>\n\n  <body>\n    <script src=\"bundle.js\"></script>\n  </body>\n</html>\n"
    },
    "/src/Accordion.svelte": {
      "code": "<div>\n  <div>\n    <div>\n      HTML\n      <span aria-hidden={true} class=\"accordion-icon\" />\n    </div>\n    <div>\n      The HyperText Markup Language or HTML is the standard\n      markup language for documents designed to be displayed\n      in a web browser.\n    </div>\n  </div>\n  <div>\n    <div>\n      CSS\n      <span aria-hidden={true} class=\"accordion-icon\" />\n    </div>\n    <div>\n      Cascading Style Sheets is a style sheet language used\n      for describing the presentation of a document written\n      in a markup language such as HTML or XML.\n    </div>\n  </div>\n  <div>\n    <div>\n      JavaScript\n      <span aria-hidden={true} class=\"accordion-icon\" />\n    </div>\n    <div>\n      JavaScript, often abbreviated as JS, is a programming\n      language that is one of the core technologies of the\n      World Wide Web, alongside HTML and CSS.\n    </div>\n  </div>\n</div>\n\n<style>\n  .accordion-icon {\n    border: solid currentcolor;\n    border-width: 0 2px 2px 0;\n    display: inline-block;\n    height: 8px;\n    pointer-events: none;\n    transform: translateY(-2px) rotate(45deg);\n    width: 8px;\n  }\n\n  .accordion-icon--rotated {\n    transform: translateY(2px) rotate(-135deg);\n  }\n</style>\n"
    },
    "/src/App.svelte": {
      "code": "<script>\n  import Accordion from './Accordion.svelte';\n</script>\n\n<Accordion />\n"
    },
    "/src/index.js": {
      "code": "import App from './App.svelte';\nimport './styles.css';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.svelte",
      "/src/Accordion.svelte",
      "/src/styles.css"
    ],
    "activeFile": "/src/Accordion.svelte",
    "environment": "svelte"
  },
  "writeup": "var Component=(()=>{var f=Object.create;var a=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var b=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),j=(n,e)=>{for(var i in e)a(n,i,{get:e[i],enumerable:!0})},l=(n,e,i,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of x(e))!y.call(n,o)&&o!==i&&a(n,o,{get:()=>e[o],enumerable:!(r=g(e,o))||r.enumerable});return n};var d=(n,e,i)=>(i=n!=null?f(w(n)):{},l(e||!n||!n.__esModule?a(i,\"default\",{value:n,enumerable:!0}):i,n)),_=n=>l(a({},\"__esModule\",{value:!0}),n);var s=b((A,h)=>{h.exports=_jsx_runtime});var M={};j(M,{default:()=>D});var c=d(s());var t=d(s());function u(n){let e=Object.assign({p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\"Build an Accordion component that displays a list of vertically stacked sections that each contain a title and content snippet. Some HTML is provided for you as example contents along with a chevron icon.\"}),`\n`,(0,t.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"By default, all sections are collapsed and are hidden from view.\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"Clicking on a section title toggles the contents.\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"If the section is collapsed, the section will be expanded and the contents will be displayed.\"}),`\n`,(0,t.jsx)(e.li,{children:\"If the section is expanded, the section will be collapsed and the contents will be hidden.\"}),`\n`]}),`\n`]}),`\n`,(0,t.jsx)(e.li,{children:\"The sections are independent of each other.\"}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{children:\"Example\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Try out an \",(0,t.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/example-index/accordion/accordion.html\",children:\"example of an accordion component\"}),\".\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"The focus of this question is on functionality, not the styling. Do not spend too much time writing custom CSS.\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"You may modify the markup (e.g. adding \",(0,t.jsx)(e.code,{children:\"id\"}),\"s, data attributes, replacing some tags, etc) and use client-side rendering instead.\"]}),`\n`,(0,t.jsx)(e.li,{children:\"You may want to think about ways to improve the user experience of the application and implement them (you get bonus credit for doing that during interviews).\"}),`\n`]})]})}function v(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(u,n)})):u(n)}var p=v;function m(n){return(0,c.jsx)(p,{})}function k(n={}){let{wrapper:e}=n.components||{};return e?(0,c.jsx)(e,Object.assign({},n,{children:(0,c.jsx)(m,n)})):m(n)}var D=k;return _(M);})();\n;return Component;"
}