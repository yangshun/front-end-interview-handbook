{
  "author": "tanhauhau",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/flight-booker-svelte-solution\",\n  \"author\": \"tanhauhau\",\n  \"version\": \"0.0.1\",\n  \"main\": \"src/index.js\",\n  \"dependencies\": {\n    \"svelte\": \"^3.58.0\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf8\" />\n    <meta name=\"viewport\" content=\"width=device-width\" />\n    <title>Svelte</title>\n    <link rel=\"stylesheet\" href=\"public/bundle.css\" />\n  </head>\n\n  <body>\n    <script src=\"bundle.js\"></script>\n  </body>\n</html>\n"
    },
    "/src/App.svelte": {
      "code": "<script>\n  import './styles.css';\n\n  const TODAY = formatDate(new Date());\n  const DAY_IN_SECONDS = 24 * 60 * 60 * 1000;\n\n  let flightOption = 'one-way';\n  let departureDate = formatDate(\n    new Date(Date.now() + DAY_IN_SECONDS),\n  );\n  let returnDate = departureDate;\n\n  function formatDate(date) {\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1)\n      .toString()\n      .padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n\n    return [year, month, day].join('-');\n  }\n</script>\n\n<div>\n  <form\n    on:submit={(event) => {\n      event.preventDefault();\n      if (flightOption === 'one-way') {\n        alert(\n          `You have booked a one-way flight on ${departureDate}`,\n        );\n        return;\n      }\n\n      alert(\n        `You have booked a return flight, departing on ${departureDate} and returning on ${returnDate}`,\n      );\n    }}>\n    <select bind:value={flightOption}>\n      <option value=\"one-way\">One-way flight</option>\n      <option value=\"return\">Return flight</option>\n    </select>\n    <input\n      aria-label=\"Departure date\"\n      type=\"date\"\n      bind:value={departureDate}\n      min={TODAY} />\n\n    {#if flightOption === 'return'}\n      <input\n        aria-label=\"Return date\"\n        type=\"date\"\n        bind:value={returnDate}\n        min={departureDate} />\n    {/if}\n    <button>Book</button>\n  </form>\n</div>\n\n<style>\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    margin: 0 auto;\n    max-width: 320px;\n  }\n</style>\n"
    },
    "/src/index.js": {
      "code": "import App from './App.svelte';\nimport './styles.css';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.svelte",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.svelte",
    "environment": "svelte"
  },
  "writeup": "var Component=(()=>{var k=Object.create;var h=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var O=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var C=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),F=(n,e)=>{for(var o in e)h(n,o,{get:e[o],enumerable:!0})},m=(n,e,o,u)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of D(e))!S.call(n,l)&&l!==o&&h(n,l,{get:()=>e[l],enumerable:!(u=M(e,l))||u.enumerable});return n};var d=(n,e,o)=>(o=n!=null?k(O(n)):{},m(e||!n||!n.__esModule?h(o,\"default\",{value:n,enumerable:!0}):o,n)),X=n=>m(h({},\"__esModule\",{value:!0}),n);var c=C((W,f)=>{f.exports=_jsx_runtime});var E={};F(E,{default:()=>A});var r=d(c());var i=d(c());function p(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[\"One-way flight\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Only one datepicker is shown.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Submission is blocked when a date in the past is selected.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Submitting with a date in the future shows the success message.\"}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Return flight\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Two datepickers are shown.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Submission is blocked when dates in the past are selected.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Submission is blocked when the return date is earlier than the start date.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Submitting with dates in the future shows the success message.\"}),`\n`]}),`\n`]}),`\n`]})]})}function T(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(p,n)})):p(n)}var g=T;var s=d(c());function b(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,s.jsxs)(e.ul,{children:[`\n`,(0,s.jsxs)(e.li,{children:[\"Since the \",(0,s.jsx)(e.code,{children:\"<input>\"}),\" fields don't have visible labels, \",(0,s.jsx)(e.code,{children:\"aria-label\"}),\"s can be used to label the fields for screenreaders.\"]}),`\n`,(0,s.jsxs)(e.li,{children:[\"Wrapping the fields in a \",(0,s.jsx)(e.code,{children:\"<form>\"}),\" enables default form submission behavior.\"]}),`\n`]})]})}function L(n={}){let{wrapper:e}=n.components||{};return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(b,n)})):b(n)}var w=L;var a=d(c());function x(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{children:\"User Experience\"}),`\n`,(0,a.jsxs)(e.ul,{children:[`\n`,(0,a.jsx)(e.li,{children:\"The datepickers are prefilled with tomorrow's date as a nice default.\"}),`\n`]})]})}function U(n={}){let{wrapper:e}=n.components||{};return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(x,n)})):x(n)}var j=U;var t=d(c());function v(n){let e=Object.assign({h2:\"h2\",p:\"p\",h3:\"h3\",code:\"code\",a:\"a\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsx)(e.p,{children:\"This question evaluates your knowledge of form validation and dependent form fields.\"}),`\n`,(0,t.jsx)(e.h3,{children:\"Rendering\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"We can use \",(0,t.jsx)(e.code,{children:'<input type=\"date\">'}),\" to render native datepickers, which has over \",(0,t.jsx)(e.a,{href:\"https://caniuse.com/?search=input%20date\",children:\"96% browser support globally\"}),\" at the time of writing. Native datepickers also come with the \",(0,t.jsx)(e.code,{children:\"min\"}),\" attributes, which we can use for ensuring that only valid dates are chosen.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"The input fields and buttons are also wrapped in a \",(0,t.jsx)(e.code,{children:\"<form>\"}),' so that we can leverage native form submission and validation. Submission can be trigged by clicking the \"Book\" button or hitting ',(0,t.jsx)(\"kbd\",{children:\"Enter\"}),\" on any of the form fields. The browser will first validate the inputs and trigger the submit event if the fields are valid.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"State\"}),`\n`,(0,t.jsx)(e.p,{children:'Since we need to toggle the display of the return field, we will need a state value to track whether the selected flight is \"One-way\" or \"Return\" to know whether to render the return date input.'}),`\n`,(0,t.jsxs)(e.p,{children:[\"The \",(0,t.jsx)(e.code,{children:\"formatDate\"}),\" function converts a JavaScript \",(0,t.jsx)(e.code,{children:\"Date\"}),\" object into a \",(0,t.jsx)(e.code,{children:\"YYYY-MM-DD\"}),\" string which is the format expected by \",(0,t.jsx)(e.code,{children:'<input type=\"date\">'}),\".\"]})]})}function Y(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(v,n)})):v(n)}var _=Y;function y(n){let e=Object.assign({p:\"p\",code:\"code\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(_,{}),`\n`,(0,r.jsxs)(e.p,{children:[\"Using a form that constantly tracks the input values is more convenient than the native forms approach, as having state for the date values allows us to specify the current departure date as the \",(0,r.jsx)(e.code,{children:\"min\"}),\" of the return date \",(0,r.jsx)(e.code,{children:\"<input>\"}),\" field and leverage the browser's form validation during submission. Otherwise, we'll have to write custom validation logic in the submission handler.\"]}),`\n`,(0,r.jsxs)(e.p,{children:[\"Using Svelte's \",(0,r.jsx)(e.code,{children:\"bind:value\"}),\" links the date \",(0,r.jsx)(e.code,{children:\"<input>\"}),\" and \",(0,r.jsx)(e.code,{children:\"<select>\"}),\" element with the component's state. This makes it straightforward to capture the current value of these elements directly in our component's state, and any state changes are instantly updated in the UI.\"]}),`\n`,(0,r.jsx)(g,{}),`\n`,(0,r.jsx)(w,{}),`\n`,(0,r.jsx)(j,{})]})}function R(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(y,n)})):y(n)}var A=R;return X(E);})();\n;return Component;"
}