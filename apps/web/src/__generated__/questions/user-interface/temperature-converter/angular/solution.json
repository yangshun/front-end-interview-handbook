{
  "author": "michalgrzegorczyk-dev",
  "files": {
    "/angular.json": {
      "code": "{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"version\": 1,\n  \"newProjectRoot\": \"projects\",\n  \"defaultProject\": \"greatfrontend\",\n  \"projects\": {\n    \"greatfrontend\": {\n      \"projectType\": \"application\",\n      \"schematics\": {},\n      \"root\": \"\",\n      \"sourceRoot\": \"src\",\n      \"prefix\": \"app\",\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:browser\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app\",\n            \"index\": \"src/index.html\",\n            \"main\": \"src/main.ts\",\n            \"polyfills\": [\"zone.js\"],\n            \"tsConfig\": \"tsconfig.app.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          },\n          \"configurations\": {\n            \"production\": {\n              \"budgets\": [\n                {\n                  \"type\": \"initial\",\n                  \"maximumWarning\": \"500kb\",\n                  \"maximumError\": \"1mb\"\n                },\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"2kb\",\n                  \"maximumError\": \"4kb\"\n                }\n              ],\n              \"outputHashing\": \"all\"\n            },\n            \"development\": {\n              \"buildOptimizer\": false,\n              \"optimization\": false,\n              \"vendorChunk\": true,\n              \"extractLicenses\": false,\n              \"sourceMap\": true,\n              \"namedChunks\": true\n            }\n          },\n          \"defaultConfiguration\": \"production\"\n        },\n        \"serve\": {\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\n          \"configurations\": {\n            \"production\": {\n              \"browserTarget\": \"greatfrontend:build:production\"\n            },\n            \"development\": {\n              \"browserTarget\": \"greatfrontend:build:development\"\n            }\n          },\n          \"defaultConfiguration\": \"development\"\n        },\n        \"extract-i18n\": {\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n          \"options\": {\n            \"browserTarget\": \"greatfrontend:build\"\n          }\n        },\n        \"test\": {\n          \"builder\": \"@angular-devkit/build-angular:karma\",\n          \"options\": {\n            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],\n            \"tsConfig\": \"tsconfig.spec.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          }\n        }\n      }\n    }\n  },\n  \"cli\": {\n    \"analytics\": \"7ca5c4d0-e5db-4d23-9ffd-8c8c042e34e7\"\n  }\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/temperature-converter-angular-solution\",\n  \"author\": \"michalgrzegorczyk-dev\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/common\": \"16.2.4\",\n    \"@angular/compiler\": \"16.2.4\",\n    \"@angular/core\": \"16.2.4\",\n    \"@angular/forms\": \"16.2.4\",\n    \"@angular/platform-browser\": \"16.2.4\",\n    \"@angular/platform-browser-dynamic\": \"16.2.4\",\n    \"rxjs\": \"7.8.0\",\n    \"zone.js\": \"0.13.1\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"16.2.1\",\n    \"@angular/cli\": \"16.2.1\",\n    \"@angular/compiler-cli\": \"16.2.4\",\n    \"@types/jasmine\": \"4.3.5\",\n    \"jasmine-core\": \"4.6.0\",\n    \"karma\": \"6.4.2\",\n    \"karma-chrome-launcher\": \"3.2.0\",\n    \"karma-coverage\": \"2.2.1\",\n    \"karma-jasmine\": \"5.1.0\",\n    \"karma-jasmine-html-reporter\": \"2.1.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\"\n  }\n}\n"
    },
    "/src/app/app.component.css": {
      "code": ""
    },
    "/src/app/app.component.html": {
      "code": "<div>\n  <div class=\"temperature-converter\">\n    <label class=\"temperature-converter-column\">\n      <input\n        class=\"temperature-converter-column-top-row\"\n        type=\"text\"\n        [(ngModel)]=\"celsius\"\n        (ngModelChange)=\"setCelsius($event)\" />\n      <div class=\"temperature-converter-column-bottom-row\">\n        Celsius\n      </div>\n    </label>\n    <div class=\"temperature-converter-column\">\n      <div class=\"temperature-converter-column-top-row\">\n        =\n      </div>\n    </div>\n    <label class=\"temperature-converter-column\">\n      <input\n        class=\"temperature-converter-column-top-row\"\n        type=\"text\"\n        [(ngModel)]=\"fahrenheit\"\n        (ngModelChange)=\"setFahrenheit($event)\" />\n      <div class=\"temperature-converter-column-bottom-row\">\n        Fahrenheit\n      </div>\n    </label>\n  </div>\n</div>\n"
    },
    "/src/app/app.component.ts": {
      "code": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  celsius: string = '';\n  fahrenheit: string = '';\n\n  format(number: number | string): string {\n    // Show 4 d.p. if number has more than 4 decimal places.\n    return /\\.\\d{5}/.test(String(number))\n      ? Number(number).toFixed(4)\n      : String(number);\n  }\n\n  convert(\n    value: string,\n    setDestination: (val: string) => void,\n    calculateValue: (val: number) => number,\n  ): void {\n    const numericValue = Number(value);\n    const isValid =\n      !Number.isNaN(numericValue) && Boolean(value);\n    setDestination(\n      isValid\n        ? this.format(calculateValue(numericValue))\n        : '',\n    );\n  }\n\n  setCelsius(newValue: string) {\n    this.celsius = newValue;\n    this.convert(\n      newValue,\n      (val) => (this.fahrenheit = val),\n      (value) => (value * 9) / 5 + 32,\n    );\n  }\n\n  setFahrenheit(newValue: string) {\n    this.fahrenheit = newValue;\n    this.convert(\n      newValue,\n      (val) => (this.celsius = val),\n      (value) => ((value - 32) * 5) / 9,\n    );\n  }\n}\n"
    },
    "/src/app/app.module.ts": {
      "code": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, FormsModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n"
    },
    "/src/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Angular</title>\n    <base href=\"/\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n  </head>\n  <body>\n    <app-root></app-root>\n  </body>\n</html>\n"
    },
    "/src/main.ts": {
      "code": "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.temperature-converter {\n  display: flex;\n}\n\n.temperature-converter\n  .temperature-converter-column-top-row {\n  align-items: center;\n  display: flex;\n  font-size: 18px;\n  height: 24px;\n  padding: 4px;\n  text-align: center;\n}\n\n.temperature-converter\n  .temperature-converter-column-bottom-row {\n  padding: 4px;\n  text-align: center;\n}\n"
    },
    "/tsconfig.app.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/app\",\n    \"types\": []\n  },\n  \"files\": [\"src/main.ts\"],\n  \"include\": [\"src/**/*.d.ts\"]\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"compileOnSave\": false,\n  \"compilerOptions\": {\n    \"baseUrl\": \"./\",\n    \"outDir\": \"./dist/out-tsc\",\n    \"forceConsistentCasingInFileNames\": true,\n    \"strict\": true,\n    \"noImplicitOverride\": true,\n    \"noPropertyAccessFromIndexSignature\": true,\n    \"noImplicitReturns\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"sourceMap\": true,\n    \"declaration\": false,\n    \"downlevelIteration\": true,\n    \"experimentalDecorators\": true,\n    \"moduleResolution\": \"node\",\n    \"target\": \"es2020\",\n    \"module\": \"esnext\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"]\n  },\n  \"angularCompilerOptions\": {\n    \"enableI18nLegacyMessageIdFormat\": false,\n    \"strictInjectionParameters\": true,\n    \"strictInputAccessModifiers\": true,\n    \"strictTemplates\": true\n  }\n}\n"
    },
    "/tsconfig.spec.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/spec\",\n    \"types\": [\"jasmine\"]\n  },\n  \"include\": [\"src/**/*.spec.ts\", \"src/**/*.d.ts\"]\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/app/app.component.ts",
      "/src/app/app.component.html",
      "/src/styles.css"
    ],
    "activeFile": "/src/app/app.component.ts",
    "environment": "angular-cli"
  },
  "writeup": "var Component=(()=>{var y=Object.create;var a=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var F=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var v=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),N=(n,e)=>{for(var s in e)a(n,s,{get:e[s],enumerable:!0})},u=(n,e,s,h)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of w(e))!M.call(n,c)&&c!==s&&a(n,c,{get:()=>e[c],enumerable:!(h=C(e,c))||h.enumerable});return n};var d=(n,e,s)=>(s=n!=null?y(F(n)):{},u(e||!n||!n.__esModule?a(s,\"default\",{value:n,enumerable:!0}):s,n)),D=n=>u(a({},\"__esModule\",{value:!0}),n);var l=v((q,m)=>{m.exports=_jsx_runtime});var S={};N(S,{default:()=>k});var o=d(l());var i=d(l());function f(n){let e=Object.assign({h2:\"h2\",p:\"p\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,i.jsx)(e.p,{children:\"This question evaluates whether you know how to attach events to form inputs and manipulate the values of other inputs in response.\"}),`\n`,(0,i.jsx)(e.p,{children:\"Since the input fields are pretty symmetrical, we can extract out a conversion function to update the other input via a formula.\"}),`\n`,(0,i.jsx)(e.p,{children:\"Probably the most tricky part of the question is the number formatting. Refer to the notes below.\"})]})}function X(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(f,n)})):f(n)}var p=X;var r=d(l());function x(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[\"Basic cases:\",`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:\"Enter 0 C and see 32 F (without decimals)\"}),`\n`,(0,r.jsx)(e.li,{children:\"Enter 32 F and see 0 C.\"}),`\n`]}),`\n`]}),`\n`,(0,r.jsxs)(e.li,{children:[\"Invalid inputs\",`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:\"Enter alphabets in either field, the other should be empty.\"}),`\n`]}),`\n`]}),`\n`,(0,r.jsxs)(e.li,{children:[\"Decimal cases:\",`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:\"Enter 1 C and see 33.8 F (1 d.p.)\"}),`\n`,(0,r.jsx)(e.li,{children:\"Enter 1 F and see -17.2222 C (4 d.p.)\"}),`\n`]}),`\n`]}),`\n`]})]})}function O(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(x,n)})):x(n)}var j=O;var t=d(l());function b(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"Use a \",(0,t.jsx)(e.code,{children:\"<label>\"}),\" for the form fields to indicate what the input is for.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Using \",(0,t.jsx)(e.code,{children:'<input type=\"number\">'}),\" is helpful for allowing only numerical values and stepper controls.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Number formatting is tricky:\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"Number()\"}),\" constructor: converts a value into a number or \",(0,t.jsx)(e.code,{children:\"NaN\"}),\" if not possible. note that this returns \",(0,t.jsx)(e.code,{children:\"Number(anyFalseyValue)\"}),\" gives 0, so we need to differentiate the empty string case from a real 0.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"Number.IsNaN()\"}),\": determine if a value is a number.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"/\\\\.\\\\d{5}/\"}),\": this regex tests is a number has 5 or more decimal places.\"]}),`\n`]}),`\n`]}),`\n`]})]})}function E(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(b,n)})):b(n)}var g=E;function _(n){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(p,{}),`\n`,(0,o.jsx)(g,{}),`\n`,(0,o.jsx)(j,{})]})}function L(n={}){let{wrapper:e}=n.components||{};return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(_,n)})):_(n)}var k=L;return D(S);})();\n;return Component;"
}