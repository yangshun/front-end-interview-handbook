{
  "author": "yangshun",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\"/src/App.js\", \"/src/styles.css\"],\n  \"activeFile\": \"/src/App.js\",\n  \"environment\": \"create-react-app\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/temperature-converter-react-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useState } from 'react';\n\nfunction format(number) {\n  // Show 4 d.p. if number has more than 4 decimal places.\n  return /\\.\\d{5}/.test(number)\n    ? Number(number).toFixed(4)\n    : number;\n}\n\nexport default function App() {\n  const [celsius, setCelsius] = useState('');\n  const [fahrenheit, setFahrenheit] = useState('');\n\n  function convert(value, setDestination, calculateValue) {\n    const numericValue = Number(value);\n    const isValid =\n      !Number.isNaN(numericValue) && Boolean(value);\n    setDestination(\n      isValid ? format(calculateValue(numericValue)) : '',\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"temperature-converter\">\n        {/* Use a label for better a11y. */}\n        <label className=\"temperature-converter-column\">\n          <input\n            className=\"temperature-converter-column-top-row\"\n            type=\"number\"\n            value={celsius}\n            onChange={(event) => {\n              const newValue = event.target.value;\n              setCelsius(newValue);\n              convert(\n                newValue,\n                setFahrenheit,\n                (value) => (value * 9) / 5 + 32,\n              );\n            }}\n          />\n          <div className=\"temperature-converter-column-bottom-row\">\n            Celsius\n          </div>\n        </label>\n        <div className=\"temperature-converter-column\">\n          <div className=\"temperature-converter-column-top-row\">\n            =\n          </div>\n        </div>\n        {/* Use a label for better a11y. */}\n        <label className=\"temperature-converter-column\">\n          <input\n            className=\"temperature-converter-column-top-row\"\n            type=\"number\"\n            value={fahrenheit}\n            onChange={(event) => {\n              const newValue = event.target.value;\n              setFahrenheit(newValue);\n              convert(\n                newValue,\n                setCelsius,\n                (value) => ((value - 32) * 5) / 9,\n              );\n            }}\n          />\n          <div className=\"temperature-converter-column-bottom-row\">\n            Fahrenheit\n          </div>\n        </label>\n      </div>\n    </div>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.temperature-converter {\n  display: flex;\n}\n\n.temperature-converter\n  .temperature-converter-column-top-row {\n  align-items: center;\n  display: flex;\n  font-size: 18px;\n  height: 24px;\n  padding: 4px;\n  text-align: center;\n}\n\n.temperature-converter\n  .temperature-converter-column-bottom-row {\n  padding: 4px;\n  text-align: center;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  }
}