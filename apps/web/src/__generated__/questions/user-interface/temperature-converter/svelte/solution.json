{
  "author": "tanhauhau",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/temperature-converter-svelte-solution\",\n  \"author\": \"tanhauhau\",\n  \"version\": \"0.0.1\",\n  \"main\": \"src/index.js\",\n  \"dependencies\": {\n    \"svelte\": \"^3.58.0\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf8\" />\n    <meta name=\"viewport\" content=\"width=device-width\" />\n    <title>Svelte</title>\n    <link rel=\"stylesheet\" href=\"public/bundle.css\" />\n  </head>\n\n  <body>\n    <script src=\"bundle.js\"></script>\n  </body>\n</html>\n"
    },
    "/src/App.svelte": {
      "code": "<script>\n  let celsius;\n  let fahrenheit;\n\n  function round(number) {\n    return Number(number.toFixed(4));\n  }\n</script>\n\n<div class=\"temperature-converter\">\n  <label>\n    <input\n      class=\"temperature-converter-column-top-row\"\n      type=\"number\"\n      value={celsius}\n      on:input={(event) => {\n        celsius = event.target.value;\n        fahrenheit = round((celsius * 9) / 5 + 32);\n      }} />\n    <div class=\"temperature-converter-column-bottom-row\">\n      Celsius\n    </div>\n  </label>\n  <div>\n    <div class=\"temperature-converter-column-top-row\">\n      =\n    </div>\n  </div>\n  <label>\n    <input\n      class=\"temperature-converter-column-top-row\"\n      type=\"number\"\n      value={fahrenheit}\n      on:input={(event) => {\n        fahrenheit = event.target.value;\n        celsius = round(((fahrenheit - 32) * 5) / 9);\n      }} />\n    <div class=\"temperature-converter-column-bottom-row\">\n      Fahrenheit\n    </div>\n  </label>\n</div>\n\n<style>\n  .temperature-converter {\n    display: flex;\n  }\n\n  .temperature-converter-column-top-row {\n    align-items: center;\n    display: flex;\n    font-size: 18px;\n    height: 24px;\n    padding: 4px;\n    text-align: center;\n  }\n\n  .temperature-converter-column-bottom-row {\n    padding: 4px;\n    text-align: center;\n  }\n</style>\n"
    },
    "/src/index.js": {
      "code": "import App from './App.svelte';\nimport './styles.css';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.svelte",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.svelte",
    "environment": "svelte"
  },
  "writeup": "var Component=(()=>{var y=Object.create;var a=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var F=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var v=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),N=(n,e)=>{for(var s in e)a(n,s,{get:e[s],enumerable:!0})},u=(n,e,s,h)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of w(e))!M.call(n,c)&&c!==s&&a(n,c,{get:()=>e[c],enumerable:!(h=C(e,c))||h.enumerable});return n};var d=(n,e,s)=>(s=n!=null?y(F(n)):{},u(e||!n||!n.__esModule?a(s,\"default\",{value:n,enumerable:!0}):s,n)),D=n=>u(a({},\"__esModule\",{value:!0}),n);var l=v((q,m)=>{m.exports=_jsx_runtime});var S={};N(S,{default:()=>k});var o=d(l());var i=d(l());function f(n){let e=Object.assign({h2:\"h2\",p:\"p\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,i.jsx)(e.p,{children:\"This question evaluates whether you know how to attach events to form inputs and manipulate the values of other inputs in response.\"}),`\n`,(0,i.jsx)(e.p,{children:\"Since the input fields are pretty symmetrical, we can extract out a conversion function to update the other input via a formula.\"}),`\n`,(0,i.jsx)(e.p,{children:\"Probably the most tricky part of the question is the number formatting. Refer to the notes below.\"})]})}function X(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(f,n)})):f(n)}var p=X;var r=d(l());function x(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[\"Basic cases:\",`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:\"Enter 0 C and see 32 F (without decimals)\"}),`\n`,(0,r.jsx)(e.li,{children:\"Enter 32 F and see 0 C.\"}),`\n`]}),`\n`]}),`\n`,(0,r.jsxs)(e.li,{children:[\"Invalid inputs\",`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:\"Enter alphabets in either field, the other should be empty.\"}),`\n`]}),`\n`]}),`\n`,(0,r.jsxs)(e.li,{children:[\"Decimal cases:\",`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:\"Enter 1 C and see 33.8 F (1 d.p.)\"}),`\n`,(0,r.jsx)(e.li,{children:\"Enter 1 F and see -17.2222 C (4 d.p.)\"}),`\n`]}),`\n`]}),`\n`]})]})}function O(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(x,n)})):x(n)}var j=O;var t=d(l());function b(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"Use a \",(0,t.jsx)(e.code,{children:\"<label>\"}),\" for the form fields to indicate what the input is for.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Using \",(0,t.jsx)(e.code,{children:'<input type=\"number\">'}),\" is helpful for allowing only numerical values and stepper controls.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Number formatting is tricky:\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"Number()\"}),\" constructor: converts a value into a number or \",(0,t.jsx)(e.code,{children:\"NaN\"}),\" if not possible. note that this returns \",(0,t.jsx)(e.code,{children:\"Number(anyFalseyValue)\"}),\" gives 0, so we need to differentiate the empty string case from a real 0.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"Number.IsNaN()\"}),\": determine if a value is a number.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"/\\\\.\\\\d{5}/\"}),\": this regex tests is a number has 5 or more decimal places.\"]}),`\n`]}),`\n`]}),`\n`]})]})}function E(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(b,n)})):b(n)}var g=E;function _(n){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(p,{}),`\n`,(0,o.jsx)(g,{}),`\n`,(0,o.jsx)(j,{})]})}function L(n={}){let{wrapper:e}=n.components||{};return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(_,n)})):_(n)}var k=L;return D(S);})();\n;return Component;"
}