{
  "author": "yangshun",
  "files": {
    "/angular.json": {
      "code": "{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"version\": 1,\n  \"newProjectRoot\": \"projects\",\n  \"defaultProject\": \"greatfrontend\",\n  \"projects\": {\n    \"greatfrontend\": {\n      \"projectType\": \"application\",\n      \"schematics\": {},\n      \"root\": \"\",\n      \"sourceRoot\": \"src\",\n      \"prefix\": \"app\",\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:browser\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app\",\n            \"index\": \"src/index.html\",\n            \"main\": \"src/main.ts\",\n            \"polyfills\": [\"zone.js\"],\n            \"tsConfig\": \"tsconfig.app.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          },\n          \"configurations\": {\n            \"production\": {\n              \"budgets\": [\n                {\n                  \"type\": \"initial\",\n                  \"maximumWarning\": \"500kb\",\n                  \"maximumError\": \"1mb\"\n                },\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"2kb\",\n                  \"maximumError\": \"4kb\"\n                }\n              ],\n              \"outputHashing\": \"all\"\n            },\n            \"development\": {\n              \"buildOptimizer\": false,\n              \"optimization\": false,\n              \"vendorChunk\": true,\n              \"extractLicenses\": false,\n              \"sourceMap\": true,\n              \"namedChunks\": true\n            }\n          },\n          \"defaultConfiguration\": \"production\"\n        },\n        \"serve\": {\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\n          \"configurations\": {\n            \"production\": {\n              \"browserTarget\": \"greatfrontend:build:production\"\n            },\n            \"development\": {\n              \"browserTarget\": \"greatfrontend:build:development\"\n            }\n          },\n          \"defaultConfiguration\": \"development\"\n        },\n        \"extract-i18n\": {\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n          \"options\": {\n            \"browserTarget\": \"greatfrontend:build\"\n          }\n        },\n        \"test\": {\n          \"builder\": \"@angular-devkit/build-angular:karma\",\n          \"options\": {\n            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],\n            \"tsConfig\": \"tsconfig.spec.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          }\n        }\n      }\n    }\n  },\n  \"cli\": {\n    \"analytics\": \"7ca5c4d0-e5db-4d23-9ffd-8c8c042e34e7\"\n  }\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/holy-grail-angular-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/common\": \"16.2.4\",\n    \"@angular/compiler\": \"16.2.4\",\n    \"@angular/core\": \"16.2.4\",\n    \"@angular/forms\": \"16.2.4\",\n    \"@angular/platform-browser\": \"16.2.4\",\n    \"@angular/platform-browser-dynamic\": \"16.2.4\",\n    \"rxjs\": \"7.8.0\",\n    \"zone.js\": \"0.13.1\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"16.2.1\",\n    \"@angular/cli\": \"16.2.1\",\n    \"@angular/compiler-cli\": \"16.2.4\",\n    \"@types/jasmine\": \"4.3.5\",\n    \"jasmine-core\": \"4.6.0\",\n    \"karma\": \"6.4.2\",\n    \"karma-chrome-launcher\": \"3.2.0\",\n    \"karma-coverage\": \"2.2.1\",\n    \"karma-jasmine\": \"5.1.0\",\n    \"karma-jasmine-html-reporter\": \"2.1.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\"\n  }\n}\n"
    },
    "/src/app/app.component.css": {
      "code": ""
    },
    "/src/app/app.component.html": {
      "code": "<header>Header</header>\n<div class=\"columns\">\n  <nav>Navigation</nav>\n  <main>Main</main>\n  <aside>Sidebar</aside>\n</div>\n<footer>Footer</footer>\n"
    },
    "/src/app/app.component.ts": {
      "code": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}\n"
    },
    "/src/app/app.module.ts": {
      "code": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, FormsModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n"
    },
    "/src/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Angular</title>\n    <base href=\"/\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n  </head>\n  <body>\n    <app-root id=\"root\"></app-root>\n  </body>\n</html>\n"
    },
    "/src/main.ts": {
      "code": "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"
    },
    "/src/styles.css": {
      "code": "/* You can add global styles to this file, and also import other style files */\nbody {\n  font-family: sans-serif;\n  font-size: 12px;\n  font-weight: bold;\n  margin: 0;\n  min-height: 100vh;\n}\n\n#root {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nheader,\nnav,\nmain,\naside,\nfooter {\n  padding: 12px;\n  text-align: center;\n}\n\nheader {\n  background-color: tomato;\n  height: 60px;\n}\n\n.columns {\n  display: flex;\n  flex-grow: 1;\n}\n\nnav {\n  background-color: coral;\n  flex-shrink: 0;\n  width: 100px;\n}\n\nmain {\n  background-color: moccasin;\n  flex-grow: 1;\n}\n\naside {\n  background-color: sandybrown;\n  flex-shrink: 0;\n  width: 100px;\n}\n\nfooter {\n  background-color: slategray;\n  height: 100px;\n}\n"
    },
    "/tsconfig.app.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/app\",\n    \"types\": []\n  },\n  \"files\": [\"src/main.ts\"],\n  \"include\": [\"src/**/*.d.ts\"]\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"compileOnSave\": false,\n  \"compilerOptions\": {\n    \"baseUrl\": \"./\",\n    \"outDir\": \"./dist/out-tsc\",\n    \"forceConsistentCasingInFileNames\": true,\n    \"strict\": true,\n    \"noImplicitOverride\": true,\n    \"noPropertyAccessFromIndexSignature\": true,\n    \"noImplicitReturns\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"sourceMap\": true,\n    \"declaration\": false,\n    \"downlevelIteration\": true,\n    \"experimentalDecorators\": true,\n    \"moduleResolution\": \"node\",\n    \"target\": \"es2020\",\n    \"module\": \"esnext\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"]\n  },\n  \"angularCompilerOptions\": {\n    \"enableI18nLegacyMessageIdFormat\": false,\n    \"strictInjectionParameters\": true,\n    \"strictInputAccessModifiers\": true,\n    \"strictTemplates\": true\n  }\n}\n"
    },
    "/tsconfig.spec.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/spec\",\n    \"types\": [\"jasmine\"]\n  },\n  \"include\": [\"src/**/*.spec.ts\", \"src/**/*.d.ts\"]\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/app/app.component.html",
      "/src/styles.css",
      "/src/index.html"
    ],
    "activeFile": "/src/app/app.component.html",
    "environment": "angular-cli"
  },
  "writeup": "var Component=(()=>{var y=Object.create;var d=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var F=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),C=(n,e)=>{for(var s in e)d(n,s,{get:e[s],enumerable:!0})},u=(n,e,s,h)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of v(e))!M.call(n,r)&&r!==s&&d(n,r,{get:()=>e[r],enumerable:!(h=_(e,r))||h.enumerable});return n};var c=(n,e,s)=>(s=n!=null?y(T(n)):{},u(e||!n||!n.__esModule?d(s,\"default\",{value:n,enumerable:!0}):s,n)),k=n=>u(d({},\"__esModule\",{value:!0}),n);var l=F((I,m)=>{m.exports=_jsx_runtime});var S={};C(S,{default:()=>G});var a=c(l());var o=c(l());function p(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsx)(e.li,{children:\"There are multiple ways to implement the Holy Grail layout. It'd be good practice to try out a Grid-based approach as well as it might become the de facto solution in future.\"}),`\n`]})]})}function D(n={}){let{wrapper:e}=n.components||{};return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(p,n)})):p(n)}var f=D;var i=c(l());function x(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Test variable width: the navigation and sidebar columns should be fixed width and the middle column is fluid and fills up any remaining space.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Test variable height: the header and footer rows should be fixed width and the footer should always be at the bottom of the window.\"}),`\n`,(0,i.jsxs)(e.li,{children:[\"Test lots of content within \",(0,i.jsx)(e.code,{children:\"main\"}),\". It should not cause the \",(0,i.jsx)(e.code,{children:\"nav\"}),\" and \",(0,i.jsx)(e.code,{children:\"aside\"}),\" to shrink.\"]}),`\n`]})]})}function X(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(x,n)})):x(n)}var g=X;var t=c(l());function b(n){let e=Object.assign({h2:\"h2\",p:\"p\",h3:\"h3\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsx)(e.p,{children:\"The most widely-supported solution is a Flexbox-based one. It has great browser support and is easiest to understand. A Grid-based approach is also getting popular these days but isn't as well-supported as Flexbox.\"}),`\n`,(0,t.jsx)(e.p,{children:\"There are a few main parts to achieving the specifications using flexbox. Let's dive into each.\"}),`\n`,(0,t.jsx)(e.h3,{children:\"Sticky footer\"}),`\n`,(0,t.jsx)(e.p,{children:\"The Holy Grail layout problem also encompasses another classic problem: making a footer stick to the bottom of the screen when there is not enough content to fill up the page.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"This can be solved by adding \",(0,t.jsx)(e.code,{children:\"min-height: 100vh\"}),\" to the container of the page's contents. Since the direct children will be laid out in a vertical fashion, we add \",(0,t.jsx)(e.code,{children:\"display: flex\"}),\" and \",(0,t.jsx)(e.code,{children:\"flex-direction: column\"}),\" to that element as well.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"The header and footers are fixed heights and the columns are variable height and is meant to fill up any remaining space. To achieve this, \",(0,t.jsx)(e.code,{children:\"flex-grow: 1\"}),\" is added to the \",(0,t.jsx)(e.code,{children:\"<div>\"}),\" wrapping the columns.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Columns\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The requirement to make all the columns equal-height is also trivially solved with Flexbox. By adding \",(0,t.jsx)(e.code,{children:\"display: flex\"}),\" to the \",(0,t.jsx)(e.code,{children:\"div\"}),\" wrapper of the columns, this requirement is met.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Like before, the flexible-width \",(0,t.jsx)(e.code,{children:\"<main>\"}),\" content section can be achieved using \",(0,t.jsx)(e.code,{children:\"flex-grow: 1\"}),\" and it will fill up any horizontal space available.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"flex-shrink: 0\"}),\" has to be added to \",(0,t.jsx)(e.code,{children:\"<nav>\"}),\" and \",(0,t.jsx)(e.code,{children:\"<aside>\"}),\" so that they don't shrink when the content in \",(0,t.jsx)(e.code,{children:\"<main>\"}),\" is too wide.\"]})]})}function O(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(b,n)})):b(n)}var w=O;function j(n){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(w,{}),`\n`,(0,a.jsx)(g,{}),`\n`,(0,a.jsx)(f,{})]})}function L(n={}){let{wrapper:e}=n.components||{};return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(j,n)})):j(n)}var G=L;return k(S);})();\n;return Component;"
}