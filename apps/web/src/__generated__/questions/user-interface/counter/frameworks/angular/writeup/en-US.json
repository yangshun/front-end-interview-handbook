{
  "skeleton": "var Component=(()=>{var x=Object.create;var i=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var w=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),_=(t,e)=>{for(var o in e)i(t,o,{get:e[o],enumerable:!0})},u=(t,e,o,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of g(e))!b.call(t,r)&&r!==o&&i(t,r,{get:()=>e[r],enumerable:!(a=f(e,r))||a.enumerable});return t};var m=(t,e,o)=>(o=t!=null?x(j(t)):{},u(e||!t||!t.__esModule?i(o,\"default\",{value:t,enumerable:!0}):o,t)),M=t=>u(i({},\"__esModule\",{value:!0}),t);var c=w((q,h)=>{h.exports=_jsx_runtime});var y={};_(y,{default:()=>k});var s=m(c());var n=m(c());function l(t){let e=Object.assign({p:\"p\",strong:\"strong\",h2:\"h2\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Note:\"}),\" This is a short warm up question meant to help you familiarize with the coding workspace. Actual UI coding interview questions will be more complicated.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,n.jsx)(e.p,{children:\"Make the text within the button display the number of times the button has been clicked.\"})]})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(l,t)})):l(t)}var d=C;function p(t){return(0,s.jsx)(d,{})}function D(t={}){let{wrapper:e}=t.components||{};return e?(0,s.jsx)(e,Object.assign({},t,{children:(0,s.jsx)(p,t)})):p(t)}var k=D;return M(y);})();\n;return Component;",
  "solution": "var Component=(()=>{var x=Object.create;var s=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var g=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),k=(n,e)=>{for(var i in e)s(n,i,{get:e[i],enumerable:!0})},h=(n,e,i,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of _(e))!p.call(n,o)&&o!==i&&s(n,o,{get:()=>e[o],enumerable:!(a=j(e,o))||a.enumerable});return n};var l=(n,e,i)=>(i=n!=null?x(f(n)):{},h(e||!n||!n.__esModule?s(i,\"default\",{value:n,enumerable:!0}):i,n)),C=n=>h(s({},\"__esModule\",{value:!0}),n);var r=g((F,d)=>{d.exports=_jsx_runtime});var v={};k(v,{default:()=>D});var t=l(r());var c=l(r());function u(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},n.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,c.jsxs)(e.ul,{children:[`\n`,(0,c.jsx)(e.li,{children:\"Click on the counter to increment the count value by one.\"}),`\n`,(0,c.jsx)(e.li,{children:\"Click multiple times and check that the count value increases on each click.\"}),`\n`]})]})}function w(n={}){let{wrapper:e}=n.components||{};return e?(0,c.jsx)(e,Object.assign({},n,{children:(0,c.jsx)(u,n)})):u(n)}var m=w;function b(n){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"This is a short question which only requires one state variable, which is the number of times the button has been clicked (\",(0,t.jsx)(e.code,{children:\"count\"}),\").\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Declare \",(0,t.jsx)(e.code,{children:\"count\"}),\" as an instance variable and create a method \",(0,t.jsx)(e.code,{children:\"increment\"}),\" that increments the \",(0,t.jsx)(e.code,{children:\"count\"}),\". This method is bound to the \",(0,t.jsx)(e.code,{children:\"<button>\"}),\"'s click action and will be called when the \",(0,t.jsx)(e.code,{children:\"<button>\"}),\" is clicked.\"]}),`\n`,(0,t.jsx)(m,{})]})}function M(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(b,n)})):b(n)}var D=M;return C(v);})();\n;return Component;"
}