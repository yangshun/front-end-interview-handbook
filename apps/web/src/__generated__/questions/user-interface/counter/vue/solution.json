{
  "author": null,
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/counter-vue-solution\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/main.js\",\n  \"scripts\": {\n    \"serve\": \"vue-cli-service serve\",\n    \"build\": \"vue-cli-service build\"\n  },\n  \"dependencies\": {\n    \"core-js\": \"3.32.2\",\n    \"vue\": \"3.3.4\"\n  },\n  \"devDependencies\": {\n    \"@vue/cli-plugin-babel\": \"5.0.8\",\n    \"@vue/cli-service\": \"5.0.8\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width,initial-scale=1.0\" />\n    <title>Vue</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <!-- Built files will be auto injected -->\n  </body>\n</html>\n"
    },
    "/src/App.vue": {
      "code": "<script setup>\nimport { ref } from 'vue';\n\nconst count = ref(0);\n</script>\n\n<template>\n  <button @click=\"count++\">Clicks: {{ count }}</button>\n</template>\n"
    },
    "/src/main.js": {
      "code": "import { createApp } from 'vue';\nimport App from './App.vue';\n\nimport './styles.css';\n\ncreateApp(App).mount('#app');\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.vue",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.vue",
    "environment": "vue-cli"
  },
  "writeup": "var Component=(()=>{var j=Object.create;var s=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var p=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),C=(n,e)=>{for(var i in e)s(n,i,{get:e[i],enumerable:!0})},h=(n,e,i,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of b(e))!g.call(n,o)&&o!==i&&s(n,o,{get:()=>e[o],enumerable:!(a=_(e,o))||a.enumerable});return n};var l=(n,e,i)=>(i=n!=null?j(f(n)):{},h(e||!n||!n.__esModule?s(i,\"default\",{value:n,enumerable:!0}):i,n)),k=n=>h(s({},\"__esModule\",{value:!0}),n);var r=p((F,d)=>{d.exports=_jsx_runtime});var D={};C(D,{default:()=>v});var t=l(r());var c=l(r());function u(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},n.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,c.jsxs)(e.ul,{children:[`\n`,(0,c.jsx)(e.li,{children:\"Click on the counter to increment the count value by one.\"}),`\n`,(0,c.jsx)(e.li,{children:\"Click multiple times and check that the count value increases on each click.\"}),`\n`]})]})}function w(n={}){let{wrapper:e}=n.components||{};return e?(0,c.jsx)(e,Object.assign({},n,{children:(0,c.jsx)(u,n)})):u(n)}var m=w;function x(n){let e=Object.assign({p:\"p\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[\"This is a short question which only requires one state variable, which is the number of times the button has been clicked (\",(0,t.jsx)(e.code,{children:\"count\"}),\").\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Declare \",(0,t.jsx)(e.code,{children:\"count\"}),\" as a variable and attach a \",(0,t.jsx)(e.code,{children:\"@click\"}),\" handler to the \",(0,t.jsx)(e.code,{children:\"<button>\"}),\" which increments the \",(0,t.jsx)(e.code,{children:\"count\"}),\" when the event is triggered.\"]}),`\n`,(0,t.jsx)(m,{})]})}function M(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(x,n)})):x(n)}var v=M;return k(D);})();\n;return Component;"
}