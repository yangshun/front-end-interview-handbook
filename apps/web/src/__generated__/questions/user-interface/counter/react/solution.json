{
  "author": "yangshun",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/counter-react-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useState } from 'react';\n\nexport default function App() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <button onClick={() => setCount(count + 1)}>\n        Clicks: {count}\n      </button>\n    </div>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  },
  "writeup": "var Component=(()=>{var j=Object.create;var s=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var g=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),k=(n,e)=>{for(var o in e)s(n,o,{get:e[o],enumerable:!0})},h=(n,e,o,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of _(e))!p.call(n,i)&&i!==o&&s(n,i,{get:()=>e[i],enumerable:!(a=b(e,i))||a.enumerable});return n};var l=(n,e,o)=>(o=n!=null?j(f(n)):{},h(e||!n||!n.__esModule?s(o,\"default\",{value:n,enumerable:!0}):o,n)),C=n=>h(s({},\"__esModule\",{value:!0}),n);var r=g((F,d)=>{d.exports=_jsx_runtime});var y={};k(y,{default:()=>v});var t=l(r());var c=l(r());function u(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},n.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,c.jsxs)(e.ul,{children:[`\n`,(0,c.jsx)(e.li,{children:\"Click on the counter to increment the count value by one.\"}),`\n`,(0,c.jsx)(e.li,{children:\"Click multiple times and check that the count value increases on each click.\"}),`\n`]})]})}function w(n={}){let{wrapper:e}=n.components||{};return e?(0,c.jsx)(e,Object.assign({},n,{children:(0,c.jsx)(u,n)})):u(n)}var m=w;function x(n){let e=Object.assign({p:\"p\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[\"This is a short question which only requires one state variable, which is the number of times the button has been clicked (\",(0,t.jsx)(e.code,{children:\"count\"}),\").\"]}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"useState\"}),\" can be used to track that variable and replace the hardcoded 0 with the \",(0,t.jsx)(e.code,{children:\"count\"}),\" state. Then attach an \",(0,t.jsx)(e.code,{children:\"onClick\"}),\" handler on the \",(0,t.jsx)(e.code,{children:\"<button>\"}),\" element and increment the \",(0,t.jsx)(e.code,{children:\"count\"}),\" whenever it is clicked.\"]}),`\n`,(0,t.jsx)(m,{})]})}function M(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(x,n)})):x(n)}var v=M;return C(y);})();\n;return Component;"
}