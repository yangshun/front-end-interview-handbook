{
  "author": "yangshun",
  "files": {
    "/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <button>Clicks: <span id=\"count\">0</span></button>\n    <script src=\"src/index.js\"></script>\n  </body>\n</html>\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/counter-vanilla-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"parcel\": \"2.9.3\"\n  },\n  \"source\": \"index.html\",\n  \"scripts\": {\n    \"start\": \"parcel\",\n    \"build\": \"parcel build\"\n  }\n}\n"
    },
    "/src/index.js": {
      "code": "import './styles.css';\n\n(() => {\n  let count = 0;\n  const $countEl = document.querySelector('#count');\n\n  document\n    .querySelector('button')\n    .addEventListener('click', () => {\n      count++;\n      $countEl.textContent = count;\n    });\n})();\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/index.html",
      "/src/index.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/index.html",
    "environment": "parcel"
  },
  "writeup": "var Component=(()=>{var j=Object.create;var s=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var g=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),k=(t,e)=>{for(var i in e)s(t,i,{get:e[i],enumerable:!0})},h=(t,e,i,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of _(e))!b.call(t,o)&&o!==i&&s(t,o,{get:()=>e[o],enumerable:!(r=p(e,o))||r.enumerable});return t};var l=(t,e,i)=>(i=t!=null?j(f(t)):{},h(e||!t||!t.__esModule?s(i,\"default\",{value:t,enumerable:!0}):i,t)),v=t=>h(s({},\"__esModule\",{value:!0}),t);var a=g((F,d)=>{d.exports=_jsx_runtime});var y={};k(y,{default:()=>M});var n=l(a());var c=l(a());function u(t){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},t.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,c.jsxs)(e.ul,{children:[`\n`,(0,c.jsx)(e.li,{children:\"Click on the counter to increment the count value by one.\"}),`\n`,(0,c.jsx)(e.li,{children:\"Click multiple times and check that the count value increases on each click.\"}),`\n`]})]})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,c.jsx)(e,Object.assign({},t,{children:(0,c.jsx)(u,t)})):u(t)}var m=C;function x(t){let e=Object.assign({p:\"p\",code:\"code\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"This is a short question which only requires one state variable, which is the number of times the button has been clicked (\",(0,n.jsx)(e.code,{children:\"count\"}),\"). Attach a \",(0,n.jsx)(e.code,{children:\"'click'\"}),\" event listener to the \",(0,n.jsx)(e.code,{children:\"<button>\"}),\" and each time it is clicked, increment the \",(0,n.jsx)(e.code,{children:\"count\"}),\" value and update the text with that value.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Since only the count needs to change, we can use a \",(0,n.jsx)(e.code,{children:\"<span>\"}),\" to target the count text and update its \",(0,n.jsx)(e.code,{children:\"textContent\"}),\" whenever a click event is fired.\"]}),`\n`,(0,n.jsx)(m,{})]})}function w(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(x,t)})):x(t)}var M=w;return v(y);})();\n;return Component;"
}