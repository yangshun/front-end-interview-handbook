{
  "skeleton": "var Component=(()=>{var g=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var _=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),w=(n,e)=>{for(var t in e)s(n,t,{get:e[t],enumerable:!0})},l=(n,e,t,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of x(e))!j.call(n,o)&&o!==t&&s(n,o,{get:()=>e[o],enumerable:!(a=f(e,o))||a.enumerable});return n};var p=(n,e,t)=>(t=n!=null?g(b(n)):{},l(e||!n||!n.__esModule?s(t,\"default\",{value:n,enumerable:!0}):t,n)),M=n=>l(s({},\"__esModule\",{value:!0}),n);var i=_((O,h)=>{h.exports=_jsx_runtime});var X={};w(X,{default:()=>C});var c=p(i());var r=p(i());function m(n){let e=Object.assign({p:\"p\",img:\"img\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:\"Implement a progress bar component which shows the completion progress by filling the bar proportionately to the progress (a number between 0-100, inclusive).\"}),`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:\"/img/questions/progress-bar/progress-bar-example.png\",alt:\"Progress Bar Example\"})}),`\n`,(0,r.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[\"The filled bar can be of any color. The example uses \",(0,r.jsx)(e.code,{children:\"#c5c5c5\"}),\" for the background color and \",(0,r.jsx)(e.code,{children:\"#0d6efd\"}),\" for the progress color.\"]}),`\n`,(0,r.jsx)(e.li,{children:\"The completion % is shown in the center of the filled bar.\"}),`\n`]})]})}function y(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(m,n)})):m(n)}var d=y;function u(n){return(0,c.jsx)(d,{})}function D(n={}){let{wrapper:e}=n.components||{};return e?(0,c.jsx)(e,Object.assign({},n,{children:(0,c.jsx)(u,n)})):u(n)}var C=D;return M(X);})();\n;return Component;",
  "solution": "var Component=(()=>{var x=Object.create;var i=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,_=Object.prototype.hasOwnProperty;var v=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),M=(n,e)=>{for(var o in e)i(n,o,{get:e[o],enumerable:!0})},h=(n,e,o,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of j(e))!_.call(n,a)&&a!==o&&i(n,a,{get:()=>e[a],enumerable:!(d=y(e,a))||d.enumerable});return n};var l=(n,e,o)=>(o=n!=null?x(w(n)):{},h(e||!n||!n.__esModule?i(o,\"default\",{value:n,enumerable:!0}):o,n)),F=n=>h(i({},\"__esModule\",{value:!0}),n);var c=v((L,u)=>{u.exports=_jsx_runtime});var S={};M(S,{default:()=>X});var s=l(c());var r=l(c());function p(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:\"Valid values: 25, 50, 75.\"}),`\n`,(0,r.jsx)(e.li,{children:\"Boundary values: 0, 100.\"}),`\n`,(0,r.jsx)(e.li,{children:\"Invalid values: -10, 120.\"}),`\n`,(0,r.jsx)(e.li,{children:\"For small values, the percentage labels are rendered appropriately.\"}),`\n`,(0,r.jsx)(e.li,{children:\"Filled bar does not exceed rounded corners.\"}),`\n`]})]})}function C(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(p,n)})):p(n)}var m=C;var t=l(c());function g(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"overflow: hidden\"}),\" has to be added to \",(0,t.jsx)(e.code,{children:\".progress-bar\"}),\" because of the rounded corners, so that the filled progress doesn't stick out of the rounded corners.\"]}),`\n`,(0,t.jsx)(e.li,{children:\"Progress values outside the range of [0, 100] should be handled well; they should not cause layout issues.\"}),`\n`,(0,t.jsx)(e.li,{children:\"For small values, there might not be enough space to display the percentage label. We can either not show anything or truncate the display.\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"We can use CSS transforms (e.g. \",(0,t.jsx)(e.code,{children:\"scale\"}),\") as opposed to changing the \",(0,t.jsx)(e.code,{children:\"width\"}),\" property, which is better for performance if there's a need for animation.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:'role=\"progressbar\"'}),\" and \",(0,t.jsx)(e.code,{children:\"aria\"}),\" values are added to the component for a11y reasons, so that screen readers can accurately depict the component.\"]}),`\n`]})]})}function D(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(g,n)})):g(n)}var f=D;function b(n){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\"},n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,s.jsx)(e.p,{children:\"Create a function to turn a DOM element into a progress bar. We then construct the necessary inner DOM elements and set the appropriate styling and add a label within to indicate the progress percentage.\"}),`\n`,(0,s.jsxs)(e.p,{children:[\"Filling the bar proportionately to the progress (a number between 0-100, inclusive) can be accomplished using the \",(0,s.jsx)(e.code,{children:\"Element.style.width\"}),\" property . Since the value is dynamic, we cannot possibly write classes for it beforehand and we have to use inline styles.\"]}),`\n`,(0,s.jsx)(e.p,{children:\"It's a good practice to expose a method to change the progress percentage in case as it is common for the progress changes with time. Its usage is shown with the progress slider at the bottom.\"}),`\n`,(0,s.jsx)(m,{}),`\n`,(0,s.jsx)(f,{})]})}function O(n={}){let{wrapper:e}=n.components||{};return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(b,n)})):b(n)}var X=O;return F(S);})();\n;return Component;"
}