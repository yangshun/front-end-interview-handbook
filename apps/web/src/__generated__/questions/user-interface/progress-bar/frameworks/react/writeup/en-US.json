{
  "skeleton": "var Component=(()=>{var u=Object.create;var c=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var _=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),w=(n,e)=>{for(var t in e)c(n,t,{get:e[t],enumerable:!0})},l=(n,e,t,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of x(e))!j.call(n,s)&&s!==t&&c(n,s,{get:()=>e[s],enumerable:!(a=f(e,s))||a.enumerable});return n};var p=(n,e,t)=>(t=n!=null?u(b(n)):{},l(e||!n||!n.__esModule?c(t,\"default\",{value:n,enumerable:!0}):t,n)),y=n=>l(c({},\"__esModule\",{value:!0}),n);var i=_((O,d)=>{d.exports=_jsx_runtime});var C={};w(C,{default:()=>D});var o=p(i());var r=p(i());function h(n){let e=Object.assign({p:\"p\",img:\"img\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:\"Implement a progress bar component which shows the completion progress by filling the bar proportionately to the progress (a number between 0-100, inclusive).\"}),`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:\"/img/questions/progress-bar/progress-bar-example.png\",alt:\"Progress Bar Example\"})}),`\n`,(0,r.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[\"The filled bar can be of any color. The example uses \",(0,r.jsx)(e.code,{children:\"#c5c5c5\"}),\" for the background color and \",(0,r.jsx)(e.code,{children:\"#0d6efd\"}),\" for the progress color.\"]}),`\n`,(0,r.jsx)(e.li,{children:\"The completion % is shown in the center of the filled bar.\"}),`\n`]})]})}function M(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(h,n)})):h(n)}var m=M;function g(n){let e=Object.assign({p:\"p\",code:\"code\"},n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(m,{}),`\n`,(0,o.jsxs)(e.p,{children:[\"A \",(0,o.jsx)(e.code,{children:\"ProgressBar.js\"}),\" skeleton component has been created for you. You are free to decide the props of \",(0,o.jsx)(e.code,{children:\"<ProgressBar />\"}),\".\"]})]})}function B(n={}){let{wrapper:e}=n.components||{};return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(g,n)})):g(n)}var D=B;return y(C);})();\n;return Component;",
  "solution": "var Component=(()=>{var x=Object.create;var a=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var w=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),F=(n,e)=>{for(var s in e)a(n,s,{get:e[s],enumerable:!0})},h=(n,e,s,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of y(e))!v.call(n,c)&&c!==s&&a(n,c,{get:()=>e[c],enumerable:!(d=j(e,c))||d.enumerable});return n};var l=(n,e,s)=>(s=n!=null?x(_(n)):{},h(e||!n||!n.__esModule?a(s,\"default\",{value:n,enumerable:!0}):s,n)),M=n=>h(a({},\"__esModule\",{value:!0}),n);var i=w((N,u)=>{u.exports=_jsx_runtime});var S={};F(S,{default:()=>X});var o=l(i());var r=l(i());function m(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:\"Valid values: 25, 50, 75.\"}),`\n`,(0,r.jsx)(e.li,{children:\"Boundary values: 0, 100.\"}),`\n`,(0,r.jsx)(e.li,{children:\"Invalid values: -10, 120.\"}),`\n`,(0,r.jsx)(e.li,{children:\"For small values, the percentage labels are rendered appropriately.\"}),`\n`,(0,r.jsx)(e.li,{children:\"Filled bar does not exceed rounded corners.\"}),`\n`]})]})}function C(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(m,n)})):m(n)}var p=C;var t=l(i());function g(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"overflow: hidden\"}),\" has to be added to \",(0,t.jsx)(e.code,{children:\".progress-bar\"}),\" because of the rounded corners, so that the filled progress doesn't stick out of the rounded corners.\"]}),`\n`,(0,t.jsx)(e.li,{children:\"Progress values outside the range of [0, 100] should be handled well; they should not cause layout issues.\"}),`\n`,(0,t.jsx)(e.li,{children:\"For small values, there might not be enough space to display the percentage label. We can either not show anything or truncate the display.\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"We can use CSS transforms (e.g. \",(0,t.jsx)(e.code,{children:\"scale\"}),\") as opposed to changing the \",(0,t.jsx)(e.code,{children:\"width\"}),\" property, which is better for performance if there's a need for animation.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:'role=\"progressbar\"'}),\" and \",(0,t.jsx)(e.code,{children:\"aria\"}),\" values are added to the component for a11y reasons, so that screen readers can accurately depict the component.\"]}),`\n`]})]})}function D(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(g,n)})):g(n)}var f=D;function b(n){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\"},n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"Filling the bar proportionately to the progress (a number between 0-100, inclusive) can be accomplished using the \",(0,o.jsx)(e.code,{children:\"style\"}),\" attribute on React elements. Since the value is dynamic, we cannot possibly write classes for it beforehand and we have to use inline styles.\"]}),`\n`,(0,o.jsx)(p,{}),`\n`,(0,o.jsx)(f,{})]})}function O(n={}){let{wrapper:e}=n.components||{};return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(b,n)})):b(n)}var X=O;return M(S);})();\n;return Component;"
}