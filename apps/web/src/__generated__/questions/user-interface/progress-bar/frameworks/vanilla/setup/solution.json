{
  "author": "yangshun",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\n    \"/index.html\",\n    \"/src/index.js\",\n    \"/src/styles.css\"\n  ],\n  \"activeFile\": \"/src/index.html\",\n  \"environment\": \"parcel\"\n}\n"
    },
    "/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div class=\"wrapper\">\n      <div id=\"progress-0\" class=\"progress\"></div>\n      <div id=\"progress-25\" class=\"progress\"></div>\n      <div id=\"progress-50\" class=\"progress\"></div>\n      <div id=\"progress-75\" class=\"progress\"></div>\n      <div id=\"progress-100\" class=\"progress\"></div>\n      <div id=\"progress-2\" class=\"progress\"></div>\n      <div id=\"progress--10\" class=\"progress\"></div>\n      <div id=\"progress-120\" class=\"progress\"></div>\n      <hr />\n      <label>\n        <div>Control progress</div>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"100\"\n          value=\"50\"\n          id=\"slider\" />\n      </label>\n      <div id=\"progress-slider\" class=\"progress\"></div>\n    </div>\n\n    <script src=\"src/index.js\"></script>\n  </body>\n</html>\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/progress-bar-vanilla-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"parcel\": \"2.9.3\"\n  },\n  \"source\": \"index.html\",\n  \"scripts\": {\n    \"start\": \"parcel\",\n    \"build\": \"parcel build\"\n  }\n}\n"
    },
    "/src/index.js": {
      "code": "import './styles.css';\n\n(() => {\n  function progressBar($rootElement, initialValue) {\n    const MIN = 0;\n    const MAX = 100;\n    $rootElement.classList.add('progress');\n\n    const $progressBarEl = document.createElement('div');\n    $progressBarEl.className = 'progress-bar';\n    // Set attributes for a11y.\n    $progressBarEl.setAttribute('role', 'progressbar');\n    $progressBarEl.setAttribute('aria-valuemin', MIN);\n    $progressBarEl.setAttribute('aria-valuemax', MAX);\n\n    function setValue(value) {\n      // Handle invalid values and convert them to be within [0, 100].\n      const clampedValue = Math.min(\n        Math.max(value, MIN),\n        MAX,\n      );\n\n      $progressBarEl.style.width = `${clampedValue}%`;\n      $progressBarEl.textContent = `${clampedValue}%`;\n      $progressBarEl.setAttribute(\n        'aria-valuenow',\n        clampedValue,\n      );\n    }\n\n    $rootElement.appendChild($progressBarEl);\n    setValue(initialValue);\n\n    return {\n      setValue,\n    };\n  }\n\n  // Initialize some examples.\n  progressBar(document.querySelector('#progress-0'), 0);\n  progressBar(document.querySelector('#progress-25'), 25);\n  progressBar(document.querySelector('#progress-50'), 50);\n  progressBar(document.querySelector('#progress-75'), 75);\n  progressBar(document.querySelector('#progress-100'), 100);\n  progressBar(document.querySelector('#progress-2'), 2);\n  progressBar(document.querySelector('#progress--10'), -10);\n  progressBar(document.querySelector('#progress-120'), 120);\n\n  // Initialize the slider example which controls the progress of\n  // the progress bar below.\n  const progressSlider = progressBar(\n    document.querySelector('#progress-slider'),\n    50,\n  );\n\n  document\n    .querySelector('#slider')\n    .addEventListener('change', (event) => {\n      progressSlider.setValue(event.target.value);\n    });\n})();\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.progress {\n  background-color: rgb(233, 236, 239);\n  border: 1px solid #c5c5c5;\n  border-radius: 8px;\n  height: 20px;\n  overflow: hidden;\n}\n\n.progress-bar {\n  background-color: #0d6efd;\n  color: #fff;\n  height: 100%;\n  overflow: hidden;\n  text-align: center;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/index.html",
      "/src/index.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/index.html",
    "environment": "parcel"
  }
}