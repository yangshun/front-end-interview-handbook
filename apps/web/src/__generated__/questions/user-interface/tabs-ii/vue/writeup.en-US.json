{
  "skeleton": "var Component=(()=>{var m=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var A=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),I=(n,e)=>{for(var a in e)s(n,a,{get:e[a],enumerable:!0})},c=(n,e,a,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of g(e))!y.call(n,o)&&o!==a&&s(n,o,{get:()=>e[o],enumerable:!(l=f(e,o))||l.enumerable});return n};var h=(n,e,a)=>(a=n!=null?m(w(n)):{},c(e||!n||!n.__esModule?s(a,\"default\",{value:n,enumerable:!0}):a,n)),x=n=>c(s({},\"__esModule\",{value:!0}),n);var r=A((R,d)=>{d.exports=_jsx_runtime});var q={};I(q,{default:()=>j});var i=h(r());var t=h(r());function p(n){let e=Object.assign({p:\"p\",strong:\"strong\",a:\"a\",blockquote:\"blockquote\",em:\"em\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:\"Note:\"}),\" This is an advanced version of \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/tabs\",children:\"Tabs\"}),\", you should complete that question first before attempting this question.\"]}),`\n`,(0,t.jsxs)(e.blockquote,{children:[`\n`,(0,t.jsx)(e.p,{children:\"Tabs are a set of layered sections of content, known as tab panels, that display one panel of content at a time. Each tab panel has an associated tab element, that when activated, displays the panel. The list of tab elements is arranged along one edge of the currently displayed panel, most commonly the top edge.\"}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.em,{children:[\"Source: \",(0,t.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/tabs/\",children:\"Tabs Pattern | ARIA Authoring Practices Guide\"})]})}),`\n`,(0,t.jsxs)(e.p,{children:[\"In \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/tabs\",children:\"Tabs\"}),\", we built a functional tabs component that displays one panel of content at a time depending on the active tab element. However, building good UI components goes beyond functionality and we have to ensure our components have great accessibility as well by adding the right ARIA roles, states, and properties to the DOM elements.\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The ARIA Authoring Practices Guide has a \",(0,t.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/tabs/#wai-ariaroles,states,andproperties\",children:\"long list of guidelines for the ARIA roles, states, and properties to add to the various elements of a tabs component\"}),\".\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Implement the following guidelines for this question:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"The element that serves as the container for the set of tabs has role \",(0,t.jsx)(e.code,{children:\"tablist\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each element that serves as a tab has role \",(0,t.jsx)(e.code,{children:\"tab\"}),\" and is contained within the element with role \",(0,t.jsx)(e.code,{children:\"tablist\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each element that contains the content panel for a \",(0,t.jsx)(e.code,{children:\"tab\"}),\" has role \",(0,t.jsx)(e.code,{children:\"tabpanel\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each element with role \",(0,t.jsx)(e.code,{children:\"tab\"}),\" has the property \",(0,t.jsx)(e.code,{children:\"aria-controls\"}),\" referring to its associated \",(0,t.jsx)(e.code,{children:\"tabpanel\"}),\" element.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"The active tab element has the state \",(0,t.jsx)(e.code,{children:\"aria-selected\"}),\" set to \",(0,t.jsx)(e.code,{children:\"true\"}),\" and all other tab elements have it set to \",(0,t.jsx)(e.code,{children:\"false\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each element with role \",(0,t.jsx)(e.code,{children:\"tabpanel\"}),\" has the property \",(0,t.jsx)(e.code,{children:\"aria-labelledby\"}),\" referring to its associated tab element.\"]}),`\n`]}),`\n`,(0,t.jsxs)(e.p,{children:[\"It is also important that we use a \",(0,t.jsx)(e.code,{children:\"<button>\"}),\" element to build the tabs as they need to be focusable and interactive.\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The skeleton code uses the solution of \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/tabs\",children:\"Tabs\"}),\", but you are free to use your own solution as a starting point.\"]})]})}function v(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(p,n)})):p(n)}var u=v;function b(n){return(0,i.jsx)(u,{})}function T(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(b,n)})):b(n)}var j=T;return x(q);})();\n;return Component;",
  "solution": "var Component=(()=>{var w=Object.create;var c=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var _=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=>{for(var s in e)c(t,s,{get:e[s],enumerable:!0})},d=(t,e,s,h)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of I(e))!j.call(t,r)&&r!==s&&c(t,r,{get:()=>e[r],enumerable:!(h=x(e,r))||h.enumerable});return t};var l=(t,e,s)=>(s=t!=null?w(T(t)):{},d(e||!t||!t.__esModule?c(s,\"default\",{value:t,enumerable:!0}):s,t)),D=t=>d(c({},\"__esModule\",{value:!0}),t);var o=_((R,u)=>{u.exports=_jsx_runtime});var O={};y(O,{default:()=>q});var n=l(o());var a=l(o());function b(t){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\"},t.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,a.jsxs)(e.ul,{children:[`\n`,(0,a.jsx)(e.li,{children:\"Inspect the rendered HTML to see that the right attributes were added to the DOM.\"}),`\n`,(0,a.jsxs)(e.li,{children:[\"You can go a step further by using accessibility testing tools like \",(0,a.jsx)(e.a,{href:\"https://www.deque.com/axe/\",children:\"axe\"}),\" to validate the a11y of the elements.\"]}),`\n`]})]})}function v(t={}){let{wrapper:e}=t.components||{};return e?(0,a.jsx)(e,Object.assign({},t,{children:(0,a.jsx)(b,t)})):b(t)}var m=v;var i=l(o());function f(t){let e=Object.assign({h2:\"h2\",p:\"p\",a:\"a\",ul:\"ul\",li:\"li\"},t.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Accessibility (A11y)\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"We're not totally done with accessibility yet, there's still keyboard support to add, which will be covered in \",(0,i.jsx)(e.a,{href:\"/questions/user-interface/tabs-iii\",children:\"Tabs III\"}),\".\"]}),`\n`,(0,i.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/tabs/\",children:\"Tabs Patterns | ARIA Authoring Practices Guide\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://www.radix-ui.com/primitives/docs/components/tabs\",children:\"Tabs \\u2013 Radix Primitives\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://react-spectrum.adobe.com/react-aria/Tabs.html\",children:\"Tabs \\u2013 React Aria\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://headlessui.com/react/tabs\",children:\"Tabs - Headless UI\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://ariakit.org/components/tab\",children:\"Tab \\u2013 Ariakit\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://reach.tech/tabs\",children:\"Tabs | Reach UI\"})}),`\n`]})]})}function A(t={}){let{wrapper:e}=t.components||{};return e?(0,i.jsx)(e,Object.assign({},t,{children:(0,i.jsx)(f,t)})):f(t)}var p=A;function g(t){let e=Object.assign({h2:\"h2\",p:\"p\",a:\"a\",code:\"code\",ul:\"ul\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"We'll build on top of \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/tabs/vue/solution\",children:\"Tabs' solution\"}),\". Other than adding the right ARIA roles and states, which is straightforward, we also need to link the tab items with the corresponding tabpanels. Hence we create two functions, \",(0,n.jsx)(e.code,{children:\"getTabListItemId\"}),\" and \",(0,n.jsx)(e.code,{children:\"getTabPanelId\"}),\" to do this.\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"getTabListItemId\"}),\" generates a unique ID string to use as the value of the \",(0,n.jsx)(e.code,{children:\"id\"}),\" attribute of tab items. This ID will be used as the value of the \",(0,n.jsx)(e.code,{children:\"aria-labelledby\"}),\" attribute of the corresponding tabpanel.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"getTabPanelId\"}),\" generates a unique ID string to use as the value of the \",(0,n.jsx)(e.code,{children:\"id\"}),\" attribute of tabpanels. This ID will be used as the value of the \",(0,n.jsx)(e.code,{children:\"aria-controls\"}),\" attribute of the corresponding tab item.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Since there can be multiple \",(0,n.jsx)(e.code,{children:\"Tabs\"}),\" component instances on the page and we cannot guarantee that the tab item values will be globally unique, each \",(0,n.jsx)(e.code,{children:\"Tabs\"}),\" instance needs to have a unique identifier. We can use a simple technique \",(0,n.jsx)(e.code,{children:\"Math.random().toString(36).substring(2, 9)\"}),\" to generate unique ID for each \",(0,n.jsx)(e.code,{children:\"Tabs\"}),\" instance. The final ID string will be a concatenation of the \",(0,n.jsx)(e.code,{children:\"Tabs\"}),\" instance's ID, the item value, and whether it's a tab item or a tabpanel.\"]}),`\n`,(0,n.jsx)(m,{}),`\n`,(0,n.jsx)(p,{})]})}function M(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(g,t)})):g(t)}var q=M;return D(O);})();\n;return Component;"
}