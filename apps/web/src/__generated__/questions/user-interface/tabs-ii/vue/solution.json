{
  "author": "willnguyen1312",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/tabs-ii-vue-solution\",\n  \"author\": \"willnguyen1312\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/main.js\",\n  \"scripts\": {\n    \"serve\": \"vue-cli-service serve\",\n    \"build\": \"vue-cli-service build\"\n  },\n  \"dependencies\": {\n    \"core-js\": \"3.32.2\",\n    \"vue\": \"3.3.4\"\n  },\n  \"devDependencies\": {\n    \"@vue/cli-plugin-babel\": \"5.0.8\",\n    \"@vue/cli-service\": \"5.0.8\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width,initial-scale=1.0\" />\n    <title>Vue</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <!-- Built files will be auto injected -->\n  </body>\n</html>\n"
    },
    "/src/App.vue": {
      "code": "<script setup>\nimport Tabs from './Tabs.vue';\n</script>\n\n<template>\n  <div class=\"wrapper\">\n    <Tabs\n      :items=\"[\n        {\n          value: 'html',\n          label: 'HTML',\n          panel:\n            'The HyperText Markup Language or HTML is the standard markup language for documents designed to be displayed in a web browser.',\n        },\n        {\n          value: 'css',\n          label: 'CSS',\n          panel:\n            'Cascading Style Sheets is a style sheet language used for describing the presentation of a document written in a markup language such as HTML or XML.',\n        },\n        {\n          value: 'javascript',\n          label: 'JavaScript',\n          panel:\n            'JavaScript, often abbreviated as JS, is a programming language that is one of the core technologies of the World Wide Web, alongside HTML and CSS.',\n        },\n      ]\" />\n  </div>\n</template>\n\n<style>\n.wrapper {\n  align-items: center;\n  display: flex;\n}\n</style>\n"
    },
    "/src/main.js": {
      "code": "import { createApp } from 'vue';\nimport App from './App.vue';\n\nimport './styles.css';\n\ncreateApp(App).mount('#app');\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    },
    "/src/Tabs.vue": {
      "code": "<script setup>\nimport { ref } from 'vue';\n\nfunction getTabListItemId(tabsId, value) {\n  return tabsId + '-tab-' + value;\n}\n\nfunction getTabPanelId(tabsId, value) {\n  return tabsId + '-tabpanel-' + value;\n}\n\nconst props = defineProps({\n  items: Array,\n  defaultValue: String,\n});\n\nconst tabsId = Math.random().toString(36).substring(2, 9);\n\nconst value = ref(\n  props.defaultValue ?? props.items[0].value,\n);\n</script>\n\n<template>\n  <div class=\"tabs\">\n    <div class=\"tabs-list\" role=\"tablist\">\n      <button\n        v-for=\"{ label, value: itemValue } in items\"\n        :id=\"getTabListItemId(tabsId, itemValue)\"\n        :key=\"itemValue\"\n        type=\"button\"\n        :class=\"[\n          'tabs-list-item',\n          itemValue === value && 'tabs-list-item--active',\n        ]\"\n        @click=\"value = itemValue\"\n        role=\"tab\"\n        :aria-controls=\"getTabPanelId(tabsId, itemValue)\"\n        :aria-selected=\"itemValue === value\">\n        {{ label }}\n      </button>\n    </div>\n\n    <div>\n      <div\n        v-for=\"{ panel, value: itemValue } in items\"\n        :key=\"itemValue\"\n        :id=\"getTabPanelId(tabsId, itemValue)\"\n        :aria-labelledby=\"\n          getTabListItemId(tabsId, itemValue)\n        \"\n        role=\"tabpanel\"\n        :hidden=\"itemValue !== value\">\n        {{ panel }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<style>\n.tabs {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.tabs-list {\n  display: flex;\n  gap: 6px;\n}\n\n.tabs-list-item {\n  --active-color: blueviolet;\n\n  background: none;\n  border: 1px solid #000;\n  border-radius: 4px;\n  cursor: pointer;\n  padding: 6px 10px;\n}\n\n.tabs-list-item:hover {\n  border-color: var(--active-color);\n  color: var(--active-color);\n}\n\n.tabs-list-item--active,\n.tabs-list-item--active:hover {\n  border-color: var(--active-color);\n  background-color: var(--active-color);\n  color: #fff;\n}\n</style>\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.vue",
      "/src/Tabs.vue"
    ],
    "activeFile": "/src/App.vue",
    "environment": "vue-cli"
  },
  "writeup": "var Component=(()=>{var w=Object.create;var c=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var _=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=>{for(var s in e)c(t,s,{get:e[s],enumerable:!0})},d=(t,e,s,h)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of I(e))!j.call(t,r)&&r!==s&&c(t,r,{get:()=>e[r],enumerable:!(h=x(e,r))||h.enumerable});return t};var l=(t,e,s)=>(s=t!=null?w(T(t)):{},d(e||!t||!t.__esModule?c(s,\"default\",{value:t,enumerable:!0}):s,t)),D=t=>d(c({},\"__esModule\",{value:!0}),t);var o=_((R,u)=>{u.exports=_jsx_runtime});var O={};y(O,{default:()=>q});var n=l(o());var a=l(o());function b(t){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\"},t.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,a.jsxs)(e.ul,{children:[`\n`,(0,a.jsx)(e.li,{children:\"Inspect the rendered HTML to see that the right attributes were added to the DOM.\"}),`\n`,(0,a.jsxs)(e.li,{children:[\"You can go a step further by using accessibility testing tools like \",(0,a.jsx)(e.a,{href:\"https://www.deque.com/axe/\",children:\"axe\"}),\" to validate the a11y of the elements.\"]}),`\n`]})]})}function v(t={}){let{wrapper:e}=t.components||{};return e?(0,a.jsx)(e,Object.assign({},t,{children:(0,a.jsx)(b,t)})):b(t)}var m=v;var i=l(o());function f(t){let e=Object.assign({h2:\"h2\",p:\"p\",a:\"a\",ul:\"ul\",li:\"li\"},t.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Accessibility (A11y)\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"We're not totally done with accessibility yet, there's still keyboard support to add, which will be covered in \",(0,i.jsx)(e.a,{href:\"/questions/user-interface/tabs-iii\",children:\"Tabs III\"}),\".\"]}),`\n`,(0,i.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/tabs/\",children:\"Tabs Patterns | ARIA Authoring Practices Guide\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://www.radix-ui.com/primitives/docs/components/tabs\",children:\"Tabs \\u2013 Radix Primitives\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://react-spectrum.adobe.com/react-aria/Tabs.html\",children:\"Tabs \\u2013 React Aria\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://headlessui.com/react/tabs\",children:\"Tabs - Headless UI\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://ariakit.org/components/tab\",children:\"Tab \\u2013 Ariakit\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://reach.tech/tabs\",children:\"Tabs | Reach UI\"})}),`\n`]})]})}function A(t={}){let{wrapper:e}=t.components||{};return e?(0,i.jsx)(e,Object.assign({},t,{children:(0,i.jsx)(f,t)})):f(t)}var p=A;function g(t){let e=Object.assign({h2:\"h2\",p:\"p\",a:\"a\",code:\"code\",ul:\"ul\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"We'll build on top of \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/tabs/vue/solution\",children:\"Tabs' solution\"}),\". Other than adding the right ARIA roles and states, which is straightforward, we also need to link the tab items with the corresponding tabpanels. Hence we create two functions, \",(0,n.jsx)(e.code,{children:\"getTabListItemId\"}),\" and \",(0,n.jsx)(e.code,{children:\"getTabPanelId\"}),\" to do this.\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"getTabListItemId\"}),\" generates a unique ID string to use as the value of the \",(0,n.jsx)(e.code,{children:\"id\"}),\" attribute of tab items. This ID will be used as the value of the \",(0,n.jsx)(e.code,{children:\"aria-labelledby\"}),\" attribute of the corresponding tabpanel.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"getTabPanelId\"}),\" generates a unique ID string to use as the value of the \",(0,n.jsx)(e.code,{children:\"id\"}),\" attribute of tabpanels. This ID will be used as the value of the \",(0,n.jsx)(e.code,{children:\"aria-controls\"}),\" attribute of the corresponding tab item.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Since there can be multiple \",(0,n.jsx)(e.code,{children:\"Tabs\"}),\" component instances on the page and we cannot guarantee that the tab item values will be globally unique, each \",(0,n.jsx)(e.code,{children:\"Tabs\"}),\" instance needs to have a unique identifier. We can use a simple technique \",(0,n.jsx)(e.code,{children:\"Math.random().toString(36).substring(2, 9)\"}),\" to generate unique ID for each \",(0,n.jsx)(e.code,{children:\"Tabs\"}),\" instance. The final ID string will be a concatenation of the \",(0,n.jsx)(e.code,{children:\"Tabs\"}),\" instance's ID, the item value, and whether it's a tab item or a tabpanel.\"]}),`\n`,(0,n.jsx)(m,{}),`\n`,(0,n.jsx)(p,{})]})}function M(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(g,t)})):g(t)}var q=M;return D(O);})();\n;return Component;"
}