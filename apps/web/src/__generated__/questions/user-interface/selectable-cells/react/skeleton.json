{
  "author": "TODO",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/selectable-cells-react-skeleton\",\n  \"author\": \"TODO\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useState } from 'react';\n\nexport default function App() {\n  const [message, setMessage] = useState('Hello World!');\n\n  return <div>{message}</div>;\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  },
  "writeup": "var Component=(()=>{var m=Object.create;var r=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var y=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),j=(n,e)=>{for(var l in e)r(n,l,{get:e[l],enumerable:!0})},a=(n,e,l,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of x(e))!w.call(n,i)&&i!==l&&r(n,i,{get:()=>e[i],enumerable:!(o=f(e,i))||o.enumerable});return n};var h=(n,e,l)=>(l=n!=null?m(b(n)):{},a(e||!n||!n.__esModule?r(l,\"default\",{value:n,enumerable:!0}):l,n)),_=n=>a(r({},\"__esModule\",{value:!0}),n);var c=y((k,d)=>{d.exports=_jsx_runtime});var C={};j(C,{default:()=>v});var s=h(c());var t=h(c());function u(n){let e=Object.assign({p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\"Build an interface where users can drag to select multiple cells within a grid.\"}),`\n`,(0,t.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"Grid\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"The grid is a 10 x 10 grid containing cells with a black border of 1px thick.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Each cell is 20px by 20px.\"}),`\n`]}),`\n`]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Selection\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Users can draw a selection box by holding the left mouse button down and dragging the cursor. The starting and current cursor position will form the opposite corners of the selection box.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Any cells overlapping with the bounds of the selected box should be highlighted purple. This indicates that they are selected.\"}),`\n`,(0,t.jsx)(e.li,{children:\"When the user releases the mouse, these cells should remain selected/highlighted.\"}),`\n`,(0,t.jsx)(e.li,{children:\"If the user clicks again anywhere on the page, all the cells are unselected.\"}),`\n`,(0,t.jsx)(e.li,{children:\"When a new box is drawn, previously selected cells should reset and only the cells that overlap with the selection box should be highlighted.\"}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:\"Try out the example to get an idea of the result.\"}),`\n`,(0,t.jsx)(e.h2,{children:\"Source\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"This question is adapted from \",(0,t.jsx)(e.a,{href:\"https://frontendeval.com/questions/selectable-grid/\",children:\"FrontendEval's selectable grid question\"}),\".\"]})]})}function D(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(u,n)})):u(n)}var p=D;function g(n){return(0,s.jsx)(p,{})}function M(n={}){let{wrapper:e}=n.components||{};return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(g,n)})):g(n)}var v=M;return _(C);})();\n;return Component;"
}