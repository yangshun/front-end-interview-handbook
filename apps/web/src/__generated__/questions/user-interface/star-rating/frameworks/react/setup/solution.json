{
  "author": "yangshun",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\n    \"/src/App.js\",\n    \"/src/StarRating.js\",\n    \"/src/styles.css\"\n  ],\n  \"activeFile\": \"/src/StarRating.js\",\n  \"environment\": \"create-react-app\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/star-rating-react-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useState } from 'react';\n\nimport StarRating from './StarRating';\n\nexport default function App() {\n  const [rating, setRating] = useState(3);\n\n  return (\n    <div>\n      <StarRating\n        max={5}\n        value={rating}\n        onChange={setRating}\n      />\n    </div>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/StarRating.js": {
      "code": "import { useState } from 'react';\n\nfunction Star({ filled }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={[\n        'star-icon',\n        filled ? 'star-icon-filled' : '',\n      ].join(' ')}\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\">\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\n      />\n    </svg>\n  );\n}\n\nexport default function StarRating({\n  value,\n  max,\n  onChange,\n}) {\n  const [hoveredIndex, setHoveredIndex] = useState(null);\n\n  return (\n    <div>\n      {Array.from({ length: max }).map((_, index) => (\n        <span\n          key={index}\n          tabIndex={0}\n          onMouseEnter={() => setHoveredIndex(index)}\n          onMouseLeave={() => setHoveredIndex(null)}\n          onClick={() => onChange(index + 1)}>\n          <Star\n            filled={\n              hoveredIndex != null\n                ? index <= hoveredIndex\n                : index < value\n            }\n          />\n        </span>\n      ))}\n    </div>\n  );\n}\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.star-icon {\n  --icon-size: 32px;\n\n  cursor: pointer;\n  height: var(--icon-size);\n  width: var(--icon-size);\n}\n\n.star-icon-filled {\n  fill: yellow;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/StarRating.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/StarRating.js",
    "environment": "create-react-app"
  }
}