{
  "skeleton": "var Component=(()=>{var m=Object.create;var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var A=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var x=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),I=(t,e)=>{for(var o in e)r(t,o,{get:e[o],enumerable:!0})},l=(t,e,o,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of b(e))!w.call(t,i)&&i!==o&&r(t,i,{get:()=>e[i],enumerable:!(s=g(e,i))||s.enumerable});return t};var d=(t,e,o)=>(o=t!=null?m(A(t)):{},l(e||!t||!t.__esModule?r(o,\"default\",{value:t,enumerable:!0}):o,t)),v=t=>l(r({},\"__esModule\",{value:!0}),t);var a=x((M,h)=>{h.exports=_jsx_runtime});var _={};I(_,{default:()=>q});var c=d(a());var n=d(a());function u(t){let e=Object.assign({p:\"p\",strong:\"strong\",a:\"a\",blockquote:\"blockquote\",em:\"em\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Note:\"}),\" This is an advanced version of \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/accordion\",children:\"Accordion\"}),\", you should complete that question first before attempting this question.\"]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\"An accordion is a vertically stacked set of interactive headings that each contain a title, content snippet, or thumbnail representing a section of content. The headings function as controls that enable users to reveal or hide their associated sections of content. Accordions are commonly used to reduce the need to scroll when presenting multiple sections of content on a single page.\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsxs)(e.em,{children:[\"Source: \",(0,n.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/accordion/\",children:\"Accordion Pattern\"})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"In \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/accordion\",children:\"Accordion\"}),\", we built a functional accordion component that can expand/collapse each section's contents. However, building good UI components goes beyond functionality and we have to ensure our components have great accessibility as well by adding the right ARIA roles, states, and properties to the DOM elements.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The ARIA Authoring Practices Guide has a \",(0,n.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/accordion/\",children:\"long list of guidelines for the ARIA roles, states, and properties to add to the various elements of an accordion\"}),\". We should implement the following (improvised) guidelines for this question:\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"The title of each accordion header is contained in a \",(0,n.jsx)(e.code,{children:\"<button>\"}),\" element.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"If the accordion panel associated with an accordion header is visible, the header button element has \",(0,n.jsx)(e.code,{children:\"aria-expanded\"}),\" set to \",(0,n.jsx)(e.code,{children:\"true\"}),\". If the panel is not visible, \",(0,n.jsx)(e.code,{children:\"aria-expanded\"}),\" is set to \",(0,n.jsx)(e.code,{children:\"false\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"The accordion header button element has \",(0,n.jsx)(e.code,{children:\"aria-controls\"}),\" set to the ID of the element containing the accordion panel content.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Each element that serves as a container for panel content has role \",(0,n.jsx)(e.code,{children:\"region\"}),\" and \",(0,n.jsx)(e.code,{children:\"aria-labelledby\"}),\" with a value that refers to the button that controls display of the panel.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The skeleton code uses the solution of \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/accordion\",children:\"Accordion\"}),\", but you are free to use your own solution as a starting point.\"]})]})}function y(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(u,t)})):u(t)}var p=y;function f(t){return(0,c.jsx)(p,{})}function j(t={}){let{wrapper:e}=t.components||{};return e?(0,c.jsx)(e,Object.assign({},t,{children:(0,c.jsx)(f,t)})):f(t)}var q=j;return v(_);})();\n;return Component;",
  "solution": "var Component=(()=>{var w=Object.create;var a=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var A=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var _=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),v=(n,e)=>{for(var o in e)a(n,o,{get:e[o],enumerable:!0})},h=(n,e,o,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of x(e))!j.call(n,r)&&r!==o&&a(n,r,{get:()=>e[r],enumerable:!(l=I(e,r))||l.enumerable});return n};var s=(n,e,o)=>(o=n!=null?w(A(n)):{},h(e||!n||!n.__esModule?a(o,\"default\",{value:n,enumerable:!0}):o,n)),y=n=>h(a({},\"__esModule\",{value:!0}),n);var d=_((T,u)=>{u.exports=_jsx_runtime});var C={};v(C,{default:()=>O});var t=s(d());var c=s(d());function f(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\"},n.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,c.jsxs)(e.ul,{children:[`\n`,(0,c.jsx)(e.li,{children:\"Inspect the rendered HTML to see that the right attributes were added to the DOM.\"}),`\n`,(0,c.jsxs)(e.li,{children:[\"You can go a step further by using accessibility testing tools like \",(0,c.jsx)(e.a,{href:\"https://www.deque.com/axe/\",children:\"axe\"}),\" to validate the a11y of the elements.\"]}),`\n`]})]})}function D(n={}){let{wrapper:e}=n.components||{};return e?(0,c.jsx)(e,Object.assign({},n,{children:(0,c.jsx)(f,n)})):f(n)}var m=D;var i=s(d());function p(n){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",a:\"a\",ul:\"ul\",li:\"li\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"By using a \",(0,i.jsx)(e.code,{children:\"<button>\"}),\" for the section titles, we have enabled the basic keyboard interactions necessary to achieve sufficient accessibility for accordion components. However, there are some useful optional keyboard interactions to add, which will be covered in \",(0,i.jsx)(e.a,{href:\"/questions/user-interface/accordion-iii\",children:\"Accordion III\"}),\".\"]}),`\n`,(0,i.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/accordion/\",children:\"Accordion | ARIA Authoring Practices Guide\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://reach.tech/accordion\",children:\"Accordion | Reach UI\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://headlessui.com/react/disclosure\",children:\"Disclosure - Headless UI\"})}),`\n`]})]})}function M(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(p,n)})):p(n)}var g=M;function b(n){let e=Object.assign({p:\"p\",a:\"a\",h2:\"h2\",code:\"code\",ul:\"ul\",li:\"li\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[\"We'll build on top of \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/accordion/svelte/solution\",children:\"Accordion's solution\"}),\".\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Other than adding the right ARIA roles and states, which is straightforward, we also need to link the accordion headers with the corresponding accordion contents/panels. Hence we defined to variables, \",(0,t.jsx)(e.code,{children:\"headerId\"}),\" and \",(0,t.jsx)(e.code,{children:\"panelId\"}),\" to do this.\"]}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"headerId\"}),\" is a unique ID string to use as the value of the \",(0,t.jsx)(e.code,{children:\"id\"}),\" attribute of the header element. This ID will be used as the value of the \",(0,t.jsx)(e.code,{children:\"aria-labelledby\"}),\" attribute of the corresponding accordion panel.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"panelId\"}),\" is a unique ID string to use as the value of the \",(0,t.jsx)(e.code,{children:\"id\"}),\" attribute of accordion panel. This ID will be used as the value of the \",(0,t.jsx)(e.code,{children:\"aria-controls\"}),\" attribute of the corresponding accordion header.\"]}),`\n`]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Since there can be multiple \",(0,t.jsx)(e.code,{children:\"Accordion\"}),\" component instances on the page and we cannot guarantee that the accordion section values will be globally unique, each \",(0,t.jsx)(e.code,{children:\"Accordion\"}),\" instance needs to have a unique identifier. We defined a \",(0,t.jsx)(e.code,{children:\"globalAccordionId\"}),\" in the \",(0,t.jsx)(e.code,{children:'<script context=\"module\">'}),\", this code will only run once when the module first evaluates, rather than when a component is instantiated. For each new \",(0,t.jsx)(e.code,{children:\"Accordion\"}),\" instance, we assign the \",(0,t.jsx)(e.code,{children:\"globalAccordionId\"}),\" to the current \",(0,t.jsx)(e.code,{children:\"Accordion\"}),\" instance's \",(0,t.jsx)(e.code,{children:\"accordionId\"}),\" and increments it, allowing each \",(0,t.jsx)(e.code,{children:\"Accordion\"}),\" instance having a unique ID. The final ID string will be a concatenation of the \",(0,t.jsx)(e.code,{children:\"Accordion\"}),\" instance's \",(0,t.jsx)(e.code,{children:\"accordionId\"}),\", the item value, and whether it's a header or a panel.\"]}),`\n`,(0,t.jsx)(m,{}),`\n`,(0,t.jsx)(g,{})]})}function q(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(b,n)})):b(n)}var O=q;return y(C);})();\n;return Component;"
}