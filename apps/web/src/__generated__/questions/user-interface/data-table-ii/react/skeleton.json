{
  "author": "yangshun",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/data-table-ii-react-skeleton\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"devDependencies\": {\n    \"@types/react\": \"18.2.0\",\n    \"@types/react-dom\": \"18.2.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.tsx": {
      "code": "import DataTable from './DataTable';\n\nexport default function App() {\n  return (\n    <div>\n      <DataTable />\n    </div>\n  );\n}\n"
    },
    "/src/data/users.ts": {
      "code": "const users = [\n  {\n    id: 1,\n    name: 'Emily Chen',\n    age: 28,\n    occupation: 'Software Engineer',\n  },\n  {\n    id: 2,\n    name: 'Ryan Thompson',\n    age: 32,\n    occupation: 'Marketing Manager',\n  },\n  {\n    id: 3,\n    name: 'Sophia Patel',\n    age: 25,\n    occupation: 'Data Analyst',\n  },\n  {\n    id: 4,\n    name: 'Michael Lee',\n    age: 41,\n    occupation: 'CEO',\n  },\n  {\n    id: 5,\n    name: 'Olivia Brown',\n    age: 29,\n    occupation: 'Graphic Designer',\n  },\n  {\n    id: 6,\n    name: 'Alexander Hall',\n    age: 38,\n    occupation: 'Sales Representative',\n  },\n  {\n    id: 7,\n    name: 'Isabella Davis',\n    age: 26,\n    occupation: 'Teacher',\n  },\n  {\n    id: 8,\n    name: 'Ethan White',\n    age: 35,\n    occupation: 'Lawyer',\n  },\n  {\n    id: 9,\n    name: 'Lily Tran',\n    age: 30,\n    occupation: 'Nurse',\n  },\n  {\n    id: 10,\n    name: 'Julian Sanchez',\n    age: 39,\n    occupation: 'Engineer',\n  },\n  {\n    id: 11,\n    name: 'Ava Martin',\n    age: 27,\n    occupation: 'Journalist',\n  },\n  {\n    id: 12,\n    name: 'Benjamin Walker',\n    age: 42,\n    occupation: 'Doctor',\n  },\n  {\n    id: 13,\n    name: 'Charlotte Brooks',\n    age: 31,\n    occupation: 'HR Manager',\n  },\n  {\n    id: 14,\n    name: 'Gabriel Harris',\n    age: 36,\n    occupation: 'IT Consultant',\n  },\n  {\n    id: 15,\n    name: 'Hannah Taylor',\n    age: 24,\n    occupation: 'Student',\n  },\n  {\n    id: 16,\n    name: 'Jackson Brown',\n    age: 40,\n    occupation: 'Business Owner',\n  },\n  {\n    id: 17,\n    name: 'Kayla Lewis',\n    age: 33,\n    occupation: 'Event Planner',\n  },\n  {\n    id: 18,\n    name: 'Logan Mitchell',\n    age: 37,\n    occupation: 'Architect',\n  },\n  {\n    id: 19,\n    name: 'Mia Garcia',\n    age: 29,\n    occupation: 'Artist',\n  },\n  {\n    id: 20,\n    name: 'Natalie Hall',\n    age: 34,\n    occupation: 'Teacher',\n  },\n  {\n    id: 21,\n    name: 'Oliver Patel',\n    age: 38,\n    occupation: 'Software Developer',\n  },\n  {\n    id: 22,\n    name: 'Penelope Martin',\n    age: 26,\n    occupation: 'Writer',\n  },\n  {\n    id: 23,\n    name: 'Quinn Lee',\n    age: 35,\n    occupation: 'Entrepreneur',\n  },\n  {\n    id: 24,\n    name: 'Rachel Kim',\n    age: 30,\n    occupation: 'Dentist',\n  },\n  {\n    id: 25,\n    name: 'Samuel Jackson',\n    age: 42,\n    occupation: 'Lawyer',\n  },\n  {\n    id: 26,\n    name: 'Tessa Hall',\n    age: 28,\n    occupation: 'Graphic Designer',\n  },\n  {\n    id: 27,\n    name: 'Uma Patel',\n    age: 39,\n    occupation: 'Marketing Manager',\n  },\n  {\n    id: 28,\n    name: 'Vincent Brooks',\n    age: 36,\n    occupation: 'IT Consultant',\n  },\n  {\n    id: 29,\n    name: 'Walter White',\n    age: 41,\n    occupation: 'Engineer',\n  },\n  {\n    id: 30,\n    name: 'Xavier Sanchez',\n    age: 33,\n    occupation: 'Sales Representative',\n  },\n  {\n    id: 31,\n    name: 'Yvonne Martin',\n    age: 29,\n    occupation: 'Teacher',\n  },\n  {\n    id: 32,\n    name: 'Zoe Lee',\n    age: 27,\n    occupation: 'Data Analyst',\n  },\n  {\n    id: 33,\n    name: 'Abigail Brown',\n    age: 34,\n    occupation: 'Nurse',\n  },\n  {\n    id: 34,\n    name: 'Caleb Harris',\n    age: 38,\n    occupation: 'Business Owner',\n  },\n  {\n    id: 35,\n    name: 'Diana Taylor',\n    age: 31,\n    occupation: 'Event Planner',\n  },\n  {\n    id: 36,\n    name: 'Eleanor Walker',\n    age: 40,\n    occupation: 'CEO',\n  },\n];\n\nexport default users;\n"
    },
    "/src/DataTable.tsx": {
      "code": "import { useState } from 'react';\nimport users from './data/users';\n\ntype User = (typeof users)[number];\n\nconst columns = [\n  { label: 'ID', key: 'id' },\n  { label: 'Name', key: 'name' },\n  { label: 'Age', key: 'age' },\n  { label: 'Occupation', key: 'occupation' },\n] as const;\n\nfunction paginateUsers(\n  usersList: Array<User>,\n  page: number,\n  pageSize: number,\n) {\n  const start = (page - 1) * pageSize;\n  const end = start + pageSize;\n\n  const pageUsers = usersList.slice(start, end);\n  const totalPages = Math.ceil(usersList.length / pageSize);\n  return { pageUsers, totalPages };\n}\n\nexport default function DataTable() {\n  const [page, setPage] = useState(1);\n  const [pageSize, setPageSize] = useState(5);\n\n  const { totalPages, pageUsers } = paginateUsers(\n    users,\n    page,\n    pageSize,\n  );\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            {columns.map(({ label, key }) => (\n              <th key={key}>{label}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {pageUsers.map(\n            ({ id, name, age, occupation }) => (\n              <tr key={id}>\n                <td>{id}</td>\n                <td>{name}</td>\n                <td>{age}</td>\n                <td>{occupation}</td>\n              </tr>\n            ),\n          )}\n        </tbody>\n      </table>\n      <hr />\n      <div className=\"pagination\">\n        <select\n          aria-label=\"Page size\"\n          onChange={(event) => {\n            setPageSize(Number(event.target.value));\n            setPage(1);\n          }}>\n          {[5, 10, 20].map((size) => (\n            <option key={size} value={size}>\n              Show {size}\n            </option>\n          ))}\n        </select>\n        <div className=\"pages\">\n          <button\n            disabled={page === 1}\n            onClick={() => {\n              setPage(page - 1);\n            }}>\n            Prev\n          </button>\n          <span aria-label=\"Page number\">\n            Page {page} of {totalPages}\n          </span>\n          <button\n            disabled={page === totalPages}\n            onClick={() => {\n              setPage(page + 1);\n            }}>\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
    },
    "/src/index.tsx": {
      "code": "import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root')!);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 14px;\n}\n\ntd,\nth {\n  padding: 4px;\n  border-bottom: 1px solid #ddd;\n  text-align: start;\n}\n\nth {\n  vertical-align: top;\n}\n\nth button {\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n}\n\n.pagination {\n  display: flex;\n  font-size: 14px;\n  gap: 12px;\n}\n\n.pages {\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.tsx",
      "/src/DataTable.tsx",
      "/src/styles.css"
    ],
    "activeFile": "/src/DataTable.tsx",
    "environment": "create-react-app"
  },
  "writeup": "var Component=(()=>{var b=Object.create;var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var y=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),j=(t,e)=>{for(var a in e)r(t,a,{get:e[a],enumerable:!0})},c=(t,e,a,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of p(e))!x.call(t,i)&&i!==a&&r(t,i,{get:()=>e[i],enumerable:!(l=g(e,i))||l.enumerable});return t};var u=(t,e,a)=>(a=t!=null?b(w(t)):{},c(e||!t||!t.__esModule?r(a,\"default\",{value:t,enumerable:!0}):a,t)),D=t=>c(r({},\"__esModule\",{value:!0}),t);var o=y((k,d)=>{d.exports=_jsx_runtime});var M={};j(M,{default:()=>T});var s=u(o());var n=u(o());function h(t){let e=Object.assign({p:\"p\",strong:\"strong\",a:\"a\",h2:\"h2\",ul:\"ul\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Note:\"}),\" This is a follow up to the \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/data-table\",children:\"Data Table\"}),\" question, you should complete that question first before attempting this question.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"In \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/data-table\",children:\"Data Table\"}),\", we built a users data table that displays users in a paginated format. Data tables often allow sorting rows by specific columns in both ascending and descending order.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Allow sorting by a specific column by clicking on the table header. The data will be sorted by the selected column in ascending order (default).\"}),`\n`,(0,n.jsx)(e.li,{children:\"Clicking on the header of the table that is already sorted by that column will toggle the sorting order between ascending and descending.\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The skeleton code uses the solution of \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/data-table\",children:\"Data Table\"}),\", but you are free to use your own solution as a starting point.\"]})]})}function _(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(h,t)})):h(t)}var f=_;function m(t){return(0,s.jsx)(f,{})}function q(t={}){let{wrapper:e}=t.components||{};return e?(0,s.jsx)(e,Object.assign({},t,{children:(0,s.jsx)(m,t)})):m(t)}var T=q;return D(M);})();\n;return Component;"
}