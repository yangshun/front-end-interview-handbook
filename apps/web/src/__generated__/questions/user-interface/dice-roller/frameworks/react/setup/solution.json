{
  "author": "yangshun",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\"/src/App.js\", \"/src/styles.css\"],\n  \"activeFile\": \"/src/App.js\",\n  \"environment\": \"create-react-app\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/dice-roller-react-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useState } from 'react';\n\nconst NUMBER_OF_FACES = 6;\nconst MIN_NUMBER_OF_DICE = 1;\nconst MAX_NUMBER_OF_DICE = 12;\n\nconst DICE_FACE_DOT_POSITIONS = {\n  1: ['dot--center'],\n  2: ['dot--top-right', 'dot--bottom-left'],\n  3: ['dot--top-right', 'dot--center', 'dot--bottom-left'],\n  4: [\n    'dot--top-left',\n    'dot--top-right',\n    'dot--bottom-left',\n    'dot--bottom-right',\n  ],\n  5: [\n    'dot--top-left',\n    'dot--top-right',\n    'dot--center',\n    'dot--bottom-left',\n    'dot--bottom-right',\n  ],\n  6: [\n    'dot--top-left',\n    'dot--top-right',\n    'dot--center-left',\n    'dot--center-right',\n    'dot--bottom-left',\n    'dot--bottom-right',\n  ],\n};\n\nfunction rollDice(numberOfDice) {\n  return Array.from(\n    { length: numberOfDice },\n    () => Math.floor(Math.random() * NUMBER_OF_FACES) + 1,\n  );\n}\n\nexport default function App() {\n  const [rolledDice, setRolledDice] = useState([]);\n\n  return (\n    <div className=\"wrapper\">\n      <form\n        className=\"dice-form\"\n        onSubmit={(event) => {\n          // To prevent a page reload.\n          event.preventDefault();\n\n          const data = new FormData(event.target);\n          // Convert the input value to a number.\n          const numberOfDice = +data.get('dice-count');\n          setRolledDice(rollDice(numberOfDice));\n        }}>\n        <div>\n          <label htmlFor=\"dice-input\">Number of dice</label>\n          <input\n            id=\"dice-input\"\n            name=\"dice-count\"\n            required\n            type=\"number\"\n            min={MIN_NUMBER_OF_DICE}\n            max={MAX_NUMBER_OF_DICE}\n          />\n        </div>\n        <button type=\"submit\">Roll</button>\n      </form>\n      {rolledDice.length > 0 && (\n        <div\n          className=\"dice-list\"\n          role=\"status\"\n          aria-live=\"polite\">\n          {rolledDice.map((value, index) => (\n            // Using index as key is acceptable here\n            // as the Dice component is stateless.\n            <Dice key={index} value={value} />\n          ))}\n          {/* Announced by screen readers. */}\n          <div className=\"sr-only\">\n            Roll results: {rolledDice.join(', ')}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction Dice({ value }) {\n  return (\n    <div className=\"dice\">\n      <div className=\"dots\">\n        {DICE_FACE_DOT_POSITIONS[value].map(\n          (dotPosition) => (\n            <div\n              key={dotPosition}\n              className={['dot', dotPosition].join(' ')}\n            />\n          ),\n        )}\n      </div>\n    </div>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.wrapper {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n  padding-top: 16px;\n}\n\n.dice-form {\n  display: flex;\n  align-items: end;\n  gap: 16px;\n}\n\n.dice-form label {\n  display: block;\n  font-size: 12px;\n  margin-bottom: 8px;\n}\n\n.dice-form input {\n  width: 100%;\n}\n\n.dice-list {\n  background-color: #eaeaea;\n  border-radius: 24px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n  flex-wrap: wrap;\n  padding: 16px;\n}\n\n.dice {\n  --dice-size: 64px;\n\n  width: var(--dice-size);\n  height: var(--dice-size);\n\n  background-color: #fff;\n  box-sizing: border-box;\n  border: 1px solid #000;\n  border-radius: 8px;\n  padding: 8px;\n}\n\n.dots {\n  position: relative;\n  height: 100%;\n}\n\n.dot {\n  --dot-size: 12px;\n\n  position: absolute;\n  width: var(--dot-size);\n  height: var(--dot-size);\n  background-color: #000;\n  border-radius: 100%;\n}\n\n.dot--center {\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.dot--top-left {\n  top: 0;\n  left: 0;\n}\n\n.dot--top-right {\n  top: 0;\n  right: 0;\n}\n\n.dot--bottom-left {\n  bottom: 0;\n  left: 0;\n}\n\n.dot--bottom-right {\n  bottom: 0;\n  right: 0;\n}\n\n.dot--center-left {\n  top: 50%;\n  transform: translateY(-50%);\n  left: 0;\n}\n\n.dot--center-right {\n  top: 50%;\n  transform: translateY(-50%);\n  right: 0;\n}\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  }
}