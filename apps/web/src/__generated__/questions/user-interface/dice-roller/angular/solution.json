{
  "author": "michalgrzegorczyk-dev",
  "files": {
    "/angular.json": {
      "code": "{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"version\": 1,\n  \"newProjectRoot\": \"projects\",\n  \"defaultProject\": \"greatfrontend\",\n  \"projects\": {\n    \"greatfrontend\": {\n      \"projectType\": \"application\",\n      \"schematics\": {},\n      \"root\": \"\",\n      \"sourceRoot\": \"src\",\n      \"prefix\": \"app\",\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:browser\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app\",\n            \"index\": \"src/index.html\",\n            \"main\": \"src/main.ts\",\n            \"polyfills\": [\"zone.js\"],\n            \"tsConfig\": \"tsconfig.app.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          },\n          \"configurations\": {\n            \"production\": {\n              \"budgets\": [\n                {\n                  \"type\": \"initial\",\n                  \"maximumWarning\": \"500kb\",\n                  \"maximumError\": \"1mb\"\n                },\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"2kb\",\n                  \"maximumError\": \"4kb\"\n                }\n              ],\n              \"outputHashing\": \"all\"\n            },\n            \"development\": {\n              \"buildOptimizer\": false,\n              \"optimization\": false,\n              \"vendorChunk\": true,\n              \"extractLicenses\": false,\n              \"sourceMap\": true,\n              \"namedChunks\": true\n            }\n          },\n          \"defaultConfiguration\": \"production\"\n        },\n        \"serve\": {\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\n          \"configurations\": {\n            \"production\": {\n              \"browserTarget\": \"greatfrontend:build:production\"\n            },\n            \"development\": {\n              \"browserTarget\": \"greatfrontend:build:development\"\n            }\n          },\n          \"defaultConfiguration\": \"development\"\n        },\n        \"extract-i18n\": {\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n          \"options\": {\n            \"browserTarget\": \"greatfrontend:build\"\n          }\n        },\n        \"test\": {\n          \"builder\": \"@angular-devkit/build-angular:karma\",\n          \"options\": {\n            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],\n            \"tsConfig\": \"tsconfig.spec.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          }\n        }\n      }\n    }\n  },\n  \"cli\": {\n    \"analytics\": \"7ca5c4d0-e5db-4d23-9ffd-8c8c042e34e7\"\n  }\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/dice-roller-angular-solution\",\n  \"author\": \"michalgrzegorczyk-dev\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/common\": \"16.2.4\",\n    \"@angular/compiler\": \"16.2.4\",\n    \"@angular/core\": \"16.2.4\",\n    \"@angular/forms\": \"16.2.4\",\n    \"@angular/platform-browser\": \"16.2.4\",\n    \"@angular/platform-browser-dynamic\": \"16.2.4\",\n    \"rxjs\": \"7.8.0\",\n    \"zone.js\": \"0.13.1\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"16.2.1\",\n    \"@angular/cli\": \"16.2.1\",\n    \"@angular/compiler-cli\": \"16.2.4\",\n    \"@types/jasmine\": \"4.3.5\",\n    \"jasmine-core\": \"4.6.0\",\n    \"karma\": \"6.4.2\",\n    \"karma-chrome-launcher\": \"3.2.0\",\n    \"karma-coverage\": \"2.2.1\",\n    \"karma-jasmine\": \"5.1.0\",\n    \"karma-jasmine-html-reporter\": \"2.1.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\"\n  }\n}\n"
    },
    "/src/app/app.component.css": {
      "code": ""
    },
    "/src/app/app.component.html": {
      "code": "<div class=\"wrapper\">\n  <form\n    class=\"dice-form\"\n    (submit)=\"onSubmit($event)\"\n    ngNativeValidate>\n    <div>\n      <label for=\"dice-input\">Number of dice</label>\n      <input\n        id=\"dice-input\"\n        name=\"dice-count\"\n        required\n        type=\"number\"\n        min=\"{{ MIN_NUMBER_OF_DICE }}\"\n        max=\"{{ MAX_NUMBER_OF_DICE }}\" />\n    </div>\n    <button type=\"submit\">Roll</button>\n  </form>\n  <div\n    class=\"dice-list\"\n    role=\"status\"\n    *ngIf=\"rolledDice.length > 0\"\n    aria-live=\"polite\">\n    <app-dice\n      *ngFor=\"\n        let value of rolledDice;\n        trackBy: trackByIndex\n      \"\n      [value]=\"value\">\n    </app-dice>\n    <!-- Announced by screen readers. -->\n    <div class=\"sr-only\">\n      Roll results: {{ rolledDice.join(', ') }}\n    </div>\n  </div>\n</div>\n"
    },
    "/src/app/app.component.ts": {
      "code": "import { Component } from '@angular/core';\n\nconst NUMBER_OF_FACES = 6;\nconst MIN_NUMBER_OF_DICE = 1;\nconst MAX_NUMBER_OF_DICE = 12;\n\nfunction rollDice(numberOfDice: number): number[] {\n  return Array.from(\n    { length: numberOfDice },\n    () => Math.floor(Math.random() * NUMBER_OF_FACES) + 1,\n  );\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  readonly MIN_NUMBER_OF_DICE = MIN_NUMBER_OF_DICE;\n  readonly MAX_NUMBER_OF_DICE = MAX_NUMBER_OF_DICE;\n\n  rolledDice: number[] = [];\n\n  onSubmit(event: any) {\n    event.preventDefault();\n    const form = event.target as HTMLFormElement;\n    const diceInput = form.elements.namedItem(\n      'dice-input',\n    ) as HTMLInputElement;\n    if (diceInput) {\n      const numberOfDice = Number(diceInput.value);\n      if (!isNaN(numberOfDice)) {\n        this.rolledDice = rollDice(numberOfDice);\n      }\n    }\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n}\n"
    },
    "/src/app/app.module.ts": {
      "code": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { DiceComponent } from './dice.component';\n\n@NgModule({\n  declarations: [AppComponent, DiceComponent],\n  imports: [BrowserModule, FormsModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n"
    },
    "/src/app/dice.component.ts": {
      "code": "import { Component, Input } from '@angular/core';\n\nconst DICE_FACE_DOT_POSITIONS: { [key: number]: string[] } =\n  {\n    1: ['dot--center'],\n    2: ['dot--top-right', 'dot--bottom-left'],\n    3: [\n      'dot--top-right',\n      'dot--center',\n      'dot--bottom-left',\n    ],\n    4: [\n      'dot--top-left',\n      'dot--top-right',\n      'dot--bottom-left',\n      'dot--bottom-right',\n    ],\n    5: [\n      'dot--top-left',\n      'dot--top-right',\n      'dot--center',\n      'dot--bottom-left',\n      'dot--bottom-right',\n    ],\n    6: [\n      'dot--top-left',\n      'dot--top-right',\n      'dot--center-left',\n      'dot--center-right',\n      'dot--bottom-left',\n      'dot--bottom-right',\n    ],\n  };\n\n@Component({\n  selector: 'app-dice',\n  template: `\n    <div class=\"dice\">\n      <div class=\"dots\">\n        <div\n          *ngFor=\"let dotPosition of dotPositions\"\n          class=\"dot {{ dotPosition }}\"></div>\n      </div>\n    </div>\n  `,\n})\nexport class DiceComponent {\n  @Input()\n  value!: number;\n\n  get dotPositions(): string[] {\n    return DICE_FACE_DOT_POSITIONS[this.value];\n  }\n}\n"
    },
    "/src/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Angular</title>\n    <base href=\"/\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n  </head>\n  <body>\n    <app-root></app-root>\n  </body>\n</html>\n"
    },
    "/src/main.ts": {
      "code": "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.wrapper {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n  padding-top: 16px;\n}\n\n.dice-form {\n  display: flex;\n  align-items: end;\n  gap: 16px;\n}\n\n.dice-form label {\n  display: block;\n  font-size: 12px;\n  margin-bottom: 8px;\n}\n\n.dice-form input {\n  width: 100%;\n}\n\n.dice-list {\n  background-color: #eaeaea;\n  border-radius: 24px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n  flex-wrap: wrap;\n  padding: 16px;\n}\n\n.dice {\n  --dice-size: 64px;\n\n  width: var(--dice-size);\n  height: var(--dice-size);\n\n  background-color: #fff;\n  box-sizing: border-box;\n  border: 1px solid #000;\n  border-radius: 8px;\n  padding: 8px;\n}\n\n.dots {\n  position: relative;\n  height: 100%;\n}\n\n.dot {\n  --dot-size: 12px;\n\n  position: absolute;\n  width: var(--dot-size);\n  height: var(--dot-size);\n  background-color: #000;\n  border-radius: 100%;\n}\n\n.dot--center {\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.dot--top-left {\n  top: 0;\n  left: 0;\n}\n\n.dot--top-right {\n  top: 0;\n  right: 0;\n}\n\n.dot--bottom-left {\n  bottom: 0;\n  left: 0;\n}\n\n.dot--bottom-right {\n  bottom: 0;\n  right: 0;\n}\n\n.dot--center-left {\n  top: 50%;\n  transform: translateY(-50%);\n  left: 0;\n}\n\n.dot--center-right {\n  top: 50%;\n  transform: translateY(-50%);\n  right: 0;\n}\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}\n"
    },
    "/tsconfig.app.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/app\",\n    \"types\": []\n  },\n  \"files\": [\"src/main.ts\"],\n  \"include\": [\"src/**/*.d.ts\"]\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"compileOnSave\": false,\n  \"compilerOptions\": {\n    \"baseUrl\": \"./\",\n    \"outDir\": \"./dist/out-tsc\",\n    \"forceConsistentCasingInFileNames\": true,\n    \"strict\": true,\n    \"noImplicitOverride\": true,\n    \"noPropertyAccessFromIndexSignature\": true,\n    \"noImplicitReturns\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"sourceMap\": true,\n    \"declaration\": false,\n    \"downlevelIteration\": true,\n    \"experimentalDecorators\": true,\n    \"moduleResolution\": \"node\",\n    \"target\": \"es2020\",\n    \"module\": \"esnext\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"]\n  },\n  \"angularCompilerOptions\": {\n    \"enableI18nLegacyMessageIdFormat\": false,\n    \"strictInjectionParameters\": true,\n    \"strictInputAccessModifiers\": true,\n    \"strictTemplates\": true\n  }\n}\n"
    },
    "/tsconfig.spec.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/spec\",\n    \"types\": [\"jasmine\"]\n  },\n  \"include\": [\"src/**/*.spec.ts\", \"src/**/*.d.ts\"]\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/app/app.component.ts",
      "/src/app/app.component.html",
      "/src/styles.css"
    ],
    "activeFile": "/src/app/app.component.ts",
    "environment": "angular-cli"
  },
  "writeup": "var Component=(()=>{var y=Object.create;var d=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var M=Object.getPrototypeOf,D=Object.prototype.hasOwnProperty;var C=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),T=(n,e)=>{for(var l in e)d(n,l,{get:e[l],enumerable:!0})},u=(n,e,l,h)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of _(e))!D.call(n,c)&&c!==l&&d(n,c,{get:()=>e[c],enumerable:!(h=j(e,c))||h.enumerable});return n};var s=(n,e,l)=>(l=n!=null?y(M(n)):{},u(e||!n||!n.__esModule?d(l,\"default\",{value:n,enumerable:!0}):l,n)),O=n=>u(d({},\"__esModule\",{value:!0}),n);var a=C((S,m)=>{m.exports=_jsx_runtime});var A={};T(A,{default:()=>q});var o=s(a());var t=s(a());function f(n){let e=Object.assign({h2:\"h2\",p:\"p\",ol:\"ol\",li:\"li\",h3:\"h3\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsx)(e.p,{children:\"The solution can be broken down into a few parts:\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Collecting form data.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Generating dice values.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Displaying the dice values.\"}),`\n`]}),`\n`,(0,t.jsx)(e.h3,{children:\"State\"}),`\n`,(0,t.jsx)(e.p,{children:\"The only state value we need for this dice roller is the values of the rolled dice, which can be represented as an array of values that range from 1 to 6.\"}),`\n`,(0,t.jsx)(e.h3,{children:\"Collecting form data\"}),`\n`,(0,t.jsx)(e.p,{children:\"Since the transfer of data from the form is one-directional, a basic HTML form will suffice.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"By using \",(0,t.jsx)(e.code,{children:'<input type=\"number\" required=\"true\" min=\"1\" max=\"12\" />'}),\", we ensure only integer values can be entered and leverage HTML validation so that the minimum value of the fields is 1 and maximum is 12. Empty fields are also prevented via the \",(0,t.jsx)(e.code,{children:\"required\"}),\" attribute.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Generating dice values\"}),`\n`,(0,t.jsx)(e.p,{children:\"With the number of dice obtained from the form, we can write a function to generate the required values.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"To generate a value from 1 to 6, we can use \",(0,t.jsx)(e.code,{children:\"Math.floor(Math.random() * 6) + 1,\"}),\". This randomization will be repeated for each dice.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Displaying the dice values\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Observe that there are 7 different positions the dots can take on a 6-sided dice. By using \",(0,t.jsx)(e.code,{children:\"position: absolute\"}),\" and the appropriate \",(0,t.jsx)(e.code,{children:\"top\"}),\"/\",(0,t.jsx)(e.code,{children:\"left\"}),\"/\",(0,t.jsx)(e.code,{children:\"right\"}),\"/\",(0,t.jsx)(e.code,{children:\"bottom\"}),\" set to 0, the corner dots can be displayed correctly. The dots on the center row will require an additional negative translation transform to make them perfectly center.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Each dot is independent of the others and multiple dots can be combined to display the desired visual result for a dice value.\"}),`\n`,(0,t.jsx)(e.p,{children:\"Lastly, we create an object that maps the dice value to the dot configuration classes. Value of 1 will require the center dot only, a value of 2 will require the top right and bottom left dots, etc.\"})]})}function F(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(f,n)})):f(n)}var p=F;var i=s(a());function g(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[\"Number of dice form\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Invalid values (empty, negative, decimals, bigger than 12) are not allowed.\"}),`\n`,(0,i.jsx)(e.li,{children:'Pressing the \"Roll\" button calls the random generator function with the correct value.'}),`\n`,(0,i.jsxs)(e.li,{children:[\"Form can be submitted by hitting \",(0,i.jsx)(\"kbd\",{children:\"Enter\"}),\" while in the \",(0,i.jsx)(e.code,{children:\"<input>\"}),\" field.\"]}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Dice generation\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Generated values are between 1 to 6 inclusive. Ensure that it is not possible to generate 0.\"}),`\n`,(0,i.jsx)(e.li,{children:\"The correct number of values are generated.\"}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Display\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Each row should contain up to 3 dice.\"}),`\n`,(0,i.jsx)(e.li,{children:\"If there are more than 3 dice, the other dice are wrapped to the next row(s).\"}),`\n`,(0,i.jsx)(e.li,{children:\"Dot positioning on each dice is correct for each side.\"}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Accessibility\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Dice rolls results are announced to screen readers.\"}),`\n`]}),`\n`]}),`\n`]})]})}function k(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(g,n)})):g(n)}var b=k;var r=s(a());function w(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[\"Add \",(0,r.jsx)(e.code,{children:\"<label>\"}),\"s for the \",(0,r.jsx)(e.code,{children:\"<input>\"}),\"s and link them together using \",(0,r.jsx)(e.code,{children:'<label for=\"...\">'}),\" and \",(0,r.jsx)(e.code,{children:'<input id=\"...\">'}),\".\"]}),`\n`,(0,r.jsxs)(e.li,{children:[\"Use \",(0,r.jsx)(e.code,{children:'role=\"status\"'}),\" and \",(0,r.jsx)(e.code,{children:'aria-live=\"polite\"'}),\" on the HTML element displaying the dice. A hidden element is also rendered within so that screen readers will announce the result when a new dice roll is performed.\"]}),`\n`]})]})}function L(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(w,n)})):w(n)}var v=L;function x(n){let e=Object.assign({h3:\"h3\",p:\"p\",code:\"code\"},n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(p,{}),`\n`,(0,o.jsx)(e.h3,{children:\"Angular\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"Angular will track which items have been added or removed according to the unique identifier returned by the \",(0,o.jsx)(e.code,{children:\"trackBy\"}),\" function and will only make DOM changes for those items.\"]}),`\n`,(0,o.jsx)(b,{}),`\n`,(0,o.jsx)(v,{})]})}function X(n={}){let{wrapper:e}=n.components||{};return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(x,n)})):x(n)}var q=X;return O(A);})();\n;return Component;"
}