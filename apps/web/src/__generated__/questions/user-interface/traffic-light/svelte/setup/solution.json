{
  "author": "tanhauhau",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\n    \"/src/App.svelte\",\n    \"/src/TrafficLight.svelte\",\n    \"/src/styles.css\"\n  ],\n  \"activeFile\": \"/src/TrafficLight.svelte\",\n  \"environment\": \"svelte\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/traffic-light-svelte-solution\",\n  \"author\": \"tanhauhau\",\n  \"version\": \"0.0.1\",\n  \"main\": \"src/index.js\",\n  \"dependencies\": {\n    \"svelte\": \"^3.58.0\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf8\" />\n    <meta name=\"viewport\" content=\"width=device-width\" />\n    <title>Svelte</title>\n    <link rel=\"stylesheet\" href=\"public/bundle.css\" />\n  </head>\n\n  <body>\n    <script src=\"bundle.js\"></script>\n  </body>\n</html>\n"
    },
    "/src/App.svelte": {
      "code": "<script>\n  import TrafficLight from './TrafficLight.svelte';\n\n  const config = {\n    red: {\n      backgroundColor: 'red',\n      duration: 4000,\n      next: 'green',\n    },\n    yellow: {\n      backgroundColor: 'yellow',\n      duration: 500,\n      next: 'red',\n    },\n    green: {\n      backgroundColor: 'green',\n      duration: 3000,\n      next: 'yellow',\n    },\n  };\n</script>\n\n<div class=\"wrapper\">\n  <TrafficLight {config} />\n  <TrafficLight {config} layout=\"horizontal\" />\n</div>\n\n<style>\n  .wrapper {\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    justify-content: center;\n  }\n</style>\n"
    },
    "/src/index.js": {
      "code": "import App from './App.svelte';\nimport './styles.css';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    },
    "/src/TrafficLight.svelte": {
      "code": "<script>\n  import { onDestroy } from 'svelte';\n  export let initialColor = 'green';\n  export let config;\n  export let layout = 'vertical';\n\n  let timerId;\n  let currentColor = initialColor;\n\n  $: setTimer(currentColor);\n\n  function setTimer(color) {\n    const { duration, next } = config[color];\n    timerId = setTimeout(() => {\n      currentColor = next;\n    }, duration);\n  }\n\n  onDestroy(() => {\n    clearTimeout(timerId);\n  });\n</script>\n\n<div\n  aria-live=\"polite\"\n  aria-label={`Current light: ${currentColor}`}\n  class=\"traffic-light-container\"\n  class:traffic-light-container--vertical={layout ===\n    'vertical'}>\n  {#each Object.keys(config) as color}\n    <div\n      aria-hidden={true}\n      class=\"traffic-light\"\n      style:background-color={color === currentColor\n        ? config[color].backgroundColor\n        : undefined} />\n  {/each}\n</div>\n\n<style>\n  .traffic-light-container {\n    background-color: #000;\n    border-radius: 8px;\n    display: flex;\n    padding: 8px;\n    gap: 8px;\n    width: fit-content;\n  }\n\n  .traffic-light-container--vertical {\n    flex-direction: column;\n  }\n\n  .traffic-light {\n    --size: 50px;\n    background-color: #555;\n    border-radius: var(--size);\n    height: var(--size);\n    width: var(--size);\n  }\n</style>\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.svelte",
      "/src/TrafficLight.svelte",
      "/src/styles.css"
    ],
    "activeFile": "/src/TrafficLight.svelte",
    "environment": "svelte"
  }
}