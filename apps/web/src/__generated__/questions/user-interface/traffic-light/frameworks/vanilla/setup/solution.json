{
  "author": "yangshun",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\n    \"/index.html\",\n    \"/src/index.js\",\n    \"/src/styles.css\"\n  ],\n  \"activeFile\": \"/src/index.html\",\n  \"environment\": \"parcel\"\n}\n"
    },
    "/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div class=\"wrapper\">\n      <div id=\"traffic-light\"></div>\n      <div id=\"traffic-light-2\"></div>\n    </div>\n    <script src=\"src/index.js\"></script>\n  </body>\n</html>\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/traffic-light-vanilla-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"parcel\": \"2.9.3\"\n  },\n  \"source\": \"index.html\",\n  \"scripts\": {\n    \"start\": \"parcel\",\n    \"build\": \"parcel build\"\n  }\n}\n"
    },
    "/src/index.js": {
      "code": "import './styles.css';\n\n(() => {\n  const config = {\n    red: {\n      backgroundColor: 'red',\n      duration: 4000,\n      next: 'green',\n    },\n    yellow: {\n      backgroundColor: 'yellow',\n      duration: 500,\n      next: 'red',\n    },\n    green: {\n      backgroundColor: 'green',\n      duration: 3000,\n      next: 'yellow',\n    },\n  };\n\n  function light({ backgroundColor }) {\n    const $lightEl = document.createElement('div');\n    $lightEl.classList.add('traffic-light');\n    $lightEl.setAttribute('aria-hidden', true);\n\n    if (backgroundColor != null) {\n      $lightEl.style.backgroundColor = backgroundColor;\n    }\n    return $lightEl;\n  }\n\n  function trafficLight(\n    $rootEl,\n    { initialColor, config, layout },\n  ) {\n    let currentColor = initialColor;\n    const $containerEl = document.createElement('div');\n    $containerEl.classList.add('traffic-light-container');\n    $containerEl.setAttribute('aria-live', 'polite');\n    if (layout === 'vertical') {\n      $containerEl.classList.add(\n        'traffic-light-container--vertical',\n      );\n    }\n\n    let timer = null;\n\n    function setTransition() {\n      const { duration, next } = config[currentColor];\n      timer = setTimeout(() => {\n        currentColor = next;\n        renderLoop();\n      }, duration);\n    }\n\n    function render() {\n      $containerEl.innerHTML = '';\n      $containerEl.setAttribute(\n        'aria-label',\n        `Current light: ${currentColor}`,\n      );\n      Object.keys(config).map((color) => {\n        $containerEl.append(\n          light({\n            backgroundColor:\n              color === currentColor\n                ? config[color].backgroundColor\n                : undefined,\n          }),\n        );\n      });\n    }\n\n    function renderLoop() {\n      render();\n      setTransition();\n    }\n\n    // The beforeunload event is fired before the tab/window is closed.\n    // Clear the timer when the tab/window is about to be closed.\n    window.addEventListener('beforeunload', () => {\n      window.clearInterval(timer);\n    });\n\n    $rootEl.append($containerEl);\n    renderLoop();\n  }\n\n  trafficLight(document.getElementById('traffic-light'), {\n    initialColor: 'red',\n    config,\n    layout: 'horizontal',\n  });\n\n  trafficLight(document.getElementById('traffic-light-2'), {\n    initialColor: 'red',\n    config,\n    layout: 'vertical',\n  });\n})();\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.wrapper {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  justify-content: center;\n}\n\n.traffic-light-container {\n  background-color: #000;\n  border-radius: 8px;\n  display: flex;\n  padding: 8px;\n  gap: 8px;\n}\n\n.traffic-light-container--vertical {\n  flex-direction: column;\n}\n\n.traffic-light {\n  --size: 50px;\n  background-color: #555;\n  border-radius: var(--size);\n  height: var(--size);\n  width: var(--size);\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/index.html",
      "/src/index.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/index.html",
    "environment": "parcel"
  }
}