{
  "author": "michalgrzegorczyk-dev",
  "files": {
    "/angular.json": {
      "code": "{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"version\": 1,\n  \"newProjectRoot\": \"projects\",\n  \"defaultProject\": \"greatfrontend\",\n  \"projects\": {\n    \"greatfrontend\": {\n      \"projectType\": \"application\",\n      \"schematics\": {},\n      \"root\": \"\",\n      \"sourceRoot\": \"src\",\n      \"prefix\": \"app\",\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:browser\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app\",\n            \"index\": \"src/index.html\",\n            \"main\": \"src/main.ts\",\n            \"polyfills\": [\"zone.js\"],\n            \"tsConfig\": \"tsconfig.app.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          },\n          \"configurations\": {\n            \"production\": {\n              \"budgets\": [\n                {\n                  \"type\": \"initial\",\n                  \"maximumWarning\": \"500kb\",\n                  \"maximumError\": \"1mb\"\n                },\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"2kb\",\n                  \"maximumError\": \"4kb\"\n                }\n              ],\n              \"outputHashing\": \"all\"\n            },\n            \"development\": {\n              \"buildOptimizer\": false,\n              \"optimization\": false,\n              \"vendorChunk\": true,\n              \"extractLicenses\": false,\n              \"sourceMap\": true,\n              \"namedChunks\": true\n            }\n          },\n          \"defaultConfiguration\": \"production\"\n        },\n        \"serve\": {\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\n          \"configurations\": {\n            \"production\": {\n              \"browserTarget\": \"greatfrontend:build:production\"\n            },\n            \"development\": {\n              \"browserTarget\": \"greatfrontend:build:development\"\n            }\n          },\n          \"defaultConfiguration\": \"development\"\n        },\n        \"extract-i18n\": {\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n          \"options\": {\n            \"browserTarget\": \"greatfrontend:build\"\n          }\n        },\n        \"test\": {\n          \"builder\": \"@angular-devkit/build-angular:karma\",\n          \"options\": {\n            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],\n            \"tsConfig\": \"tsconfig.spec.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          }\n        }\n      }\n    }\n  },\n  \"cli\": {\n    \"analytics\": \"7ca5c4d0-e5db-4d23-9ffd-8c8c042e34e7\"\n  }\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/contact-form-angular-solution\",\n  \"author\": \"michalgrzegorczyk-dev\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/common\": \"16.2.4\",\n    \"@angular/compiler\": \"16.2.4\",\n    \"@angular/core\": \"16.2.4\",\n    \"@angular/forms\": \"16.2.4\",\n    \"@angular/platform-browser\": \"16.2.4\",\n    \"@angular/platform-browser-dynamic\": \"16.2.4\",\n    \"rxjs\": \"7.8.0\",\n    \"zone.js\": \"0.13.1\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"16.2.1\",\n    \"@angular/cli\": \"16.2.1\",\n    \"@angular/compiler-cli\": \"16.2.4\",\n    \"@types/jasmine\": \"4.3.5\",\n    \"jasmine-core\": \"4.6.0\",\n    \"karma\": \"6.4.2\",\n    \"karma-chrome-launcher\": \"3.2.0\",\n    \"karma-coverage\": \"2.2.1\",\n    \"karma-jasmine\": \"5.1.0\",\n    \"karma-jasmine-html-reporter\": \"2.1.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\"\n  }\n}\n"
    },
    "/src/app/app.component.css": {
      "code": ""
    },
    "/src/app/app.component.html": {
      "code": "<!-- Ignore the (ngSubmit) binding, it's used by GFE \n  to intercept the form submit event to check your solution. -->\n<form\n  (ngSubmit)=\"submitForm($event)\"\n  method=\"post\"\n  action=\"https://questions.greatfrontend.com/api/questions/contact-form\">\n  <div>\n    <label for=\"name-input\">Name</label>\n    <input id=\"name-input\" name=\"name\" type=\"text\" />\n  </div>\n  <div>\n    <label for=\"email-input\">Email</label>\n    <input id=\"email-input\" name=\"email\" type=\"email\" />\n  </div>\n  <div>\n    <label for=\"message-input\">Message</label>\n    <textarea id=\"message-input\" name=\"message\"></textarea>\n  </div>\n  <div>\n    <button>Send</button>\n  </div>\n</form>\n"
    },
    "/src/app/app.component.ts": {
      "code": "import { Component } from '@angular/core';\nimport submitForm from './submitForm';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  async submitForm(event: any) {\n    submitForm(event);\n  }\n}\n"
    },
    "/src/app/app.module.ts": {
      "code": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, FormsModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n"
    },
    "/src/app/submitForm.ts": {
      "code": "const SUBMIT_URL =\n  'https://questions.greatfrontend.com/api/questions/contact-form';\n\nexport default async function submitForm(event: any) {\n  event.preventDefault();\n  const form = event.target;\n\n  try {\n    if (form.action !== SUBMIT_URL) {\n      alert('Incorrect form action value');\n      return;\n    }\n\n    if (form.method.toLowerCase() !== 'post') {\n      alert('Incorrect form method value');\n      return;\n    }\n\n    const formData = new FormData(form);\n    const response = await fetch(SUBMIT_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: formData.get('name'),\n        email: formData.get('email'),\n        message: formData.get('message'),\n      }),\n    });\n    const text = await response.text();\n    alert(text);\n  } catch (_) {\n    alert('Error submitting form!');\n  }\n}\n"
    },
    "/src/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Angular</title>\n    <base href=\"/\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n  </head>\n  <body>\n    <app-root></app-root>\n  </body>\n</html>\n"
    },
    "/src/main.ts": {
      "code": "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"
    },
    "/src/styles.css": {
      "code": "/* You can add global styles to this file, and also import other style files */\nbody {\n  font-family: sans-serif;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  row-gap: 12px;\n}\n\nlabel {\n  font-size: 12px;\n}\n\ninput,\ntextarea {\n  display: block;\n}\n"
    },
    "/tsconfig.app.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/app\",\n    \"types\": []\n  },\n  \"files\": [\"src/main.ts\"],\n  \"include\": [\"src/**/*.d.ts\"]\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"compileOnSave\": false,\n  \"compilerOptions\": {\n    \"baseUrl\": \"./\",\n    \"outDir\": \"./dist/out-tsc\",\n    \"forceConsistentCasingInFileNames\": true,\n    \"strict\": true,\n    \"noImplicitOverride\": true,\n    \"noPropertyAccessFromIndexSignature\": true,\n    \"noImplicitReturns\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"sourceMap\": true,\n    \"declaration\": false,\n    \"downlevelIteration\": true,\n    \"experimentalDecorators\": true,\n    \"moduleResolution\": \"node\",\n    \"target\": \"esnext\",\n    \"module\": \"esnext\",\n    \"lib\": [\"esnext\", \"dom\"]\n  },\n  \"angularCompilerOptions\": {\n    \"enableI18nLegacyMessageIdFormat\": false,\n    \"strictInjectionParameters\": true,\n    \"strictInputAccessModifiers\": true,\n    \"strictTemplates\": true\n  }\n}\n"
    },
    "/tsconfig.spec.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/spec\",\n    \"types\": [\"jasmine\"]\n  },\n  \"include\": [\"src/**/*.spec.ts\", \"src/**/*.d.ts\"]\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/app/app.component.html",
      "/src/app/app.component.ts",
      "/src/app/submitForm.ts"
    ],
    "activeFile": "/src/app/app.component.html",
    "environment": "angular-cli"
  },
  "writeup": "var Component=(()=>{var y=Object.create;var d=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var F=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var k=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),C=(n,e)=>{for(var l in e)d(n,l,{get:e[l],enumerable:!0})},u=(n,e,l,h)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of v(e))!M.call(n,s)&&s!==l&&d(n,s,{get:()=>e[s],enumerable:!(h=_(e,s))||h.enumerable});return n};var a=(n,e,l)=>(l=n!=null?y(F(n)):{},u(e||!n||!n.__esModule?d(l,\"default\",{value:n,enumerable:!0}):l,n)),D=n=>u(d({},\"__esModule\",{value:!0}),n);var c=k((U,m)=>{m.exports=_jsx_runtime});var S={};C(S,{default:()=>O});var r=a(c());var i=a(c());function f(n){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",ol:\"ol\",li:\"li\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,i.jsx)(e.p,{children:\"This is a basic question which evaluates your knowledge of the web platform. Forms and form submissions can entirely be built without any JavaScript! As a Front End Engineer, it's important to know what the platform provides and not resort to JavaScript for everything.\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"The first thing we need to do is to wrap the fields in a \",(0,i.jsx)(e.code,{children:\"<form>\"}),\", which is already given in the template. To tell the \",(0,i.jsx)(e.code,{children:\"<form>\"}),\" which URL to submit the data to, we use the \",(0,i.jsx)(e.code,{children:\"action\"}),\" attribute with the API URL as the value. The API URL is expecting a HTTP POST request, hence we also use \",(0,i.jsx)(e.code,{children:'method=\"post\"'}),\" on the \",(0,i.jsx)(e.code,{children:\"<form>\"}),\".\"]}),`\n`,(0,i.jsxs)(e.p,{children:[\"Form fields with the \",(0,i.jsx)(e.code,{children:\"name\"}),\" attribute will have the attribute value become the key in the form data. Hence we can add \",(0,i.jsx)(e.code,{children:'name=\"name\"'}),\", \",(0,i.jsx)(e.code,{children:'name=\"email\"'}),\", \",(0,i.jsx)(e.code,{children:'name=\"message\"'}),\" to the various form fields. Do also add \",(0,i.jsx)(e.code,{children:\"<label>\"}),\"s to label your \",(0,i.jsx)(e.code,{children:\"<input>\"}),\"s.\"]}),`\n`,(0,i.jsx)(e.p,{children:\"Lastly, submit buttons can be implemented in two ways:\"}),`\n`,(0,i.jsxs)(e.ol,{children:[`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:'<button type=\"submit\">'}),\": By default, \",(0,i.jsx)(e.code,{children:\"<button>\"}),\"s have \",(0,i.jsx)(e.code,{children:'type=\"submit\"'}),\" as default and when used in \",(0,i.jsx)(e.code,{children:\"<form>\"}),\"s, will trigger a form submission.\"]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:'<input type=\"submit\">'}),\": The element will be rendered as a button and clicking the \",(0,i.jsx)(e.code,{children:\"<input>\"}),\" will trigger a form submission.\"]}),`\n`]})]})}function T(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(f,n)})):f(n)}var p=T;var o=a(c());function b(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Test Cases\"}),`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsxs)(e.li,{children:[\"Fields\",`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsx)(e.li,{children:\"All the fields can be updated.\"}),`\n`]}),`\n`]}),`\n`,(0,o.jsxs)(e.li,{children:[\"Submission\",`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsx)(e.li,{children:\"Clicking on the submit button triggers form submission.\"}),`\n`,(0,o.jsxs)(e.li,{children:[\"Hitting enter on the fields triggers form submissions if form is valid (except for \",(0,o.jsx)(e.code,{children:\"<textarea>\"}),\" which will add a new line)\"]}),`\n`,(0,o.jsx)(e.li,{children:\"Success alert is seen if all fields are filled during submission.\"}),`\n`]}),`\n`]}),`\n`]})]})}function L(n={}){let{wrapper:e}=n.components||{};return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(b,n)})):b(n)}var g=L;var t=a(c());function w(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\",p:\"p\",a:\"a\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"Link \",(0,t.jsx)(e.code,{children:\"<label>\"}),\"s to \",(0,t.jsx)(e.code,{children:\"<input>\"}),\" so that clicking on the \",(0,t.jsx)(e.code,{children:\"<label>\"}),\" will focus on the corresponding \",(0,t.jsx)(e.code,{children:\"<input>\"}),\".\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"Use \",(0,t.jsx)(e.code,{children:'<label for=\"some-id\">'}),\" and \",(0,t.jsx)(e.code,{children:'<input id=\"some-id\">'}),\" to define the relation between \",(0,t.jsx)(e.code,{children:\"<label>\"}),\" and \",(0,t.jsx)(e.code,{children:\"<input>\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Avoid nesting \",(0,t.jsx)(e.code,{children:\"<input>\"}),\" inside of \",(0,t.jsx)(e.code,{children:\"<label>\"}),\" because some assistive technologies (e.g. Dragon NaturallySpeaking) do not support it.\"]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{children:\"Follow Up\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Now that you are familiar with form submission, try out a follow up question, \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/signup-form\",children:\"Signup Form\"}),\", where you will be asked to make an AJAX-based form request and client-side validation.\"]})]})}function X(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(w,n)})):w(n)}var x=X;function j(n){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(p,{}),`\n`,(0,r.jsx)(g,{}),`\n`,(0,r.jsx)(x,{})]})}function A(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(j,n)})):j(n)}var O=A;return D(S);})();\n;return Component;"
}