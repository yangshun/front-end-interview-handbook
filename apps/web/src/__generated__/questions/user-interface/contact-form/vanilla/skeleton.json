{
  "author": "yangshun",
  "files": {
    "/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <form>\n      <input type=\"text\" />\n    </form>\n    <!-- You can ignore this file, it is only used by GFE to\n      intercept the form submission event. -->\n    <script src=\"src/index.js\"></script>\n  </body>\n</html>\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/contact-form-vanilla-skeleton\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"parcel\": \"2.9.3\"\n  },\n  \"source\": \"index.html\",\n  \"scripts\": {\n    \"start\": \"parcel\",\n    \"build\": \"parcel build\"\n  }\n}\n"
    },
    "/src/index.js": {
      "code": "import './styles.css';\n\n(() => {\n  const SUBMIT_URL =\n    'https://questions.greatfrontend.com/api/questions/contact-form';\n\n  const $form = document.querySelector('form');\n  $form.addEventListener('submit', async (event) => {\n    event.preventDefault();\n\n    if ($form.action !== SUBMIT_URL) {\n      alert('Incorrect form action value');\n      return;\n    }\n\n    if ($form.method.toLowerCase() !== 'post') {\n      alert('Incorrect form method value');\n      return;\n    }\n\n    try {\n      const formData = new FormData($form);\n      const response = await fetch(SUBMIT_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: formData.get('name'),\n          email: formData.get('email'),\n          message: formData.get('message'),\n        }),\n      });\n\n      const text = await response.text();\n      alert(text);\n    } catch (_) {\n      alert('Error submitting form!');\n    }\n  });\n})();\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/index.html",
      "/src/index.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/index.html",
    "environment": "parcel"
  },
  "writeup": "var Component=(()=>{var g=Object.create;var s=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var y=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),_=(t,e)=>{for(var i in e)s(t,i,{get:e[i],enumerable:!0})},c=(t,e,i,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of b(e))!w.call(t,o)&&o!==i&&s(t,o,{get:()=>e[o],enumerable:!(l=p(e,o))||l.enumerable});return t};var d=(t,e,i)=>(i=t!=null?g(x(t)):{},c(e||!t||!t.__esModule?s(i,\"default\",{value:t,enumerable:!0}):i,t)),j=t=>c(s({},\"__esModule\",{value:!0}),t);var a=y((D,u)=>{u.exports=_jsx_runtime});var C={};_(C,{default:()=>q});var r=d(a());var n=d(a());function h(t){let e=Object.assign({p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\",strong:\"strong\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:'Building forms is a common task in Front End. In this exercise, we will build a basic \"Contact Us\" form, commonly seen on marketing websites for visitors to ask questions or provide feedback.'}),`\n`,(0,n.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"The form should contain the following elements:\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Name field.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Email field.\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"Message field. Since the message can be long, a \",(0,n.jsx)(e.code,{children:\"<textarea>\"}),\" will be more suitable.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Submit button\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:'Contains the text \"Send\".'}),`\n`,(0,n.jsx)(e.li,{children:\"Clicking on the submit button submits the form.\"}),`\n`]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.li,{children:\"The form and submission should be implemented entirely in HTML. Do not use any JavaScript or framework-specific features for this question.\"}),`\n`,(0,n.jsx)(e.li,{children:\"There is no need to do any client-side validation on the fields. Validation will be done on the server side.\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Submission API\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Upon submission, \",(0,n.jsx)(e.code,{children:\"POST\"}),\" the form data to \",(0,n.jsx)(e.code,{children:\"https://questions.greatfrontend.com/api/questions/contact-form\"}),\" with the following fields in the \",(0,n.jsx)(e.strong,{children:\"request body\"}),\": \",(0,n.jsx)(e.code,{children:\"name\"}),\", \",(0,n.jsx)(e.code,{children:\"email\"}),\", \",(0,n.jsx)(e.code,{children:\"message\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"If all the form fields are correctly filled up, you will see an alert containing a success message. Congratulations!\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,n.jsx)(e.p,{children:\"You do not need JavaScript for this question, the focus is on HTML form validation and submission.\"})]})}function v(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(h,t)})):h(t)}var m=v;function f(t){return(0,r.jsx)(m,{})}function k(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(f,t)})):f(t)}var q=k;return j(C);})();\n;return Component;"
}