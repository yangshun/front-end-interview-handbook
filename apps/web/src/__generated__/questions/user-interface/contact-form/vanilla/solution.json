{
  "author": "yangshun",
  "files": {
    "/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <form\n      action=\"https://questions.greatfrontend.com/api/questions/contact-form\"\n      method=\"post\">\n      <div>\n        <label for=\"name-input\">Name</label>\n        <input id=\"name-input\" name=\"name\" type=\"text\" />\n      </div>\n      <div>\n        <label for=\"email-input\">Email</label>\n        <input id=\"email-input\" name=\"email\" type=\"email\" />\n      </div>\n      <div>\n        <label for=\"message-input\">Message</label>\n        <textarea\n          id=\"message-input\"\n          name=\"message\"></textarea>\n      </div>\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n    <!-- You can ignore this file, it is only used by GFE to\n      intercept the form submission event. -->\n    <script src=\"src/index.js\"></script>\n  </body>\n</html>\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/contact-form-vanilla-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"parcel\": \"2.9.3\"\n  },\n  \"source\": \"index.html\",\n  \"scripts\": {\n    \"start\": \"parcel\",\n    \"build\": \"parcel build\"\n  }\n}\n"
    },
    "/src/index.js": {
      "code": "import './styles.css';\n\n(() => {\n  const SUBMIT_URL =\n    'https://questions.greatfrontend.com/api/questions/contact-form';\n\n  const $form = document.querySelector('form');\n  $form.addEventListener('submit', async (event) => {\n    event.preventDefault();\n\n    if ($form.action !== SUBMIT_URL) {\n      alert('Incorrect form action value');\n      return;\n    }\n\n    if ($form.method.toLowerCase() !== 'post') {\n      alert('Incorrect form method value');\n      return;\n    }\n\n    try {\n      const formData = new FormData($form);\n      const response = await fetch(SUBMIT_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: formData.get('name'),\n          email: formData.get('email'),\n          message: formData.get('message'),\n        }),\n      });\n\n      const text = await response.text();\n      alert(text);\n    } catch (_) {\n      alert('Error submitting form!');\n    }\n  });\n})();\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  row-gap: 12px;\n}\n\nlabel {\n  font-size: 12px;\n}\n\ninput,\ntextarea {\n  display: block;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/index.html",
      "/src/index.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/index.html",
    "environment": "parcel"
  },
  "writeup": "var Component=(()=>{var w=Object.create;var s=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,_=Object.prototype.hasOwnProperty;var v=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),F=(n,e)=>{for(var l in e)s(n,l,{get:e[l],enumerable:!0})},h=(n,e,l,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of y(e))!_.call(n,r)&&r!==l&&s(n,r,{get:()=>e[r],enumerable:!(a=x(e,r))||a.enumerable});return n};var d=(n,e,l)=>(l=n!=null?w(j(n)):{},h(e||!n||!n.__esModule?s(l,\"default\",{value:n,enumerable:!0}):l,n)),k=n=>h(s({},\"__esModule\",{value:!0}),n);var c=v((O,u)=>{u.exports=_jsx_runtime});var D={};F(D,{default:()=>C});var i=d(c());var o=d(c());function m(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsxs)(e.li,{children:[\"Fields\",`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsx)(e.li,{children:\"All the fields can be updated.\"}),`\n`]}),`\n`]}),`\n`,(0,o.jsxs)(e.li,{children:[\"Submission\",`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsx)(e.li,{children:\"Clicking on the submit button triggers form submission.\"}),`\n`,(0,o.jsxs)(e.li,{children:[\"Hitting enter on the fields triggers form submissions if form is valid (except for \",(0,o.jsx)(e.code,{children:\"<textarea>\"}),\" which will add a new line)\"]}),`\n`,(0,o.jsx)(e.li,{children:\"Success alert is seen if all fields are filled during submission.\"}),`\n`]}),`\n`]}),`\n`]})]})}function T(n={}){let{wrapper:e}=n.components||{};return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(m,n)})):m(n)}var f=T;var t=d(c());function b(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\",p:\"p\",a:\"a\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"Link \",(0,t.jsx)(e.code,{children:\"<label>\"}),\"s to \",(0,t.jsx)(e.code,{children:\"<input>\"}),\" so that clicking on the \",(0,t.jsx)(e.code,{children:\"<label>\"}),\" will focus on the corresponding \",(0,t.jsx)(e.code,{children:\"<input>\"}),\".\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"Use \",(0,t.jsx)(e.code,{children:'<label for=\"some-id\">'}),\" and \",(0,t.jsx)(e.code,{children:'<input id=\"some-id\">'}),\" to define the relation between \",(0,t.jsx)(e.code,{children:\"<label>\"}),\" and \",(0,t.jsx)(e.code,{children:\"<input>\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Avoid nesting \",(0,t.jsx)(e.code,{children:\"<input>\"}),\" inside of \",(0,t.jsx)(e.code,{children:\"<label>\"}),\" because some assistive technologies (e.g. Dragon NaturallySpeaking) do not support it.\"]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{children:\"Follow up\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Now that you are familiar with form submission, try out a follow up question, \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/signup-form\",children:\"Signup Form\"}),\", where you will be asked to make an AJAX-based form request and client-side validation.\"]})]})}function M(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(b,n)})):b(n)}var p=M;function g(n){let e=Object.assign({p:\"p\",code:\"code\",ol:\"ol\",li:\"li\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:\"This is a basic question which evaluates your knowledge of the web platform. Forms and form submissions can entirely be built without any JavaScript! As a Front End Engineer, it's important to know what the platform provides and not resort to JavaScript for everything.\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"The first thing we need to do is to wrap the fields in a \",(0,i.jsx)(e.code,{children:\"<form>\"}),\", which is already given in the template. To tell the \",(0,i.jsx)(e.code,{children:\"<form>\"}),\" which URL to submit the data to, we use the \",(0,i.jsx)(e.code,{children:\"action\"}),\" attribute with the API URL as the value. The API URL is expecting a HTTP POST request, hence we also use \",(0,i.jsx)(e.code,{children:'method=\"post\"'}),\" on the \",(0,i.jsx)(e.code,{children:\"<form>\"}),\".\"]}),`\n`,(0,i.jsxs)(e.p,{children:[\"Form fields with the \",(0,i.jsx)(e.code,{children:\"name\"}),\" attribute will have the attribute value become the key in the form data. Hence we can add \",(0,i.jsx)(e.code,{children:'name=\"name\"'}),\", \",(0,i.jsx)(e.code,{children:'name=\"email\"'}),\", \",(0,i.jsx)(e.code,{children:'name=\"message\"'}),\" to the various form fields. Do also add \",(0,i.jsx)(e.code,{children:\"<label>\"}),\"s to label your \",(0,i.jsx)(e.code,{children:\"<input>\"}),\"s.\"]}),`\n`,(0,i.jsx)(e.p,{children:\"Lastly, submit buttons can be implemented in two ways:\"}),`\n`,(0,i.jsxs)(e.ol,{children:[`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:'<button type=\"submit\">'}),\": By default, \",(0,i.jsx)(e.code,{children:\"<button>\"}),\"s have \",(0,i.jsx)(e.code,{children:'type=\"submit\"'}),\" as default and when used in \",(0,i.jsx)(e.code,{children:\"<form>\"}),\"s, will trigger a form submission.\"]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:'<input type=\"submit\">'}),\": The element will be rendered as a button and clicking the \",(0,i.jsx)(e.code,{children:\"<input>\"}),\" will trigger a form submission.\"]}),`\n`]}),`\n`,(0,i.jsx)(f,{}),`\n`,(0,i.jsx)(p,{})]})}function A(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(g,n)})):g(n)}var C=A;return k(D);})();\n;return Component;"
}