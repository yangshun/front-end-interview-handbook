{
  "author": "yangshun",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\"/src/App.js\", \"/src/styles.css\"],\n  \"activeFile\": \"/src/App.js\",\n  \"environment\": \"create-react-app\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/todo-list-react-solution-improved\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useState } from 'react';\n\n// Encapsulate the ID generation so that it can only\n// be read and is protected from external modification.\nconst newID = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\nconst INITIAL_TASKS = [\n  { id: newID(), label: 'Walk the dog' },\n  { id: newID(), label: 'Water the plants' },\n  { id: newID(), label: 'Wash the dishes' },\n];\n\nexport default function App() {\n  const [tasks, setTasks] = useState(INITIAL_TASKS);\n  const [newTask, setNewTask] = useState('');\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      {/* Use a form instead. */}\n      <form\n        onSubmit={(event) => {\n          // Listen to onSubmit events so that it works for both \"Enter\" key and\n          // click of the submit <button>.\n          event.preventDefault();\n          // Trim the field and don't add to the list if it's empty.\n          if (newTask.trim() === '') {\n            return;\n          }\n\n          // Trim the value before adding it to the tasks.\n          setTasks([\n            ...tasks,\n            { id: newID(), label: newTask.trim() },\n          ]);\n          // Clear the <input> field after successful submission.\n          setNewTask('');\n        }}>\n        <input\n          aria-label=\"Add new task\"\n          type=\"text\"\n          placeholder=\"Add your task\"\n          value={newTask}\n          onChange={(event) =>\n            setNewTask(event.target.value)\n          }\n        />\n        <div>\n          <button>Submit</button>\n        </div>\n      </form>\n      {/* Display an empty message when there are no tasks */}\n      {tasks.length === 0 ? (\n        <div>No tasks added</div>\n      ) : (\n        <ul>\n          {tasks.map(({ id, label }) => (\n            <li key={id}>\n              <span>{label}</span>\n              <button\n                onClick={() => {\n                  // Add confirmation before destructive actions.\n                  if (\n                    window.confirm(\n                      'Are you sure you want to delete the task?',\n                    )\n                  ) {\n                    setTasks(\n                      tasks.filter(\n                        (task) => task.id !== id,\n                      ),\n                    );\n                  }\n                }}>\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  }
}