{
  "author": "coalinga8",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/todo-list-vue-solution\",\n  \"author\": \"coalinga8\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/main.js\",\n  \"scripts\": {\n    \"serve\": \"vue-cli-service serve\",\n    \"build\": \"vue-cli-service build\"\n  },\n  \"dependencies\": {\n    \"core-js\": \"3.32.2\",\n    \"vue\": \"3.3.4\"\n  },\n  \"devDependencies\": {\n    \"@vue/cli-plugin-babel\": \"5.0.8\",\n    \"@vue/cli-service\": \"5.0.8\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width,initial-scale=1.0\" />\n    <title>Vue</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <!-- Built files will be auto injected -->\n  </body>\n</html>\n"
    },
    "/src/App.vue": {
      "code": "<script setup>\nimport { ref } from 'vue';\n\nlet id = 0;\n\nconst INITIAL_TASKS = [\n  { id: id++, label: 'Walk the dog' },\n  { id: id++, label: 'Water the plants' },\n  { id: id++, label: 'Wash the dishes' },\n];\n\nconst tasks = ref(INITIAL_TASKS);\nconst newTask = ref('');\n\nconst onSummit = () => {\n  tasks.value.push({ id: id++, label: newTask.value });\n  newTask.value = '';\n};\n\nconst onDelete = (task) => {\n  tasks.value = tasks.value.filter((t) => t.id !== task.id);\n};\n</script>\n\n<template>\n  <div>\n    <h1>Todo List</h1>\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Add your task\"\n        v-model=\"newTask\" />\n      <div>\n        <button @click=\"onSummit\">Submit</button>\n      </div>\n    </div>\n    <ul>\n      <li v-for=\"task in tasks\" :key=\"task.id\">\n        <span>{{ task.label }}</span>\n        <button @click=\"onDelete(task)\">Delete</button>\n      </li>\n    </ul>\n  </div>\n</template>\n"
    },
    "/src/main.js": {
      "code": "import { createApp } from 'vue';\nimport App from './App.vue';\n\nimport './styles.css';\n\ncreateApp(App).mount('#app');\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.vue",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.vue",
    "environment": "vue-cli"
  },
  "writeup": "var Component=(()=>{var p=Object.create;var d=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var x=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),y=(n,e)=>{for(var s in e)d(n,s,{get:e[s],enumerable:!0})},r=(n,e,s,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of g(e))!b.call(n,c)&&c!==s&&d(n,c,{get:()=>e[c],enumerable:!(o=k(e,c))||o.enumerable});return n};var l=(n,e,s)=>(s=n!=null?p(w(n)):{},r(e||!n||!n.__esModule?d(s,\"default\",{value:n,enumerable:!0}):s,n)),j=n=>r(d({},\"__esModule\",{value:!0}),n);var a=x((T,h)=>{h.exports=_jsx_runtime});var M={};y(M,{default:()=>D});var t=l(a());var i=l(a());function u(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[\"Add tasks\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Add a new task.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Add multiple tasks.\"}),`\n`,(0,i.jsxs)(e.li,{children:[\"Add tasks with potentially malicious content like HTML (e.g. \",(0,i.jsx)(e.code,{children:\"<script>\"}),\", \",(0,i.jsx)(e.code,{children:\"<style>\"}),\" or \",(0,i.jsx)(e.code,{children:\"<link\"}),\">) and ensure there's no XSS.\"]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Check that \",(0,i.jsx)(e.code,{children:\"<input>\"}),\" is cleared after a task is added.\"]}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Delete tasks\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Delete an existing task.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Delete multiple tasks.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Delete newly-added tasks.\"}),`\n`]}),`\n`]}),`\n`]})]})}function v(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(u,n)})):u(n)}var m=v;function f(n){let e=Object.assign({h2:\"h2\",h3:\"h3\",p:\"p\",code:\"code\",a:\"a\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsx)(e.h3,{children:\"Reactive states\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"We will need two reactive state: \",(0,t.jsx)(e.code,{children:\"tasks\"}),\" and \",(0,t.jsx)(e.code,{children:\"newTask\"}),\".\"]}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"tasks\"}),\": Since there's a list of tasks that can be modified, we will need it to be part of the component's reactive state. When rendering a list of elements in Vue, we can use \",(0,t.jsx)(e.code,{children:\"v-for\"}),\" and \",(0,t.jsx)(e.a,{href:\"https://vuejs.org/guide/essentials/list.html#maintaining-state-with-key\",children:\"it's recommended\"}),\" to provide a \",(0,t.jsx)(e.code,{children:\"key\"}),\" for each item whenever possible. We cannot use the text of the task as the \",(0,t.jsx)(e.code,{children:\"key\"}),\" because they are not guaranteed to be unique. For this question, we generate a unique index for each task locally using an auto incrementing counter. The most foolproof method is to generate a unique ID for each task. Libraries like \",(0,t.jsx)(e.a,{href:\"https://github.com/uuidjs/uuid\",children:(0,t.jsx)(e.code,{children:\"uuid\"})}),\" come to mind.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"newTask\"}),\": a reactive state that binds to the new task input field. To read more, you can refer to the official document of \",(0,t.jsx)(e.a,{href:\"https://vuejs.org/guide/essentials/forms.html#text\",children:\"form input bindings\"}),\".\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Adding tasks\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"New tasks should be added to the end of the \",(0,t.jsx)(e.code,{children:\"tasks\"}),\" array. We can construct a new task object with a new \",(0,t.jsx)(e.code,{children:\"id\"}),\" and the \",(0,t.jsx)(e.code,{children:\"label\"}),\" field, and push to the \",(0,t.jsx)(e.code,{children:\"tasks\"}),\" reactive state.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Deleting tasks\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Having a unique \",(0,t.jsx)(e.code,{children:\"id\"}),\" for each task object simplifies things here because we can filter the existing list and exclude the task corresponding to the \",(0,t.jsx)(e.code,{children:\"id\"}),\" to be removed.\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Using Vue, the template will \",(0,t.jsx)(e.a,{href:\"https://vuejs.org/guide/best-practices/security.html#what-vue-does-to-protect-you\",children:\"automatically escape\"}),\" the content you try to render. So you don't need to worry about XSS yourself!\"]}),`\n`,(0,t.jsx)(m,{})]})}function _(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(f,n)})):f(n)}var D=_;return j(M);})();\n;return Component;"
}