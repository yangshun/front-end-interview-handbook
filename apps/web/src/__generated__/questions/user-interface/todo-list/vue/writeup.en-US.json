{
  "skeleton": "var Component=(()=>{var f=Object.create;var s=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var j=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),w=(t,e)=>{for(var i in e)s(t,i,{get:e[i],enumerable:!0})},a=(t,e,i,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of x(e))!b.call(t,o)&&o!==i&&s(t,o,{get:()=>e[o],enumerable:!(c=g(e,o))||c.enumerable});return t};var d=(t,e,i)=>(i=t!=null?f(y(t)):{},a(e||!t||!t.__esModule?s(i,\"default\",{value:t,enumerable:!0}):i,t)),_=t=>a(s({},\"__esModule\",{value:!0}),t);var l=j((v,u)=>{u.exports=_jsx_runtime});var D={};w(D,{default:()=>M});var r=d(l());var n=d(l());function h(t){let e=Object.assign({p:\"p\",ol:\"ol\",li:\"li\",ul:\"ul\",code:\"code\",h2:\"h2\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"You're given some existing HTML for a Todo List app. Add the following functionality to the app:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:['Add new tasks on clicking the \"Submit\" button.',`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"The \",(0,n.jsx)(e.code,{children:\"<input>\"}),\" field should be cleared upon successful addition.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.li,{children:'Remove tasks from the Todo List upon clicking the \"Delete\" button.'}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"The focus of this question is on functionality, not the styling. There's no need to write any custom CSS.\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"You may modify the markup (e.g. adding \",(0,n.jsx)(e.code,{children:\"id\"}),\"s, data attributes, replacing some tags, etc), but the result should remain the same visually.\"]}),`\n`,(0,n.jsx)(e.li,{children:\"You may want to think about ways to improve the user experience of the application and implement them (you get bonus credit for doing that during interviews).\"}),`\n`]})]})}function k(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(h,t)})):h(t)}var m=k;function p(t){return(0,r.jsx)(m,{})}function T(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(p,t)})):p(t)}var M=T;return _(D);})();\n;return Component;",
  "solution": "var Component=(()=>{var p=Object.create;var d=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var x=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),y=(n,e)=>{for(var s in e)d(n,s,{get:e[s],enumerable:!0})},r=(n,e,s,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of g(e))!b.call(n,c)&&c!==s&&d(n,c,{get:()=>e[c],enumerable:!(o=k(e,c))||o.enumerable});return n};var l=(n,e,s)=>(s=n!=null?p(w(n)):{},r(e||!n||!n.__esModule?d(s,\"default\",{value:n,enumerable:!0}):s,n)),j=n=>r(d({},\"__esModule\",{value:!0}),n);var a=x((T,h)=>{h.exports=_jsx_runtime});var M={};y(M,{default:()=>D});var t=l(a());var i=l(a());function u(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[\"Add tasks\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Add a new task.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Add multiple tasks.\"}),`\n`,(0,i.jsxs)(e.li,{children:[\"Add tasks with potentially malicious content like HTML (e.g. \",(0,i.jsx)(e.code,{children:\"<script>\"}),\", \",(0,i.jsx)(e.code,{children:\"<style>\"}),\" or \",(0,i.jsx)(e.code,{children:\"<link\"}),\">) and ensure there's no XSS.\"]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Check that \",(0,i.jsx)(e.code,{children:\"<input>\"}),\" is cleared after a task is added.\"]}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Delete tasks\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Delete an existing task.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Delete multiple tasks.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Delete newly-added tasks.\"}),`\n`]}),`\n`]}),`\n`]})]})}function v(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(u,n)})):u(n)}var m=v;function f(n){let e=Object.assign({h2:\"h2\",h3:\"h3\",p:\"p\",code:\"code\",a:\"a\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsx)(e.h3,{children:\"Reactive states\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"We will need two reactive state: \",(0,t.jsx)(e.code,{children:\"tasks\"}),\" and \",(0,t.jsx)(e.code,{children:\"newTask\"}),\".\"]}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"tasks\"}),\": Since there's a list of tasks that can be modified, we will need it to be part of the component's reactive state. When rendering a list of elements in Vue, we can use \",(0,t.jsx)(e.code,{children:\"v-for\"}),\" and \",(0,t.jsx)(e.a,{href:\"https://vuejs.org/guide/essentials/list.html#maintaining-state-with-key\",children:\"it's recommended\"}),\" to provide a \",(0,t.jsx)(e.code,{children:\"key\"}),\" for each item whenever possible. We cannot use the text of the task as the \",(0,t.jsx)(e.code,{children:\"key\"}),\" because they are not guaranteed to be unique. For this question, we generate a unique index for each task locally using an auto incrementing counter. The most foolproof method is to generate a unique ID for each task. Libraries like \",(0,t.jsx)(e.a,{href:\"https://github.com/uuidjs/uuid\",children:(0,t.jsx)(e.code,{children:\"uuid\"})}),\" come to mind.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"newTask\"}),\": a reactive state that binds to the new task input field. To read more, you can refer to the official document of \",(0,t.jsx)(e.a,{href:\"https://vuejs.org/guide/essentials/forms.html#text\",children:\"form input bindings\"}),\".\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Adding tasks\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"New tasks should be added to the end of the \",(0,t.jsx)(e.code,{children:\"tasks\"}),\" array. We can construct a new task object with a new \",(0,t.jsx)(e.code,{children:\"id\"}),\" and the \",(0,t.jsx)(e.code,{children:\"label\"}),\" field, and push to the \",(0,t.jsx)(e.code,{children:\"tasks\"}),\" reactive state.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Deleting tasks\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Having a unique \",(0,t.jsx)(e.code,{children:\"id\"}),\" for each task object simplifies things here because we can filter the existing list and exclude the task corresponding to the \",(0,t.jsx)(e.code,{children:\"id\"}),\" to be removed.\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Using Vue, the template will \",(0,t.jsx)(e.a,{href:\"https://vuejs.org/guide/best-practices/security.html#what-vue-does-to-protect-you\",children:\"automatically escape\"}),\" the content you try to render. So you don't need to worry about XSS yourself!\"]}),`\n`,(0,t.jsx)(m,{})]})}function _(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(f,n)})):f(n)}var D=_;return j(M);})();\n;return Component;"
}