{
  "author": "yangshun",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/todo-list-react-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useState } from 'react';\n\nlet id = 0;\n\nconst INITIAL_TASKS = [\n  { id: id++, label: 'Walk the dog' },\n  { id: id++, label: 'Water the plants' },\n  { id: id++, label: 'Wash the dishes' },\n];\n\nexport default function App() {\n  const [tasks, setTasks] = useState(INITIAL_TASKS);\n  const [newTask, setNewTask] = useState('');\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <div>\n        <input\n          aria-label=\"Add new task\"\n          type=\"text\"\n          placeholder=\"Add your task\"\n          value={newTask}\n          onChange={(event) => {\n            setNewTask(event.target.value);\n          }}\n        />\n        <div>\n          <button\n            onClick={() => {\n              setTasks(\n                tasks.concat({\n                  id: id++,\n                  label: newTask.trim(),\n                }),\n              );\n              setNewTask('');\n            }}>\n            Submit\n          </button>\n        </div>\n      </div>\n      <ul>\n        {tasks.map(({ id, label }) => (\n          <li key={id}>\n            <span>{label}</span>\n            <button\n              onClick={() => {\n                setTasks(\n                  tasks.filter((task) => task.id !== id),\n                );\n              }}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  },
  "writeup": "var Component=(()=>{var x=Object.create;var d=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty;var D=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),M=(n,e)=>{for(var r in e)d(n,r,{get:e[r],enumerable:!0})},u=(n,e,r,h)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of _(e))!A.call(n,c)&&c!==r&&d(n,c,{get:()=>e[c],enumerable:!(h=j(e,c))||h.enumerable});return n};var l=(n,e,r)=>(r=n!=null?x(v(n)):{},u(e||!n||!n.__esModule?d(r,\"default\",{value:n,enumerable:!0}):r,n)),C=n=>u(d({},\"__esModule\",{value:!0}),n);var a=D((I,m)=>{m.exports=_jsx_runtime});var O={};M(O,{default:()=>q});var s=l(a());var t=l(a());function p(n){let e=Object.assign({h2:\"h2\",h3:\"h3\",p:\"p\",code:\"code\",a:\"a\",strong:\"strong\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsx)(e.h3,{children:\"State\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"We will need two state values: \",(0,t.jsx)(e.code,{children:\"tasks\"}),\" and \",(0,t.jsx)(e.code,{children:\"newTask\"}),\".\"]}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"tasks\"}),\": Since there's a list of tasks that can be modified, we will need it to be part of the component's state. When rendering a list of elements in React, we need to specify a \",(0,t.jsx)(e.code,{children:\"key\"}),\" for each item. We cannot use the text of the task as the \",(0,t.jsx)(e.code,{children:\"key\"}),\" because they are not guaranteed to be unique. It is typically a bad practice to use array \",(0,t.jsx)(e.code,{children:\"index\"}),\" as \",(0,t.jsx)(e.code,{children:\"key\"}),\"s, but for this question, it is acceptable. The most foolproof method is to generate a unique ID for each task. Libraries like \",(0,t.jsx)(e.a,{href:\"https://github.com/uuidjs/uuid\",children:(0,t.jsx)(e.code,{children:\"uuid\"})}),\" come to mind, but in this case, a simple incrementing counter will do. Since we want \",(0,t.jsx)(e.code,{children:\"id\"}),\"s to be globally unique, it is initialized in the module scope, outside of the component.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"newTask\"}),\": state to represent the new task input field, although that is not strictly necessary if we prefer \",(0,t.jsx)(e.a,{href:\"https://reactjs.org/docs/uncontrolled-components.html\",children:\"uncontrolled components\"}),\". However, it is generally more common to make \",(0,t.jsx)(e.code,{children:\"input\"}),\" fields controlled, aka backed by component state. The initial value for this state should not be \",(0,t.jsx)(e.code,{children:\"null\"}),\" as React will show a warning otherwise.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Adding tasks\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"New tasks should be added to the end of the \",(0,t.jsx)(e.code,{children:\"tasks\"}),\" array. We can construct a new task object with a new \",(0,t.jsx)(e.code,{children:\"id\"}),\" and the \",(0,t.jsx)(e.code,{children:\"label\"}),\" field, based on the \",(0,t.jsx)(e.code,{children:\"newTask\"}),\" value, create a \",(0,t.jsx)(e.strong,{children:\"new list\"}),\" from the previous list with the new item, and set it as the new \",(0,t.jsx)(e.code,{children:\"tasks\"}),\" state.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Deleting tasks\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Having a unique \",(0,t.jsx)(e.code,{children:\"id\"}),\" for each task object simplifies things here because we can filter the existing list and exclude the task corresponding to the \",(0,t.jsx)(e.code,{children:\"id\"}),\" to be removed. If you opted to use array index instead of generating unique IDs, you can use \",(0,t.jsx)(e.code,{children:\"Array.prototype.splice\"}),\" to remove elements at that index.\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,t.jsx)(e.p,{children:\"Using React, the user input will be automatically escaped so there's no need to manually prevent Cross Site Scripting (XSS).\"})]})}function S(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(p,n)})):p(n)}var f=S;var i=l(a());function g(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[\"Add tasks\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Add a new task.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Add multiple tasks.\"}),`\n`,(0,i.jsxs)(e.li,{children:[\"Add tasks with potentially malicious content like HTML (e.g. \",(0,i.jsx)(e.code,{children:\"<script>\"}),\", \",(0,i.jsx)(e.code,{children:\"<style>\"}),\" or \",(0,i.jsx)(e.code,{children:\"<link\"}),\">) and ensure there's no XSS.\"]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Check that \",(0,i.jsx)(e.code,{children:\"<input>\"}),\" is cleared after a task is added.\"]}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Delete tasks\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Delete an existing task.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Delete multiple tasks.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Delete newly-added tasks.\"}),`\n`]}),`\n`]}),`\n`]})]})}function X(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(g,n)})):g(n)}var b=X;var o=l(a());function w(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\",a:\"a\"},n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsxs)(e.li,{children:[\"All form \",(0,o.jsx)(e.code,{children:\"<input>\"}),\"s should be labelled either via \",(0,o.jsx)(e.code,{children:\"<label>\"}),\"s or \",(0,o.jsx)(e.code,{children:\"aria-label\"}),\" attributes. Since the original markup doesn't contain a \",(0,o.jsx)(e.code,{children:\"<label>\"}),\", we can add \",(0,o.jsx)(e.code,{children:\"aria-label\"}),\" to the \",(0,o.jsx)(e.code,{children:\"<input>\"}),\".\"]}),`\n`,(0,o.jsxs)(e.li,{children:[\"For screen reader users, they won't be aware that a new task has been added. An \",(0,o.jsx)(e.code,{children:\"aria-live\"}),\" region can be added to inform about the newly-added task. There is unlikely enough time to do this during an interview but you will get bonus points for mentioning it. Read more about \",(0,o.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\",children:\"ARIA live regions on MDN\"}),\".\"]}),`\n`]})]})}function F(n={}){let{wrapper:e}=n.components||{};return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(w,n)})):w(n)}var k=F;function y(n){let e=Object.assign({p:\"p\",strong:\"strong\",a:\"a\"},n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:\"Note:\"}),\" Check out the \",(0,s.jsx)(e.a,{href:\"/questions/user-interface/todo-list/react/solution/improved\",children:\"improved version\"}),\" which has numerous UX improvements.\"]}),`\n`,(0,s.jsx)(f,{}),`\n`,(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:\"Note:\"}),\" Check out the \",(0,s.jsx)(e.a,{href:\"/questions/user-interface/todo-list/react/solution/improved\",children:\"improved version\"}),\" which has numerous UX improvements.\"]}),`\n`,(0,s.jsx)(k,{}),`\n`,(0,s.jsx)(b,{})]})}function T(n={}){let{wrapper:e}=n.components||{};return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(y,n)})):y(n)}var q=T;return C(O);})();\n;return Component;"
}