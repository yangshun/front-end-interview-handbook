{
  "author": "yangshun",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/todo-list-react-solution-improved\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useState } from 'react';\n\n// Encapsulate the ID generation so that it can only\n// be read and is protected from external modification.\nconst newID = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\nconst INITIAL_TASKS = [\n  { id: newID(), label: 'Walk the dog' },\n  { id: newID(), label: 'Water the plants' },\n  { id: newID(), label: 'Wash the dishes' },\n];\n\nexport default function App() {\n  const [tasks, setTasks] = useState(INITIAL_TASKS);\n  const [newTask, setNewTask] = useState('');\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      {/* Use a form instead. */}\n      <form\n        onSubmit={(event) => {\n          // Listen to onSubmit events so that it works for both \"Enter\" key and\n          // click of the submit <button>.\n          event.preventDefault();\n          // Trim the field and don't add to the list if it's empty.\n          if (newTask.trim() === '') {\n            return;\n          }\n\n          // Trim the value before adding it to the tasks.\n          setTasks([\n            ...tasks,\n            { id: newID(), label: newTask.trim() },\n          ]);\n          // Clear the <input> field after successful submission.\n          setNewTask('');\n        }}>\n        <input\n          aria-label=\"Add new task\"\n          type=\"text\"\n          placeholder=\"Add your task\"\n          value={newTask}\n          onChange={(event) =>\n            setNewTask(event.target.value)\n          }\n        />\n        <div>\n          <button>Submit</button>\n        </div>\n      </form>\n      {/* Display an empty message when there are no tasks */}\n      {tasks.length === 0 ? (\n        <div>No tasks added</div>\n      ) : (\n        <ul>\n          {tasks.map(({ id, label }) => (\n            <li key={id}>\n              <span>{label}</span>\n              <button\n                onClick={() => {\n                  // Add confirmation before destructive actions.\n                  if (\n                    window.confirm(\n                      'Are you sure you want to delete the task?',\n                    )\n                  ) {\n                    setTasks(\n                      tasks.filter(\n                        (task) => task.id !== id,\n                      ),\n                    );\n                  }\n                }}>\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  },
  "writeup": "var Component=(()=>{var w=Object.create;var l=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,_=Object.prototype.hasOwnProperty;var v=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),A=(n,e)=>{for(var s in e)l(n,s,{get:e[s],enumerable:!0})},u=(n,e,s,h)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of x(e))!_.call(n,r)&&r!==s&&l(n,r,{get:()=>e[r],enumerable:!(h=y(e,r))||h.enumerable});return n};var c=(n,e,s)=>(s=n!=null?w(j(n)):{},u(e||!n||!n.__esModule?l(s,\"default\",{value:n,enumerable:!0}):s,n)),D=n=>u(l({},\"__esModule\",{value:!0}),n);var a=v((I,m)=>{m.exports=_jsx_runtime});var X={};A(X,{default:()=>C});var i=c(a());var d=c(a());var t=c(a());function p(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"Add tasks\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Add a new task.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Add multiple tasks.\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"Add tasks with potentially malicious content like HTML (e.g. \",(0,t.jsx)(e.code,{children:\"<script>\"}),\", \",(0,t.jsx)(e.code,{children:\"<style>\"}),\" or \",(0,t.jsx)(e.code,{children:\"<link\"}),\">) and ensure there's no XSS.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Check that \",(0,t.jsx)(e.code,{children:\"<input>\"}),\" is cleared after a task is added.\"]}),`\n`]}),`\n`]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Delete tasks\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Delete an existing task.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Delete multiple tasks.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Delete newly-added tasks.\"}),`\n`]}),`\n`]}),`\n`]})]})}function S(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(p,n)})):p(n)}var f=S;var o=c(a());function b(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\",a:\"a\"},n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsxs)(e.li,{children:[\"All form \",(0,o.jsx)(e.code,{children:\"<input>\"}),\"s should be labelled either via \",(0,o.jsx)(e.code,{children:\"<label>\"}),\"s or \",(0,o.jsx)(e.code,{children:\"aria-label\"}),\" attributes. Since the original markup doesn't contain a \",(0,o.jsx)(e.code,{children:\"<label>\"}),\", we can add \",(0,o.jsx)(e.code,{children:\"aria-label\"}),\" to the \",(0,o.jsx)(e.code,{children:\"<input>\"}),\".\"]}),`\n`,(0,o.jsxs)(e.li,{children:[\"For screen reader users, they won't be aware that a new task has been added. An \",(0,o.jsx)(e.code,{children:\"aria-live\"}),\" region can be added to inform about the newly-added task. There is unlikely enough time to do this during an interview but you will get bonus points for mentioning it. Read more about \",(0,o.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\",children:\"ARIA live regions on MDN\"}),\".\"]}),`\n`]})]})}function M(n={}){let{wrapper:e}=n.components||{};return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(b,n)})):b(n)}var g=M;function k(n){let e=Object.assign({p:\"p\",a:\"a\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.p,{children:[\"This is an improved version of the \",(0,i.jsx)(e.a,{href:\"/questions/user-interface/todo-list/react/solution\",children:\"basic solution\"}),\".\"]}),`\n`,(0,i.jsx)(e.p,{children:\"Some of the improvements:\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Encapsulating the ID generator so that it can only be read from but not modified from external sources.\"}),`\n`,(0,i.jsxs)(e.li,{children:[\"Use a \",(0,i.jsx)(e.code,{children:\"<form>\"}),\" to capture submission of new tasks. This will handle both \",(0,i.jsx)(\"kbd\",{children:\"Enter\"}),' keys and \"Submit\" button clicks.']}),`\n`,(0,i.jsx)(e.li,{children:\"Prevents empty input values from being added to the list.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Trims the input value before adding to the list.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Displays an empty state when there are no tasks in the list.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Asks for confirmation before deletion of a task.\"}),`\n`]}),`\n`,(0,i.jsx)(g,{}),`\n`,(0,i.jsx)(f,{})]})}function T(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(k,n)})):k(n)}var C=T;return D(X);})();\n;return Component;"
}