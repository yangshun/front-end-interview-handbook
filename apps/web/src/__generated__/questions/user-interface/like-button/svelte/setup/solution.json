{
  "author": "tanhauhau",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\n    \"/src/App.svelte\",\n    \"/src/HeartIcon.svelte\",\n    \"/src/SpinnerIcon.svelte\"\n  ],\n  \"activeFile\": \"/src/App.svelte\",\n  \"environment\": \"svelte\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/like-button-svelte-solution\",\n  \"author\": \"tanhauhau\",\n  \"version\": \"0.0.1\",\n  \"main\": \"src/index.js\",\n  \"dependencies\": {\n    \"svelte\": \"^3.58.0\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf8\" />\n    <meta name=\"viewport\" content=\"width=device-width\" />\n    <title>Svelte</title>\n    <link rel=\"stylesheet\" href=\"public/bundle.css\" />\n  </head>\n\n  <body>\n    <script src=\"bundle.js\"></script>\n  </body>\n</html>\n"
    },
    "/src/App.svelte": {
      "code": "<script>\n  import HeartIcon from './HeartIcon.svelte';\n  import SpinnerIcon from './SpinnerIcon.svelte';\n\n  // Determines if the button is in the default/liked state.\n  let liked = false;\n  // Whether there's a pending background API request.\n  let isPending = false;\n  // Error message to be shown if the API request failed.\n  let errorMessage = null;\n\n  async function likeUnlikeAction() {\n    try {\n      isPending = true;\n      errorMessage = null;\n\n      const response = await fetch(\n        'https://questions.greatfrontend.com/api/questions/like-button',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            action: liked ? 'unlike' : 'like',\n          }),\n        },\n      );\n\n      if (!response.ok) {\n        const res = await response.json();\n        errorMessage = res.message;\n        return;\n      }\n\n      liked = !liked;\n    } finally {\n      isPending = false;\n    }\n  }\n</script>\n\n<div class=\"button-container\">\n  <button\n    class=\"like-button {liked ? 'like-button--liked' : 'like-button--default'}\"\n    disabled={isPending}\n    on:click={likeUnlikeAction}>\n    {#if isPending}\n      <SpinnerIcon />\n    {:else}\n      <HeartIcon />\n    {/if}\n    {liked ? 'Liked' : 'Like'}\n  </button>\n  {#if errorMessage}\n    <div class=\"error-message\">{errorMessage}</div>\n  {/if}\n</div>\n\n<style>\n  .error-message {\n    font-size: 12px;\n    margin-top: 8px;\n  }\n\n  .like-button {\n    --default-color: #888;\n    --active-color: red;\n\n    align-items: center;\n    border-style: solid;\n    border-radius: 32px;\n    border-width: 2px;\n    display: flex;\n    cursor: pointer;\n    font-weight: bold;\n    gap: 8px;\n    height: 32px;\n    padding: 4px 8px;\n  }\n\n  .like-button--default {\n    background-color: #fff;\n    border-color: var(--default-color);\n    color: var(--default-color);\n  }\n\n  .like-button:hover {\n    border-color: var(--active-color);\n    color: var(--active-color);\n  }\n\n  .like-button--liked,\n  .like-button--liked:hover {\n    background-color: var(--active-color);\n    border-color: var(--active-color);\n    color: #fff;\n  }\n</style>\n"
    },
    "/src/HeartIcon.svelte": {
      "code": "<svg fill=\"currentColor\" viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n  <g>\n    <path\n      d=\"M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12zM7.354 4.225c-2.08 0-3.903 1.988-3.903 4.255 0 5.74 7.034 11.596 8.55 11.658 1.518-.062 8.55-5.917 8.55-11.658 0-2.267-1.823-4.255-3.903-4.255-2.528 0-3.94 2.936-3.952 2.965-.23.562-1.156.562-1.387 0-.014-.03-1.425-2.965-3.954-2.965z\" />\n  </g>\n</svg>\n"
    },
    "/src/index.js": {
      "code": "import App from './App.svelte';\nimport './styles.css';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"
    },
    "/src/SpinnerIcon.svelte": {
      "code": "<svg\n  width={16}\n  height={16}\n  viewBox=\"0 0 38 38\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  stroke=\"currentColor\">\n  <g fill=\"none\" fillRule=\"evenodd\">\n    <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n      <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n      <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          from=\"0 18 18\"\n          to=\"360 18 18\"\n          dur=\"1s\"\n          repeatCount=\"indefinite\" />\n      </path>\n    </g>\n  </g>\n</svg>\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.svelte",
      "/src/HeartIcon.svelte",
      "/src/SpinnerIcon.svelte"
    ],
    "activeFile": "/src/App.svelte",
    "environment": "svelte"
  }
}