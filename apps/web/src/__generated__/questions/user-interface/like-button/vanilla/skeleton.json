{
  "author": "yangshun",
  "files": {
    "/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <button id=\"like-button\"></button>\n    <script src=\"src/index.js\"></script>\n  </body>\n</html>\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/like-button-vanilla-skeleton\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"parcel\": \"2.9.3\"\n  },\n  \"source\": \"index.html\",\n  \"scripts\": {\n    \"start\": \"parcel\",\n    \"build\": \"parcel build\"\n  }\n}\n"
    },
    "/src/index.js": {
      "code": "import './styles.css';\n\n(() => {\n  const spinnerIconHTML = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"currentColor\"><g fill=\"none\" fill-rule=\"evenodd\"> <g transform=\"translate(1 1)\" stroke-width=\"2\"> <circle stroke-opacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\"/> <path d=\"M36 18c0-9.94-8.06-18-18-18\"> <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 18 18\" to=\"360 18 18\" dur=\"1s\" repeatCount=\"indefinite\"/></path></g></g></svg>`;\n  const heartIconHTML = `<svg fill=\"currentColor\" viewBox=\"0 0 24 24\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12zM7.354 4.225c-2.08 0-3.903 1.988-3.903 4.255 0 5.74 7.034 11.596 8.55 11.658 1.518-.062 8.55-5.917 8.55-11.658 0-2.267-1.823-4.255-3.903-4.255-2.528 0-3.94 2.936-3.952 2.965-.23.562-1.156.562-1.387 0-.014-.03-1.425-2.965-3.954-2.965z\"></path></g></svg>`;\n\n  document.querySelector(\n    '#like-button',\n  ).innerHTML = `${heartIconHTML} Like`;\n})();\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/index.html",
      "/src/index.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/index.html",
    "environment": "parcel"
  },
  "writeup": "var Component=(()=>{var f=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var k=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var x=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=>{for(var i in e)r(t,i,{get:e[i],enumerable:!0})},h=(t,e,i,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of b(e))!w.call(t,o)&&o!==i&&r(t,o,{get:()=>e[o],enumerable:!(a=m(e,o))||a.enumerable});return t};var l=(t,e,i)=>(i=t!=null?f(k(t)):{},h(e||!t||!t.__esModule?r(i,\"default\",{value:t,enumerable:!0}):i,t)),T=t=>h(r({},\"__esModule\",{value:!0}),t);var c=x((_,d)=>{d.exports=_jsx_runtime});var v={};y(v,{default:()=>q});var s=l(c());var n=l(c());function u(t){let e=Object.assign({p:\"p\",img:\"img\",code:\"code\",h2:\"h2\",ul:\"ul\",li:\"li\",strong:\"strong\",h3:\"h3\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"Create a Like button which appearance changes based on the following states:\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/img/questions/like-button/like-button-states.png\",alt:\"Like Button States\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The heart and spinner icons are provided for your convenience. The focus of this question is on the handling of the various states, not so much on being pixel perfect. As for colors, you can use \",(0,n.jsx)(e.code,{children:\"#f00\"}),\" for the red and \",(0,n.jsx)(e.code,{children:\"#888\"}),\" for the gray.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,n.jsx)(e.p,{children:\"In the button's default state, when it is clicked, it goes into the loading state and a request is made to the provided back end API which has a 50% chance of succeeding/failing.\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Success response\"}),': If the request was successful, the button changes to the \"Liked\" state.']}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Failure response\"}),': Otherwise it returns to the \"Default\"/\"Hovered\" state depending on whether the cursor is still over the button. The error message from the back end API should be shown below the button.']}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:'If the user clicks on a button in the \"Liked\" state, the reverse happens.'}),`\n`,(0,n.jsx)(e.h2,{children:\"Submission API\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"URL: \",(0,n.jsx)(e.code,{children:\"https://questions.greatfrontend.com/api/questions/like-button\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"HTTP Method: \",(0,n.jsx)(e.code,{children:\"POST\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Content Type: \",(0,n.jsx)(e.code,{children:\"json\"})]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Parameters\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The following fields are accepted in the \",(0,n.jsx)(e.strong,{children:\"request body\"}),\":\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"action\"}),\": A string of either \",(0,n.jsx)(e.code,{children:\"'like'\"}),\" or \",(0,n.jsx)(e.code,{children:\"'unlike'\"}),\" depending on the desired action.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Response\"}),`\n`,(0,n.jsx)(e.p,{children:\"The API has a 50% chance of succeeding (HTTP 200) or failing (HTTP 500) so as to make it easy for you to test the request failure cases. It returns a JSON payload of the following shape depending on the outcome.\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Success\"}),\": \",(0,n.jsx)(e.code,{children:\"{ message: 'Success!' }\"})]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Failure\"}),\": \",(0,n.jsx)(e.code,{children:\"{ message: 'Unknown error during attempted {{action}}. Please try again later.!' }\"})]}),`\n`]})]})}function j(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(u,t)})):u(t)}var g=j;function p(t){return(0,s.jsx)(g,{})}function P(t={}){let{wrapper:e}=t.components||{};return e?(0,s.jsx)(e,Object.assign({},t,{children:(0,s.jsx)(p,t)})):p(t)}var q=P;return T(v);})();\n;return Component;"
}