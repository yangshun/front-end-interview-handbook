{
  "author": "yangshun",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\n    \"/index.html\",\n    \"/src/index.js\",\n    \"/src/styles.css\"\n  ],\n  \"activeFile\": \"/src/index.html\",\n  \"environment\": \"parcel\"\n}\n"
    },
    "/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div class=\"button-container\">\n      <button id=\"like-button\"></button>\n      <div class=\"error-message\"></div>\n    </div>\n    <script src=\"src/index.js\"></script>\n  </body>\n</html>\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/like-button-vanilla-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"parcel\": \"2.9.3\"\n  },\n  \"source\": \"index.html\",\n  \"scripts\": {\n    \"start\": \"parcel\",\n    \"build\": \"parcel build\"\n  }\n}\n"
    },
    "/src/index.js": {
      "code": "import './styles.css';\n\n(() => {\n  const spinnerIconHTML = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"currentColor\"><g fill=\"none\" fill-rule=\"evenodd\"> <g transform=\"translate(1 1)\" stroke-width=\"2\"> <circle stroke-opacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\"/> <path d=\"M36 18c0-9.94-8.06-18-18-18\"> <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 18 18\" to=\"360 18 18\" dur=\"1s\" repeatCount=\"indefinite\"/></path></g></g></svg>`;\n  const heartIconHTML = `<svg fill=\"currentColor\" viewBox=\"0 0 24 24\" width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12zM7.354 4.225c-2.08 0-3.903 1.988-3.903 4.255 0 5.74 7.034 11.596 8.55 11.658 1.518-.062 8.55-5.917 8.55-11.658 0-2.267-1.823-4.255-3.903-4.255-2.528 0-3.94 2.936-3.952 2.965-.23.562-1.156.562-1.387 0-.014-.03-1.425-2.965-3.954-2.965z\"></path></g></svg>`;\n\n  function likeButton(buttonEl, errorMessageEl) {\n    // Determines if the button is in the default/liked state.\n    let liked = false;\n    // Whether there's a pending background API request.\n    let isPending = false;\n    // Error message to be shown if the API request failed.\n    let errorMessage = null;\n\n    async function likeUnlikeAction() {\n      try {\n        isPending = true;\n        errorMessage = null;\n        update();\n\n        const response = await fetch(\n          'https://questions.greatfrontend.com/api/questions/like-button',\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              action: liked ? 'unlike' : 'like',\n            }),\n          },\n        );\n\n        if (!response.ok) {\n          const res = await response.json();\n          errorMessage = res.message;\n          return;\n        }\n\n        liked = !liked;\n      } finally {\n        isPending = false;\n        update();\n      }\n    }\n\n    function update() {\n      buttonEl.classList.toggle(\n        'like-button--liked',\n        liked,\n      );\n      buttonEl.classList.toggle(\n        'like-button--default',\n        !liked,\n      );\n\n      buttonEl.disabled = isPending;\n      buttonEl.querySelector(\n        '.like-button-icon',\n      ).innerHTML = isPending\n        ? spinnerIconHTML\n        : heartIconHTML;\n\n      buttonEl.querySelector(\n        '.like-button-label',\n      ).innerHTML = liked ? 'Liked' : 'Like';\n\n      errorMessageEl.textContent = errorMessage || '';\n    }\n\n    function init() {\n      buttonEl.classList.add('like-button');\n      buttonEl.addEventListener('click', () => {\n        likeUnlikeAction();\n      });\n      // It's fine to use innerHTML here since we have full control over the contents.\n      buttonEl.innerHTML = `<span class=\"like-button-icon\"></span><span class=\"like-button-label\"></span>`;\n    }\n\n    init();\n    update();\n  }\n\n  likeButton(\n    document.querySelector('#like-button'),\n    document.querySelector('.error-message'),\n  );\n})();\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.error-message {\n  font-size: 12px;\n  margin-top: 8px;\n}\n\n.like-button {\n  --default-color: #888;\n  --active-color: red;\n\n  align-items: center;\n  border-style: solid;\n  border-radius: 32px;\n  border-width: 2px;\n  display: flex;\n  cursor: pointer;\n  font-weight: bold;\n  gap: 8px;\n  height: 32px;\n  padding: 4px 8px;\n}\n\n.like-button--default {\n  background-color: #fff;\n  border-color: var(--default-color);\n  color: var(--default-color);\n}\n\n.like-button:hover {\n  border-color: var(--active-color);\n  color: var(--active-color);\n}\n\n.like-button--liked,\n.like-button--liked:hover {\n  background-color: var(--active-color);\n  border-color: var(--active-color);\n  color: #fff;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/index.html",
      "/src/index.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/index.html",
    "environment": "parcel"
  }
}