{
  "author": "yangshun",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/like-button-react-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useState } from 'react';\nimport { HeartIcon, SpinnerIcon } from './icons';\n\nfunction classNames(...args) {\n  return args.filter(Boolean).join(' ');\n}\n\nexport default function App() {\n  // Determines if the button is in the default/liked state.\n  const [liked, setLiked] = useState(false);\n  // Whether there's a pending background API request.\n  const [isPending, setIsPending] = useState(false);\n  // Error message to be shown if the API request failed.\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  async function likeUnlikeAction() {\n    try {\n      setIsPending(true);\n      setErrorMessage(null);\n\n      const response = await fetch(\n        'https://questions.greatfrontend.com/api/questions/like-button',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            action: liked ? 'unlike' : 'like',\n          }),\n        },\n      );\n\n      if (!response.ok) {\n        const res = await response.json();\n        setErrorMessage(res.message);\n        return;\n      }\n\n      setLiked(!liked);\n    } finally {\n      setIsPending(false);\n    }\n  }\n\n  return (\n    <div className=\"button-container\">\n      <button\n        className={classNames(\n          'like-button',\n          liked\n            ? 'like-button--liked'\n            : 'like-button--default',\n        )}\n        disabled={isPending}\n        onClick={() => {\n          likeUnlikeAction();\n        }}>\n        {isPending ? <SpinnerIcon /> : <HeartIcon />}\n        {liked ? 'Liked' : 'Like'}\n      </button>\n      {errorMessage && (\n        <div className=\"error-message\">{errorMessage}</div>\n      )}\n    </div>\n  );\n}\n"
    },
    "/src/icons.js": {
      "code": "export function SpinnerIcon({ className }) {\n  return (\n    <svg\n      className={className}\n      width={16}\n      height={16}\n      viewBox=\"0 0 38 38\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke=\"currentColor\">\n      <g fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n          <circle\n            strokeOpacity=\".5\"\n            cx=\"18\"\n            cy=\"18\"\n            r=\"18\"\n          />\n          <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"rotate\"\n              from=\"0 18 18\"\n              to=\"360 18 18\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n          </path>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport function HeartIcon({ className }) {\n  return (\n    <svg\n      className={className}\n      fill=\"currentColor\"\n      viewBox=\"0 0 24 24\"\n      width=\"16\"\n      height=\"16\">\n      <g>\n        <path d=\"M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12zM7.354 4.225c-2.08 0-3.903 1.988-3.903 4.255 0 5.74 7.034 11.596 8.55 11.658 1.518-.062 8.55-5.917 8.55-11.658 0-2.267-1.823-4.255-3.903-4.255-2.528 0-3.94 2.936-3.952 2.965-.23.562-1.156.562-1.387 0-.014-.03-1.425-2.965-3.954-2.965z\"></path>\n      </g>\n    </svg>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.error-message {\n  font-size: 12px;\n  margin-top: 8px;\n}\n\n.like-button {\n  --default-color: #888;\n  --active-color: red;\n\n  align-items: center;\n  border-style: solid;\n  border-radius: 32px;\n  border-width: 2px;\n  display: flex;\n  cursor: pointer;\n  font-weight: bold;\n  gap: 8px;\n  height: 32px;\n  padding: 4px 8px;\n}\n\n.like-button--default {\n  background-color: #fff;\n  border-color: var(--default-color);\n  color: var(--default-color);\n}\n\n.like-button:hover {\n  border-color: var(--active-color);\n  color: var(--active-color);\n}\n\n.like-button--liked,\n.like-button--liked:hover {\n  background-color: var(--active-color);\n  border-color: var(--active-color);\n  color: #fff;\n}\n\n.like-button-icon {\n  display: flex;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css",
      "/src/icons.js"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  },
  "writeup": "var Component=(()=>{var _=Object.create;var a=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var D=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),M=(n,e)=>{for(var o in e)a(n,o,{get:e[o],enumerable:!0})},u=(n,e,o,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let h of k(e))!y.call(n,h)&&h!==o&&a(n,h,{get:()=>e[h],enumerable:!(d=I(e,h))||d.enumerable});return n};var c=(n,e,o)=>(o=n!=null?_(v(n)):{},u(e||!n||!n.__esModule?a(o,\"default\",{value:n,enumerable:!0}):o,n)),q=n=>u(a({},\"__esModule\",{value:!0}),n);var l=D((A,f)=>{f.exports=_jsx_runtime});var T={};M(T,{default:()=>O});var r=c(l());var t=c(l());function m(n){let e=Object.assign({h2:\"h2\",p:\"p\",h3:\"h3\",ul:\"ul\",li:\"li\",code:\"code\",ol:\"ol\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsx)(e.p,{children:\"The focus of this question is in the handling of the various states when there's a pending request.\"}),`\n`,(0,t.jsx)(e.h3,{children:\"Data model\"}),`\n`,(0,t.jsx)(e.p,{children:\"We'll need a few state variables:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"liked\"}),\": Tracks whether the button is in the default state or the liked state. Since there are only two states, we can use a boolean type to represent it.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"isPending\"}),\": Determines if there's a pending background request.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"errorMessage\"}),\": Error message obtained from the back end when the API request fails.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h3,{children:\"Making API requests\"}),`\n`,(0,t.jsx)(e.p,{children:\"Writing code to fetch data via an API request is pretty standard. In general, you should use the following flow:\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Set the UI to show a loading state\"}),`\n`,(0,t.jsx)(e.li,{children:\"Clear the error message\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"Initiate the API request via \",(0,t.jsx)(e.code,{children:\"fetch\"})]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Determine if the request has succeeded\",`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsx)(e.li,{children:\"If the response succeeds, update the UI to indicate success\"}),`\n`,(0,t.jsx)(e.li,{children:\"If the response fails, update the UI to indicate failure by showing an error message\"}),`\n`]}),`\n`]}),`\n`,(0,t.jsx)(e.li,{children:\"Remove the loading state\"}),`\n`]}),`\n`,(0,t.jsxs)(e.p,{children:[\"The above is captured in the \",(0,t.jsx)(e.code,{children:\"likeUnlikeAction\"}),\" function.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Rendering\"}),`\n`,(0,t.jsx)(e.p,{children:\"The rendering code is pretty straightforward since there isn't much dependency among the state variables when rendering the UI.\"})]})}function C(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(m,n)})):m(n)}var g=C;var i=c(l());function b(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:['\"Default\" state',`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:'Hovering the button should show the \"Hovered\" state.'}),`\n`,(0,i.jsxs)(e.li,{children:[\"Clicking on the button should show a loading spinner.\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:'If the request succeeds, the button should transition into the \"Liked\" state.'}),`\n`,(0,i.jsx)(e.li,{children:'If the request fails, the button should go back to the \"Default\" state and an error message is shown below the button.'}),`\n`]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:['\"Liked\" state',`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Hovering the button in this state is undefined behavior. It's fine to not show any difference when hovering.\"}),`\n`,(0,i.jsxs)(e.li,{children:[\"Clicking on the button should show a loading spinner.\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:'If the request succeeds, the button should transition into the \"Default\" state.'}),`\n`,(0,i.jsx)(e.li,{children:'If the request fails, the button should go back to the \"Liked\" state and an error message is shown below the button.'}),`\n`]}),`\n`]}),`\n`]}),`\n`]}),`\n`]})]})}function F(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(b,n)})):b(n)}var p=F;var s=c(l());function w(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,s.jsxs)(e.ul,{children:[`\n`,(0,s.jsx)(e.li,{children:\"Some users might have the habit of double clicking on UI elements. By disabling the button after the first click, we avoid running into the situation where multiple requests are pending at the same time which is probably unintended and can lead to confusing outcomes.\"}),`\n`]})]})}function X(n={}){let{wrapper:e}=n.components||{};return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(w,n)})):w(n)}var x=X;function j(n){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(g,{}),`\n`,(0,r.jsx)(p,{}),`\n`,(0,r.jsx)(x,{})]})}function L(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(j,n)})):j(n)}var O=L;return q(T);})();\n;return Component;"
}