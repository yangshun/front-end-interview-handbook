{
  "skeleton": "var Component=(()=>{var p=Object.create;var a=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var A=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),v=(n,e)=>{for(var o in e)a(n,o,{get:e[o],enumerable:!0})},d=(n,e,o,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of w(e))!y.call(n,i)&&i!==o&&a(n,i,{get:()=>e[i],enumerable:!(s=f(e,i))||s.enumerable});return n};var c=(n,e,o)=>(o=n!=null?p(b(n)):{},d(e||!n||!n.__esModule?a(o,\"default\",{value:n,enumerable:!0}):o,n)),I=n=>d(a({},\"__esModule\",{value:!0}),n);var r=A((j,h)=>{h.exports=_jsx_runtime});var D={};v(D,{default:()=>q});var l=c(r());var t=c(r());function u(n){let e=Object.assign({p:\"p\",strong:\"strong\",a:\"a\",blockquote:\"blockquote\",em:\"em\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:\"Note:\"}),\" This is an advanced version of \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/modal-dialog\",children:\"Modal Dialog\"}),\", you should complete that question first before attempting this question.\"]}),`\n`,(0,t.jsxs)(e.blockquote,{children:[`\n`,(0,t.jsx)(e.p,{children:\"A dialog is a window overlaid on either the primary window or another dialog window. Windows under a modal dialog are inert. That is, users cannot interact with content outside an active dialog window. Inert content outside an active dialog is typically visually obscured or dimmed so it is difficult to discern, and in some implementations, attempts to interact with the inert content cause the dialog to close.\"}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.em,{children:[\"Source: \",(0,t.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/\",children:\"Dialog (Modal) Pattern | ARIA Authoring Practices Guide\"})]})}),`\n`,(0,t.jsxs)(e.p,{children:[\"In \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/modal-dialog\",children:\"Modal Dialog\"}),\", we built a functional modal dialog component that can be opened and closed with customizable title and contents.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"However, building good UI components goes beyond functionality and we have to ensure our components have great accessibility as well by adding the necessary ARIA roles, states, and properties to the DOM elements along with the keyboard interactions and focus management.\"}),`\n`,(0,t.jsx)(e.p,{children:\"In this question, we will focus on implementing the necessary ARIA roles, states, and properties.\"}),`\n`,(0,t.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The ARIA Authoring Practices Guide has a \",(0,t.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/\",children:\"long list of guidelines for the ARIA roles, states, and properties to add to the various elements of a modal dialog component\"}),\".\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Implement the following guidelines for this question:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"The element that serves as the dialog container has a role of \",(0,t.jsx)(e.code,{children:\"dialog\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"All elements required to operate the dialog are descendants of the element that has role \",(0,t.jsx)(e.code,{children:\"dialog\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"The dialog container element has \",(0,t.jsx)(e.code,{children:\"aria-modal\"}),\" set to \",(0,t.jsx)(e.code,{children:\"true\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"The dialog has value set for the \",(0,t.jsx)(e.code,{children:\"aria-labelledby\"}),\" property that refers to a visible dialog title.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"The \",(0,t.jsx)(e.code,{children:\"aria-describedby\"}),\" property is set on the element with the dialog role to indicate which element or elements in the dialog contain content that describes the primary purpose or message of the dialog.\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"Note\"}),\": It is advisable to omit specifying \",(0,t.jsx)(e.code,{children:\"aria-describedby\"}),\" if the dialog content includes semantic structures, such as lists, tables, or multiple paragraphs, that need to be perceived in order to easily understand the content, i.e., if the content would be difficult to understand when announced as a single unbroken string. However, we will still implement this attribute for the sake of practice.\"]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The skeleton code uses the solution of \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/modal-dialog\",children:\"Modal Dialog\"}),\", but you are free to use your own solution as a starting point.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"The \",(0,t.jsxs)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\",children:[(0,t.jsx)(e.code,{children:\"<dialog>\"}),\" HTML element\"]}),\" is available but for the sake of practice, implement a modal dialog without using that element.\"]})]})}function x(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(u,n)})):u(n)}var m=x;function g(n){return(0,l.jsx)(m,{})}function M(n={}){let{wrapper:e}=n.components||{};return e?(0,l.jsx)(e,Object.assign({},n,{children:(0,l.jsx)(g,n)})):g(n)}var q=M;return I(D);})();\n;return Component;",
  "solution": "var Component=(()=>{var y=Object.create;var d=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,D=Object.prototype.hasOwnProperty;var M=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),k=(n,e)=>{for(var r in e)d(n,r,{get:e[r],enumerable:!0})},u=(n,e,r,h)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of _(e))!D.call(n,s)&&s!==r&&d(n,s,{get:()=>e[s],enumerable:!(h=I(e,s))||h.enumerable});return n};var c=(n,e,r)=>(r=n!=null?y(v(n)):{},u(e||!n||!n.__esModule?d(r,\"default\",{value:n,enumerable:!0}):r,n)),A=n=>u(d({},\"__esModule\",{value:!0}),n);var l=M((W,m)=>{m.exports=_jsx_runtime});var R={};k(R,{default:()=>X});var a=c(l());var t=c(l());function g(n){let e=Object.assign({h2:\"h2\",p:\"p\",a:\"a\",code:\"code\",pre:\"pre\",h3:\"h3\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"We'll build on top of \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/modal-dialog/solution\",children:\"Modal Dialog's solution\"}),\". Other than adding the right ARIA roles and states, which is straightforward, we also need to link the title and content elements.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Linking the title and content to the modal dialog element is done via the \",(0,t.jsx)(e.code,{children:\"aria-labelledby\"}),\" attribute and \",(0,t.jsx)(e.code,{children:\"aria-describedby\"}),\" attribute respectively, by using the \",(0,t.jsx)(e.code,{children:\"id\"}),\" values of the title and content as the \",(0,t.jsx)(e.code,{children:\"aria-\"}),\" values.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Since there can be multiple modal dialog component instances on the page and \",(0,t.jsx)(e.code,{children:\"id\"}),\"s are meant to be unique within the page, we cannot hardcode values for these attributes.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"We can expose props for these \",(0,t.jsx)(e.code,{children:\"id\"}),\" values and let it be the user's job to ensure that the values are unique. However, these \",(0,t.jsx)(e.code,{children:\"id\"}),\" values are rarely used beyond fulfilling a11y requirements and it is not meaningful work for users. We should generate the IDs for users if possible.\"]}),`\n`,(0,t.jsx)(e.p,{children:\"We can generate two IDs \\u2013 one for the title and another for the content, and use them as such in the markup:\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-jsx\",children:`<div aria-labelledby={titleId} aria-describedby={contentId}>\n  <h1 id={titleId}>...</h1>\n  <div id={contentId}>...</div>\n</div>\n`})}),`\n`,(0,t.jsxs)(e.p,{children:[\"In frameworks like React, the \",(0,t.jsx)(e.code,{children:\"useId\"}),\" hook can be used to generate IDs that will be unique per modal dialog instance.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Splitting the component\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Since hooks cannot be called conditionally and there's no need to call the \",(0,t.jsx)(e.code,{children:\"useId\"}),\" hook when the modal dialog is not open, the component can be split into two with the bulk of the component within \",(0,t.jsx)(e.code,{children:\"ModalDialogImpl\"}),\" so that the \",(0,t.jsx)(e.code,{children:\"useId\"}),\" hooks are not called unnecessarily.\"]})]})}function C(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(g,n)})):g(n)}var p=C;var o=c(l());function f(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\"},n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsx)(e.li,{children:\"Inspect the rendered HTML to see that the right attributes were added to the DOM.\"}),`\n`,(0,o.jsxs)(e.li,{children:[\"You can go a step further by using accessibility testing tools like \",(0,o.jsx)(e.a,{href:\"https://www.deque.com/axe/\",children:\"axe\"}),\" to validate the a11y of the elements.\"]}),`\n`]})]})}function O(n={}){let{wrapper:e}=n.components||{};return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(f,n)})):f(n)}var b=O;var i=c(l());function w(n){let e=Object.assign({h2:\"h2\",p:\"p\",a:\"a\",ul:\"ul\",li:\"li\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"We're not totally done with accessibility yet, there's still other behavior to add, such as keyboard support and focus management which will be covered in \",(0,i.jsx)(e.a,{href:\"/questions/user-interface/modal-dialog-iii\",children:\"Modal Dialog III\"}),\" and \",(0,i.jsx)(e.a,{href:\"/questions/user-interface/modal-dialog-iv\",children:\"Modal Dialog IV\"}),\" respectively.\"]}),`\n`,(0,i.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/\",children:\"Dialog (Modal) | ARIA Authoring Practices Guide\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://www.radix-ui.com/primitives/docs/components/dialog\",children:\"Dialog \\u2013 Radix Primitives\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://reach.tech/dialog\",children:\"Dialog | Reach UI\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://headlessui.com/react/dialog\",children:\"Dialog - Headless UI\"})}),`\n`]})]})}function q(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(w,n)})):w(n)}var x=q;function j(n){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(p,{}),`\n`,(0,a.jsx)(b,{}),`\n`,(0,a.jsx)(x,{})]})}function F(n={}){let{wrapper:e}=n.components||{};return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(j,n)})):j(n)}var X=F;return A(R);})();\n;return Component;"
}