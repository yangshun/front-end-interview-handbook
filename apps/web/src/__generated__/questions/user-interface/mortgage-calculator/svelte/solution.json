{
  "author": "tanhauhau",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/mortgage-calculator-svelte-solution\",\n  \"author\": \"tanhauhau\",\n  \"version\": \"0.0.1\",\n  \"main\": \"src/index.js\",\n  \"dependencies\": {\n    \"svelte\": \"^3.58.0\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf8\" />\n    <meta name=\"viewport\" content=\"width=device-width\" />\n    <title>Svelte</title>\n    <link rel=\"stylesheet\" href=\"public/bundle.css\" />\n  </head>\n\n  <body>\n    <script src=\"bundle.js\"></script>\n  </body>\n</html>\n"
    },
    "/src/App.svelte": {
      "code": "<script>\n  import './styles.css';\n\n  let monthlyPayment = '';\n  let totalPayment = '';\n  let totalInterest = '';\n\n  function onSubmit(event) {\n    event.preventDefault(); // Prevent page reload on form submission.\n\n    const data = new FormData(event.target);\n\n    // Get and convert input values.\n    const loanAmount = parseFloat(data.get('loan-amount'));\n    const monthlyInterestRate =\n      parseFloat(data.get('interest-rate')) / 100 / 12;\n    const loanTermInMonths =\n      parseFloat(data.get('loan-term')) * 12;\n\n    // Calculate monthly mortgage payment.\n    const monthlyPaymentAmount =\n      (loanAmount * monthlyInterestRate) /\n      (1 -\n        1 /\n          Math.pow(\n            1 + monthlyInterestRate,\n            loanTermInMonths,\n          ));\n    const totalPaymentAmount =\n      monthlyPaymentAmount * loanTermInMonths;\n\n    const currencyFormatter = new Intl.NumberFormat(\n      'en-US',\n      {\n        style: 'currency',\n        currency: 'USD',\n      },\n    );\n\n    // Display monthly payment amount.\n    monthlyPayment = currencyFormatter.format(\n      monthlyPaymentAmount,\n    );\n    // Display total payment amount.\n    totalPayment = currencyFormatter.format(\n      totalPaymentAmount,\n    );\n    // Display total interest amount.\n    totalInterest = currencyFormatter.format(\n      totalPaymentAmount - loanAmount,\n    );\n  }\n</script>\n\n<div class=\"mortgage-calculator\">\n  <form\n    class=\"mortgage-calculator-form\"\n    on:submit={onSubmit}>\n    <div>\n      <label>\n        {'Loan Amount: '}\n        <input\n          type=\"number\"\n          name=\"loan-amount\"\n          defaultValue=\"100000\"\n          min=\"1\"\n          required />\n      </label>\n    </div>\n    <div>\n      <label>\n        {'Loan Term (years): '}\n        <input\n          type=\"number\"\n          name=\"loan-term\"\n          defaultValue=\"30\"\n          min=\"1\"\n          required />\n      </label>\n    </div>\n    <div>\n      <label>\n        {'Interest Rate (%): '}\n        <input\n          type=\"number\"\n          name=\"interest-rate\"\n          defaultValue=\"3\"\n          step=\"0.01\"\n          min=\"0.01\"\n          required />\n      </label>\n    </div>\n    <div>\n      <button type=\"submit\">Calculate</button>\n    </div>\n  </form>\n  <hr />\n  <div\n    aria-live=\"polite\"\n    class=\"mortgage-calculator-results\">\n    <div>\n      {'Monthly Payment Amount: '}\n      <strong>{monthlyPayment}</strong>\n    </div>\n    <div>\n      {'Total Payment Amount: '}\n      <strong>{totalPayment}</strong>\n    </div>\n    <div>\n      {'Total Interest Paid: '}\n      <strong>{totalInterest}</strong>\n    </div>\n  </div>\n</div>\n\n<style>\n  .mortgage-calculator {\n    display: flex;\n    flex-direction: column;\n    font-size: 14px;\n    gap: 12px;\n  }\n\n  .mortgage-calculator-form {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .mortgage-calculator-results {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n</style>\n"
    },
    "/src/index.js": {
      "code": "import App from './App.svelte';\nimport './styles.css';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.svelte",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.svelte",
    "environment": "svelte"
  },
  "writeup": "var Component=(()=>{var f=Object.create;var i=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var x=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),j=(t,e)=>{for(var r in e)i(t,r,{get:e[r],enumerable:!0})},c=(t,e,r,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of b(e))!v.call(t,a)&&a!==r&&i(t,a,{get:()=>e[a],enumerable:!(s=g(e,a))||s.enumerable});return t};var d=(t,e,r)=>(r=t!=null?f(y(t)):{},c(e||!t||!t.__esModule?i(r,\"default\",{value:t,enumerable:!0}):r,t)),w=t=>c(i({},\"__esModule\",{value:!0}),t);var l=x((k,u)=>{u.exports=_jsx_runtime});var T={};j(T,{default:()=>M});var n=d(l());var o=d(l());function h(t){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",strong:\"strong\",code:\"code\"},t.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsxs)(e.li,{children:[\"Basic case\",`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsxs)(e.li,{children:[\"Enter a loan amount, interest rate, and loan term for a simple mortgage scenario, and verify that the monthly mortgage payment and total amount paid are calculated correctly. For example, a 30-year mortgage on a $100,000 loan at 3% interest rate should result in a monthly payment of \",(0,o.jsx)(e.strong,{children:\"$421.60\"}),\", a total amount paid of \",(0,o.jsx)(e.strong,{children:\"$151,777.45\"}),\", and total interest of \",(0,o.jsx)(e.strong,{children:\"$51,777.45\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,o.jsxs)(e.li,{children:[\"Invalid inputs\",`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsx)(e.li,{children:\"Leave the loan amount field blank and submit. Expect to see an error message prompting the user to fill out the field.\"}),`\n`,(0,o.jsxs)(e.li,{children:[\"Try to enter text instead of numeric characters in any of the fields. \",(0,o.jsx)(e.code,{children:'<input type=\"number\">'}),\" should prevent non-numeric characters from being entered.\"]}),`\n`]}),`\n`]}),`\n`]})]})}function _(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(h,t)})):h(t)}var m=_;function p(t){let e=Object.assign({p:\"p\",h2:\"h2\",code:\"code\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"This question evaluates whether you understand how to allow users to enter form inputs, validate them and perform calculations based on the inputs.\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Form Markup\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"To collect user data, we use a \",(0,n.jsx)(e.code,{children:\"<form>\"}),\" element and \",(0,n.jsx)(e.code,{children:\"<input>\"}),\" fields.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"To validate input, use the built-in input type validators (\",(0,n.jsx)(e.code,{children:'<input type=\"number\">'}),\"), or use the \",(0,n.jsx)(e.code,{children:\"Number()\"}),\" constructor to convert user input to numbers and check for \",(0,n.jsx)(e.code,{children:\"NaN\"}),\" values. You can use the \",(0,n.jsx)(e.code,{children:\"required\"}),\" attribute in HTML to ensure that all input fields are filled out and the \",(0,n.jsx)(e.code,{children:\"min\"}),\" attribute to ensure that input fields have a valid minimum value before the submit event callback is fired.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"There's no need to use controlled values for the form fields as we only have to calculate during submission..\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Form Submission\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"We can use JavaScript to attach on \",(0,n.jsx)(e.code,{children:\"on:click\"}),` event to the \"Calculate\" button that calculates the mortgage payment using the formula. But it'd be better to add a an `,(0,n.jsx)(e.code,{children:\"on:submit\"}),\" event handler to the \",(0,n.jsx)(e.code,{children:\"<form>\"}),` so that both clicking on the \"Calculate\" button and hitting \"Enter\" in any of the input fields will submit the form. It's also necessary to use `,(0,n.jsx)(e.code,{children:\"event.preventDefault()\"}),\" to intercept the browser submit action which by default triggers a page reload and is not desired here.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Displaying Results\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"After computing the 3 necessary amounts using the formula, use \",(0,n.jsx)(e.code,{children:\"Intl.NumberFormat()\"}),\" to format the amounts to 2 d.p. with a dollar symbol. Feel free to customize the formatting to your own locale and currency.\"]}),`\n`,(0,n.jsx)(m,{})]})}function F(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(p,t)})):p(t)}var M=F;return w(T);})();\n;return Component;"
}