{
  "author": "dhillon",
  "files": {
    "/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div class=\"mortgage-calculator\">\n      <form class=\"mortgage-calculator-form\">\n        <div>\n          <label>\n            Loan Amount:\n            <input\n              type=\"number\"\n              name=\"loan-amount\"\n              value=\"100000\"\n              min=\"1\"\n              required />\n          </label>\n        </div>\n        <div>\n          <label>\n            Loan Term (years):\n            <input\n              type=\"number\"\n              name=\"loan-term\"\n              value=\"30\"\n              min=\"1\"\n              required />\n          </label>\n        </div>\n        <div>\n          <label>\n            Interest Rate (%):\n            <input\n              type=\"number\"\n              name=\"interest-rate\"\n              value=\"3\"\n              step=\"0.01\"\n              min=\"0.01\"\n              required />\n          </label>\n        </div>\n        <div>\n          <button type=\"submit\">Calculate</button>\n        </div>\n      </form>\n      <hr />\n      <div\n        aria-live=\"polite\"\n        class=\"mortgage-calculator-results\">\n        <div>\n          Monthly Payment Amount:\n          <strong id=\"monthly-payment\"></strong>\n        </div>\n        <div>\n          Total Payment Amount:\n          <strong id=\"total-payment\"></strong>\n        </div>\n        <div>\n          Total Interest Paid:\n          <strong id=\"total-interest\"></strong>\n        </div>\n      </div>\n    </div>\n    <script src=\"src/index.js\"></script>\n  </body>\n</html>\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/mortgage-calculator-vanilla-solution\",\n  \"author\": \"dhillon\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"parcel\": \"2.9.3\"\n  },\n  \"source\": \"index.html\",\n  \"scripts\": {\n    \"start\": \"parcel\",\n    \"build\": \"parcel build\"\n  }\n}\n"
    },
    "/src/index.js": {
      "code": "import './styles.css';\n\n(() => {\n  // Save a reference to form inputs.\n  const $formEl = document.querySelector(\n    '.mortgage-calculator-form',\n  );\n  const $monthlyPaymentEl = document.querySelector(\n    '#monthly-payment',\n  );\n  const $totalPaymentEl = document.querySelector(\n    '#total-payment',\n  );\n  const $totalInterestEl = document.querySelector(\n    '#total-interest',\n  );\n\n  // Listen to form submission.\n  $formEl.addEventListener('submit', function (event) {\n    event.preventDefault(); // Prevent page reload on form submission.\n\n    const data = new FormData(event.target);\n\n    // Get and convert input values.\n    const loanAmount = parseFloat(data.get('loan-amount'));\n    const monthlyInterestRate =\n      parseFloat(data.get('interest-rate')) / 100 / 12;\n    const loanTermInMonths =\n      parseFloat(data.get('loan-term')) * 12;\n\n    // Calculate monthly mortgage payment.\n    const monthlyPayment =\n      (loanAmount * monthlyInterestRate) /\n      (1 -\n        1 /\n          Math.pow(\n            1 + monthlyInterestRate,\n            loanTermInMonths,\n          ));\n\n    // Calculate total payment amount.\n    const totalPayment = monthlyPayment * loanTermInMonths;\n\n    // Calculate total interest paid.\n    const totalInterest = totalPayment - loanAmount;\n\n    const currencyFormatter = new Intl.NumberFormat(\n      'en-US',\n      {\n        style: 'currency',\n        currency: 'USD',\n      },\n    );\n\n    // Set output values.\n    $monthlyPaymentEl.textContent =\n      currencyFormatter.format(monthlyPayment);\n    $totalPaymentEl.textContent =\n      currencyFormatter.format(totalPayment);\n    $totalInterestEl.textContent =\n      currencyFormatter.format(totalInterest);\n  });\n})();\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.mortgage-calculator {\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  gap: 12px;\n}\n\n.mortgage-calculator-form {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.mortgage-calculator-results {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/index.html",
      "/src/index.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/index.html",
    "environment": "parcel"
  },
  "writeup": "var Component=(()=>{var y=Object.create;var c=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,_=Object.prototype.hasOwnProperty;var w=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),F=(t,e)=>{for(var i in e)c(t,i,{get:e[i],enumerable:!0})},u=(t,e,i,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of v(e))!_.call(t,a)&&a!==i&&c(t,a,{get:()=>e[a],enumerable:!(d=x(e,a))||d.enumerable});return t};var s=(t,e,i)=>(i=t!=null?y(j(t)):{},u(e||!t||!t.__esModule?c(i,\"default\",{value:t,enumerable:!0}):i,t)),M=t=>u(c({},\"__esModule\",{value:!0}),t);var l=w((L,h)=>{h.exports=_jsx_runtime});var O={};F(O,{default:()=>T});var n=s(l());var o=s(l());function m(t){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",strong:\"strong\",code:\"code\"},t.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsxs)(e.li,{children:[\"Basic case\",`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsxs)(e.li,{children:[\"Enter a loan amount, interest rate, and loan term for a simple mortgage scenario, and verify that the monthly mortgage payment and total amount paid are calculated correctly. For example, a 30-year mortgage on a $100,000 loan at 3% interest rate should result in a monthly payment of \",(0,o.jsx)(e.strong,{children:\"$421.60\"}),\", a total amount paid of \",(0,o.jsx)(e.strong,{children:\"$151,777.45\"}),\", and total interest of \",(0,o.jsx)(e.strong,{children:\"$51,777.45\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,o.jsxs)(e.li,{children:[\"Invalid inputs\",`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsx)(e.li,{children:\"Leave the loan amount field blank and submit. Expect to see an error message prompting the user to fill out the field.\"}),`\n`,(0,o.jsxs)(e.li,{children:[\"Try to enter text instead of numeric characters in any of the fields. \",(0,o.jsx)(e.code,{children:'<input type=\"number\">'}),\" should prevent non-numeric characters from being entered.\"]}),`\n`]}),`\n`]}),`\n`]})]})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(m,t)})):m(t)}var f=C;var r=s(l());function p(t){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[\"Use a \",(0,r.jsx)(e.code,{children:\"<label>\"}),\" for the form fields to indicate what the \",(0,r.jsx)(e.code,{children:\"<input>\"}),\" is for. You can nest \",(0,r.jsx)(e.code,{children:\"<input>\"}),\" within \",(0,r.jsx)(e.code,{children:\"<label>\"}),\" to make the association implicit.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[\"Add \",(0,r.jsx)(e.code,{children:'aria-live=\"polite\"'}),\" to the results container element to announce content changes to users of assistive technologies.\"]}),`\n`]})]})}function D(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(p,t)})):p(t)}var g=D;function b(t){let e=Object.assign({p:\"p\",h2:\"h2\",code:\"code\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"This question evaluates whether you understand how to allow users to enter form inputs, validate them and perform calculations based on the inputs.\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Form Markup\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"To collect user data, we use a \",(0,n.jsx)(e.code,{children:\"<form>\"}),\" element and \",(0,n.jsx)(e.code,{children:\"<input>\"}),\" fields.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"To validate input, use the built-in input type validators (\",(0,n.jsx)(e.code,{children:'<input type=\"number\">'}),\"), or use the \",(0,n.jsx)(e.code,{children:\"Number()\"}),\" constructor to convert user input to numbers and check for \",(0,n.jsx)(e.code,{children:\"NaN\"}),\" values. You can use the \",(0,n.jsx)(e.code,{children:\"required\"}),\" attribute in HTML to ensure that all input fields are filled out and the \",(0,n.jsx)(e.code,{children:\"min\"}),\" attribute to ensure that input fields have a valid minimum value before the submit event callback is fired.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Form Submission\"}),`\n`,(0,n.jsxs)(e.p,{children:[`We can use JavaScript to attach a click event listener to the \"Calculate\" button that calculates the mortgage payment using the formula. But it'd be better to add a `,(0,n.jsx)(e.code,{children:\"'submit'\"}),\" event listener to the \",(0,n.jsx)(e.code,{children:\"<form>\"}),` so that both clicking on the \"Calculate\" button and hitting \"Enter\" in any of the input fields will submit the form. It's also necessary to use `,(0,n.jsx)(e.code,{children:\"event.preventDefault()\"}),\" to intercept the browser submit action which by default triggers a page reload and is not desired here.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Displaying Results\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"After computing the 3 necessary amounts using the formula, use \",(0,n.jsx)(e.code,{children:\"Intl.NumberFormat()\"}),\" to format the amounts to 2 d.p. with a dollar symbol. Feel free to customize the formatting to your own locale and currency.\"]}),`\n`,(0,n.jsx)(f,{}),`\n`,(0,n.jsx)(g,{})]})}function k(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(b,t)})):b(t)}var T=k;return M(O);})();\n;return Component;"
}