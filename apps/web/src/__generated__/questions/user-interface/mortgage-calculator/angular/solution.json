{
  "author": null,
  "files": {
    "/angular.json": {
      "code": "{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"version\": 1,\n  \"newProjectRoot\": \"projects\",\n  \"defaultProject\": \"greatfrontend\",\n  \"projects\": {\n    \"greatfrontend\": {\n      \"projectType\": \"application\",\n      \"schematics\": {},\n      \"root\": \"\",\n      \"sourceRoot\": \"src\",\n      \"prefix\": \"app\",\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:browser\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app\",\n            \"index\": \"src/index.html\",\n            \"main\": \"src/main.ts\",\n            \"polyfills\": [\"zone.js\"],\n            \"tsConfig\": \"tsconfig.app.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          },\n          \"configurations\": {\n            \"production\": {\n              \"budgets\": [\n                {\n                  \"type\": \"initial\",\n                  \"maximumWarning\": \"500kb\",\n                  \"maximumError\": \"1mb\"\n                },\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"2kb\",\n                  \"maximumError\": \"4kb\"\n                }\n              ],\n              \"outputHashing\": \"all\"\n            },\n            \"development\": {\n              \"buildOptimizer\": false,\n              \"optimization\": false,\n              \"vendorChunk\": true,\n              \"extractLicenses\": false,\n              \"sourceMap\": true,\n              \"namedChunks\": true\n            }\n          },\n          \"defaultConfiguration\": \"production\"\n        },\n        \"serve\": {\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\n          \"configurations\": {\n            \"production\": {\n              \"browserTarget\": \"greatfrontend:build:production\"\n            },\n            \"development\": {\n              \"browserTarget\": \"greatfrontend:build:development\"\n            }\n          },\n          \"defaultConfiguration\": \"development\"\n        },\n        \"extract-i18n\": {\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n          \"options\": {\n            \"browserTarget\": \"greatfrontend:build\"\n          }\n        },\n        \"test\": {\n          \"builder\": \"@angular-devkit/build-angular:karma\",\n          \"options\": {\n            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],\n            \"tsConfig\": \"tsconfig.spec.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          }\n        }\n      }\n    }\n  },\n  \"cli\": {\n    \"analytics\": \"7ca5c4d0-e5db-4d23-9ffd-8c8c042e34e7\"\n  }\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/mortgage-calculator-angular-solution\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/common\": \"16.2.4\",\n    \"@angular/compiler\": \"16.2.4\",\n    \"@angular/core\": \"16.2.4\",\n    \"@angular/forms\": \"16.2.4\",\n    \"@angular/platform-browser\": \"16.2.4\",\n    \"@angular/platform-browser-dynamic\": \"16.2.4\",\n    \"rxjs\": \"7.8.0\",\n    \"zone.js\": \"0.13.1\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"16.2.1\",\n    \"@angular/cli\": \"16.2.1\",\n    \"@angular/compiler-cli\": \"16.2.4\",\n    \"@types/jasmine\": \"4.3.5\",\n    \"jasmine-core\": \"4.6.0\",\n    \"karma\": \"6.4.2\",\n    \"karma-chrome-launcher\": \"3.2.0\",\n    \"karma-coverage\": \"2.2.1\",\n    \"karma-jasmine\": \"5.1.0\",\n    \"karma-jasmine-html-reporter\": \"2.1.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\"\n  }\n}\n"
    },
    "/src/app/app.component.css": {
      "code": ".mortgage-calculator {\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  gap: 12px;\n}\n\n.mortgage-calculator-results {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n"
    },
    "/src/app/app.component.html": {
      "code": "<div class=\"mortgage-calculator\">\n  <app-form (onFormSubmit)=\"formSubmit($event)\" />\n\n  <div\n    aria-live=\"polite\"\n    class=\"mortgage-calculator-results\"\n    *ngIf=\"mortgage\">\n    <div>\n      Monthly Payment Amount:<strong>{{\n        mortgage.monthlyPayment\n      }}</strong>\n    </div>\n    <div>\n      Total Payment Amount:<strong>{{\n        mortgage.totalPayment\n      }}</strong>\n    </div>\n    <div>\n      Total Interest Paid:<strong>{{\n        mortgage.totalInterest\n      }}</strong>\n    </div>\n  </div>\n</div>\n"
    },
    "/src/app/app.component.ts": {
      "code": "import {\n  ChangeDetectionStrategy,\n  Component,\n} from '@angular/core';\nimport { FormState } from './models/form-state.model';\nimport { Mortgage } from './models/mortgage.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  mortgage!: Mortgage;\n\n  formSubmit(mortgageData: FormState): void {\n    const loanAmount = mortgageData.loanAmount;\n    const monthlyInterestRate =\n      mortgageData.interestRate / 100 / 12;\n    const loanTermInMonths = mortgageData.loanTerm * 12;\n\n    const monthlyPaymentAmount =\n      (loanAmount * monthlyInterestRate) /\n      (1 -\n        Math.pow(\n          1 + monthlyInterestRate,\n          -loanTermInMonths,\n        ));\n\n    const totalPayment =\n      monthlyPaymentAmount * loanTermInMonths;\n\n    const currencyFormatter = new Intl.NumberFormat(\n      'en-US',\n      {\n        style: 'currency',\n        currency: 'USD',\n      },\n    );\n\n    this.mortgage = {\n      monthlyPayment: currencyFormatter.format(\n        monthlyPaymentAmount,\n      ),\n      totalPayment: currencyFormatter.format(totalPayment),\n      totalInterest: currencyFormatter.format(\n        totalPayment - loanAmount,\n      ),\n    };\n  }\n}\n"
    },
    "/src/app/app.module.ts": {
      "code": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { FormComponent } from './components/form/form.component';\n\n@NgModule({\n  declarations: [AppComponent, FormComponent],\n  imports: [BrowserModule, FormsModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n"
    },
    "/src/app/components/form/form.component.css": {
      "code": "form {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n"
    },
    "/src/app/components/form/form.component.html": {
      "code": "<form\n  (ngSubmit)=\"onSubmit(mortgageForm.value)\"\n  #mortgageForm=\"ngForm\"\n  ngNativeValidate>\n  <div>\n    <label for=\"loanAmount\">Loan Amount:</label>\n    <input\n      id=\"loanAmount\"\n      type=\"number\"\n      name=\"loanAmount\"\n      [ngModel]=\"1000\"\n      min=\"1\"\n      required />\n  </div>\n  <div>\n    <label for=\"loanTerm\">Loan Term (years):</label>\n    <input\n      id=\"loanTerm\"\n      type=\"number\"\n      name=\"loanTerm\"\n      [ngModel]=\"30\"\n      min=\"1\"\n      required />\n  </div>\n  <div>\n    <label for=\"interestRate\">Interest Rate (%):</label>\n    <input\n      id=\"interestRate\"\n      type=\"number\"\n      name=\"interestRate\"\n      [ngModel]=\"3\"\n      step=\"0.01\"\n      min=\"0.01\"\n      required />\n  </div>\n  <div>\n    <button [disabled]=\"mortgageForm.invalid\" type=\"submit\">\n      Calculate\n    </button>\n  </div>\n</form>\n"
    },
    "/src/app/components/form/form.component.ts": {
      "code": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { FormState } from '../../models/form-state.model';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormComponent {\n  @Output()\n  readonly onFormSubmit = new EventEmitter<FormState>();\n\n  onSubmit(form: FormState): void {\n    this.onFormSubmit.emit(form);\n  }\n}\n"
    },
    "/src/app/models/form-state.model.ts": {
      "code": "export interface FormState {\n  loanAmount: number;\n  interestRate: number;\n  loanTerm: number;\n}\n"
    },
    "/src/app/models/mortgage.model.ts": {
      "code": "export interface Mortgage {\n  monthlyPayment: string;\n  totalPayment: string;\n  totalInterest: string;\n}\n"
    },
    "/src/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Angular</title>\n    <base href=\"/\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n  </head>\n  <body>\n    <app-root></app-root>\n  </body>\n</html>\n"
    },
    "/src/main.ts": {
      "code": "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    },
    "/tsconfig.app.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/app\",\n    \"types\": []\n  },\n  \"files\": [\"src/main.ts\"],\n  \"include\": [\"src/**/*.d.ts\"]\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"compileOnSave\": false,\n  \"compilerOptions\": {\n    \"baseUrl\": \"./\",\n    \"outDir\": \"./dist/out-tsc\",\n    \"forceConsistentCasingInFileNames\": true,\n    \"strict\": true,\n    \"noImplicitOverride\": true,\n    \"noPropertyAccessFromIndexSignature\": true,\n    \"noImplicitReturns\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"sourceMap\": true,\n    \"declaration\": false,\n    \"downlevelIteration\": true,\n    \"experimentalDecorators\": true,\n    \"moduleResolution\": \"node\",\n    \"target\": \"es2020\",\n    \"module\": \"esnext\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"]\n  },\n  \"angularCompilerOptions\": {\n    \"enableI18nLegacyMessageIdFormat\": false,\n    \"strictInjectionParameters\": true,\n    \"strictInputAccessModifiers\": true,\n    \"strictTemplates\": true\n  }\n}\n"
    },
    "/tsconfig.spec.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/spec\",\n    \"types\": [\"jasmine\"]\n  },\n  \"include\": [\"src/**/*.spec.ts\", \"src/**/*.d.ts\"]\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/app/app.component.ts",
      "/src/app/app.component.html",
      "/src/styles.css"
    ],
    "activeFile": "/src/app/app.component.ts",
    "environment": "angular-cli"
  },
  "writeup": "var Component=(()=>{var y=Object.create;var l=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var _=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),F=(t,e)=>{for(var i in e)l(t,i,{get:e[i],enumerable:!0})},h=(t,e,i,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of x(e))!w.call(t,a)&&a!==i&&l(t,a,{get:()=>e[a],enumerable:!(d=v(e,a))||d.enumerable});return t};var s=(t,e,i)=>(i=t!=null?y(j(t)):{},h(e||!t||!t.__esModule?l(i,\"default\",{value:t,enumerable:!0}):i,t)),C=t=>h(l({},\"__esModule\",{value:!0}),t);var c=_((X,u)=>{u.exports=_jsx_runtime});var D={};F(D,{default:()=>I});var n=s(c());var o=s(c());function m(t){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",strong:\"strong\",code:\"code\"},t.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsxs)(e.li,{children:[\"Basic case\",`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsxs)(e.li,{children:[\"Enter a loan amount, interest rate, and loan term for a simple mortgage scenario, and verify that the monthly mortgage payment and total amount paid are calculated correctly. For example, a 30-year mortgage on a $100,000 loan at 3% interest rate should result in a monthly payment of \",(0,o.jsx)(e.strong,{children:\"$421.60\"}),\", a total amount paid of \",(0,o.jsx)(e.strong,{children:\"$151,777.45\"}),\", and total interest of \",(0,o.jsx)(e.strong,{children:\"$51,777.45\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,o.jsxs)(e.li,{children:[\"Invalid inputs\",`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsx)(e.li,{children:\"Leave the loan amount field blank and submit. Expect to see an error message prompting the user to fill out the field.\"}),`\n`,(0,o.jsxs)(e.li,{children:[\"Try to enter text instead of numeric characters in any of the fields. \",(0,o.jsx)(e.code,{children:'<input type=\"number\">'}),\" should prevent non-numeric characters from being entered.\"]}),`\n`]}),`\n`]}),`\n`]})]})}function A(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(m,t)})):m(t)}var p=A;var r=s(c());function f(t){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[\"Use a \",(0,r.jsx)(e.code,{children:\"<label>\"}),\" for the form fields to indicate what the \",(0,r.jsx)(e.code,{children:\"<input>\"}),\" is for. You can nest \",(0,r.jsx)(e.code,{children:\"<input>\"}),\" within \",(0,r.jsx)(e.code,{children:\"<label>\"}),\" to make the association implicit.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[\"Add \",(0,r.jsx)(e.code,{children:'aria-live=\"polite\"'}),\" to the results container element to announce content changes to users of assistive technologies.\"]}),`\n`]})]})}function M(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(f,t)})):f(t)}var g=M;function b(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",h3:\"h3\",pre:\"pre\",ul:\"ul\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,n.jsx)(e.p,{children:\"This question evaluates whether you understand how to allow users to enter form inputs, validate them and perform calculations based on the inputs.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"We will divide our app into 2 components \",(0,n.jsx)(e.code,{children:\"AppComponent\"}),\" and \",(0,n.jsx)(e.code,{children:\"FormComponent\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"FormComponent\"}),\" will be responsible for accepting user input and passing it to \",(0,n.jsx)(e.code,{children:\"AppComponent\"}),\".\"]}),`\n`,(0,n.jsx)(e.h3,{children:(0,n.jsx)(e.code,{children:\"FormComponent\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"To collect user data, we use a \",(0,n.jsx)(e.code,{children:\"<form>\"}),\" element and \",(0,n.jsx)(e.code,{children:\"<input>\"}),\" fields.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"To validate input, use the built-in input type validators (\",(0,n.jsx)(e.code,{children:'<input type=\"number\">'}),\") and \",(0,n.jsx)(e.code,{children:\"NgForm\"}),\" to mark calculation button disabled if the form is invalid. You can use the required attribute in HTML to ensure that all input fields are filled out and the min attribute to ensure that input fields have a valid minimum value before the submit event callback is fired.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Use \",(0,n.jsx)(e.code,{children:\"ngModel\"}),\" in your template you can set initial values to the input fields.\"]}),`\n`,(0,n.jsx)(e.h3,{children:(0,n.jsx)(e.code,{children:\"AppComponent\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"After computing the 3 necessary amounts using the formula, use \",(0,n.jsx)(e.code,{children:\"Intl.NumberFormat()\"}),\" to format the amounts to 2 d.p. with a dollar symbol. Feel free to customize the formatting to your own locale and currency.\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"State\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"In \",(0,n.jsx)(e.code,{children:\"AppComponent\"}),\" we will store the state of the mortgage, that is updated by events from \",(0,n.jsx)(e.code,{children:\"FormComponent\"}),\".\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"Models\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-typescript\",children:`export interface FormState {\n  loanAmount: number;\n  interestRate: number;\n  loanTerm: number;\n}\n`})}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-typescript\",children:`export interface FormState {\n  loanAmount: number;\n  interestRate: number;\n  loanTerm: number;\n}\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Angular Insights\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"You can adopt a more advanced, reactive-like approach using reactive forms.\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"You might create service for maintaining the state. Inject the service in smart component and crete dumb components that only display and interact with the UI and all events from dumb components are passed to the smart one.\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"If you're confident with the latest Angular version, consider using signals standalone API.\"}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(p,{}),`\n`,(0,n.jsx)(g,{})]})}function T(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(b,t)})):b(t)}var I=T;return C(D);})();\n;return Component;"
}