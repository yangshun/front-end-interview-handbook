{
  "skeleton": "var Component=(()=>{var p=Object.create;var r=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var w=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),j=(e,t)=>{for(var a in t)r(e,a,{get:t[a],enumerable:!0})},l=(e,t,a,d)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let i of f(t))!y.call(e,i)&&i!==a&&r(e,i,{get:()=>t[i],enumerable:!(d=b(t,i))||d.enumerable});return e};var h=(e,t,a)=>(a=e!=null?p(x(e)):{},l(t||!e||!e.__esModule?r(a,\"default\",{value:e,enumerable:!0}):a,e)),_=e=>l(r({},\"__esModule\",{value:!0}),e);var s=w((k,c)=>{c.exports=_jsx_runtime});var M={};j(M,{default:()=>D});var o=h(s());var n=h(s());function m(e){let t=Object.assign({p:\"p\",a:\"a\",h2:\"h2\",ul:\"ul\",li:\"li\",img:\"img\"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[\"Build a widget that fetches birth year data from an \",(0,n.jsx)(t.a,{href:\"https://www.random.org/integers/?num=200&min=1950&max=2019&col=1&base=10&format=plain\",children:\"API\"}),\" and display the data in a histogram, bucketing by the data by decades.\"]}),`\n`,(0,n.jsx)(t.h2,{children:\"Requirements\"}),`\n`,(0,n.jsxs)(t.ul,{children:[`\n`,(0,n.jsxs)(t.li,{children:[\"We'll use \",(0,n.jsx)(t.a,{href:\"https://www.random.org/integers/?num=200&min=1950&max=2019&col=1&base=10&format=plain\",children:\"random.org's random number generator\"}),\" to simulate an API that returns 200 random data points from 1950 to 2019.\"]}),`\n`,(0,n.jsx)(t.li,{children:\"Tabulate the data by bucketing the data by decades and plotting a histogram with the x-axis being the decade buckets and y-axis being the count.\"}),`\n`,(0,n.jsx)(t.li,{children:\"The y-axis should be appropriately labeled.\"}),`\n`]}),`\n`,(0,n.jsx)(t.p,{children:\"The example below shows a potential resulting histogram but you are free to style it.\"}),`\n`,(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:\"/img/questions/birth-year-histogram/birth-year-histogram-example.png\",alt:\"Birth year histogram example\"})}),`\n`,(0,n.jsx)(t.h2,{children:\"Notes\"}),`\n`,(0,n.jsxs)(t.ul,{children:[`\n`,(0,n.jsx)(t.li,{children:\"In practice, you are usually not required to tabulate the API response data. However during interviews this is a possible task as the act of writing code to tabulate data provides good signal on coding fundamentals.\"}),`\n`]}),`\n`,(0,n.jsx)(t.h2,{children:\"Source\"}),`\n`,(0,n.jsxs)(t.p,{children:[\"This question is adapted from \",(0,n.jsx)(t.a,{href:\"https://frontendeval.com/questions/data-fetching\",children:\"FrontendEval's Data fetching and visualization question\"}),\".\"]})]})}function q(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(m,e)})):m(e)}var u=q;function g(e){return(0,o.jsx)(u,{})}function v(e={}){let{wrapper:t}=e.components||{};return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(g,e)})):g(e)}var D=v;return _(M);})();\n;return Component;",
  "solution": "var Component=(()=>{var x=Object.create;var o=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var _=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),T=(t,e)=>{for(var r in e)o(t,r,{get:e[r],enumerable:!0})},d=(t,e,r,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of w(e))!j.call(t,s)&&s!==r&&o(t,s,{get:()=>e[s],enumerable:!(c=y(e,s))||c.enumerable});return t};var l=(t,e,r)=>(r=t!=null?x(v(t)):{},d(e||!t||!t.__esModule?o(r,\"default\",{value:t,enumerable:!0}):r,t)),D=t=>d(o({},\"__esModule\",{value:!0}),t);var h=_((q,u)=>{u.exports=_jsx_runtime});var X={};T(X,{default:()=>C});var i=l(h());var n=l(h());function p(t){let e=Object.assign({h2:\"h2\",p:\"p\",ol:\"ol\",li:\"li\",h3:\"h3\",pre:\"pre\",code:\"code\",ul:\"ul\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,n.jsx)(e.p,{children:\"With most data fetching and display problems, the solution can be broken down into:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Fetching data.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Processing the data, if necessary.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Displaying the data.\"}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Fetching data\"}),`\n`,(0,n.jsx)(e.p,{children:\"The API end point returns a list of years in a text format:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`1996\n1966\n1973\n1975\n1985\n2006\n2004\n...\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"It's returned as a single string, so we need to split the data up into an array and turn them into numbers.\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Processing the data\"}),`\n`,(0,n.jsx)(e.p,{children:\"The requirement is to show a histogram of birth years grouped by decades. Now that we have a list of numbers, we need to do some processing with them to turn a year value into it's corresponding bucket. E.g. 1955 -> 1950, 1967 -> 1960.\"}),`\n`,(0,n.jsx)(e.p,{children:\"This can be done via:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Dividing by 10, removing the decimal place with \",(0,n.jsx)(e.code,{children:\"Math.floor()\"}),\", and multiplying by 10 again.\"]}),`\n`,(0,n.jsx)(e.li,{children:\"Modulo by 10 and remove the result.\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"Both approaches will correctly calculate the decade for a year.\"}),`\n`,(0,n.jsx)(e.p,{children:\"This is done for every year value and we can use an object to tally the count for each decade bucket.\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Displaying the data\"}),`\n`,(0,n.jsx)(e.p,{children:\"This is possibly the trickiest part of this problem as we have to draw bars that are proportionate to the value it's supposed to represent. The bucket with the biggest value will be the tallest bar.\"}),`\n`,(0,n.jsx)(e.p,{children:\"We can divide the histogram into three rectangles:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Y-axis: This renders the count for each bucket. Since there are 200 data points spread across 7 decades, there's an average of 30+ points for each bucket, and a scale of 10 points would give enough details to be useful. The maximum y-axis value is the maximum bucket count value rounded up to the nearest 10.\"}),`\n`,(0,n.jsx)(e.li,{children:\"X-axis: This renders the decade labels, spaced apart.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Data series: This renders the vertical bars, spaced apart. We also need to draw the left and bottom borders for the lines on the y-axis and x-axis respectively. The vertical bars are sized using a percentage height of the maximum y-axis value.\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"Note that the space between the x-axis and data series should be consistent so that the labels of the x-axis are directly aligned with the data bars.\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Race conditions\"}),`\n`,(0,n.jsx)(e.p,{children:\"As with all data fetching questions, take care of handling race conditions and handle errors if the request fails.\"})]})}function M(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(p,t)})):p(t)}var m=M;var a=l(h());function b(t){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},t.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,a.jsxs)(e.ul,{children:[`\n`,(0,a.jsx)(e.li,{children:\"Data should be fetched from an endpoint\"}),`\n`,(0,a.jsxs)(e.li,{children:[\"Data should be displayed in a histogram\",`\n`,(0,a.jsxs)(e.ul,{children:[`\n`,(0,a.jsx)(e.li,{children:\"Axes should be labeled with the correct numbers\"}),`\n`,(0,a.jsx)(e.li,{children:\"Bars should be rendered correctly\"}),`\n`]}),`\n`]}),`\n`]})]})}function k(t={}){let{wrapper:e}=t.components||{};return e?(0,a.jsx)(e,Object.assign({},t,{children:(0,a.jsx)(b,t)})):b(t)}var g=k;function f(t){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(m,{}),`\n`,(0,i.jsx)(g,{})]})}function F(t={}){let{wrapper:e}=t.components||{};return e?(0,i.jsx)(e,Object.assign({},t,{children:(0,i.jsx)(f,t)})):f(t)}var C=F;return D(X);})();\n;return Component;"
}