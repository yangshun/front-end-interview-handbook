{
  "author": "yangshun",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\n    \"/src/App.tsx\",\n    \"/src/DataTable.tsx\",\n    \"/src/styles.css\"\n  ],\n  \"activeFile\": \"/src/DataTable.tsx\",\n  \"environment\": \"create-react-app\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/data-table-iii-react-skeleton\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"devDependencies\": {\n    \"@types/react\": \"18.2.0\",\n    \"@types/react-dom\": \"18.2.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.tsx": {
      "code": "import DataTable from './DataTable';\n\nexport default function App() {\n  return (\n    <div>\n      <DataTable />\n    </div>\n  );\n}\n"
    },
    "/src/data/houses.ts": {
      "code": "const houses = [\n  {\n    id: 1,\n    street: '123 Maple St',\n    city: 'Springfield',\n    state: 'IL',\n    zip: '62704',\n    built_year: 1990,\n  },\n  {\n    id: 2,\n    street: '456 Oak St',\n    city: 'Lincoln',\n    state: 'NE',\n    zip: '68510',\n    built_year: 1985,\n  },\n  {\n    id: 3,\n    street: '789 Pine St',\n    city: 'Madison',\n    state: 'WI',\n    zip: '53703',\n    built_year: 2000,\n  },\n  {\n    id: 4,\n    street: '101 Cedar St',\n    city: 'Columbus',\n    state: 'OH',\n    zip: '43215',\n    built_year: 1978,\n  },\n  {\n    id: 5,\n    street: '102 Elm St',\n    city: 'Dover',\n    state: 'DE',\n    zip: '19901',\n    built_year: 1995,\n  },\n  {\n    id: 6,\n    street: '103 Birch St',\n    city: 'Salem',\n    state: 'OR',\n    zip: '97301',\n    built_year: 1980,\n  },\n  {\n    id: 7,\n    street: '104 Spruce St',\n    city: 'Albany',\n    state: 'NY',\n    zip: '12207',\n    built_year: 1965,\n  },\n  {\n    id: 8,\n    street: '105 Walnut St',\n    city: 'Hartford',\n    state: 'CT',\n    zip: '06103',\n    built_year: 1992,\n  },\n  {\n    id: 9,\n    street: '106 Chestnut St',\n    city: 'Raleigh',\n    state: 'NC',\n    zip: '27601',\n    built_year: 1988,\n  },\n  {\n    id: 10,\n    street: '107 Ash St',\n    city: 'Bismarck',\n    state: 'ND',\n    zip: '58501',\n    built_year: 1975,\n  },\n  {\n    id: 11,\n    street: '108 Willow St',\n    city: 'Richmond',\n    state: 'VA',\n    zip: '23219',\n    built_year: 1982,\n  },\n  {\n    id: 12,\n    street: '109 Poplar St',\n    city: 'Jackson',\n    state: 'MS',\n    zip: '39201',\n    built_year: 2005,\n  },\n  {\n    id: 13,\n    street: '110 Fir St',\n    city: 'Montgomery',\n    state: 'AL',\n    zip: '36104',\n    built_year: 1999,\n  },\n  {\n    id: 14,\n    street: '111 Cypress St',\n    city: 'Little Rock',\n    state: 'AR',\n    zip: '72201',\n    built_year: 1983,\n  },\n  {\n    id: 15,\n    street: '112 Sycamore St',\n    city: 'Tallahassee',\n    state: 'FL',\n    zip: '32301',\n    built_year: 1998,\n  },\n  {\n    id: 16,\n    street: '113 Redwood St',\n    city: 'Atlanta',\n    state: 'GA',\n    zip: '30303',\n    built_year: 2003,\n  },\n  {\n    id: 17,\n    street: '114 Palm St',\n    city: 'Boise',\n    state: 'ID',\n    zip: '83702',\n    built_year: 1989,\n  },\n  {\n    id: 18,\n    street: '115 Hickory St',\n    city: 'Frankfort',\n    state: 'KY',\n    zip: '40601',\n    built_year: 1972,\n  },\n  {\n    id: 19,\n    street: '116 Magnolia St',\n    city: 'Baton Rouge',\n    state: 'LA',\n    zip: '70801',\n    built_year: 1993,\n  },\n  {\n    id: 20,\n    street: '117 Dogwood St',\n    city: 'Annapolis',\n    state: 'MD',\n    zip: '21401',\n    built_year: 1984,\n  },\n  {\n    id: 21,\n    street: '118 Juniper St',\n    city: 'Boston',\n    state: 'MA',\n    zip: '02108',\n    built_year: 2001,\n  },\n  {\n    id: 22,\n    street: '119 Maple St',\n    city: 'Lansing',\n    state: 'MI',\n    zip: '48933',\n    built_year: 1976,\n  },\n  {\n    id: 23,\n    street: '120 Oak St',\n    city: 'St. Paul',\n    state: 'MN',\n    zip: '55101',\n    built_year: 1994,\n  },\n  {\n    id: 24,\n    street: '121 Pine St',\n    city: 'Jefferson City',\n    state: 'MO',\n    zip: '65101',\n    built_year: 1987,\n  },\n  {\n    id: 25,\n    street: '122 Cedar St',\n    city: 'Helena',\n    state: 'MT',\n    zip: '59601',\n    built_year: 1991,\n  },\n  {\n    id: 26,\n    street: '123 Elm St',\n    city: 'Concord',\n    state: 'NH',\n    zip: '03301',\n    built_year: 1971,\n  },\n  {\n    id: 27,\n    street: '124 Birch St',\n    city: 'Trenton',\n    state: 'NJ',\n    zip: '08608',\n    built_year: 1996,\n  },\n  {\n    id: 28,\n    street: '125 Spruce St',\n    city: 'Santa Fe',\n    state: 'NM',\n    zip: '87501',\n    built_year: 1981,\n  },\n  {\n    id: 29,\n    street: '126 Walnut St',\n    city: 'Albany',\n    state: 'NY',\n    zip: '12207',\n    built_year: 2006,\n  },\n  {\n    id: 30,\n    street: '127 Chestnut St',\n    city: 'Columbus',\n    state: 'OH',\n    zip: '43215',\n    built_year: 1979,\n  },\n  {\n    id: 31,\n    street: '128 Ash St',\n    city: 'Oklahoma City',\n    state: 'OK',\n    zip: '73102',\n    built_year: 1997,\n  },\n  {\n    id: 32,\n    street: '129 Willow St',\n    city: 'Salem',\n    state: 'OR',\n    zip: '97301',\n    built_year: 1986,\n  },\n  {\n    id: 33,\n    street: '130 Poplar St',\n    city: 'Harrisburg',\n    state: 'PA',\n    zip: '17101',\n    built_year: 1974,\n  },\n  {\n    id: 34,\n    street: '131 Fir St',\n    city: 'Providence',\n    state: 'RI',\n    zip: '02903',\n    built_year: 2002,\n  },\n  {\n    id: 35,\n    street: '132 Cypress St',\n    city: 'Columbia',\n    state: 'SC',\n    zip: '29201',\n    built_year: 1985,\n  },\n  {\n    id: 36,\n    street: '133 Sycamore St',\n    city: 'Pierre',\n    state: 'SD',\n    zip: '57501',\n    built_year: 1990,\n  },\n  {\n    id: 37,\n    street: '134 Redwood St',\n    city: 'Nashville',\n    state: 'TN',\n    zip: '37219',\n    built_year: 2004,\n  },\n  {\n    id: 38,\n    street: '135 Palm St',\n    city: 'Austin',\n    state: 'TX',\n    zip: '78701',\n    built_year: 1998,\n  },\n  {\n    id: 39,\n    street: '136 Hickory St',\n    city: 'Salt Lake City',\n    state: 'UT',\n    zip: '84101',\n    built_year: 1977,\n  },\n  {\n    id: 40,\n    street: '137 Magnolia St',\n    city: 'Montpelier',\n    state: 'VT',\n    zip: '05602',\n    built_year: 1992,\n  },\n  {\n    id: 41,\n    street: '138 Dogwood St',\n    city: 'Richmond',\n    state: 'VA',\n    zip: '23219',\n    built_year: 1983,\n  },\n  {\n    id: 42,\n    street: '139 Juniper St',\n    city: 'Olympia',\n    state: 'WA',\n    zip: '98501',\n    built_year: 1999,\n  },\n  {\n    id: 43,\n    street: '140 Maple St',\n    city: 'Charleston',\n    state: 'WV',\n    zip: '25301',\n    built_year: 1973,\n  },\n  {\n    id: 44,\n    street: '141 Oak St',\n    city: 'Madison',\n    state: 'WI',\n    zip: '53703',\n    built_year: 2000,\n  },\n  {\n    id: 45,\n    street: '142 Pine St',\n    city: 'Cheyenne',\n    state: 'WY',\n    zip: '82001',\n    built_year: 1981,\n  },\n  {\n    id: 46,\n    street: '143 Cedar St',\n    city: 'Juneau',\n    state: 'AK',\n    zip: '99801',\n    built_year: 1995,\n  },\n  {\n    id: 47,\n    street: '144 Elm St',\n    city: 'Phoenix',\n    state: 'AZ',\n    zip: '85001',\n    built_year: 1970,\n  },\n  {\n    id: 48,\n    street: '145 Birch St',\n    city: 'Denver',\n    state: 'CO',\n    zip: '80201',\n    built_year: 2003,\n  },\n];\n\nexport default houses;\n"
    },
    "/src/data/users.ts": {
      "code": "const users = [\n  {\n    id: 1,\n    name: 'Emily Chen',\n    age: 28,\n    occupation: 'Software Engineer',\n  },\n  {\n    id: 2,\n    name: 'Ryan Thompson',\n    age: 32,\n    occupation: 'Marketing Manager',\n  },\n  {\n    id: 3,\n    name: 'Sophia Patel',\n    age: 25,\n    occupation: 'Data Analyst',\n  },\n  {\n    id: 4,\n    name: 'Michael Lee',\n    age: 41,\n    occupation: 'CEO',\n  },\n  {\n    id: 5,\n    name: 'Olivia Brown',\n    age: 29,\n    occupation: 'Graphic Designer',\n  },\n  {\n    id: 6,\n    name: 'Alexander Hall',\n    age: 38,\n    occupation: 'Sales Representative',\n  },\n  {\n    id: 7,\n    name: 'Isabella Davis',\n    age: 26,\n    occupation: 'Teacher',\n  },\n  {\n    id: 8,\n    name: 'Ethan White',\n    age: 35,\n    occupation: 'Lawyer',\n  },\n  {\n    id: 9,\n    name: 'Lily Tran',\n    age: 30,\n    occupation: 'Nurse',\n  },\n  {\n    id: 10,\n    name: 'Julian Sanchez',\n    age: 39,\n    occupation: 'Engineer',\n  },\n  {\n    id: 11,\n    name: 'Ava Martin',\n    age: 27,\n    occupation: 'Journalist',\n  },\n  {\n    id: 12,\n    name: 'Benjamin Walker',\n    age: 42,\n    occupation: 'Doctor',\n  },\n  {\n    id: 13,\n    name: 'Charlotte Brooks',\n    age: 31,\n    occupation: 'HR Manager',\n  },\n  {\n    id: 14,\n    name: 'Gabriel Harris',\n    age: 36,\n    occupation: 'IT Consultant',\n  },\n  {\n    id: 15,\n    name: 'Hannah Taylor',\n    age: 24,\n    occupation: 'Student',\n  },\n  {\n    id: 16,\n    name: 'Jackson Brown',\n    age: 40,\n    occupation: 'Business Owner',\n  },\n  {\n    id: 17,\n    name: 'Kayla Lewis',\n    age: 33,\n    occupation: 'Event Planner',\n  },\n  {\n    id: 18,\n    name: 'Logan Mitchell',\n    age: 37,\n    occupation: 'Architect',\n  },\n  {\n    id: 19,\n    name: 'Mia Garcia',\n    age: 29,\n    occupation: 'Artist',\n  },\n  {\n    id: 20,\n    name: 'Natalie Hall',\n    age: 34,\n    occupation: 'Teacher',\n  },\n  {\n    id: 21,\n    name: 'Oliver Patel',\n    age: 38,\n    occupation: 'Software Developer',\n  },\n  {\n    id: 22,\n    name: 'Penelope Martin',\n    age: 26,\n    occupation: 'Writer',\n  },\n  {\n    id: 23,\n    name: 'Quinn Lee',\n    age: 35,\n    occupation: 'Entrepreneur',\n  },\n  {\n    id: 24,\n    name: 'Rachel Kim',\n    age: 30,\n    occupation: 'Dentist',\n  },\n  {\n    id: 25,\n    name: 'Samuel Jackson',\n    age: 42,\n    occupation: 'Lawyer',\n  },\n  {\n    id: 26,\n    name: 'Tessa Hall',\n    age: 28,\n    occupation: 'Graphic Designer',\n  },\n  {\n    id: 27,\n    name: 'Uma Patel',\n    age: 39,\n    occupation: 'Marketing Manager',\n  },\n  {\n    id: 28,\n    name: 'Vincent Brooks',\n    age: 36,\n    occupation: 'IT Consultant',\n  },\n  {\n    id: 29,\n    name: 'Walter White',\n    age: 41,\n    occupation: 'Engineer',\n  },\n  {\n    id: 30,\n    name: 'Xavier Sanchez',\n    age: 33,\n    occupation: 'Sales Representative',\n  },\n  {\n    id: 31,\n    name: 'Yvonne Martin',\n    age: 29,\n    occupation: 'Teacher',\n  },\n  {\n    id: 32,\n    name: 'Zoe Lee',\n    age: 27,\n    occupation: 'Data Analyst',\n  },\n  {\n    id: 33,\n    name: 'Abigail Brown',\n    age: 34,\n    occupation: 'Nurse',\n  },\n  {\n    id: 34,\n    name: 'Caleb Harris',\n    age: 38,\n    occupation: 'Business Owner',\n  },\n  {\n    id: 35,\n    name: 'Diana Taylor',\n    age: 31,\n    occupation: 'Event Planner',\n  },\n  {\n    id: 36,\n    name: 'Eleanor Walker',\n    age: 40,\n    occupation: 'CEO',\n  },\n];\n\nexport default users;\n"
    },
    "/src/DataTable.tsx": {
      "code": "import { useState } from 'react';\nimport users from './data/users';\n\ntype SortField = 'id' | 'name' | 'age' | 'occupation';\ntype SortDirection = 'asc' | 'desc';\ntype User = (typeof users)[number];\n\nconst columns = [\n  { label: 'ID', key: 'id' },\n  { label: 'Name', key: 'name' },\n  { label: 'Age', key: 'age' },\n  { label: 'Occupation', key: 'occupation' },\n] as const;\n\nfunction sortUsers(\n  usersList: Array<User>,\n  field: SortField,\n  direction: SortDirection,\n) {\n  const usersClone = usersList.slice();\n\n  switch (field) {\n    case 'id':\n    case 'age': {\n      return usersClone.sort((a, b) =>\n        direction === 'asc'\n          ? a[field] - b[field]\n          : b[field] - a[field],\n      );\n    }\n    case 'name':\n    case 'occupation': {\n      return usersClone.sort((a, b) =>\n        direction === 'asc'\n          ? a[field].localeCompare(b[field])\n          : b[field].localeCompare(a[field]),\n      );\n    }\n  }\n}\n\nfunction paginateUsers(\n  usersList: Array<User>,\n  page: number,\n  pageSize: number,\n) {\n  const start = (page - 1) * pageSize;\n  const end = start + pageSize;\n\n  const pageUsers = usersList.slice(start, end);\n  const totalPages = Math.ceil(usersList.length / pageSize);\n  return { pageUsers, totalPages };\n}\n\nexport default function DataTable() {\n  const [page, setPage] = useState(1);\n  const [pageSize, setPageSize] = useState(5);\n\n  const [sortField, setSortField] =\n    useState<SortField>('id');\n  const [sortDirection, setSortDirection] =\n    useState<SortDirection>('asc');\n\n  const sortedUsers = sortUsers(\n    users,\n    sortField,\n    sortDirection,\n  );\n  const { totalPages, pageUsers } = paginateUsers(\n    sortedUsers,\n    page,\n    pageSize,\n  );\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            {columns.map(({ label, key }) => (\n              <th key={key}>\n                <button\n                  onClick={() => {\n                    if (sortField !== key) {\n                      setSortField(key);\n                      setSortDirection('asc');\n                    } else {\n                      setSortDirection(\n                        sortDirection === 'asc'\n                          ? 'desc'\n                          : 'asc',\n                      );\n                    }\n                    setPage(1);\n                  }}>\n                  {label}\n                </button>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {pageUsers.map(\n            ({ id, name, age, occupation }) => (\n              <tr key={id}>\n                <td>{id}</td>\n                <td>{name}</td>\n                <td>{age}</td>\n                <td>{occupation}</td>\n              </tr>\n            ),\n          )}\n        </tbody>\n      </table>\n      <hr />\n      <div className=\"pagination\">\n        <select\n          aria-label=\"Page size\"\n          onChange={(event) => {\n            setPageSize(Number(event.target.value));\n            setPage(1);\n          }}>\n          {[5, 10, 20].map((size) => (\n            <option key={size} value={size}>\n              Show {size}\n            </option>\n          ))}\n        </select>\n        <div className=\"pages\">\n          <button\n            disabled={page === 1}\n            onClick={() => {\n              setPage(page - 1);\n            }}>\n            Prev\n          </button>\n          <span aria-label=\"Page number\">\n            Page {page} of {totalPages}\n          </span>\n          <button\n            disabled={page === totalPages}\n            onClick={() => {\n              setPage(page + 1);\n            }}>\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
    },
    "/src/index.tsx": {
      "code": "import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root')!);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: 14px;\n}\n\ntd,\nth {\n  padding: 4px;\n  border-bottom: 1px solid #ddd;\n  text-align: start;\n}\n\nth {\n  vertical-align: top;\n}\n\nth button {\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n}\n\n.pagination {\n  display: flex;\n  font-size: 14px;\n  gap: 12px;\n}\n\n.pages {\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.tsx",
      "/src/DataTable.tsx",
      "/src/styles.css"
    ],
    "activeFile": "/src/DataTable.tsx",
    "environment": "create-react-app"
  }
}