{
  "author": "yangshun",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/image-carousel-iii-react-skeleton\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"devDependencies\": {\n    \"@types/react\": \"18.2.0\",\n    \"@types/react-dom\": \"18.2.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.tsx": {
      "code": "import ImageCarousel from './ImageCarousel';\n\nconst images = [\n  {\n    src: 'https://picsum.photos/id/600/600/400',\n    alt: 'Forest',\n  },\n  {\n    src: 'https://picsum.photos/id/100/600/400',\n    alt: 'Beach',\n  },\n  {\n    src: 'https://picsum.photos/id/200/600/400',\n    alt: 'Yak',\n  },\n  {\n    src: 'https://picsum.photos/id/300/600/400',\n    alt: 'Hay',\n  },\n  {\n    src: 'https://picsum.photos/id/400/600/400',\n    alt: 'Plants',\n  },\n  {\n    src: 'https://picsum.photos/id/500/600/400',\n    alt: 'Building',\n  },\n];\n\nexport default function App() {\n  return (\n    <div className=\"wrapper\">\n      <ImageCarousel images={images} />\n    </div>\n  );\n}\n"
    },
    "/src/ImageCarousel.tsx": {
      "code": "import { useState } from 'react';\n\nfunction clsx(...classnames: Array<any>) {\n  return classnames.filter(Boolean).join(' ');\n}\n\nexport default function ImageCarousel({\n  images,\n}: Readonly<{\n  images: ReadonlyArray<{ src: string; alt: string }>;\n}>) {\n  const [currIndex, setCurrIndex] = useState(0);\n  const currImage = images[currIndex];\n\n  return (\n    <div className=\"image-carousel\">\n      <img\n        alt={currImage.alt}\n        src={currImage.src}\n        key={currImage.src}\n        className=\"image-carousel__image\"\n      />\n      <button\n        aria-label=\"Previous image\"\n        className=\"image-carousel__button image-carousel__button--prev\"\n        onClick={() => {\n          const nextIndex =\n            (currIndex - 1 + images.length) % images.length;\n          setCurrIndex(nextIndex);\n        }}>\n        &#10094;\n      </button>\n      <div className=\"image-carousel__pages\">\n        {images.map(({ alt, src }, index) => (\n          <button\n            className={clsx(\n              'image-carousel__pages__button',\n              index === currIndex &&\n                'image-carousel__pages__button--active',\n            )}\n            aria-label={`Navigate to ${alt}`}\n            key={src}\n            onClick={() => {\n              setCurrIndex(index);\n            }}\n          />\n        ))}\n      </div>\n      <button\n        aria-label=\"Next image\"\n        className=\"image-carousel__button image-carousel__button--next\"\n        onClick={() => {\n          const nextIndex = (currIndex + 1) % images.length;\n          setCurrIndex(nextIndex);\n        }}>\n        &#10095;\n      </button>\n    </div>\n  );\n}\n"
    },
    "/src/index.tsx": {
      "code": "import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root')!);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "* {\n  box-sizing: border-box;\n  margin: 0;\n}\n\nbody {\n  font-family: sans-serif;\n}\n\n.wrapper {\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n}\n\n.image-carousel {\n  background-color: #000;\n  height: 400px;\n  overflow: hidden;\n  width: min(600px, 100vw);\n  position: relative;\n}\n\n.image-carousel__image {\n  object-fit: contain;\n  position: absolute;\n  inset: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.image-carousel__button {\n  --size: 40px;\n  height: var(--size);\n  width: var(--size);\n\n  background-color: #0008;\n  border-radius: 100%;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n.image-carousel__button:hover {\n  background-color: #000b;\n}\n\n.image-carousel__button--prev {\n  left: 16px;\n}\n\n.image-carousel__button--next {\n  right: 16px;\n}\n\n.image-carousel__pages {\n  background-color: #0008;\n  border-radius: 12px;\n  display: inline-flex;\n  gap: 8px;\n  padding: 8px;\n\n  position: absolute;\n  bottom: 24px;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n.image-carousel__pages__button {\n  --size: 8px;\n  height: var(--size);\n  width: var(--size);\n\n  border: none;\n  border-radius: 100%;\n  background-color: #666;\n  cursor: pointer;\n  display: inline-block;\n  flex-shrink: 0;\n  padding: 0;\n  transition: background-color 0.3s ease-in-out;\n}\n\n.image-carousel__pages__button:hover {\n  background-color: #ccc;\n}\n\n.image-carousel__pages__button--active {\n  background-color: #fff;\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"include\": [\"**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"esnext\"],\n    \"jsx\": \"react-jsx\"\n  }\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.tsx",
      "/src/ImageCarousel.tsx",
      "/src/styles.css"
    ],
    "activeFile": "/src/ImageCarousel.tsx",
    "environment": "create-react-app"
  },
  "writeup": "var Component=(()=>{var p=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var w=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),q=(t,e)=>{for(var o in e)s(t,o,{get:e[o],enumerable:!0})},u=(t,e,o,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of b(e))!y.call(t,i)&&i!==o&&s(t,i,{get:()=>e[i],enumerable:!(l=f(e,i))||l.enumerable});return t};var h=(t,e,o)=>(o=t!=null?p(x(t)):{},u(e||!t||!t.__esModule?s(o,\"default\",{value:t,enumerable:!0}):o,t)),j=t=>u(s({},\"__esModule\",{value:!0}),t);var r=w((k,c)=>{c.exports=_jsx_runtime});var M={};q(M,{default:()=>I});var a=h(r());var n=h(r());function m(t){let e=Object.assign({p:\"p\",strong:\"strong\",a:\"a\",h2:\"h2\",ul:\"ul\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Note:\"}),\" This is a follow up to the \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/image-carousel\",children:\"Image Carousel\"}),\" question, you should complete that question first before attempting this question.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Build an image carousel that displays a sequence of images, smoothly transitioning when navigating between images.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The main difference between this question and \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/image-carousel-ii\",children:\"Image Carousel II\"}),\" is that there should only be a \",(0,n.jsx)(e.strong,{children:\"maximum of two image elements\"}),\" in the DOM at any one time. This improves performance because the number of image elements present in the DOM is no longer proportional to the number of images, and the image carousel does not unnecessarily load images that aren't shown. However, this approach comes at the cost of higher implementation complexity.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"All requirements of \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/image-carousel\",children:\"Image Carousel\"}),\" question should be supported.\"]}),`\n`,(0,n.jsx)(e.li,{children:\"Upon clicking the Prev/Next buttons, the current image should smoothly translate out while the next image enters. Translation direction is left/right respectively.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Transitions when clicking on the page buttons is optional but highly encouraged. Aim to reuse the transitioning code for the Prev/Next buttons.\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"There should only be a \",(0,n.jsx)(e.strong,{children:\"maximum of two image elements\"}),\" in the DOM at any one time.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:'Click on the \"See what you are building\" button to see a preview of the result.'}),`\n`,(0,n.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The skeleton code uses the solution of \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/image-carousel\",children:\"Image Carousel\"}),\", but you are free to use your own solution as a starting point.\"]})]})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(m,t)})):m(t)}var d=C;function g(t){return(0,a.jsx)(d,{})}function D(t={}){let{wrapper:e}=t.components||{};return e?(0,a.jsx)(e,Object.assign({},t,{children:(0,a.jsx)(g,t)})):g(t)}var I=D;return j(M);})();\n;return Component;"
}