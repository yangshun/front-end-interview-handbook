{
  "skeleton": "var Component=(()=>{var m=Object.create;var o=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var y=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),v=(n,e)=>{for(var r in e)o(n,r,{get:e[r],enumerable:!0})},c=(n,e,r,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of g(e))!x.call(n,i)&&i!==r&&o(n,i,{get:()=>e[i],enumerable:!(s=w(e,i))||s.enumerable});return n};var d=(n,e,r)=>(r=n!=null?m(b(n)):{},c(e||!n||!n.__esModule?o(r,\"default\",{value:n,enumerable:!0}):r,n)),A=n=>c(o({},\"__esModule\",{value:!0}),n);var l=y((R,h)=>{h.exports=_jsx_runtime});var E={};v(E,{default:()=>q});var a=d(l());var t=d(l());function p(n){let e=Object.assign({p:\"p\",strong:\"strong\",a:\"a\",blockquote:\"blockquote\",em:\"em\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:\"Note:\"}),\" This is a follow up to the \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/file-explorer\",children:\"File Explorer\"}),\" question, you should complete that question first before attempting this question.\"]}),`\n`,(0,t.jsxs)(e.blockquote,{children:[`\n`,(0,t.jsx)(e.p,{children:\"A tree view widget presents a hierarchical list. Any item in the hierarchy may have child items, and items that have children may be expanded or collapsed to show or hide the children. For example, in a file system navigator that uses a tree view to display folders and files, an item representing a folder can be expanded to reveal the contents of the folder, which may be files, folders, or both.\"}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.em,{children:[\"Source: \",(0,t.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/treeview/\",children:\"Tree View Pattern\"})]})}),`\n`,(0,t.jsxs)(e.p,{children:[\"In \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/file-explorer\",children:\"File Explorer\"}),\", we built a functional file explorer component that displays an array of file objects in a hierarchical tree format. However, building good UI components goes beyond functionality and we have to ensure our components have great accessibility as well by adding the right ARIA roles, states, and properties to the DOM elements.\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The ARIA Authoring Practices Guide has a \",(0,t.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/treeview/\",children:\"long list of guidelines for the ARIA roles, states, and properties to add to the various elements of a Tree View pattern\"}),\".\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Implement the following ARIA guidelines for this question:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"All tree nodes are contained in or owned by an element with role \",(0,t.jsx)(e.code,{children:\"tree\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"The element with role \",(0,t.jsx)(e.code,{children:\"tree\"}),\" has either a visible label referenced by \",(0,t.jsx)(e.code,{children:\"aria-labelledby\"}),\" or a value specified for \",(0,t.jsx)(e.code,{children:\"aria-label\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each element serving as a tree node has role \",(0,t.jsx)(e.code,{children:\"treeitem\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each parent node contains or owns an element with role \",(0,t.jsx)(e.code,{children:\"group\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each child node is contained in or owned by an element with role \",(0,t.jsx)(e.code,{children:\"group\"}),\" that is contained in or owned by the node that serves as the parent of that child.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each element with role \",(0,t.jsx)(e.code,{children:\"treeitem\"}),\" that serves as a parent node has \",(0,t.jsx)(e.code,{children:\"aria-expanded\"}),\" set to \",(0,t.jsx)(e.code,{children:\"false\"}),\" when the node is in a closed state and set to \",(0,t.jsx)(e.code,{children:\"true\"}),\" when the node is in an open state. End nodes do not have the \",(0,t.jsx)(e.code,{children:\"aria-expanded\"}),\" attribute because, if they were to have it, they would be incorrectly described to assistive technologies as parent nodes.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each \",(0,t.jsx)(e.code,{children:\"treeitem\"}),\" element has a \",(0,t.jsx)(e.code,{children:\"aria-level\"}),\", \",(0,t.jsx)(e.code,{children:\"aria-setsize\"}),\", and \",(0,t.jsx)(e.code,{children:\"aria-posinset\"}),\" specified.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The skeleton code uses the solution of \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/file-explorer\",children:\"File Explorer\"}),\", but you are free to use your own solution as a starting point.\"]})]})}function I(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(p,n)})):p(n)}var u=I;function f(n){return(0,a.jsx)(u,{})}function j(n={}){let{wrapper:e}=n.components||{};return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(f,n)})):f(n)}var q=j;return A(E);})();\n;return Component;",
  "solution": "var Component=(()=>{var m=Object.create;var r=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var g=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),j=(i,e)=>{for(var l in e)r(i,l,{get:e[l],enumerable:!0})},s=(i,e,l,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of f(e))!y.call(i,a)&&a!==l&&r(i,a,{get:()=>e[a],enumerable:!(d=x(e,a))||d.enumerable});return i};var c=(i,e,l)=>(l=i!=null?m(v(i)):{},s(e||!i||!i.__esModule?r(l,\"default\",{value:i,enumerable:!0}):l,i)),F=i=>s(r({},\"__esModule\",{value:!0}),i);var o=g((O,h)=>{h.exports=_jsx_runtime});var z={};j(z,{default:()=>M});var n=c(o());var t=c(o());function u(i){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\",p:\"p\",pre:\"pre\",code:\"code\"},i.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Inspect the rendered HTML to see that the right attributes were added to the DOM.\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"You can go a step further by using accessibility testing tools like \",(0,t.jsx)(e.a,{href:\"https://www.deque.com/axe/\",children:\"axe\"}),\" to validate the a11y of the elements.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:\"The resulting DOM should be similar to:\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-html\",children:`<div aria-label=\"Files Explorer\" role=\"tree\">\n  <ul role=\"group\">\n    <li\n      aria-expanded=\"true\"\n      aria-labelledby=\":r1:\"\n      aria-level=\"1\"\n      aria-posinset=\"1\"\n      aria-setsize=\"3\"\n      role=\"treeitem\">\n      <button><span id=\":r1:\">Documents</span> [-]</button>\n      <ul role=\"group\">\n        <li\n          aria-labelledby=\":rb:\"\n          aria-level=\"2\"\n          aria-posinset=\"1\"\n          aria-setsize=\"2\"\n          role=\"treeitem\">\n          <button>\n            <span id=\":rb:\">Powerpoint.ppt</span>\n          </button>\n        </li>\n        <li\n          aria-labelledby=\":rd:\"\n          aria-level=\"2\"\n          aria-posinset=\"2\"\n          aria-setsize=\"2\"\n          role=\"treeitem\">\n          <button>\n            <span id=\":rd:\">Word.doc</span>\n          </button>\n        </li>\n      </ul>\n    </li>\n    <li\n      aria-expanded=\"true\"\n      aria-labelledby=\":r3:\"\n      aria-level=\"1\"\n      aria-posinset=\"2\"\n      aria-setsize=\"3\"\n      role=\"treeitem\">\n      <button><span id=\":r3:\">Downloads</span> [-]</button>\n      <ul class=\"file-list\" role=\"group\">\n        <li\n          aria-expanded=\"true\"\n          aria-labelledby=\":r7:\"\n          aria-level=\"2\"\n          aria-posinset=\"1\"\n          aria-setsize=\"2\"\n          role=\"treeitem\">\n          <button><span id=\":r7:\">Misc</span> [-]</button>\n          <ul class=\"file-list\" role=\"group\">\n            <li\n              aria-labelledby=\":rf:\"\n              aria-level=\"3\"\n              aria-posinset=\"1\"\n              aria-setsize=\"2\"\n              role=\"treeitem\">\n              <button>\n                <span id=\":rf:\">bar.txt</span>\n              </button>\n            </li>\n            <li\n              aria-labelledby=\":rh:\"\n              aria-level=\"3\"\n              aria-posinset=\"2\"\n              aria-setsize=\"2\"\n              role=\"treeitem\">\n              <button>\n                <span id=\":rh:\">foo.txt</span>\n              </button>\n            </li>\n          </ul>\n        </li>\n        <li\n          aria-labelledby=\":r9:\"\n          aria-level=\"2\"\n          aria-posinset=\"2\"\n          aria-setsize=\"2\"\n          role=\"treeitem\">\n          <button>\n            <span id=\":r9:\">unnamed.txt</span>\n          </button>\n        </li>\n      </ul>\n    </li>\n    <li\n      aria-labelledby=\":r5:\"\n      aria-level=\"1\"\n      aria-posinset=\"3\"\n      aria-setsize=\"3\"\n      role=\"treeitem\">\n      <button>\n        <span id=\":r5:\">README.md</span>\n      </button>\n    </li>\n  </ul>\n</div>\n`})})]})}function w(i={}){let{wrapper:e}=i.components||{};return e?(0,t.jsx)(e,Object.assign({},i,{children:(0,t.jsx)(u,i)})):u(i)}var p=w;function b(i){let e=Object.assign({p:\"p\",a:\"a\",h2:\"h2\",code:\"code\",ul:\"ul\",li:\"li\"},i.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"We'll build on top of \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/file-explorer/react/solution\",children:\"File Explorer's solution\"}),\".\"]}),`\n`,(0,n.jsxs)(e.h2,{children:[(0,n.jsx)(e.code,{children:\"FileExplorer\"}),\" component\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Add an \",(0,n.jsx)(e.code,{children:\"aria-label\"}),\" to the \",(0,n.jsx)(e.code,{children:\"<div>\"}),\". It can be any descriptive text. VS Code uses \",(0,n.jsx)(e.code,{children:'aria-label=\"Files Explorer\"'}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Add \",(0,n.jsx)(e.code,{children:'role=\"tree\"'}),\" to the \",(0,n.jsx)(e.code,{children:\"<div>\"}),\".\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.h2,{children:[(0,n.jsx)(e.code,{children:\"FileObject\"}),\" component\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"role\"}),\": Add \",(0,n.jsx)(e.code,{children:'role=\"treeitem\"'}),\" to the \",(0,n.jsx)(e.code,{children:\"<li>\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"aria-expanded\"}),\": The \",(0,n.jsx)(e.code,{children:\"aria-expanded\"}),\" value can be determined by the value of the \",(0,n.jsx)(e.code,{children:\"expanded\"}),\" state. Note that \",(0,n.jsx)(e.code,{children:\"aria-expanded\"}),\" should only be added for directories.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"aria-level\"}),\": Since the component already accept a \",(0,n.jsx)(e.code,{children:\"level\"}),\" prop, it can be directly used as the \",(0,n.jsx)(e.code,{children:\"aria-level\"}),\" value.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"aria-setsize\"}),\": This value has to be passed in from the \",(0,n.jsx)(e.code,{children:\"FileList\"}),\" component. It is the total number of items in the current directory level.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"aria-posinset\"}),\": This value has to be passed in from the \",(0,n.jsx)(e.code,{children:\"FileList\"}),\" component. It is a one-based index for the position in the current directory level.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Lastly, the \",(0,n.jsx)(e.code,{children:\"<li>\"}),\" has to be labelled. You can either use \",(0,n.jsx)(e.code,{children:\"aria-label\"}),\" with the item name as the value or use \",(0,n.jsx)(e.code,{children:\"aria-labelledby\"}),\" associated with the \",(0,n.jsx)(e.code,{children:\"id\"}),\" of the element containing the file name. Since there can be multiple \",(0,n.jsx)(e.code,{children:\"FileObject\"}),\" component instances on the page and we cannot guarantee that the file/directory names will be globally unique, each \",(0,n.jsx)(e.code,{children:\"FileObject\"}),\" instance needs to have a unique identifier.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"useId\"}),\" React hook can be used to generate unique ID for each \",(0,n.jsx)(e.code,{children:\"FileObject\"}),\" instance. The \",(0,n.jsx)(e.code,{children:\"id\"}),\" is added to the \",(0,n.jsx)(e.code,{children:\"<span>\"}),\" around the object name.\"]}),`\n`,(0,n.jsx)(p,{})]})}function _(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,Object.assign({},i,{children:(0,n.jsx)(b,i)})):b(i)}var M=_;return F(z);})();\n;return Component;"
}