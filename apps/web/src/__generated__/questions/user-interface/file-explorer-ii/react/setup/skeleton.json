{
  "author": "yangshun",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\n    \"/src/FileExplorer.tsx\",\n    \"/src/FileList.tsx\",\n    \"/src/styles.css\"\n  ],\n  \"activeFile\": \"/src/FileExplorer.tsx\",\n  \"environment\": \"create-react-app\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/file-explorer-ii-react-skeleton\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"devDependencies\": {\n    \"@types/react\": \"18.2.0\",\n    \"@types/react-dom\": \"18.2.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.tsx": {
      "code": "import FileExplorer from './FileExplorer';\n\nexport default function App() {\n  const data = [\n    {\n      id: 1,\n      name: 'README.md',\n    },\n    {\n      id: 2,\n      name: 'Documents',\n      children: [\n        {\n          id: 3,\n          name: 'Word.doc',\n        },\n        {\n          id: 4,\n          name: 'Powerpoint.ppt',\n        },\n      ],\n    },\n    {\n      id: 5,\n      name: 'Downloads',\n      children: [\n        {\n          id: 6,\n          name: 'unnamed.txt',\n        },\n        {\n          id: 7,\n          name: 'Misc',\n          children: [\n            {\n              id: 8,\n              name: 'foo.txt',\n            },\n            {\n              id: 9,\n              name: 'bar.txt',\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  return <FileExplorer data={data} />;\n}\n"
    },
    "/src/FileExplorer.tsx": {
      "code": "import { useState } from 'react';\nimport FileList from './FileList';\n\nexport type FileData = Readonly<{\n  id: number;\n  name: string;\n  children?: ReadonlyArray<FileData>;\n}>;\n\nexport default function FileExplorer({\n  data,\n}: Readonly<{ data: ReadonlyArray<FileData> }>) {\n  return (\n    <div>\n      <FileList fileList={data} level={1} />\n    </div>\n  );\n}\n\nexport function FileObject({\n  file,\n  level,\n}: Readonly<{ file: FileData; level: number }>) {\n  const [expanded, setExpanded] = useState(false);\n  const { children: fileChildren, name: fileName } = file;\n  // If the children field is present, the item is a directory.\n  const isDirectory = Boolean(fileChildren);\n\n  return (\n    <li className=\"file-item\">\n      <button\n        className={[\n          'file-item-button',\n          isDirectory && 'file-item-button--directory',\n        ]\n          .filter(Boolean)\n          .join(' ')}\n        onClick={() => {\n          if (!isDirectory) {\n            return;\n          }\n\n          setExpanded(!expanded);\n        }}>\n        <span>{fileName}</span>{' '}\n        {isDirectory && <>[{expanded ? '-' : '+'}]</>}\n      </button>\n      {fileChildren &&\n        fileChildren.length > 0 &&\n        expanded && (\n          <FileList\n            fileList={fileChildren}\n            level={level + 1}\n          />\n        )}\n    </li>\n  );\n}\n"
    },
    "/src/FileList.tsx": {
      "code": "import { FileObject, FileData } from './FileExplorer';\n\nexport default function FileList({\n  fileList,\n  level,\n}: Readonly<{\n  fileList: ReadonlyArray<FileData>;\n  level: number;\n}>) {\n  const directories = fileList.filter(\n    (fileItem) => fileItem.children,\n  );\n  directories.sort((a, b) => a.name.localeCompare(b.name));\n\n  const nonDirectories = fileList.filter(\n    (fileItem) => !fileItem.children,\n  );\n  nonDirectories.sort((a, b) =>\n    a.name.localeCompare(b.name),\n  );\n\n  const items = [...directories, ...nonDirectories];\n\n  return (\n    <ul className=\"file-list\">\n      {items.map((file) => (\n        <FileObject\n          key={file.id}\n          file={file}\n          level={level}\n        />\n      ))}\n    </ul>\n  );\n}\n"
    },
    "/src/index.tsx": {
      "code": "import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root')!);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.file-list {\n  list-style: none;\n  margin: 0;\n  padding-left: 16px;\n}\n\n.file-item {\n  padding: 0;\n}\n\n.file-item-button {\n  background-color: transparent;\n  border: none;\n  line-height: 1.5;\n  cursor: pointer;\n  font-size: 16px;\n  padding: 0;\n}\n\n.file-item-button--directory {\n  display: flex;\n  gap: 4px;\n  font-weight: bold;\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"jsx\": \"react-jsx\",\n    \"target\": \"es2020\"\n  }\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/FileExplorer.tsx",
      "/src/FileList.tsx",
      "/src/styles.css"
    ],
    "activeFile": "/src/FileExplorer.tsx",
    "environment": "create-react-app"
  }
}