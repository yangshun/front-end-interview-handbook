{
  "author": "yangshun",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/file-explorer-ii-react-skeleton\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"devDependencies\": {\n    \"@types/react\": \"18.2.0\",\n    \"@types/react-dom\": \"18.2.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.tsx": {
      "code": "import FileExplorer from './FileExplorer';\n\nexport default function App() {\n  const data = [\n    {\n      id: 1,\n      name: 'README.md',\n    },\n    {\n      id: 2,\n      name: 'Documents',\n      children: [\n        {\n          id: 3,\n          name: 'Word.doc',\n        },\n        {\n          id: 4,\n          name: 'Powerpoint.ppt',\n        },\n      ],\n    },\n    {\n      id: 5,\n      name: 'Downloads',\n      children: [\n        {\n          id: 6,\n          name: 'unnamed.txt',\n        },\n        {\n          id: 7,\n          name: 'Misc',\n          children: [\n            {\n              id: 8,\n              name: 'foo.txt',\n            },\n            {\n              id: 9,\n              name: 'bar.txt',\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  return <FileExplorer data={data} />;\n}\n"
    },
    "/src/FileExplorer.tsx": {
      "code": "import { useState } from 'react';\nimport FileList from './FileList';\n\nexport type FileData = Readonly<{\n  id: number;\n  name: string;\n  children?: ReadonlyArray<FileData>;\n}>;\n\nexport default function FileExplorer({\n  data,\n}: Readonly<{ data: ReadonlyArray<FileData> }>) {\n  return (\n    <div>\n      <FileList fileList={data} level={1} />\n    </div>\n  );\n}\n\nexport function FileObject({\n  file,\n  level,\n}: Readonly<{ file: FileData; level: number }>) {\n  const [expanded, setExpanded] = useState(false);\n  const { children: fileChildren, name: fileName } = file;\n  // If the children field is present, the item is a directory.\n  const isDirectory = Boolean(fileChildren);\n\n  return (\n    <li className=\"file-item\">\n      <button\n        className={[\n          'file-item-button',\n          isDirectory && 'file-item-button--directory',\n        ]\n          .filter(Boolean)\n          .join(' ')}\n        onClick={() => {\n          if (!isDirectory) {\n            return;\n          }\n\n          setExpanded(!expanded);\n        }}>\n        <span>{fileName}</span>{' '}\n        {isDirectory && <>[{expanded ? '-' : '+'}]</>}\n      </button>\n      {fileChildren &&\n        fileChildren.length > 0 &&\n        expanded && (\n          <FileList\n            fileList={fileChildren}\n            level={level + 1}\n          />\n        )}\n    </li>\n  );\n}\n"
    },
    "/src/FileList.tsx": {
      "code": "import { FileObject, FileData } from './FileExplorer';\n\nexport default function FileList({\n  fileList,\n  level,\n}: Readonly<{\n  fileList: ReadonlyArray<FileData>;\n  level: number;\n}>) {\n  const directories = fileList.filter(\n    (fileItem) => fileItem.children,\n  );\n  directories.sort((a, b) => a.name.localeCompare(b.name));\n\n  const nonDirectories = fileList.filter(\n    (fileItem) => !fileItem.children,\n  );\n  nonDirectories.sort((a, b) =>\n    a.name.localeCompare(b.name),\n  );\n\n  const items = [...directories, ...nonDirectories];\n\n  return (\n    <ul className=\"file-list\">\n      {items.map((file) => (\n        <FileObject\n          key={file.id}\n          file={file}\n          level={level}\n        />\n      ))}\n    </ul>\n  );\n}\n"
    },
    "/src/index.tsx": {
      "code": "import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root')!);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.file-list {\n  list-style: none;\n  margin: 0;\n  padding-left: 16px;\n}\n\n.file-item {\n  padding: 0;\n}\n\n.file-item-button {\n  background-color: transparent;\n  border: none;\n  line-height: 1.5;\n  cursor: pointer;\n  font-size: 16px;\n  padding: 0;\n}\n\n.file-item-button--directory {\n  display: flex;\n  gap: 4px;\n  font-weight: bold;\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"esnext\"],\n    \"jsx\": \"react-jsx\"\n  }\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/FileExplorer.tsx",
      "/src/FileList.tsx",
      "/src/styles.css"
    ],
    "activeFile": "/src/FileExplorer.tsx",
    "environment": "create-react-app"
  },
  "writeup": "var Component=(()=>{var f=Object.create;var o=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var y=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),v=(n,e)=>{for(var i in e)o(n,i,{get:e[i],enumerable:!0})},c=(n,e,i,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of g(e))!x.call(n,r)&&r!==i&&o(n,r,{get:()=>e[r],enumerable:!(s=w(e,r))||s.enumerable});return n};var d=(n,e,i)=>(i=n!=null?f(b(n)):{},c(e||!n||!n.__esModule?o(i,\"default\",{value:n,enumerable:!0}):i,n)),A=n=>c(o({},\"__esModule\",{value:!0}),n);var l=y((R,h)=>{h.exports=_jsx_runtime});var E={};v(E,{default:()=>q});var a=d(l());var t=d(l());function p(n){let e=Object.assign({p:\"p\",strong:\"strong\",a:\"a\",blockquote:\"blockquote\",em:\"em\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:\"Note:\"}),\" This is a follow up to the \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/file-explorer\",children:\"File Explorer\"}),\" question, you should complete that question first before attempting this question.\"]}),`\n`,(0,t.jsxs)(e.blockquote,{children:[`\n`,(0,t.jsx)(e.p,{children:\"A tree view widget presents a hierarchical list. Any item in the hierarchy may have child items, and items that have children may be expanded or collapsed to show or hide the children. For example, in a file system navigator that uses a tree view to display folders and files, an item representing a folder can be expanded to reveal the contents of the folder, which may be files, folders, or both.\"}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.em,{children:[\"Source: \",(0,t.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/treeview/\",children:\"Tree View Pattern\"})]})}),`\n`,(0,t.jsxs)(e.p,{children:[\"In \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/file-explorer\",children:\"File Explorer\"}),\", we built a functional file explorer component that displays an array of file objects in a hierarchical tree format. However, building good UI components goes beyond functionality and we have to ensure our components have great accessibility as well by adding the right ARIA roles, states, and properties to the DOM elements.\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The ARIA Authoring Practices Guide has a \",(0,t.jsx)(e.a,{href:\"https://www.w3.org/WAI/ARIA/apg/patterns/treeview/\",children:\"long list of guidelines for the ARIA roles, states, and properties to add to the various elements of a Tree View pattern\"}),\".\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Implement the following ARIA guidelines for this question:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"All tree nodes are contained in or owned by an element with role \",(0,t.jsx)(e.code,{children:\"tree\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"The element with role \",(0,t.jsx)(e.code,{children:\"tree\"}),\" has either a visible label referenced by \",(0,t.jsx)(e.code,{children:\"aria-labelledby\"}),\" or a value specified for \",(0,t.jsx)(e.code,{children:\"aria-label\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each element serving as a tree node has role \",(0,t.jsx)(e.code,{children:\"treeitem\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each parent node contains or owns an element with role \",(0,t.jsx)(e.code,{children:\"group\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each child node is contained in or owned by an element with role \",(0,t.jsx)(e.code,{children:\"group\"}),\" that is contained in or owned by the node that serves as the parent of that child.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each element with role \",(0,t.jsx)(e.code,{children:\"treeitem\"}),\" that serves as a parent node has \",(0,t.jsx)(e.code,{children:\"aria-expanded\"}),\" set to \",(0,t.jsx)(e.code,{children:\"false\"}),\" when the node is in a closed state and set to \",(0,t.jsx)(e.code,{children:\"true\"}),\" when the node is in an open state. End nodes do not have the \",(0,t.jsx)(e.code,{children:\"aria-expanded\"}),\" attribute because, if they were to have it, they would be incorrectly described to assistive technologies as parent nodes.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Each \",(0,t.jsx)(e.code,{children:\"treeitem\"}),\" element has a \",(0,t.jsx)(e.code,{children:\"aria-level\"}),\", \",(0,t.jsx)(e.code,{children:\"aria-setsize\"}),\", and \",(0,t.jsx)(e.code,{children:\"aria-posinset\"}),\" specified.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The skeleton code uses the solution of \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/file-explorer\",children:\"File Explorer\"}),\", but you are free to use your own solution as a starting point.\"]})]})}function I(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(p,n)})):p(n)}var u=I;function m(n){return(0,a.jsx)(u,{})}function j(n={}){let{wrapper:e}=n.components||{};return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(m,n)})):m(n)}var q=j;return A(E);})();\n;return Component;"
}