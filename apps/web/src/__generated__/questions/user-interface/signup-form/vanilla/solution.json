{
  "author": "yangshun",
  "files": {
    "/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <form>\n      <div>\n        <label for=\"username-input\">Username</label>\n        <input\n          id=\"username-input\"\n          name=\"username\"\n          required\n          type=\"text\"\n          pattern=\"^[a-zA-Z0-9]+$\"\n          minlength=\"4\" />\n      </div>\n      <div>\n        <label for=\"email-input\">Email</label>\n        <input\n          id=\"email-input\"\n          name=\"email\"\n          required\n          type=\"email\" />\n      </div>\n      <div>\n        <label for=\"password-input\">Password</label>\n        <input\n          id=\"password-input\"\n          name=\"password\"\n          required\n          type=\"password\"\n          minlength=\"6\" />\n      </div>\n      <div>\n        <label for=\"password-confirm-input\">\n          Confirm Password\n        </label>\n        <input\n          id=\"password-confirm-input\"\n          name=\"password_confirm\"\n          required\n          type=\"password\"\n          minlength=\"6\"\n          aria-describedby=\"password-mismatch-error\" />\n        <div\n          class=\"error hidden\"\n          id=\"password-mismatch-error\">\n          The passwords do not match\n        </div>\n      </div>\n      <div>\n        <button type=\"submit\">Sign Up</button>\n      </div>\n    </form>\n    <script src=\"src/index.js\"></script>\n  </body>\n</html>\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/signup-form-vanilla-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"parcel\": \"2.9.3\"\n  },\n  \"source\": \"index.html\",\n  \"scripts\": {\n    \"start\": \"parcel\",\n    \"build\": \"parcel build\"\n  }\n}\n"
    },
    "/src/index.js": {
      "code": "import './styles.css';\n\n/**\n * @param {string} username\n * @param {string} email\n * @param {string} password\n * @param {string} passwordConfirm\n */\nasync function submitForm(\n  username,\n  email,\n  password,\n  passwordConfirm,\n) {\n  try {\n    const response = await fetch(\n      'https://questions.greatfrontend.com/api/questions/sign-up',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password,\n          password_confirm: passwordConfirm,\n        }),\n      },\n    );\n\n    const { message } = await response.json();\n    alert(message);\n  } catch (_) {\n    alert('Error submitting form!');\n  }\n}\n\n(() => {\n  const $form = document.querySelector('form');\n  const $passwordConfirmInput = document.getElementById(\n    'password-confirm-input',\n  );\n  const $passwordMismatchError = document.getElementById(\n    'password-mismatch-error',\n  );\n\n  $form.addEventListener('submit', async (event) => {\n    event.preventDefault();\n    // Reset the password confirm field.\n    $passwordConfirmInput.removeAttribute('aria-invalid');\n    $passwordMismatchError.classList.add('hidden');\n\n    // Construct a FormData object based on form values.\n    const formData = new FormData($form);\n    const password = formData.get('password');\n    const passwordConfirm = formData.get(\n      'password_confirm',\n    );\n\n    // The only fields we cannot leverage the browser to validate\n    // is the password confirmation, so we use JavaScript to achieve that.\n    if (password !== passwordConfirm) {\n      $passwordConfirmInput.setAttribute(\n        'aria-invalid',\n        'true',\n      );\n      $passwordMismatchError.classList.remove('hidden');\n      return;\n    }\n\n    await submitForm(\n      formData.get('username'),\n      formData.get('email'),\n      formData.get('password'),\n      formData.get('password_confirm'),\n    );\n  });\n})();\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  row-gap: 12px;\n}\n\nlabel {\n  font-size: 12px;\n}\n\ninput {\n  display: block;\n}\n\ninput:focus {\n  outline: 2px solid royalblue;\n}\n\n.error {\n  color: red;\n  font-size: 11px;\n  margin-top: 4px;\n}\n\n.hidden {\n  display: none;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/index.html",
      "/src/index.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/index.html",
    "environment": "parcel"
  },
  "writeup": "var Component=(()=>{var w=Object.create;var o=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var _=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),F=(i,e)=>{for(var l in e)o(i,l,{get:e[l],enumerable:!0})},h=(i,e,l,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of y(e))!j.call(i,r)&&r!==l&&o(i,r,{get:()=>e[r],enumerable:!(d=b(e,r))||d.enumerable});return i};var c=(i,e,l)=>(l=i!=null?w(x(i)):{},h(e||!i||!i.__esModule?o(l,\"default\",{value:i,enumerable:!0}):l,i)),M=i=>h(o({},\"__esModule\",{value:!0}),i);var s=_((A,u)=>{u.exports=_jsx_runtime});var D={};F(D,{default:()=>L});var n=c(s());var t=c(s());function m(i){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},i.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"Username input\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Empty: \\u274C Fail validation\"}),`\n`,(0,t.jsx)(e.li,{children:\"Shorter than 4 characters: \\u274C Fail validation\"}),`\n`,(0,t.jsx)(e.li,{children:\"Contains on-alphanumeric characters: \\u274C Fail validation\"}),`\n`,(0,t.jsx)(e.li,{children:\"Alphanumeric values 3 characters or more: \\u2705 Pass validation\"}),`\n`]}),`\n`]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Email input\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Empty: \\u274C Fail validation\"}),`\n`,(0,t.jsx)(e.li,{children:\"Without username: \\u274C Fail validation\"}),`\n`,(0,t.jsx)(e.li,{children:\"Without domain: \\u274C Fail validation\"}),`\n`,(0,t.jsx)(e.li,{children:\"Valid email: \\u2705 Pass validation\"}),`\n`]}),`\n`]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Password input\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Empty: \\u274C Fail validation\"}),`\n`,(0,t.jsx)(e.li,{children:\"Shorter than 6 characters: \\u274C Fail validation\"}),`\n`,(0,t.jsx)(e.li,{children:\"At least 6 characters: \\u2705 Pass validation\"}),`\n`]}),`\n`]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Confirm Password input\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Empty: \\u274C Fail validation\"}),`\n`,(0,t.jsx)(e.li,{children:\"Shorter than 6 characters: \\u274C Fail validation\"}),`\n`,(0,t.jsx)(e.li,{children:\"Does not match password input: \\u274C Fail validation\"}),`\n`,(0,t.jsx)(e.li,{children:\"Matches password input: \\u2705 Pass validation\"}),`\n`]}),`\n`]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Submit button\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Clicking on it triggers submission of the form if there are no validation errors\"}),`\n`]}),`\n`]}),`\n`]})]})}function T(i={}){let{wrapper:e}=i.components||{};return e?(0,t.jsx)(e,Object.assign({},i,{children:(0,t.jsx)(m,i)})):m(i)}var p=T;var a=c(s());function f(i){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},i.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,a.jsxs)(e.ul,{children:[`\n`,(0,a.jsxs)(e.li,{children:[\"Link \",(0,a.jsx)(e.code,{children:\"<label>\"}),\"s to \",(0,a.jsx)(e.code,{children:\"<input>\"}),\" so that clicking on the \",(0,a.jsx)(e.code,{children:\"<label>\"}),\" will focus on the corresponding \",(0,a.jsx)(e.code,{children:\"<input>\"}),\".\",`\n`,(0,a.jsxs)(e.ul,{children:[`\n`,(0,a.jsxs)(e.li,{children:[\"Use \",(0,a.jsx)(e.code,{children:'<label for=\"some-id\">'}),\" and \",(0,a.jsx)(e.code,{children:'<input id=\"some-id\">'}),\" to define the relation between \",(0,a.jsx)(e.code,{children:\"<label>\"}),\" and \",(0,a.jsx)(e.code,{children:\"<input>\"}),\".\"]}),`\n`,(0,a.jsxs)(e.li,{children:[\"You can nest \",(0,a.jsx)(e.code,{children:\"<input>\"}),\"s inside of \",(0,a.jsx)(e.code,{children:\"<label>\"}),\"s but note that some assistive technologies (e.g. Dragon NaturallySpeaking) do not support it.\"]}),`\n`]}),`\n`]}),`\n`,(0,a.jsxs)(e.li,{children:[\"Apply a styling for \",(0,a.jsx)(e.code,{children:\"<input>\"}),\" focus to clearly tell users which field they're on.\"]}),`\n`,(0,a.jsxs)(e.li,{children:[\"Link the error message up with the password confirmation field by using \",(0,a.jsx)(e.code,{children:\"aria-describedby\"}),\" to indicate that the error message is for that \",(0,a.jsx)(e.code,{children:\"<input>\"}),\" field.\"]}),`\n`]})]})}function S(i={}){let{wrapper:e}=i.components||{};return e?(0,a.jsx)(e,Object.assign({},i,{children:(0,a.jsx)(f,i)})):f(i)}var v=S;function g(i){let e=Object.assign({p:\"p\",code:\"code\",ul:\"ul\",li:\"li\",a:\"a\"},i.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"Since the browser has native form validation capabilities, we will make use of it so that we can write less JavaScript.\"}),`\n`,(0,n.jsx)(e.p,{children:\"HTML-based validation doesn't allow for customization of the error styling. Hence these days, it's no surprise that many forms opt for JavaScript-based validation to have more control over the validation styling. In interview settings, there are tight time constraints. If there is no requirement for specific validation styling, using HTML-based validation will save you some time and also demonstrate your HTML knowledge to the interviewer which is a positive signal.\"}),`\n`,(0,n.jsx)(e.p,{children:\"This question is a good opportunity to get familiar with HTML-based validation if you aren't already. There's very little JavaScript we need to write if we use HTML-based validation. Only the matching password confirmation has to be done using JavaScript.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The following attributes on \",(0,n.jsx)(e.code,{children:\"<input>\"}),\" are especially helpful for validating form values before submission can occur:\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"required\"}),\": input value must be non-empty.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"pattern\"}),\": input value must match the specified regular expression.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"minlength\"}),\": input value must contain the minimum number of characters.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"There are \",(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Constraint_validation\",children:\"more validation attributes\"}),\" but the above are the ones relevant to signup forms.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"All the fields are \",(0,n.jsx)(e.code,{children:\"required\"}),\", so we can add this attribute to all the \",(0,n.jsx)(e.code,{children:\"<input>\"}),\"s.\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Username: To validate a minimum of 4 characters, use \",(0,n.jsx)(e.code,{children:'minlength=\"4\"'}),\". To validate the alphanumeric constraint, we use a simple regex of \",(0,n.jsx)(e.code,{children:\"^[a-zA-Z0-9]+$\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Email: By using \",(0,n.jsx)(e.code,{children:'type=\"email\"'}),\", the browser will validate that the value matches an email format if it's non-empty.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Password/Confirm password: Use \",(0,n.jsx)(e.code,{children:'minlength=\"6\"'}),\" for minimum length validation and \",(0,n.jsx)(e.code,{children:'type=\"password\"'}),\" to hide the values.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Since we also need to validate that the password matches, we can add a \",(0,n.jsx)(e.code,{children:\"'submit'\"}),\" event listener to the form, use \",(0,n.jsx)(e.code,{children:\"event.preventDefault()\"}),\" to intercept the browser submit, and validate using JavaScript. If the password validation fails, we show the error message below the password confirmation field.\"]}),`\n`,(0,n.jsx)(p,{}),`\n`,(0,n.jsx)(v,{})]})}function C(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,Object.assign({},i,{children:(0,n.jsx)(g,i)})):g(i)}var L=C;return M(D);})();\n;return Component;"
}