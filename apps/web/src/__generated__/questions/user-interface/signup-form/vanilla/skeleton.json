{
  "author": "yangshun",
  "files": {
    "/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <form>\n      <label>Username</label>\n      <input type=\"text\" />\n    </form>\n    <script src=\"src/index.js\"></script>\n  </body>\n</html>\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/signup-form-vanilla-skeleton\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"parcel\": \"2.9.3\"\n  },\n  \"source\": \"index.html\",\n  \"scripts\": {\n    \"start\": \"parcel\",\n    \"build\": \"parcel build\"\n  }\n}\n"
    },
    "/src/index.js": {
      "code": "import './styles.css';\n\n/**\n * @param {string} username\n * @param {string} email\n * @param {string} password\n * @param {string} passwordConfirm\n */\nasync function submitForm(\n  username,\n  email,\n  password,\n  passwordConfirm,\n) {\n  try {\n    const response = await fetch(\n      'https://www.greatfrontend.com/api/questions/sign-up',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password,\n          password_confirm: passwordConfirm,\n        }),\n      },\n    );\n\n    const { message } = await response.json();\n    alert(message);\n  } catch (_) {\n    alert('Error submitting form!');\n  }\n}\n\n// Write any JavaScript here.\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/index.html",
      "/src/index.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/index.html",
    "environment": "parcel"
  },
  "writeup": "var Component=(()=>{var p=Object.create;var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var x=(i,n)=>()=>(n||i((n={exports:{}}).exports,n),n.exports),y=(i,n)=>{for(var t in n)r(i,t,{get:n[t],enumerable:!0})},d=(i,n,t,s)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let o of b(n))!v.call(i,o)&&o!==t&&r(i,o,{get:()=>n[o],enumerable:!(s=g(n,o))||s.enumerable});return i};var c=(i,n,t)=>(t=i!=null?p(w(i)):{},d(n||!i||!i.__esModule?r(t,\"default\",{value:i,enumerable:!0}):t,i)),j=i=>d(r({},\"__esModule\",{value:!0}),i);var a=x((k,h)=>{h.exports=_jsx_runtime});var C={};y(C,{default:()=>A});var l=c(a());var e=c(a());function u(i){let n=Object.assign({p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},i.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\"Building robust forms is one of core skills that a Front End developer should have. One of the most common forms people encounter everyday is a signup form.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Implement a signup form to allow users to fill in their details and submit the form.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Requirements\"}),`\n`,(0,e.jsx)(n.p,{children:\"The form should contain the following elements with the following criteria:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Username field\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Minimum of 4 characters.\"}),`\n`,(0,e.jsx)(n.li,{children:\"Alphanumeric only.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Email field\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Valid email format. A reasonable validation will suffice, you don't have to strictly follow any specification.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Password field\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Minimum of 6 characters.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Confirm password field\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Must match the password field.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Submit button\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:'Contains the text \"Sign Up\".'}),`\n`,(0,e.jsx)(n.li,{children:\"Clicking on the submit button submits the form.\"}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"You are free to decide when (during typing/after blur/upon submission) and how (native HTML validation or custom validation) to validate the form. If the validation fails, show the relevant errors near (beside or below) the corresponding \",(0,e.jsx)(n.code,{children:\"<input>\"}),\" fields.\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Submission API\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"A \",(0,e.jsx)(n.code,{children:\"submitForm\"}),\" function has been implemented for you in \",(0,e.jsx)(n.code,{children:\"index.js\"}),\" which makes an AJAX \",(0,e.jsx)(n.code,{children:\"POST\"}),\" request to a server-side API which validates the fields using the same criteria. You can use it to verify that your form is not allowing invalid input.\"]})]})}function M(i={}){let{wrapper:n}=i.components||{};return n?(0,e.jsx)(n,Object.assign({},i,{children:(0,e.jsx)(u,i)})):u(i)}var m=M;function f(i){return(0,l.jsx)(m,{})}function _(i={}){let{wrapper:n}=i.components||{};return n?(0,l.jsx)(n,Object.assign({},i,{children:(0,l.jsx)(f,i)})):f(i)}var A=_;return j(C);})();\n;return Component;"
}