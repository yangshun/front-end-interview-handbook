{
  "author": "tanhauhau",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/stopwatch-svelte-skeleton\",\n  \"author\": \"tanhauhau\",\n  \"version\": \"0.0.1\",\n  \"main\": \"src/index.js\",\n  \"dependencies\": {\n    \"svelte\": \"^3.58.0\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf8\" />\n    <meta name=\"viewport\" content=\"width=device-width\" />\n    <title>Svelte</title>\n    <link rel=\"stylesheet\" href=\"public/bundle.css\" />\n  </head>\n\n  <body>\n    <script src=\"bundle.js\"></script>\n  </body>\n</html>\n"
    },
    "/src/App.svelte": {
      "code": "<div>\n  <p>0s 00ms</p>\n  <div>\n    <button>Start</button> <button>Reset</button>\n  </div>\n</div>\n"
    },
    "/src/index.js": {
      "code": "import App from './App.svelte';\nimport './styles.css';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.svelte",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.svelte",
    "environment": "svelte"
  },
  "writeup": "var Component=(()=>{var w=Object.create;var o=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var y=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),b=(e,t)=>{for(var s in t)o(e,s,{get:t[s],enumerable:!0})},h=(e,t,s,c)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let a of f(t))!j.call(e,a)&&a!==s&&o(e,a,{get:()=>t[a],enumerable:!(c=g(t,a))||c.enumerable});return e};var l=(e,t,s)=>(s=e!=null?w(x(e)):{},h(t||!e||!e.__esModule?o(s,\"default\",{value:e,enumerable:!0}):s,e)),_=e=>h(o({},\"__esModule\",{value:!0}),e);var r=y((R,d)=>{d.exports=_jsx_runtime});var C={};b(C,{default:()=>M});var i=l(r());var n=l(r());function u(e){let t=Object.assign({p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:'Build a stopwatch widget which can measure how much time has passed. It shows the current timer and has two buttons underneath: \"Start/Stop\" and \"Reset\".'}),`\n`,(0,n.jsx)(t.h2,{children:\"Requirements\"}),`\n`,(0,n.jsxs)(t.ul,{children:[`\n`,(0,n.jsx)(t.li,{children:\"Start/Stop Button: Starts/stops the timer depending on whether the timer is running.\"}),`\n`,(0,n.jsx)(t.li,{children:\"Reset: Resets the timer to 0 and stops the timer.\"}),`\n`,(0,n.jsxs)(t.li,{children:[\"The timer shows the number of seconds elapsed, down to the millisecond.\",`\n`,(0,n.jsxs)(t.ul,{children:[`\n`,(0,n.jsx)(t.li,{children:\"Clicking on the timer should start/stop the timer. The Start/Stop button's label should update accordingly as well.\"}),`\n`,(0,n.jsx)(t.li,{children:\"It'd be a nice optional addition to format the time to display in hh:mm:ss:ms format.\"}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(t.p,{children:[\"You are free to exercise your creativity to style the appearance of the stopwatch. You can try out \",(0,n.jsx)(t.a,{href:\"https://www.google.com/search?q=stopwatch\",children:\"Google's stopwatch widget\"}),\" for inspiration and an example.\"]})]})}function S(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(u,e)})):u(e)}var m=S;function p(e){return(0,i.jsx)(m,{})}function D(e={}){let{wrapper:t}=e.components||{};return t?(0,i.jsx)(t,Object.assign({},e,{children:(0,i.jsx)(p,e)})):p(e)}var M=D;return _(C);})();\n;return Component;"
}