{
  "author": "yangshun",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/modal-dialog-react-skeleton\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useState } from 'react';\n\nimport ModalDialog from './ModalDialog';\n\nexport default function App() {\n  const [title, setTitle] = useState('Modal Dialog');\n\n  return (\n    <div>\n      <ModalDialog title={title}>\n        One morning, when Gregor Samsa woke from troubled\n        dreams, he found himself transformed in his bed into\n        a horrible vermin. He lay on his armour-like back,\n        and if he lifted his head a little he could see his\n        brown belly, slightly domed and divided by arches\n        into stiff sections.\n      </ModalDialog>\n    </div>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/ModalDialog.js": {
      "code": "export default function ModalDialog({ children, title }) {\n  return (\n    <div>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n}\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/ModalDialog.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  },
  "writeup": "var Component=(()=>{var p=Object.create;var a=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var w=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),j=(n,e)=>{for(var o in e)a(n,o,{get:e[o],enumerable:!0})},c=(n,e,o,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of b(e))!x.call(n,i)&&i!==o&&a(n,i,{get:()=>e[i],enumerable:!(s=f(e,i))||s.enumerable});return n};var d=(n,e,o)=>(o=n!=null?p(y(n)):{},c(e||!n||!n.__esModule?a(o,\"default\",{value:n,enumerable:!0}):o,n)),v=n=>c(a({},\"__esModule\",{value:!0}),n);var r=w((C,h)=>{h.exports=_jsx_runtime});var D={};j(D,{default:()=>T});var l=d(r());var t=d(r());function u(n){let e=Object.assign({p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",ol:\"ol\",a:\"a\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\"Modal dialogs are interactive overlay windows that temporarily disable the main content of a web page, focusing user attention on specific tasks or information. They serve various purposes, including displaying critical alerts, requesting user input, confirming actions, and presenting additional content without navigating away from the current context.\"}),`\n`,(0,t.jsx)(e.p,{children:\"Build a reusable modal dialog component that can be opened and closed with customizable title and contents.\"}),`\n`,(0,t.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"The modal dialog should contain the following elements:\",`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Title/heading string.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Any contents as the body.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Close button that hides/closes the modal when clicked.\"}),`\n`]}),`\n`]}),`\n`,(0,t.jsx)(e.li,{children:\"The modal dialog is centered horizontally and vertically on the screen.\"}),`\n`,(0,t.jsx)(e.li,{children:\"The modal dialog is displayed above a semi-transparent background overlay.\"}),`\n`,(0,t.jsx)(e.li,{children:\"The focus of the exercise is on the functionality and not the styling.\"}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:\"Design the necessary props or configuration options for the modal dialog based on the above requirements.\"}),`\n`,(0,t.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The \",(0,t.jsxs)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\",children:[(0,t.jsx)(e.code,{children:\"<dialog>\"}),\" HTML element\"]}),\" is available but for the sake of practice, implement a modal dialog without using that element.\"]})]})}function M(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(u,n)})):u(n)}var m=M;function g(n){return(0,l.jsx)(m,{})}function _(n={}){let{wrapper:e}=n.components||{};return e?(0,l.jsx)(e,Object.assign({},n,{children:(0,l.jsx)(g,n)})):g(n)}var T=_;return v(D);})();\n;return Component;"
}