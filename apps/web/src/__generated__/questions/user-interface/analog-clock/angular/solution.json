{
  "author": "michalgrzegorczyk-dev",
  "files": {
    "/angular.json": {
      "code": "{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"version\": 1,\n  \"newProjectRoot\": \"projects\",\n  \"defaultProject\": \"greatfrontend\",\n  \"projects\": {\n    \"greatfrontend\": {\n      \"projectType\": \"application\",\n      \"schematics\": {},\n      \"root\": \"\",\n      \"sourceRoot\": \"src\",\n      \"prefix\": \"app\",\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:browser\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app\",\n            \"index\": \"src/index.html\",\n            \"main\": \"src/main.ts\",\n            \"polyfills\": [\"zone.js\"],\n            \"tsConfig\": \"tsconfig.app.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          },\n          \"configurations\": {\n            \"production\": {\n              \"budgets\": [\n                {\n                  \"type\": \"initial\",\n                  \"maximumWarning\": \"500kb\",\n                  \"maximumError\": \"1mb\"\n                },\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"2kb\",\n                  \"maximumError\": \"4kb\"\n                }\n              ],\n              \"outputHashing\": \"all\"\n            },\n            \"development\": {\n              \"buildOptimizer\": false,\n              \"optimization\": false,\n              \"vendorChunk\": true,\n              \"extractLicenses\": false,\n              \"sourceMap\": true,\n              \"namedChunks\": true\n            }\n          },\n          \"defaultConfiguration\": \"production\"\n        },\n        \"serve\": {\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\n          \"configurations\": {\n            \"production\": {\n              \"browserTarget\": \"greatfrontend:build:production\"\n            },\n            \"development\": {\n              \"browserTarget\": \"greatfrontend:build:development\"\n            }\n          },\n          \"defaultConfiguration\": \"development\"\n        },\n        \"extract-i18n\": {\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n          \"options\": {\n            \"browserTarget\": \"greatfrontend:build\"\n          }\n        },\n        \"test\": {\n          \"builder\": \"@angular-devkit/build-angular:karma\",\n          \"options\": {\n            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],\n            \"tsConfig\": \"tsconfig.spec.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          }\n        }\n      }\n    }\n  },\n  \"cli\": {\n    \"analytics\": \"7ca5c4d0-e5db-4d23-9ffd-8c8c042e34e7\"\n  }\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/analog-clock-angular-solution\",\n  \"author\": \"michalgrzegorczyk-dev\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/common\": \"16.2.4\",\n    \"@angular/compiler\": \"16.2.4\",\n    \"@angular/core\": \"16.2.4\",\n    \"@angular/forms\": \"16.2.4\",\n    \"@angular/platform-browser\": \"16.2.4\",\n    \"@angular/platform-browser-dynamic\": \"16.2.4\",\n    \"rxjs\": \"7.8.0\",\n    \"zone.js\": \"0.13.1\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"16.2.1\",\n    \"@angular/cli\": \"16.2.1\",\n    \"@angular/compiler-cli\": \"16.2.4\",\n    \"@types/jasmine\": \"4.3.5\",\n    \"jasmine-core\": \"4.6.0\",\n    \"karma\": \"6.4.2\",\n    \"karma-chrome-launcher\": \"3.2.0\",\n    \"karma-coverage\": \"2.2.1\",\n    \"karma-jasmine\": \"5.1.0\",\n    \"karma-jasmine-html-reporter\": \"2.1.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\"\n  }\n}\n"
    },
    "/src/app/app.component.html": {
      "code": "<app-clock\n  [hours]=\"hours\"\n  [minutes]=\"minutes\"\n  [seconds]=\"seconds\"\n  [size]=\"size\" />\n"
    },
    "/src/app/app.component.ts": {
      "code": "import {\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  timer!: number;\n  size = 300;\n  hours!: number;\n  minutes!: number;\n  seconds!: number;\n\n  ngOnInit(): void {\n    this.timer = setInterval(() => {\n      const date = new Date();\n      this.hours = date.getHours() % 12;\n      this.minutes = date.getMinutes();\n      this.seconds = date.getSeconds();\n    }, 100);\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this.timer);\n  }\n}\n"
    },
    "/src/app/app.module.ts": {
      "code": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HandComponent } from './hand.component';\nimport { ClockComponent } from './clock.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HandComponent,\n    ClockComponent,\n  ],\n  imports: [BrowserModule, FormsModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n"
    },
    "/src/app/clock.component.html": {
      "code": "<time\n  class=\"clock\"\n  [attr.dateTime]=\"dateTimeDisplay\"\n  [ngStyle]=\"{\n    '--size': size + 'px'\n  }\">\n  <app-hand\n    [height]=\"0.5\"\n    [angle]=\"hourAngle\"\n    [width]=\"3\" />\n  <app-hand\n    [height]=\"0.9\"\n    [angle]=\"minutesAngle\"\n    [width]=\"2\" />\n  <app-hand [height]=\"0.8\" [angle]=\"secondsAngle\" />\n</time>\n"
    },
    "/src/app/clock.component.ts": {
      "code": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-clock',\n  templateUrl: './clock.component.html',\n})\nexport class ClockComponent {\n  @Input()\n  hours!: number;\n\n  @Input()\n  minutes!: number;\n\n  @Input()\n  seconds!: number;\n\n  @Input()\n  size!: number;\n\n  FULL_ROTATION_DEGREES = 360;\n\n  get secondsPercentage(): number {\n    return this.seconds / 60;\n  }\n\n  get minutesPercentage(): number {\n    return (this.minutes + this.secondsPercentage) / 60;\n  }\n\n  get hoursPercentage(): number {\n    return (\n      ((this.hours % 12) + this.minutesPercentage) / 12\n    );\n  }\n\n  get hourAngle(): number {\n    return (\n      this.hoursPercentage * this.FULL_ROTATION_DEGREES\n    );\n  }\n\n  get minutesAngle(): number {\n    return (\n      this.minutesPercentage * this.FULL_ROTATION_DEGREES\n    );\n  }\n\n  get secondsAngle(): number {\n    return (\n      this.secondsPercentage * this.FULL_ROTATION_DEGREES\n    );\n  }\n\n  get dateTimeDisplay(): string {\n    return `${this.padTwoDigit(\n      this.hours,\n    )}:${this.padTwoDigit(this.minutes)}:${this.padTwoDigit(\n      this.seconds,\n    )}`;\n  }\n\n  private padTwoDigit(number: number): string {\n    return number >= 10 ? String(number) : `0${number}`;\n  }\n}\n"
    },
    "/src/app/hand.component.html": {
      "code": "<div\n  aria-hidden=\"true\"\n  class=\"clock-hand\"\n  [ngStyle]=\"{\n    transform:\n      'rotate(' +\n      angle +\n      'deg) scaleY(' +\n      height +\n      ') scaleX(' +\n      width +\n      ')'\n  }\"></div>\n"
    },
    "/src/app/hand.component.ts": {
      "code": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-hand',\n  templateUrl: `./hand.component.html`,\n})\nexport class HandComponent {\n  @Input()\n  height = 1;\n\n  @Input()\n  width = 1;\n\n  @Input()\n  angle!: number;\n}\n"
    },
    "/src/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Angular</title>\n    <base href=\"/\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n  </head>\n  <body>\n    <app-root></app-root>\n  </body>\n</html>\n"
    },
    "/src/main.ts": {
      "code": "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.clock {\n  display: block;\n  flex-shrink: 0;\n  position: relative;\n  width: var(--size);\n  height: var(--size);\n  border-radius: 100%;\n  border: 2px solid #ccc;\n  transform: rotate(180deg);\n}\n\n.clock-hand {\n  background-color: #ccc;\n  position: absolute;\n  width: 1px;\n  height: calc(var(--size) / 2);\n  left: calc(var(--size) / 2);\n  top: calc(var(--size) / 2);\n  transform-origin: top center;\n}\n"
    },
    "/tsconfig.app.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/app\",\n    \"types\": []\n  },\n  \"files\": [\"src/main.ts\"],\n  \"include\": [\"src/**/*.d.ts\"]\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"compileOnSave\": false,\n  \"compilerOptions\": {\n    \"baseUrl\": \"./\",\n    \"outDir\": \"./dist/out-tsc\",\n    \"forceConsistentCasingInFileNames\": true,\n    \"strict\": true,\n    \"noImplicitOverride\": true,\n    \"noPropertyAccessFromIndexSignature\": true,\n    \"noImplicitReturns\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"sourceMap\": true,\n    \"declaration\": false,\n    \"downlevelIteration\": true,\n    \"experimentalDecorators\": true,\n    \"moduleResolution\": \"node\",\n    \"target\": \"es2020\",\n    \"module\": \"esnext\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"]\n  },\n  \"angularCompilerOptions\": {\n    \"enableI18nLegacyMessageIdFormat\": false,\n    \"strictInjectionParameters\": true,\n    \"strictInputAccessModifiers\": true,\n    \"strictTemplates\": true\n  }\n}\n"
    },
    "/tsconfig.spec.json": {
      "code": "/* To learn more about this file see: https://angular.io/config/tsconfig. */\n{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/spec\",\n    \"types\": [\"jasmine\"]\n  },\n  \"include\": [\"src/**/*.spec.ts\", \"src/**/*.d.ts\"]\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/app/app.component.ts",
      "/src/app/app.component.html",
      "/src/styles.css"
    ],
    "activeFile": "/src/app/app.component.ts",
    "environment": "angular-cli"
  },
  "writeup": "var Component=(()=>{var w=Object.create;var c=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var v=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),_=(t,e)=>{for(var a in e)c(t,a,{get:e[a],enumerable:!0})},l=(t,e,a,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of k(e))!j.call(t,i)&&i!==a&&c(t,i,{get:()=>e[i],enumerable:!(d=y(e,i))||d.enumerable});return t};var h=(t,e,a)=>(a=t!=null?w(x(t)):{},l(e||!t||!t.__esModule?c(a,\"default\",{value:t,enumerable:!0}):a,t)),T=t=>l(c({},\"__esModule\",{value:!0}),t);var s=v((S,m)=>{m.exports=_jsx_runtime});var F={};_(F,{default:()=>M});var n=h(s());var r=h(s());function u(t){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:\"See that the second hand updates every second.\"}),`\n`,(0,r.jsx)(e.li,{children:\"Observe the clock for a minute to see that the minute hand updates correctly (gradually moved since the observation started).\"}),`\n`,(0,r.jsx)(e.li,{children:\"Check that the hour hand's position is different when it's not an exact hour, aka the hour hand's position at 12.00pm and 12.30pm should be different.\"}),`\n`]})]})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(u,t)})):u(t)}var p=C;var o=h(s());function f(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\"},t.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,o.jsx)(e.p,{children:\"The update frequency of the timer depends on how accurate we want the clock to be. The maximum we can set is 1000ms, however, the clock's accuracy might be off by 1000ms in the case we load the page nearing the last millisecond of the second. However, using too small of an interval can be quite expensive because of too frequent updates. Hence a middleground we've chosen is 100ms. The clock can only ever be off by 100ms, which is not very noticeable by humans.\"}),`\n`,(0,o.jsx)(e.p,{children:\"The current date/time should be polled in each loop, as opposed to recording the time when the clock was first rendered and incrementing based on the interval duration of the timer because the invocations of the loop can be delayed by processes hogging the main thread and the loop may not run at every fixed interval.\"}),`\n`,(0,o.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"For a11y reasons, use a \",(0,o.jsx)(e.code,{children:\"<time>\"}),\" element with \",(0,o.jsx)(e.code,{children:\"datetime\"}),\" attribute set to the current time in 24-hour format so that screen readers can read this component. Otherwise the component will be ignored by screen readers, which is bad. Add the \",(0,o.jsx)(e.code,{children:\"aria-hidden\"}),\" attribute to the internals of \",(0,o.jsx)(e.code,{children:\"<time>\"}),\" since they are for presentation purposes and not useful to screen readers.\"]})]})}function D(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(f,t)})):f(t)}var b=D;function g(t){let e=Object.assign({h2:\"h2\",p:\"p\",h3:\"h3\",code:\"code\",a:\"a\",ol:\"ol\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,n.jsx)(e.p,{children:\"We can separate out the solution into two parts, the update loop and the rendering.\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Update loop\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"We need a timer to refresh the page and display the current time every second. To create the timer, we can use a \",(0,n.jsx)(e.code,{children:\"setInterval\"}),\" from Web API and kick off the update loop in a \",(0,n.jsx)(e.code,{children:\"ngOnInit\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Do remember to clear the timer in \",(0,n.jsx)(e.code,{children:\"ngOnDestroy\"}),\" to avoid errors and memory leaks.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Store the JavaScript \",(0,n.jsx)(e.code,{children:\"Date\"}),\" object as state as it contains all the data we need.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"This part is exactly the same as the \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/digital-clock\",children:\"Digital Clock\"}),\" question.\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"Rendering\"}),`\n`,(0,n.jsx)(e.p,{children:\"To make the clock more reusable and customizable, we can make the clock size as a property. The clock hands can then be a proportion of the clock's size.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"To render the clock hands in the right position, we use a combination of \",(0,n.jsx)(e.code,{children:\"position: absolute\"}),\" and CSS transforms:\"]}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"position: absolute\"}),\" with \",(0,n.jsx)(e.code,{children:\"top\"}),\" and \",(0,n.jsx)(e.code,{children:\"left\"}),\" of half the clock size to make the hands start from the center of the clock. However, the hands will be pointing downwards.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Use \",(0,n.jsx)(e.code,{children:\"transform: rotate(180deg)\"}),\" on the clock to make the hands point upwards. This step is optional if we add an 180 degree offset to the rotation angle of the hands.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Use \",(0,n.jsx)(e.code,{children:\"transform-origin: center top\"}),\" to make the hands rotate around the center of the clock.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Use \",(0,n.jsx)(e.code,{children:\"transform: rotate(Xdeg)\"}),\" on the hands to rotate them into the final angle.\"]}),`\n`]}),`\n`,(0,n.jsx)(p,{}),`\n`,(0,n.jsx)(b,{})]})}function O(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(g,t)})):g(t)}var M=O;return T(F);})();\n;return Component;"
}