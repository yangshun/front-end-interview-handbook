{
  "author": "willnguyen1312",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\n    \"/src/App.vue\",\n    \"/src/Clock.vue\",\n    \"/src/ClockImpl.vue\",\n    \"/src/Hand.vue\",\n    \"/src/composables.js\"\n  ],\n  \"activeFile\": \"/src/App.vue\",\n  \"environment\": \"vue-cli\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/analog-clock-vue-solution\",\n  \"author\": \"willnguyen1312\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/main.js\",\n  \"scripts\": {\n    \"serve\": \"vue-cli-service serve\",\n    \"build\": \"vue-cli-service build\"\n  },\n  \"dependencies\": {\n    \"core-js\": \"3.32.2\",\n    \"vue\": \"3.3.4\"\n  },\n  \"devDependencies\": {\n    \"@vue/cli-plugin-babel\": \"5.0.8\",\n    \"@vue/cli-service\": \"5.0.8\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width,initial-scale=1.0\" />\n    <title>Vue</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <!-- Built files will be auto injected -->\n  </body>\n</html>\n"
    },
    "/src/App.vue": {
      "code": "<script setup>\nimport Clock from './Clock.vue';\n</script>\n\n<template>\n  <div class=\"wrapper\">\n    <Clock />\n  </div>\n</template>\n\n<style>\n.wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n</style>\n"
    },
    "/src/Clock.vue": {
      "code": "<script setup>\nimport { computed } from 'vue';\nimport ClockImpl from './ClockImpl.vue';\nimport { useCurrentDate } from './composables';\n\nconst currentDate = useCurrentDate();\n\nconst currentTime = computed(() => {\n  const currentDateValue = currentDate.value;\n  const hours = currentDateValue.getHours() % 12;\n  const minutes = currentDateValue.getMinutes();\n  const seconds = currentDateValue.getSeconds();\n  return {\n    hours,\n    minutes,\n    seconds,\n  };\n});\n</script>\n\n<template>\n  <ClockImpl\n    :hours=\"currentTime.hours\"\n    :minutes=\"currentTime.minutes\"\n    :seconds=\"currentTime.seconds\"\n    :size=\"300\" />\n</template>\n"
    },
    "/src/ClockImpl.vue": {
      "code": "<!-- Separate out into a component that takes the time as a prop,\nso as to make it easy to test the rendering for specific times. -->\n<script setup>\nimport { computed } from 'vue';\nimport Hand from './Hand.vue';\nconst FULL_ROTATION_DEGREES = 360;\n\nfunction padTwoDigit(number) {\n  return number >= 10 ? String(number) : `0${number}`;\n}\n\nconst props = defineProps({\n  hours: Number,\n  minutes: Number,\n  seconds: Number,\n  size: Number,\n});\n\nconst angles = computed(() => {\n  const secondsPercentage = props.seconds / 60;\n  // To have second-level precision in the minute hand angle.\n  const minutesPercentage =\n    (props.minutes + secondsPercentage) / 60;\n  // To have minute-level precision in the hour hand angle.\n  const hoursPercentage =\n    ((props.hours % 12) + minutesPercentage) / 12;\n  return {\n    hour: hoursPercentage * FULL_ROTATION_DEGREES,\n    minute: minutesPercentage * FULL_ROTATION_DEGREES,\n    second: secondsPercentage * FULL_ROTATION_DEGREES,\n  };\n});\n\nconst dateTimeDisplay = computed(() => {\n  return `${padTwoDigit(props.hours)}:${padTwoDigit(\n    props.minutes,\n  )}:${padTwoDigit(props.seconds)}`;\n});\n</script>\n\n<template>\n  <time\n    className=\"clock\"\n    :dateTime=\"dateTimeDisplay\"\n    :style=\"{\n      '--size': `${size}px`,\n    }\">\n    <Hand :height=\"0.5\" :angle=\"angles.hour\" :width=\"3\" />\n    <Hand :height=\"0.9\" :angle=\"angles.minute\" :width=\"2\" />\n    <Hand :height=\"0.8\" :angle=\"angles.second\" :width=\"1\" />\n  </time>\n</template>\n\n<style>\n.clock {\n  display: block;\n  flex-shrink: 0;\n  position: relative;\n  width: var(--size);\n  height: var(--size);\n  border-radius: 100%;\n  border: 2px solid #ccc;\n  transform: rotate(180deg);\n}\n</style>\n"
    },
    "/src/composables.js": {
      "code": "import { getCurrentScope, onScopeDispose, ref } from 'vue';\n\nexport function useCurrentDate() {\n  const date = ref(new Date());\n\n  const timer = window.setInterval(() => {\n    date.value = new Date();\n  }, 100);\n\n  if (getCurrentScope()) {\n    onScopeDispose(() => {\n      window.clearInterval(timer);\n    });\n  }\n\n  return date;\n}\n"
    },
    "/src/Hand.vue": {
      "code": "<script setup>\nconst props = defineProps({\n  height: Number,\n  width: Number,\n  angle: Number,\n});\n</script>\n\n<template>\n  <div\n    aria-hidden\n    class=\"clock-hand\"\n    :style=\"{\n      transform: `rotate(${props.angle}deg) scaleY(${props.height}) scaleX(${props.width})`,\n    }\" />\n</template>\n\n<style>\n.clock-hand {\n  background-color: #ccc;\n  position: absolute;\n  width: 1px;\n  height: calc(var(--size) / 2);\n  left: calc(var(--size) / 2);\n  top: calc(var(--size) / 2);\n  transform-origin: top center;\n}\n</style>\n"
    },
    "/src/main.js": {
      "code": "import { createApp } from 'vue';\nimport App from './App.vue';\n\nimport './styles.css';\n\ncreateApp(App).mount('#app');\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.vue",
      "/src/Clock.vue",
      "/src/ClockImpl.vue",
      "/src/Hand.vue",
      "/src/composables.js"
    ],
    "activeFile": "/src/App.vue",
    "environment": "vue-cli"
  }
}