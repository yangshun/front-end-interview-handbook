{
  "author": "michalgrzegorczyk-dev",
  "files": {
    "/angular.json": {
      "code": "{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"version\": 1,\n  \"newProjectRoot\": \"projects\",\n  \"defaultProject\": \"greatfrontend\",\n  \"projects\": {\n    \"greatfrontend\": {\n      \"projectType\": \"application\",\n      \"schematics\": {},\n      \"root\": \"\",\n      \"sourceRoot\": \"src\",\n      \"prefix\": \"app\",\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:browser\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app\",\n            \"index\": \"src/index.html\",\n            \"main\": \"src/main.ts\",\n            \"polyfills\": [\"zone.js\"],\n            \"tsConfig\": \"tsconfig.app.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          },\n          \"configurations\": {\n            \"production\": {\n              \"budgets\": [\n                {\n                  \"type\": \"initial\",\n                  \"maximumWarning\": \"500kb\",\n                  \"maximumError\": \"1mb\"\n                },\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"2kb\",\n                  \"maximumError\": \"4kb\"\n                }\n              ],\n              \"outputHashing\": \"all\"\n            },\n            \"development\": {\n              \"buildOptimizer\": false,\n              \"optimization\": false,\n              \"vendorChunk\": true,\n              \"extractLicenses\": false,\n              \"sourceMap\": true,\n              \"namedChunks\": true\n            }\n          },\n          \"defaultConfiguration\": \"production\"\n        },\n        \"serve\": {\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\n          \"configurations\": {\n            \"production\": {\n              \"browserTarget\": \"greatfrontend:build:production\"\n            },\n            \"development\": {\n              \"browserTarget\": \"greatfrontend:build:development\"\n            }\n          },\n          \"defaultConfiguration\": \"development\"\n        },\n        \"extract-i18n\": {\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n          \"options\": {\n            \"browserTarget\": \"greatfrontend:build\"\n          }\n        },\n        \"test\": {\n          \"builder\": \"@angular-devkit/build-angular:karma\",\n          \"options\": {\n            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],\n            \"tsConfig\": \"tsconfig.spec.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": []\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\n    \"/src/app/app.component.ts\",\n    \"/src/app/app.component.html\",\n    \"/src/styles.css\"\n  ],\n  \"activeFile\": \"/src/app/app.component.ts\",\n  \"environment\": \"angular-cli\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/transfer-list-angular-solution\",\n  \"author\": \"michalgrzegorczyk-dev\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/common\": \"16.2.4\",\n    \"@angular/compiler\": \"16.2.4\",\n    \"@angular/core\": \"16.2.4\",\n    \"@angular/forms\": \"16.2.4\",\n    \"@angular/platform-browser\": \"16.2.4\",\n    \"@angular/platform-browser-dynamic\": \"16.2.4\",\n    \"rxjs\": \"7.8.0\",\n    \"zone.js\": \"0.13.1\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"16.2.1\",\n    \"@angular/cli\": \"16.2.1\",\n    \"@angular/compiler-cli\": \"16.2.4\",\n    \"@types/jasmine\": \"4.3.5\",\n    \"jasmine-core\": \"4.6.0\",\n    \"karma\": \"6.4.2\",\n    \"karma-chrome-launcher\": \"3.2.0\",\n    \"karma-coverage\": \"2.2.1\",\n    \"karma-jasmine\": \"5.1.0\",\n    \"karma-jasmine-html-reporter\": \"2.1.0\",\n    \"typescript\": \"5.0.2\"\n  },\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\"\n  }\n}\n"
    },
    "/src/app/app.component.css": {
      "code": ""
    },
    "/src/app/app.component.html": {
      "code": "<div class=\"transfer-list\">\n  <app-item-list\n    [items]=\"itemsLeft\"\n    (updateItems)=\"setItemsLeft($event)\" />\n  <div class=\"transfer-list__actions\">\n    <button\n      aria-label=\"Transfer all items to left list\"\n      [disabled]=\"itemsRight.size === 0\"\n      (click)=\"transferAllItems(itemsRight, itemsLeft)\">\n      <span aria-hidden=\"true\">&lt;&lt;</span>\n    </button>\n    <button\n      aria-label=\"Transfer selected items to left list\"\n      [disabled]=\"hasNoSelectedItems(itemsRight)\"\n      (click)=\"\n        transferSelectedItems(itemsRight, itemsLeft)\n      \">\n      <span aria-hidden=\"true\">&lt;</span>\n    </button>\n    <button\n      aria-label=\"Transfer selected items to right list\"\n      [disabled]=\"hasNoSelectedItems(itemsLeft)\"\n      (click)=\"\n        transferSelectedItems(itemsLeft, itemsRight)\n      \">\n      <span aria-hidden=\"true\">&gt;</span>\n    </button>\n    <button\n      aria-label=\"Transfer all items to right list\"\n      [disabled]=\"itemsLeft.size === 0\"\n      (click)=\"transferAllItems(itemsLeft, itemsRight)\">\n      <span aria-hidden=\"true\">&gt;&gt;</span>\n    </button>\n  </div>\n  <app-item-list\n    [items]=\"itemsRight\"\n    (updateItems)=\"setItemsRight($event)\"></app-item-list>\n</div>\n"
    },
    "/src/app/app.component.ts": {
      "code": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  itemsLeft = this.generateItemsMap([\n    'HTML',\n    'JavaScript',\n    'CSS',\n    'TypeScript',\n  ]);\n  itemsRight = this.generateItemsMap([\n    'React',\n    'Angular',\n    'Vue',\n    'Svelte',\n  ]);\n\n  setItemsLeft(updatedItems: Map<string, boolean>) {\n    this.itemsLeft = updatedItems;\n  }\n\n  setItemsRight(updatedItems: Map<string, boolean>) {\n    this.itemsRight = updatedItems;\n  }\n\n  hasNoSelectedItems(items: Map<string, boolean>): boolean {\n    return (\n      Array.from(items.values()).filter((val) => val)\n        .length === 0\n    );\n  }\n\n  transferAllItems(\n    src: Map<string, boolean>,\n    dst: Map<string, boolean>,\n  ): void {\n    src.forEach((value, key) => {\n      dst.set(key, value);\n    });\n    src.clear();\n  }\n\n  transferSelectedItems(\n    src: Map<string, boolean>,\n    dst: Map<string, boolean>,\n  ): void {\n    src.forEach((value, key) => {\n      if (value) {\n        dst.set(key, value);\n        src.delete(key);\n      }\n    });\n  }\n\n  private generateItemsMap(\n    items: string[],\n  ): Map<string, boolean> {\n    return new Map(items.map((label) => [label, false]));\n  }\n}\n"
    },
    "/src/app/app.module.ts": {
      "code": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ItemListComponent } from './item-list.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [AppComponent, ItemListComponent],\n  imports: [BrowserModule, FormsModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n"
    },
    "/src/app/item-list.component.html": {
      "code": "<div class=\"transfer-list__section\">\n  <ul class=\"transfer-list__section__items\">\n    <li *ngFor=\"let item of itemsArray\">\n      <div class=\"transfer-list__section__items__item\">\n        <input\n          type=\"checkbox\"\n          [id]=\"item[0]\"\n          [checked]=\"item[1]\"\n          (change)=\"toggleItem(item[0])\" />\n        <label [for]=\"item[0]\">{{ item[0] }}</label>\n      </div>\n    </li>\n  </ul>\n</div>\n"
    },
    "/src/app/item-list.component.ts": {
      "code": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-item-list',\n  templateUrl: './item-list.component.html',\n  styles: [\n    `\n      :host {\n        width: 100%;\n      }\n    `,\n  ],\n})\nexport class ItemListComponent {\n  @Input()\n  items!: Map<string, boolean>;\n\n  @Output()\n  updateItems = new EventEmitter<Map<string, boolean>>();\n\n  get itemsArray() {\n    return Array.from(this.items.entries());\n  }\n\n  toggleItem(label: string) {\n    const newItems = new Map(this.items);\n    newItems.set(label, !this.items.get(label));\n    this.updateItems.emit(newItems);\n  }\n}\n"
    },
    "/src/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Angular</title>\n    <base href=\"/\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n  </head>\n  <body>\n    <app-root />\n  </body>\n</html>\n"
    },
    "/src/main.ts": {
      "code": "import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { enableProdMode } from '@angular/core';\n\nenableProdMode();\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\nul {\n  list-style-type: none;\n  padding-left: 0;\n}\n\n.transfer-list {\n  border: 1px solid #ccc;\n  display: flex;\n  max-width: 768px;\n  margin: 0 auto;\n}\n\n.transfer-list__section {\n  padding: 20px;\n  flex-grow: 1;\n}\n\n.transfer-list__section__items {\n  display: flex;\n  flex-direction: column;\n  row-gap: 12px;\n}\n\n.transfer-list__section__items__item {\n  display: flex;\n  gap: 8px;\n}\n\n.transfer-list__actions {\n  border-color: #ccc;\n  border-width: 0 1px 0 1px;\n  border-style: solid;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  row-gap: 12px;\n}\n"
    },
    "/tsconfig.app.json": {
      "code": "{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/app\",\n    \"types\": []\n  },\n  \"files\": [\"src/main.ts\"],\n  \"include\": [\"src/**/*.d.ts\"]\n}\n"
    },
    "/tsconfig.json": {
      "code": "{\n  \"compileOnSave\": false,\n  \"compilerOptions\": {\n    \"baseUrl\": \"./\",\n    \"outDir\": \"./dist/out-tsc\",\n    \"forceConsistentCasingInFileNames\": true,\n    \"strict\": true,\n    \"noImplicitOverride\": true,\n    \"noPropertyAccessFromIndexSignature\": true,\n    \"noImplicitReturns\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"sourceMap\": true,\n    \"declaration\": false,\n    \"downlevelIteration\": true,\n    \"experimentalDecorators\": true,\n    \"moduleResolution\": \"node\",\n    \"target\": \"es2020\",\n    \"module\": \"esnext\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"]\n  },\n  \"angularCompilerOptions\": {\n    \"enableI18nLegacyMessageIdFormat\": false,\n    \"strictInjectionParameters\": true,\n    \"strictInputAccessModifiers\": true,\n    \"strictTemplates\": true\n  }\n}\n"
    },
    "/tsconfig.spec.json": {
      "code": "{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./out-tsc/spec\",\n    \"types\": [\"jasmine\"]\n  },\n  \"include\": [\"src/**/*.spec.ts\", \"src/**/*.d.ts\"]\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/app/app.component.ts",
      "/src/app/app.component.html",
      "/src/styles.css"
    ],
    "activeFile": "/src/app/app.component.ts",
    "environment": "angular-cli"
  }
}