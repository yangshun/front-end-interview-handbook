{
  "author": "yangshun",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\"/src/App.js\", \"/src/styles.css\"],\n  \"activeFile\": \"/src/App.js\",\n  \"environment\": \"create-react-app\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/transfer-list-react-solution\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { useId, useState } from 'react';\n\nfunction CheckboxItem({ onChange, label, checked }) {\n  // Let React generate a unique ID for each item so as to maximize\n  // reusability of the component.\n  const id = useId();\n\n  return (\n    <div className=\"transfer-list__section__items__item\">\n      <input\n        type=\"checkbox\"\n        id={id}\n        checked={checked}\n        onChange={onChange}\n      />\n      <label htmlFor={id}>{label}</label>\n    </div>\n  );\n}\n\nfunction ItemList({ items, setItems }) {\n  return (\n    <div className=\"transfer-list__section\">\n      <ul className=\"transfer-list__section__items\">\n        {Array.from(items.entries()).map(\n          ([label, checked]) => (\n            <li key={label}>\n              <CheckboxItem\n                label={label}\n                checked={checked}\n                onChange={() => {\n                  const newItems = new Map(items);\n                  newItems.set(label, !items.get(label));\n                  setItems(newItems);\n                }}\n              />\n            </li>\n          ),\n        )}\n      </ul>\n    </div>\n  );\n}\n\nconst DEFAULT_ITEMS_LEFT = [\n  'HTML',\n  'JavaScript',\n  'CSS',\n  'TypeScript',\n];\nconst DEFAULT_ITEMS_RIGHT = [\n  'React',\n  'Angular',\n  'Vue',\n  'Svelte',\n];\n\n// Convert the default array of items into a map with the item\n// name as a key and the value as a boolean.\nfunction generateItemsMap(items) {\n  return new Map(items.map((label) => [label, false]));\n}\n\n// Determine if the list has no selected items.\nfunction hasNoSelectedItems(items) {\n  return (\n    Array.from(items.values()).filter((val) => Boolean(val))\n      .length === 0\n  );\n}\n\n// Transfer all items from a source list to a destination list.\nfunction transferAllItems(\n  itemsSrc,\n  setItemsSrc,\n  itemsDst,\n  setItemsDst,\n) {\n  setItemsDst(new Map([...itemsDst, ...itemsSrc]));\n  setItemsSrc(new Map());\n}\n\n// Transfer selected items from a source list to a destination list.\nfunction transferSelectedItems(\n  itemsSrc,\n  setItemsSrc,\n  itemsDst,\n  setItemsDst,\n) {\n  const newItemsSrc = new Map(itemsSrc);\n  const newItemsDst = new Map(itemsDst);\n\n  // Remove selected items from source list and add to the destination list.\n  itemsSrc.forEach((value, key) => {\n    if (!value) {\n      return;\n    }\n\n    newItemsDst.set(key, value);\n    newItemsSrc.delete(key);\n  });\n  setItemsSrc(newItemsSrc);\n  setItemsDst(newItemsDst);\n}\n\nexport default function App() {\n  const [itemsLeft, setItemsLeft] = useState(\n    generateItemsMap(DEFAULT_ITEMS_LEFT),\n  );\n  const [itemsRight, setItemsRight] = useState(\n    generateItemsMap(DEFAULT_ITEMS_RIGHT),\n  );\n\n  return (\n    <div className=\"transfer-list\">\n      <ItemList items={itemsLeft} setItems={setItemsLeft} />\n      <div className=\"transfer-list__actions\">\n        <button\n          aria-label=\"Transfer all items to left list\"\n          disabled={itemsRight.size === 0}\n          onClick={() => {\n            transferAllItems(\n              itemsRight,\n              setItemsRight,\n              itemsLeft,\n              setItemsLeft,\n            );\n          }}>\n          <span aria-hidden={true}>&lt;&lt;</span>\n        </button>\n        <button\n          aria-label=\"Transfer selected items to left list\"\n          disabled={hasNoSelectedItems(itemsRight)}\n          onClick={() => {\n            transferSelectedItems(\n              itemsRight,\n              setItemsRight,\n              itemsLeft,\n              setItemsLeft,\n            );\n          }}>\n          <span aria-hidden={true}>&lt;</span>\n        </button>\n        <button\n          aria-label=\"Transfer selected items to right list\"\n          disabled={hasNoSelectedItems(itemsLeft)}\n          onClick={() => {\n            transferSelectedItems(\n              itemsLeft,\n              setItemsLeft,\n              itemsRight,\n              setItemsRight,\n            );\n          }}>\n          <span aria-hidden={true}>&gt;</span>\n        </button>\n        <button\n          aria-label=\"Transfer all items to right list\"\n          disabled={itemsLeft.size === 0}\n          onClick={() => {\n            transferAllItems(\n              itemsLeft,\n              setItemsLeft,\n              itemsRight,\n              setItemsRight,\n            );\n          }}>\n          <span aria-hidden={true}>&gt;&gt;</span>\n        </button>\n      </div>\n      <ItemList\n        items={itemsRight}\n        setItems={setItemsRight}\n      />\n    </div>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\nul {\n  list-style-type: none;\n  padding-left: 0;\n}\n\n.transfer-list {\n  border: 1px solid #ccc;\n  display: flex;\n  max-width: 768px;\n  margin: 0 auto;\n}\n\n.transfer-list__section {\n  padding: 20px;\n  flex-grow: 1;\n}\n\n.transfer-list__section__items {\n  display: flex;\n  flex-direction: column;\n  row-gap: 12px;\n}\n\n.transfer-list__section__items__item {\n  display: flex;\n  gap: 8px;\n}\n\n.transfer-list__actions {\n  border-color: #ccc;\n  border-width: 0 1px 0 1px;\n  border-style: solid;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  row-gap: 12px;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  }
}