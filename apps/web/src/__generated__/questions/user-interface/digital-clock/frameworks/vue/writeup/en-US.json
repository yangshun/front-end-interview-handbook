{
  "skeleton": "var Component=(()=>{var f=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var _=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),M=(e,t)=>{for(var i in t)r(e,i,{get:t[i],enumerable:!0})},l=(e,t,i,s)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let o of x(t))!y.call(e,o)&&o!==i&&r(e,o,{get:()=>t[o],enumerable:!(s=p(t,o))||s.enumerable});return e};var d=(e,t,i)=>(i=e!=null?f(j(e)):{},l(t||!e||!e.__esModule?r(i,\"default\",{value:e,enumerable:!0}):i,e)),b=e=>l(r({},\"__esModule\",{value:!0}),e);var c=_((v,u)=>{u.exports=_jsx_runtime});var C={};M(C,{default:()=>w});var a=d(c());var n=d(c());function m(e){let t=Object.assign({p:\"p\",img:\"img\"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:\"Create a widget that renders the current time in HH:MM:SS format using a 7-segment digital display. You are free to choose to use 12-hour or a 24-hour display.\"}),`\n`,(0,n.jsx)(t.p,{children:\"Here's an example of a digital clock. Each digit needs to be rendered by individual segments, but you can exercise your creativity by choosing different colors and styling it differently. It should however still function as a clock, allowing the user to read the time.\"}),`\n`,(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:\"/img/questions/digital-clock/digital-clock-example.jpg\",alt:\"Digital clock example\"})})]})}function k(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(m,e)})):m(e)}var g=k;function h(e){return(0,a.jsx)(g,{})}function D(e={}){let{wrapper:t}=e.components||{};return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(h,e)})):h(e)}var w=D;return b(C);})();\n;return Component;",
  "solution": "var Component=(()=>{var y=Object.create;var a=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var _=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),k=(t,e)=>{for(var c in e)a(t,c,{get:e[c],enumerable:!0})},l=(t,e,c,h)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of v(e))!j.call(t,i)&&i!==c&&a(t,i,{get:()=>e[i],enumerable:!(h=w(e,i))||h.enumerable});return t};var d=(t,e,c)=>(c=t!=null?y(x(t)):{},l(e||!t||!t.__esModule?a(c,\"default\",{value:t,enumerable:!0}):c,t)),D=t=>l(a({},\"__esModule\",{value:!0}),t);var s=_((X,m)=>{m.exports=_jsx_runtime});var S={};k(S,{default:()=>M});var n=d(s());var r=d(s());function u(t){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\"},t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Test cases\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:\"See that the clock updates every second.\"}),`\n`,(0,r.jsx)(e.li,{children:\"Observe the clock for at least 10 seconds to see that each digit is displayed correctly.\"}),`\n`]})]})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(u,t)})):u(t)}var p=C;var o=d(s());function f(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\"},t.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,o.jsx)(e.p,{children:\"The update frequency of the timer depends on how accurate we want the clock to be. The maximum we can set is 1000ms, however, the clock's accuracy might be off by 1000ms in the case we load the page on the last millisecond of the second. However, using too small of an interval can be quite expensive. Hence a middleground we've chosen is 100ms. The clock can only ever be off by 100ms, which is not very noticeable by humans.\"}),`\n`,(0,o.jsx)(e.p,{children:\"The current date/time should be polled in each loop, as opposed to recording the time when the clock was first rendered and incrementing based on the interval duration of the timer because the invocations of the loop can be delayed by processes hogging the main thread and the loop may not run at every fixed interval.\"}),`\n`,(0,o.jsx)(e.h2,{children:\"Accessibility\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"For a11y reasons, use a \",(0,o.jsx)(e.code,{children:\"<time>\"}),\" element with \",(0,o.jsx)(e.code,{children:\"datetime\"}),\" attribute set to the current time in 24-hour format so that screen readers can read this component. Otherwise the component will be ignored by screen readers, which is bad. Add the \",(0,o.jsx)(e.code,{children:\"aria-hidden\"}),\" attribute to the internals of \",(0,o.jsx)(e.code,{children:\"<time>\"}),\" since they are for presentation purposes and not useful to screen readers.\"]})]})}function F(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(f,t)})):f(t)}var b=F;function g(t){let e=Object.assign({h2:\"h2\",p:\"p\",h3:\"h3\",code:\"code\",a:\"a\",ul:\"ul\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,n.jsx)(e.p,{children:\"We can separate out the solution into two parts, the update loop and the rendering.\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Update loop\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"We need a timer to refresh the page and display the current time every second. To create the timer, we can use a \",(0,n.jsx)(e.code,{children:\"setInterval\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Do remember to register a callback to \",(0,n.jsx)(e.code,{children:\"onUnmounted\"}),\" lifecycle hook to clear the timer to avoid memory leaks.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Store the JavaScript \",(0,n.jsx)(e.code,{children:\"Date\"}),\" object as state as it contains all the data we need.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"For better reusability, these logic can be abstracted into a custom \",(0,n.jsx)(e.code,{children:\"useCurrentDate\"}),\" composable. We can use \",(0,n.jsx)(e.code,{children:\"onScopeDispose\"}),\" as a replacement for \",(0,n.jsx)(e.code,{children:\"unmounted\"}),\" lifecycle hook since this method can be used as a replacement for \",(0,n.jsx)(e.code,{children:\"onUnmounted\"}),\" in reusable composition functions.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"This part is exactly the same as the \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/analog-clock\",children:\"Analog Clock\"}),\" question.\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"Rendering\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now that we have access to the most updated \",(0,n.jsx)(e.code,{children:\"Date\"}),\" in the \",(0,n.jsx)(e.code,{children:\"Clock\"}),\" component, we can render it. Firstly create two smaller components for the \",(0,n.jsx)(e.code,{children:\"Digit\"}),\" and \",(0,n.jsx)(e.code,{children:\"Separator\"}),\".\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"Digit\"}),\": renders numbers from 0-9 using the segment display. We make use of two square \",(0,n.jsx)(e.code,{children:\"<div>\"}),\"s and CSS borders to achieve the effect. For each number, create a configuration of the borders that need to be shown and retrieve the configuration for that number.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"Separator\"}),\": renders the two circles that look like colons.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"To get the first digit of an hour/minute/second, we can divide by 10 and round it down. To get the second digit, we do modulo 10 to leave only the value in the ones-place.\"}),`\n`,(0,n.jsx)(p,{}),`\n`,(0,n.jsx)(b,{})]})}function T(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(g,t)})):g(t)}var M=T;return D(S);})();\n;return Component;"
}