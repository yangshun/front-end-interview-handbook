{
  "author": "willnguyen1312",
  "files": {
    "/greatfrontend.json": {
      "code": "{\n  \"visibleFiles\": [\n    \"/src/App.vue\",\n    \"/src/Clock.vue\",\n    \"/src/Digit.vue\",\n    \"/src/Separator.vue\",\n    \"/src/composables.js\"\n  ],\n  \"activeFile\": \"/src/Clock.vue\",\n  \"environment\": \"vue-cli\"\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/digital-clock-vue-solution\",\n  \"author\": \"willnguyen1312\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/main.js\",\n  \"scripts\": {\n    \"serve\": \"vue-cli-service serve\",\n    \"build\": \"vue-cli-service build\"\n  },\n  \"dependencies\": {\n    \"core-js\": \"3.32.2\",\n    \"vue\": \"3.3.4\"\n  },\n  \"devDependencies\": {\n    \"@vue/cli-plugin-babel\": \"5.0.8\",\n    \"@vue/cli-service\": \"5.0.8\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width,initial-scale=1.0\" />\n    <title>Vue</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <!-- Built files will be auto injected -->\n  </body>\n</html>\n"
    },
    "/src/App.vue": {
      "code": "<script setup>\nimport Clock from './Clock.vue';\n</script>\n\n<template>\n  <div class=\"wrapper\">\n    <Clock />\n  </div>\n</template>\n\n<style>\n.wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n</style>\n"
    },
    "/src/Clock.vue": {
      "code": "<script setup>\nimport { computed } from 'vue';\nimport Digit from './Digit.vue';\nimport Separator from './Separator.vue';\nimport { useCurrentDate } from './composables';\n\nfunction padTwoDigit(number) {\n  return number >= 10 ? String(number) : `0${number}`;\n}\n\nconst currentDate = useCurrentDate();\n\nconst currentTime = computed(() => {\n  const currentDateValue = currentDate.value;\n  let hours = currentDateValue.getHours() % 12;\n  hours = hours === 0 ? 12 : hours;\n  const minutes = currentDateValue.getMinutes();\n  const seconds = currentDateValue.getSeconds();\n  return {\n    hours,\n    minutes,\n    seconds,\n  };\n});\n\nconst dateTimeDisplay = computed(() => {\n  const { minutes, seconds } = currentTime.value;\n  return `${padTwoDigit(\n    currentDate.value.getHours(),\n  )}:${padTwoDigit(minutes)}:${padTwoDigit(seconds)}`;\n});\n</script>\n\n<template>\n  <!-- Use a <time> element with `datetime` attribute set\n   to the current time in 24-hour format so that\n   screen readers can read this component. -->\n  <time class=\"clock\" :dateTime=\"dateTimeDisplay\">\n    <Digit :number=\"parseInt(currentTime.hours / 10, 10)\" />\n    <Digit :number=\"currentTime.hours % 10\" />\n    <Separator />\n    <Digit\n      :number=\"parseInt(currentTime.minutes / 10, 10)\" />\n    <Digit :number=\"currentTime.minutes % 10\" />\n    <Separator />\n    <Digit\n      :number=\"parseInt(currentTime.seconds / 10, 10)\" />\n    <Digit :number=\"currentTime.seconds % 10\" />\n  </time>\n</template>\n\n<style>\n.clock {\n  --segment-width: 10px;\n  --segment-size: 40px;\n  --segment-color: #fff;\n\n  background-color: #000;\n  border: 10px solid #ccc;\n  border-radius: 10px;\n  display: flex;\n  gap: 10px;\n  padding: 20px;\n}\n</style>\n"
    },
    "/src/composables.js": {
      "code": "import { getCurrentScope, onScopeDispose, ref } from 'vue';\n\nexport function useCurrentDate() {\n  const date = ref(new Date());\n\n  const timer = setInterval(() => {\n    date.value = new Date();\n  }, 100);\n\n  if (getCurrentScope()) {\n    onScopeDispose(() => {\n      clearInterval(timer);\n    });\n  }\n\n  return date;\n}\n"
    },
    "/src/Digit.vue": {
      "code": "<script setup>\nimport { computed } from 'vue';\n\nconst ALL_SIDES = [\n  'digit-square-border-top',\n  'digit-square-border-left',\n  'digit-square-border-right',\n  'digit-square-border-bottom',\n];\n\nconst NUMBER_TO_CLASSES = {\n  0: {\n    top: [\n      'digit-square-border-top',\n      'digit-square-border-left',\n      'digit-square-border-right',\n    ],\n    bottom: [\n      'digit-square-border-bottom',\n      'digit-square-border-left',\n      'digit-square-border-right',\n    ],\n  },\n  1: {\n    top: ['digit-square-border-right'],\n    bottom: ['digit-square-border-right'],\n  },\n  2: {\n    top: [\n      'digit-square-border-top',\n      'digit-square-border-right',\n      'digit-square-border-bottom',\n    ],\n    bottom: [\n      'digit-square-border-top',\n      'digit-square-border-left',\n      'digit-square-border-bottom',\n    ],\n  },\n  3: {\n    top: [\n      'digit-square-border-top',\n      'digit-square-border-right',\n      'digit-square-border-bottom',\n    ],\n    bottom: [\n      'digit-square-border-top',\n      'digit-square-border-right',\n      'digit-square-border-bottom',\n    ],\n  },\n  4: {\n    top: [\n      'digit-square-border-left',\n      'digit-square-border-right',\n      'digit-square-border-bottom',\n    ],\n    bottom: [\n      'digit-square-border-right',\n      'digit-square-border-top',\n    ],\n  },\n  5: {\n    top: [\n      'digit-square-border-top',\n      'digit-square-border-left',\n      'digit-square-border-bottom',\n    ],\n    bottom: [\n      'digit-square-border-top',\n      'digit-square-border-right',\n      'digit-square-border-bottom',\n    ],\n  },\n  6: {\n    top: [\n      'digit-square-border-top',\n      'digit-square-border-left',\n      'digit-square-border-bottom',\n    ],\n    bottom: ALL_SIDES,\n  },\n  7: {\n    top: [\n      'digit-square-border-top',\n      'digit-square-border-right',\n    ],\n    bottom: ['digit-square-border-right'],\n  },\n  8: {\n    top: ALL_SIDES,\n    bottom: ALL_SIDES,\n  },\n  9: {\n    top: ALL_SIDES,\n    bottom: [\n      'digit-square-border-top',\n      'digit-square-border-right',\n      'digit-square-border-bottom',\n    ],\n  },\n};\n\nconst props = defineProps({\n  number: Number,\n});\n\nconst topClasses = computed(\n  () => NUMBER_TO_CLASSES[props.number].top,\n);\nconst bottomClasses = computed(\n  () => NUMBER_TO_CLASSES[props.number].bottom,\n);\n</script>\n\n<template>\n  <div>\n    <div\n      :class=\"[\n        'digit-square',\n        'digit-square-top',\n        ...topClasses,\n      ]\" />\n    <div\n      :class=\"[\n        'digit-square',\n        'digit-square-bottom',\n        ...bottomClasses,\n      ]\" />\n  </div>\n</template>\n\n<style>\n.digit-square {\n  border-style: solid;\n  border-color: transparent;\n  border-width: var(--segment-width);\n  box-sizing: border-box;\n  height: var(--segment-size);\n  width: var(--segment-size);\n}\n\n.digit-square-top {\n  border-bottom-width: calc(var(--segment-width) / 2);\n}\n\n.digit-square-bottom {\n  border-top-width: calc(var(--segment-width) / 2);\n}\n\n.digit-square-border-top {\n  border-top-color: var(--segment-color);\n}\n\n.digit-square-border-left {\n  border-left-color: var(--segment-color);\n}\n\n.digit-square-border-right {\n  border-right-color: var(--segment-color);\n}\n\n.digit-square-border-bottom {\n  border-bottom-color: var(--segment-color);\n}\n</style>\n"
    },
    "/src/main.js": {
      "code": "import { createApp } from 'vue';\nimport App from './App.vue';\n\nimport './styles.css';\n\ncreateApp(App).mount('#app');\n"
    },
    "/src/Separator.vue": {
      "code": "<template>\n  <div class=\"separator\">\n    <div class=\"separator-dot\" />\n    <div class=\"separator-dot\" />\n  </div>\n</template>\n\n<style>\n.separator {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n}\n\n.separator-dot {\n  background-color: var(--segment-color);\n  border-radius: var(--segment-width);\n  height: var(--segment-width);\n  width: var(--segment-width);\n}\n</style>\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.vue",
      "/src/Clock.vue",
      "/src/Digit.vue",
      "/src/Separator.vue",
      "/src/composables.js"
    ],
    "activeFile": "/src/Clock.vue",
    "environment": "vue-cli"
  }
}