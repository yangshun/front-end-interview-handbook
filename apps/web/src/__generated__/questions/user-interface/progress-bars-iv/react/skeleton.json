{
  "author": "yangshun",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/progress-bars-iv-react-skeleton\",\n  \"author\": \"yangshun\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "export default function App() {\n  return (\n    <div>\n      <div className=\"buttons\">\n        <button>Add</button>\n        <button>Start</button>\n        <button>Reset</button>\n      </div>\n    </div>\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nimport './styles.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n\n.buttons {\n  display: flex;\n  column-gap: 8px;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app"
  },
  "writeup": "var Component=(()=>{var d=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var x=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),j=(r,e)=>{for(var n in e)s(r,n,{get:e[n],enumerable:!0})},u=(r,e,n,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of b(e))!w.call(r,i)&&i!==n&&s(r,i,{get:()=>e[i],enumerable:!(o=f(e,i))||o.enumerable});return r};var c=(r,e,n)=>(n=r!=null?d(y(r)):{},u(e||!r||!r.__esModule?s(n,\"default\",{value:r,enumerable:!0}):n,r)),I=r=>u(s({},\"__esModule\",{value:!0}),r);var l=x((B,p)=>{p.exports=_jsx_runtime});var M={};j(M,{default:()=>D});var a=c(l());var t=c(l());function h(r){let e=Object.assign({p:\"p\",strong:\"strong\",a:\"a\",h2:\"h2\",ul:\"ul\",li:\"li\",img:\"img\"},r.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:\"Note:\"}),\" This is an advanced version of \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/progress-bars-iii\",children:\"Progress Bars III\"}),\", you should complete that question first before attempting this question.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"In \",(0,t.jsx)(e.a,{href:\"/questions/user-interface/progress-bars-iii\",children:\"Progress Bars III\"}),\", we built progress bars which fill up in parallel, where multiple of them are filling up concurrently, up to a limit of 3. In this question, we'll allow pausing and resuming of the animation.\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Initially there will be one empty progress bar.\"}),`\n`,(0,t.jsx)(e.li,{children:\"The progress bars fill up gradually in parallel, up to a limit of 3 concurrent bars filling up. i.e. the fourth progress bar will only start filling up after the third progress bar is completely filled up.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Each bar takes approximately 2000ms to completely fill up.\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"Implement the following buttons with the functionality:\",`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:'Start/Pause: Starts/pauses the filling up of the progress bars. The button label turns into \"Pause\" when the animation is playing.'}),`\n`,(0,t.jsx)(e.li,{children:\"Add: Appends a new progress bar to the bottom of the list.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Reset: Resets to the initial state where there is only one empty bar and stops any running animations.\"}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{children:\"Example\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/img/questions/progress-bars-iv/progress-bars-example.png\",alt:\"Progress Bars Example\"})})]})}function _(r={}){let{wrapper:e}=r.components||{};return e?(0,t.jsx)(e,Object.assign({},r,{children:(0,t.jsx)(h,r)})):h(r)}var m=_;function g(r){return(0,a.jsx)(m,{})}function q(r={}){let{wrapper:e}=r.components||{};return e?(0,a.jsx)(e,Object.assign({},r,{children:(0,a.jsx)(g,r)})):g(r)}var D=q;return I(M);})();\n;return Component;"
}