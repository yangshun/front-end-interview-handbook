{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "easy",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/how-do-you-use-windowhistory-api",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "how-do-you-use-windowhistory-api",
    "subtitle": null,
    "title": "How do you use `window.history` API?",
    "topics": [
      "web-api",
      "javascript"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/how-do-you-use-windowhistory-api/en-US.mdx"
  },
  "solution": "var Component=(()=>{var p=Object.create;var i=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var b=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),w=(n,e)=>{for(var r in e)i(n,r,{get:e[r],enumerable:!0})},d=(n,e,r,h)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of u(e))!g.call(n,o)&&o!==r&&i(n,o,{get:()=>e[o],enumerable:!(h=y(e,o))||h.enumerable});return n};var f=(n,e,r)=>(r=n!=null?p(m(n)):{},d(e||!n||!n.__esModule?i(r,\"default\",{value:n,enumerable:!0}):r,n)),S=n=>d(i({},\"__esModule\",{value:!0}),n);var s=b((D,c)=>{c.exports=_jsx_runtime});var v={};w(v,{default:()=>l,frontmatter:()=>k});var t=f(s()),k={title:\"How do you use `window.history` API?\"};function a(n){let e={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",ul:\"ul\",...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"The \",(0,t.jsx)(e.code,{children:\"window.history\"}),\" API allows you to manipulate the browser's session history. You can use \",(0,t.jsx)(e.code,{children:\"history.pushState()\"}),\" to add a new entry to the history stack, \",(0,t.jsx)(e.code,{children:\"history.replaceState()\"}),\" to modify the current entry, and \",(0,t.jsx)(e.code,{children:\"history.back()\"}),\", \",(0,t.jsx)(e.code,{children:\"history.forward()\"}),\", and \",(0,t.jsx)(e.code,{children:\"history.go()\"}),\" to navigate through the history. For example, \",(0,t.jsx)(e.code,{children:'history.pushState({page: 1}, \"title 1\", \"?page=1\")'}),\" adds a new entry to the history.\"]}),`\n`,(0,t.jsx)(e.hr,{}),`\n`,(0,t.jsxs)(e.h2,{children:[\"Using the \",(0,t.jsx)(e.code,{children:\"window.history\"}),\" API\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"The \",(0,t.jsx)(e.code,{children:\"window.history\"}),\" API provides methods to interact with the browser's history stack. This can be useful for single-page applications (SPAs) where you want to manage the URL and browser history without causing a full page reload.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Methods\"}),`\n`,(0,t.jsx)(e.h4,{children:(0,t.jsx)(e.code,{children:\"history.pushState()\"})}),`\n`,(0,t.jsx)(e.p,{children:\"This method adds a new entry to the history stack.\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-js\",children:`history.pushState({ page: 1 }, 'title 1', '?page=1');\n`})}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"The first parameter is a state object associated with the new history entry.\"}),`\n`,(0,t.jsx)(e.li,{children:\"The second parameter is the title of the new history entry (currently ignored by most browsers).\"}),`\n`,(0,t.jsx)(e.li,{children:\"The third parameter is the URL to be displayed in the address bar.\"}),`\n`]}),`\n`,(0,t.jsx)(e.h4,{children:(0,t.jsx)(e.code,{children:\"history.replaceState()\"})}),`\n`,(0,t.jsx)(e.p,{children:\"This method modifies the current history entry.\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-js\",children:`history.replaceState({ page: 2 }, 'title 2', '?page=2');\n`})}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"The parameters are the same as \",(0,t.jsx)(e.code,{children:\"pushState()\"}),\", but this method replaces the current entry instead of adding a new one.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h4,{children:(0,t.jsx)(e.code,{children:\"history.back()\"})}),`\n`,(0,t.jsx)(e.p,{children:\"This method moves the user back one entry in the history stack, similar to clicking the browser's back button.\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-js\",children:`history.back();\n`})}),`\n`,(0,t.jsx)(e.h4,{children:(0,t.jsx)(e.code,{children:\"history.forward()\"})}),`\n`,(0,t.jsx)(e.p,{children:\"This method moves the user forward one entry in the history stack, similar to clicking the browser's forward button.\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-js\",children:`history.forward();\n`})}),`\n`,(0,t.jsx)(e.h4,{children:(0,t.jsx)(e.code,{children:\"history.go()\"})}),`\n`,(0,t.jsx)(e.p,{children:\"This method moves the user a specified number of entries in the history stack.\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-js\",children:`// Move back one entry\nhistory.go(-1);\n\n// Move forward one entry\nhistory.go(1);\n\n// Reload the current page\nhistory.go(0);\n`})}),`\n`,(0,t.jsx)(e.h3,{children:\"Example\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Here's a simple example demonstrating the use of \",(0,t.jsx)(e.code,{children:\"pushState\"}),\" and \",(0,t.jsx)(e.code,{children:\"replaceState\"}),\":\"]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-html\",children:`<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>History API Example</title>\n  </head>\n  <body>\n    <button id=\"pushStateBtn\">Push State</button>\n    <button id=\"replaceStateBtn\">Replace State</button>\n    <button id=\"backBtn\">Back</button>\n    <button id=\"forwardBtn\">Forward</button>\n\n    <script>\n      document.getElementById('pushStateBtn').addEventListener('click', () => {\n        history.pushState({ page: 1 }, 'title 1', '?page=1');\n      });\n\n      document\n        .getElementById('replaceStateBtn')\n        .addEventListener('click', () => {\n          history.replaceState({ page: 2 }, 'title 2', '?page=2');\n        });\n\n      document.getElementById('backBtn').addEventListener('click', () => {\n        history.back();\n      });\n\n      document.getElementById('forwardBtn').addEventListener('click', () => {\n        history.forward();\n      });\n    <\\/script>\n  </body>\n</html>\n`})}),`\n`,(0,t.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/History_API\",children:\"MDN Web Docs: History API\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsxs)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\",children:[\"MDN Web Docs: \",(0,t.jsx)(e.code,{children:\"history.pushState()\"})]})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsxs)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\",children:[\"MDN Web Docs: \",(0,t.jsx)(e.code,{children:\"history.replaceState()\"})]})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsxs)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/History/back\",children:[\"MDN Web Docs: \",(0,t.jsx)(e.code,{children:\"history.back()\"})]})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsxs)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/History/forward\",children:[\"MDN Web Docs: \",(0,t.jsx)(e.code,{children:\"history.forward()\"})]})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsxs)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/History/go\",children:[\"MDN Web Docs: \",(0,t.jsx)(e.code,{children:\"history.go()\"})]})}),`\n`]})]})}function l(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(a,{...n})}):a(n)}return S(v);})();\n;return Component;"
}