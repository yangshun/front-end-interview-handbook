{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "easy",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/how-do-you-access-the-index-of-an-element-in-an-array-during-iteration",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "how-do-you-access-the-index-of-an-element-in-an-array-during-iteration",
    "subtitle": null,
    "title": "How do you access the index of an element in an array during iteration?",
    "topics": [
      "javascript"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/how-do-you-access-the-index-of-an-element-in-an-array-during-iteration/en-US.mdx"
  },
  "solution": "var Component=(()=>{var m=Object.create;var a=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var y=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),x=(r,e)=>{for(var o in e)a(r,o,{get:e[o],enumerable:!0})},l=(r,e,o,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of f(e))!g.call(r,c)&&c!==o&&a(r,c,{get:()=>e[c],enumerable:!(t=p(e,c))||t.enumerable});return r};var b=(r,e,o)=>(o=r!=null?m(u(r)):{},l(e||!r||!r.__esModule?a(o,\"default\",{value:r,enumerable:!0}):o,r)),v=r=>l(a({},\"__esModule\",{value:!0}),r);var d=y((N,i)=>{i.exports=_jsx_runtime});var D={};x(D,{default:()=>s,frontmatter:()=>j});var n=b(d()),j={title:\"How do you access the index of an element in an array during iteration?\"};function h(r){let e={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",ul:\"ul\",...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"To access the index of an element in an array during iteration, you can use methods like \",(0,n.jsx)(e.code,{children:\"forEach\"}),\", \",(0,n.jsx)(e.code,{children:\"map\"}),\", \",(0,n.jsx)(e.code,{children:\"for...of\"}),\" with \",(0,n.jsx)(e.code,{children:\"entries\"}),\", or a traditional \",(0,n.jsx)(e.code,{children:\"for\"}),\" loop. For example, using \",(0,n.jsx)(e.code,{children:\"forEach\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const array = ['a', 'b', 'c'];\narray.forEach((element, index) => {\n  console.log(index, element);\n});\n`})}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsxs)(e.h2,{children:[\"Using \",(0,n.jsx)(e.code,{children:\"forEach\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"forEach\"}),\" method executes a provided function once for each array element. The callback function takes three arguments: the current element, the index of the current element, and the array itself.\"]}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const array = ['a', 'b', 'c'];\narray.forEach((element, index) => {\n  console.log(index, element);\n});\n`})}),`\n`,(0,n.jsxs)(e.h3,{children:[\"Using \",(0,n.jsx)(e.code,{children:\"map\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"map\"}),\" method creates a new array populated with the results of calling a provided function on every element in the calling array. The callback function also takes three arguments: the current element, the index of the current element, and the array itself.\"]}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const array = ['a', 'b', 'c'];\narray.map((element, index) => {\n  console.log(index, element);\n});\n`})}),`\n`,(0,n.jsxs)(e.h3,{children:[\"Using \",(0,n.jsx)(e.code,{children:\"for...of\"}),\" with \",(0,n.jsx)(e.code,{children:\"entries\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"for...of\"}),\" loop can be combined with the \",(0,n.jsx)(e.code,{children:\"entries\"}),\" method to access both the index and the element.\"]}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const array = ['a', 'b', 'c'];\nfor (const [index, element] of array.entries()) {\n  console.log(index, element);\n}\n`})}),`\n`,(0,n.jsxs)(e.h3,{children:[\"Using a traditional \",(0,n.jsx)(e.code,{children:\"for\"}),\" loop\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"A traditional \",(0,n.jsx)(e.code,{children:\"for\"}),\" loop gives you direct access to the index.\"]}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const array = ['a', 'b', 'c'];\nfor (let index = 0; index < array.length; index++) {\n  console.log(index, array[index]);\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\",children:\"MDN Web Docs: Array.prototype.forEach\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\",children:\"MDN Web Docs: Array.prototype.map\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of\",children:\"MDN Web Docs: for...of\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/entries\",children:\"MDN Web Docs: Array.prototype.entries\"})}),`\n`]})]})}function s(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(h,{...r})}):h(r)}return v(D);})();\n;return Component;"
}