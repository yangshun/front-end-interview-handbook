{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "medium",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/what-are-some-of-the-gotchas-for-writing-efficient-css",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "what-are-some-of-the-gotchas-for-writing-efficient-css",
    "subtitle": null,
    "title": "Quais sÃ£o algumas das \"armadilhas\" para escrever CSS eficiente?",
    "topics": [
      "css"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/front-end-interview-handbook/blob/main/packages/quiz/questions/what-are-some-of-the-gotchas-for-writing-efficient-css/pt-BR.mdx"
  },
  "solution": "var Component=(()=>{var u=Object.create;var t=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var v=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),q=(a,e)=>{for(var r in e)t(a,r,{get:e[r],enumerable:!0})},i=(a,e,r,n)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of h(e))!g.call(a,s)&&s!==r&&t(a,s,{get:()=>e[s],enumerable:!(n=p(e,s))||n.enumerable});return a};var x=(a,e,r)=>(r=a!=null?u(f(a)):{},i(e||!a||!a.__esModule?t(r,\"default\",{value:a,enumerable:!0}):r,a)),j=a=>i(t({},\"__esModule\",{value:!0}),a);var c=v((E,d)=>{d.exports=_jsx_runtime});var M={};q(M,{default:()=>l,frontmatter:()=>_});var o=x(c()),_={title:'Quais s\\xE3o algumas das \"armadilhas\" para escrever CSS eficiente?'};function m(a){let e={a:\"a\",p:\"p\",...a.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:\"Primeiramente, entenda que os navegadores combinam seletores da direita (seletor-chave) para a esquerda. Os navegadores filtram elementos no DOM de acordo com o seletor-chave e percorrem seus elementos pais para determinar correspond\\xEAncias. Quanto menor o comprimento da cadeia de seletores, mais r\\xE1pido o navegador pode determinar se aquele elemento corresponde ao seletor. Portanto, evite seletores-chave que sejam seletores de tag ou universais. Eles correspondem a um grande n\\xFAmero de elementos e os navegadores ter\\xE3o que fazer mais trabalho para determinar se os pais correspondem.\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"A metodologia \",(0,o.jsx)(e.a,{href:\"https://bem.info/\",children:\"BEM (Block Element Modifier)\"}),\" recomenda que tudo tenha uma \\xFAnica classe e, quando voc\\xEA precisa de hierarquia, que isso seja incorporado ao nome da classe tamb\\xE9m, o que naturalmente torna o seletor eficiente e f\\xE1cil de substituir.\"]}),`\n`,(0,o.jsxs)(e.p,{children:[\"Esteja ciente de quais propriedades CSS \",(0,o.jsx)(e.a,{href:\"https://csstriggers.com/\",children:\"trigger\"}),\" reflow, repaint, e compositing. Evite escrever estilos que alteram o layout (fator reflow) quando poss\\xEDvel.\"]})]})}function l(a={}){let{wrapper:e}=a.components||{};return e?(0,o.jsx)(e,{...a,children:(0,o.jsx)(m,{...a})}):m(a)}return j(M);})();\n;return Component;"
}