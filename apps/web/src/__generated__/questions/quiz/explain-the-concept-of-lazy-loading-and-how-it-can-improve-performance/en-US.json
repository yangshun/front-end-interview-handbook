{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "easy",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/explain-the-concept-of-lazy-loading-and-how-it-can-improve-performance",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "explain-the-concept-of-lazy-loading-and-how-it-can-improve-performance",
    "subtitle": null,
    "title": "Explain the concept of lazy loading and how it can improve performance",
    "topics": [
      "javascript",
      "performance"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/explain-the-concept-of-lazy-loading-and-how-it-can-improve-performance/en-US.mdx"
  },
  "solution": "var Component=(()=>{var g=Object.create;var t=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var b=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),v=(i,e)=>{for(var a in e)t(i,a,{get:e[a],enumerable:!0})},l=(i,e,a,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of p(e))!u.call(i,r)&&r!==a&&t(i,r,{get:()=>e[r],enumerable:!(o=m(e,r))||o.enumerable});return i};var f=(i,e,a)=>(a=i!=null?g(y(i)):{},l(e||!i||!i.__esModule?t(a,\"default\",{value:i,enumerable:!0}):a,i)),z=i=>l(t({},\"__esModule\",{value:!0}),i);var s=b((I,d)=>{d.exports=_jsx_runtime});var L={};v(L,{default:()=>h,frontmatter:()=>w});var n=f(s()),w={title:\"Explain the concept of lazy loading and how it can improve performance\"};function c(i){let e={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...i.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Lazy loading is a design pattern that delays the loading of resources until they are actually needed. This can significantly improve performance by reducing initial load times and conserving bandwidth. For example, images on a webpage can be lazy-loaded so that they only load when they come into the viewport. This can be achieved using the \",(0,n.jsx)(e.code,{children:'loading=\"lazy\"'}),\" attribute in HTML or by using JavaScript libraries.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-html\",children:`<img src=\"image.jpg\" loading=\"lazy\" alt=\"Lazy loaded image\" />\n`})}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsx)(e.h2,{children:\"The concept of lazy loading and how it can improve performance\"}),`\n`,(0,n.jsx)(e.h3,{children:\"What is lazy loading?\"}),`\n`,(0,n.jsx)(e.p,{children:\"Lazy loading is a design pattern used to defer the initialization of an object until the point at which it is needed. This can be applied to various types of resources such as images, videos, scripts, and even data fetched from APIs.\"}),`\n`,(0,n.jsx)(e.h3,{children:\"How does lazy loading work?\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Lazy loading works by delaying the loading of resources until they are actually needed. For example, images on a webpage can be lazy-loaded so that they only load when they come into the viewport. This can be achieved using the \",(0,n.jsx)(e.code,{children:'loading=\"lazy\"'}),\" attribute in HTML or by using JavaScript libraries.\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"Benefits of lazy loading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Improved performance\"}),\": By loading only the necessary resources initially, the page load time is reduced, leading to a faster and more responsive user experience.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Reduced bandwidth usage\"}),\": Lazy loading helps in conserving bandwidth by loading resources only when they are needed.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Better user experience\"}),\": Users can start interacting with the content faster as the initial load time is reduced.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Implementing lazy loading\"}),`\n`,(0,n.jsxs)(e.h4,{children:[\"Using the \",(0,n.jsx)(e.code,{children:\"loading\"}),\" attribute in HTML\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The simplest way to implement lazy loading for images is by using the \",(0,n.jsx)(e.code,{children:\"loading\"}),\" attribute in HTML.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-html\",children:`<img src=\"image.jpg\" loading=\"lazy\" alt=\"Lazy loaded image\" />\n`})}),`\n`,(0,n.jsx)(e.h4,{children:\"Using JavaScript\"}),`\n`,(0,n.jsx)(e.p,{children:\"For more complex scenarios, you can use JavaScript to implement lazy loading. Here is an example using the Intersection Observer API:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`document.addEventListener('DOMContentLoaded', function () {\n  const lazyImages = document.querySelectorAll('img.lazy');\n\n  const imageObserver = new IntersectionObserver((entries, observer) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        const img = entry.target;\n        img.src = img.dataset.src;\n        img.classList.remove('lazy');\n        observer.unobserve(img);\n      }\n    });\n  });\n\n  lazyImages.forEach((image) => {\n    imageObserver.observe(image);\n  });\n});\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"In this example, images with the class \",(0,n.jsx)(e.code,{children:\"lazy\"}),\" will only load when they come into the viewport.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading\",children:\"MDN Web Docs: Lazy loading\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video\",children:\"Google Developers: Lazy loading images and video\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\",children:\"Intersection Observer API\"})}),`\n`]})]})}function h(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,{...i,children:(0,n.jsx)(c,{...i})}):c(i)}return z(L);})();\n;return Component;"
}