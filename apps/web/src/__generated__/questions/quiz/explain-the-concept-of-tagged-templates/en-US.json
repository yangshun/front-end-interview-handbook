{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "easy",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/explain-the-concept-of-tagged-templates",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "explain-the-concept-of-tagged-templates",
    "subtitle": null,
    "title": "Explain the concept of tagged templates",
    "topics": [
      "javascript"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/explain-the-concept-of-tagged-templates/en-US.mdx"
  },
  "solution": "var Component=(()=>{var p=Object.create;var r=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),v=(t,e)=>{for(var a in e)r(t,a,{get:e[a],enumerable:!0})},i=(t,e,a,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of d(e))!m.call(t,l)&&l!==a&&r(t,l,{get:()=>e[l],enumerable:!(s=h(e,l))||s.enumerable});return t};var x=(t,e,a)=>(a=t!=null?p(u(t)):{},i(e||!t||!t.__esModule?r(a,\"default\",{value:t,enumerable:!0}):a,t)),w=t=>i(r({},\"__esModule\",{value:!0}),t);var c=f((_,o)=>{o.exports=_jsx_runtime});var y={};v(y,{default:()=>j,frontmatter:()=>T});var n=x(c()),T={title:\"Explain the concept of tagged templates\"};function g(t){let e=Object.assign({h2:\"h2\",p:\"p\",pre:\"pre\",code:\"code\",hr:\"hr\",h3:\"h3\",ol:\"ol\",li:\"li\",ul:\"ul\",strong:\"strong\",a:\"a\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsx)(e.p,{children:\"Tagged templates in JavaScript allow you to parse template literals with a function. The function receives the literal strings and the values as arguments, enabling custom processing of the template. For example:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function tag(strings, ...values) {\n  return strings[0] + values[0] + strings[1] + values[1];\n}\n\nconst result = tag\\`Hello \\${'world'}! How are \\${'you'}?\\`;\nconsole.log(result); // \"Hello world! How are you?\"\n`})}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsx)(e.h2,{children:\"Tagged templates\"}),`\n`,(0,n.jsx)(e.h3,{children:\"What are tagged templates?\"}),`\n`,(0,n.jsx)(e.p,{children:`Tagged templates are a feature in JavaScript that allows you to call a function (the \"tag\") with a template literal. The tag function can then process the template literal's parts (both the literal strings and the interpolated values) in a custom way.`}),`\n`,(0,n.jsx)(e.h3,{children:\"Syntax\"}),`\n`,(0,n.jsx)(e.p,{children:\"The syntax for tagged templates involves placing a function name before a template literal:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function tag(strings, ...values) {\n  // Custom processing\n}\n\ntag\\`template literal with \\${values}\\`;\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"How it works\"}),`\n`,(0,n.jsx)(e.p,{children:\"When a tagged template is invoked, the tag function receives:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"An array of literal strings (the parts of the template that are not interpolated)\"}),`\n`,(0,n.jsx)(e.li,{children:\"The interpolated values as additional arguments\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"For example:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function tag(strings, ...values) {\n  console.log(strings); // [\"Hello \", \"! How are \", \"?\"]\n  console.log(values); // [\"world\", \"you\"]\n}\n\ntag\\`Hello \\${'world'}! How are \\${'you'}?\\`;\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Use cases\"}),`\n`,(0,n.jsx)(e.p,{children:\"Tagged templates can be used for various purposes, such as:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"String escaping\"}),\": Preventing XSS attacks by escaping user input\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Localization\"}),\": Translating template literals into different languages\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Custom formatting\"}),\": Applying custom formatting to the interpolated values\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Example\"}),`\n`,(0,n.jsx)(e.p,{children:\"Here is a simple example of a tagged template that escapes HTML:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function escapeHTML(strings, ...values) {\n  return strings.reduce((result, string, i) => {\n    const value = values[i - 1];\n    return (\n      result +\n      (value\n        ? String(value)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n        : '') +\n      string\n    );\n  });\n}\n\nconst userInput = '<script>alert(\"XSS\")<\\/script>';\nconst result = escapeHTML\\`User input: \\${userInput}\\`;\nconsole.log(result); // \"User input: &lt;script&gt;alert(&quot;XSS&quot;)&lt;/script&gt;\"\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates\",children:\"MDN Web Docs: Template literals\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://javascript.info/tagged-templates\",children:\"JavaScript.info: Tagged templates\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"http://exploringjs.com/es6/ch_template-literals.html#tagged-templates\",children:\"Exploring JS: Template literals\"})}),`\n`]})]})}function S(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(g,t)})):g(t)}var j=S;return w(y);})();\n;return Component;"
}