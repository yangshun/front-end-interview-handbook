{
  "description": null,
  "info": {
    "excerpt": null,
    "title": "How can you optimize network requests for better performance?",
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/how-can-you-optimize-network-requests-for-better-performance/en-US.mdx"
  },
  "solution": "var Component=(()=>{var h=Object.create;var t=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var f=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),b=(r,e)=>{for(var i in e)t(r,i,{get:e[i],enumerable:!0})},c=(r,e,i,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of p(e))!u.call(r,o)&&o!==i&&t(r,o,{get:()=>e[o],enumerable:!(s=m(e,o))||s.enumerable});return r};var v=(r,e,i)=>(i=r!=null?h(g(r)):{},c(e||!r||!r.__esModule?t(i,\"default\",{value:r,enumerable:!0}):i,r)),y=r=>c(t({},\"__esModule\",{value:!0}),r);var a=f((k,l)=>{l.exports=_jsx_runtime});var S={};b(S,{default:()=>C,frontmatter:()=>w});var n=v(a()),w={title:\"How can you optimize network requests for better performance?\"};function d(r){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",hr:\"hr\",h3:\"h3\",ul:\"ul\",li:\"li\",strong:\"strong\",a:\"a\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"To optimize network requests for better performance, you can minimize the number of requests, use caching, compress data, and leverage modern web technologies like HTTP/2 and service workers. For example, you can combine multiple CSS files into one to reduce the number of requests, use \",(0,n.jsx)(e.code,{children:\"Cache-Control\"}),\" headers to cache static assets, and enable Gzip compression on your server to reduce the size of the data being transferred.\"]}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsx)(e.h2,{children:\"How can you optimize network requests for better performance?\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Minimize the number of requests\"}),`\n`,(0,n.jsx)(e.p,{children:\"Reducing the number of network requests can significantly improve performance. Here are some strategies:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Combine files\"}),\": Merge multiple CSS or JavaScript files into a single file.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Image sprites\"}),\": Combine multiple images into a single sprite sheet and use CSS to display the correct part of the image.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Inline small assets\"}),\": Use data URIs to inline small images or fonts directly into your CSS or HTML.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Use caching\"}),`\n`,(0,n.jsx)(e.p,{children:\"Caching can reduce the need to make network requests for resources that have not changed:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"HTTP caching\"}),\": Use \",(0,n.jsx)(e.code,{children:\"Cache-Control\"}),\" and \",(0,n.jsx)(e.code,{children:\"ETag\"}),\" headers to control how and when resources are cached by the browser.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Service workers\"}),\": Implement service workers to cache assets and API responses, allowing your app to work offline and load faster on subsequent visits.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Compress data\"}),`\n`,(0,n.jsx)(e.p,{children:\"Reducing the size of the data being transferred can speed up network requests:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Gzip/Brotli compression\"}),\": Enable Gzip or Brotli compression on your server to compress HTML, CSS, and JavaScript files.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Minification\"}),\": Minify CSS, JavaScript, and HTML files to remove unnecessary characters and reduce file size.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Leverage modern web technologies\"}),`\n`,(0,n.jsx)(e.p,{children:\"Modern web technologies can help optimize network performance:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"HTTP/2\"}),\": Use HTTP/2 to take advantage of multiplexing, header compression, and server push, which can reduce latency and improve load times.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"CDNs\"}),\": Use Content Delivery Networks (CDNs) to serve static assets from locations closer to the user, reducing latency.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Optimize images\"}),`\n`,(0,n.jsx)(e.p,{children:\"Images often account for a large portion of the data transferred:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Responsive images\"}),\": Use the \",(0,n.jsx)(e.code,{children:\"srcset\"}),\" attribute to serve different image sizes based on the user's device.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Image formats\"}),\": Use modern image formats like WebP or AVIF, which offer better compression than traditional formats like JPEG or PNG.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Lazy loading\"}),\": Implement lazy loading to defer loading images until they are needed.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Reduce payload size\"}),`\n`,(0,n.jsx)(e.p,{children:\"Reducing the amount of data sent in each request can improve performance:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"API optimization\"}),\": Optimize API responses to include only the necessary data.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"GraphQL\"}),\": Use GraphQL to request only the specific data needed by the client.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching\",children:\"MDN Web Docs: HTTP caching\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/\",children:\"Google Developers: Optimizing content efficiency\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://web.dev/http2/\",children:\"Web.dev: Use HTTP/2\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\",children:\"MDN Web Docs: Service workers\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/image-optimization\",children:\"Google Developers: Image optimization\"})}),`\n`]})]})}function z(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(d,r)})):d(r)}var C=z;return y(S);})();\n;return Component;"
}