{
  "description": null,
  "info": {
    "excerpt": null,
    "title": "Que construções de idioma você usa para iterar sobre propriedades de objeto e itens de matriz?"
  },
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "medium",
    "duration": 5,
    "featured": true,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/what-language-constructs-do-you-use-for-iterating-over-object-properties-and-array-items",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 360,
    "similarQuestions": [],
    "slug": "what-language-constructs-do-you-use-for-iterating-over-object-properties-and-array-items",
    "subtitle": null,
    "topics": [
      "javascript"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/what-language-constructs-do-you-use-for-iterating-over-object-properties-and-array-items/pt-BR.mdx"
  },
  "solution": "var Component=(()=>{var p=Object.create;var c=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var f=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),v=(r,e)=>{for(var a in e)c(r,a,{get:e[a],enumerable:!0})},i=(r,e,a,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let n of h(e))!b.call(r,n)&&n!==a&&c(r,n,{get:()=>e[n],enumerable:!(d=m(e,n))||d.enumerable});return r};var j=(r,e,a)=>(a=r!=null?p(u(r)):{},i(e||!r||!r.__esModule?c(a,\"default\",{value:r,enumerable:!0}):a,r)),g=r=>i(c({},\"__esModule\",{value:!0}),r);var t=f((x,s)=>{s.exports=_jsx_runtime});var S={};v(S,{default:()=>z,frontmatter:()=>y});var o=j(t()),y={title:\"Que constru\\xE7\\xF5es de idioma voc\\xEA usa para iterar sobre propriedades de objeto e itens de matriz?\"};function l(r){let e=Object.assign({h2:\"h2\",h3:\"h3\",code:\"code\",pre:\"pre\",p:\"p\",strong:\"strong\",a:\"a\",em:\"em\"},r.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{children:\"Objetos\"}),`\n`,(0,o.jsxs)(e.h3,{children:[\"declara\\xE7\\xE3o \",(0,o.jsx)(e.code,{children:\"for...in\"})]}),`\n`,(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:\"language-js\",children:`for (const property in obj) {\n  console.log(property);\n}\n`})}),`\n`,(0,o.jsxs)(e.p,{children:[\"A declara\\xE7\\xE3o \",(0,o.jsx)(e.code,{children:\"for...in\"}),\" itera sobre todas as propriedades \",(0,o.jsx)(e.strong,{children:\"enumer\\xE1veis\"}),\" do objeto (incluindo as propriedades enumer\\xE1veis herdadas). Portanto, na maioria das vezes, voc\\xEA deve verificar se a propriedade existe diretamente no objeto por meio de \",(0,o.jsx)(e.code,{children:\"Object.hasOwn(object, property)\"}),\" antes de us\\xE1-la.\"]}),`\n`,(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:\"language-js\",children:`for (const property in obj) {\n  if (Object.hasOwn(obj, property)) {\n    console.log(property);\n  }\n}\n`})}),`\n`,(0,o.jsxs)(e.p,{children:[\"Observe que \",(0,o.jsx)(e.code,{children:\"obj.hasOwnProperty()\"}),\" n\\xE3o \\xE9 recomendado porque n\\xE3o funciona para objetos criados usando \",(0,o.jsx)(e.code,{children:\"Object.create(null)\"}),\". \\xC9 recomendado usar \",(0,o.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn\",children:(0,o.jsx)(e.code,{children:\"Object.hasOwn()\"})}),\" nos navegadores mais recentes, ou use o bom \",(0,o.jsx)(e.code,{children:\"Object.prototype.hasOwnProperty.call(object, key)\"}),\".\"]}),`\n`,(0,o.jsx)(e.h3,{children:(0,o.jsx)(e.code,{children:\"Object.keys()\"})}),`\n`,(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:\"language-js\",children:`Object.keys(obj).forEach((property) => {\n  console.log(property);\n});\n`})}),`\n`,(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:\"Object.keys()\"}),\" \\xE9 um m\\xE9todo est\\xE1tico que retornar\\xE1 um array com todos os nomes de propriedade enumerados do objeto que voc\\xEA passa. Uma vez que \",(0,o.jsx)(e.code,{children:\"Object.keys()\"}),\" retorna um array, voc\\xEA tamb\\xE9m pode usar as abordagens de itera\\xE7\\xE3o de matriz listadas abaixo para iterar atrav\\xE9s dele.\"]}),`\n`,(0,o.jsx)(e.p,{children:(0,o.jsxs)(e.em,{children:[\"Refer\\xEAncia: \",(0,o.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\",children:\"Object.keys() - JavaScript | MDN\"})]})}),`\n`,(0,o.jsx)(e.h3,{children:(0,o.jsx)(e.code,{children:\"Object.getOwnPropertyNames()\"})}),`\n`,(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:\"language-js\",children:`Object.getOwnPropertyNames(obj).forEach((property) => {\n  console.log(property);\n});\n`})}),`\n`,(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:\"Object.getOwnPropertyNames()\"}),\" \\xE9 um m\\xE9todo est\\xE1tico que listar\\xE1 todas as propriedades enumeradas e n\\xE3o-enumer\\xE1veis do objeto que voc\\xEA passou. Uma vez que \",(0,o.jsx)(e.code,{children:\"Object.getOwnPropertyNames()\"}),\" retorna uma matriz, voc\\xEA tamb\\xE9m pode usar as abordagens de itera\\xE7\\xE3o de matriz listadas abaixo para percorrer a matriz.\"]}),`\n`,(0,o.jsx)(e.p,{children:(0,o.jsxs)(e.em,{children:[\"Refer\\xEAncia: \",(0,o.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\",children:\"Object.keys() - JavaScript | MDN\"})]})}),`\n`,(0,o.jsx)(e.h2,{children:\"Arrays\"}),`\n`,(0,o.jsxs)(e.h3,{children:[(0,o.jsx)(e.code,{children:\"for\"}),\" loop\"]}),`\n`,(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:\"language-js\",children:`for (let i = 0; i < arr.length; i++) {\n  console.log(arr[i]);\n}\n`})}),`\n`,(0,o.jsxs)(e.p,{children:[\"Uma armadilha comum aqui \\xE9 que \",(0,o.jsx)(e.code,{children:\"var\"}),\" est\\xE1 no escopo da fun\\xE7\\xE3o e n\\xE3o no escopo de bloco, e na maioria das vezes voc\\xEA desejar\\xE1 uma vari\\xE1vel de iterador com escopo de bloco. ES2015 introduz o \",(0,o.jsx)(e.code,{children:\"let\"}),\" que tem escopo de bloco e \\xE9 recomendado usar \",(0,o.jsx)(e.code,{children:\"let\"}),\" em vez de \",(0,o.jsx)(e.code,{children:\"var\"}),\".\"]}),`\n`,(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:\"language-js\",children:`for (let i = 0; i < arr.length; i++) {\n  console.log(arr[i]);\n}\n`})}),`\n`,(0,o.jsx)(e.h3,{children:(0,o.jsx)(e.code,{children:\"Array.prototype.forEach()\"})}),`\n`,(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:\"language-js\",children:`arr.forEach((element, index) => {\n  console.log(element, index);\n});\n`})}),`\n`,(0,o.jsxs)(e.p,{children:[\"O m\\xE9todo \",(0,o.jsx)(e.code,{children:\"Array.prototype.forEach()\"}),\" pode ser mais conveniente em algumas situa\\xE7\\xF5es se voc\\xEA n\\xE3o precisar usar o \\xEDndice e s\\xF3 precisar dos elementos individuais do array. No entanto, o lado negativo \\xE9 que n\\xE3o se pode parar a itera\\xE7\\xE3o a meio do caminho e a fun\\xE7\\xE3o fornecida ser\\xE1 executada uma vez nos elementos. Um la\\xE7o \",(0,o.jsx)(e.code,{children:\"for\"}),\" ou uma declara\\xE7\\xE3o \",(0,o.jsx)(e.code,{children:\"for...of\"}),\" s\\xE3o mais relevantes quando \\xE9 necess\\xE1rio um controle mais preciso sobre a itera\\xE7\\xE3o.\"]}),`\n`,(0,o.jsx)(e.p,{children:(0,o.jsxs)(e.em,{children:[\"Refer\\xEAncia: \",(0,o.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\",children:\"Object.keys() - JavaScript | MDN\"})]})}),`\n`,(0,o.jsxs)(e.h3,{children:[\"declara\\xE7\\xE3o \",(0,o.jsx)(e.code,{children:\"for...of\"})]}),`\n`,(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:\"language-js\",children:`for (let element of arr) {\n  console.log(element);\n}\n`})}),`\n`,(0,o.jsxs)(e.p,{children:[\"ES2015 introduz uma nova forma de iterar, o la\\xE7o \",(0,o.jsx)(e.code,{children:\"para\"}),\", que permite repetir o loop sobre objetos que estejam em conformidade com o \",(0,o.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol\",children:\"protocolo iter\\xE1vel\"}),\" como \",(0,o.jsx)(e.code,{children:\"String\"}),\", \",(0,o.jsx)(e.code,{children:\"Array\"}),\", \",(0,o.jsx)(e.code,{children:\"Set\"}),\", etc. Ele combina as vantagens do loop \",(0,o.jsx)(e.code,{children:\"for\"}),\" e do m\\xE9todo \",(0,o.jsx)(e.code,{children:\"forEach()\"}),\". A vantagem do la\\xE7o \",(0,o.jsx)(e.code,{children:\"para\"}),\" \\xE9 que voc\\xEA pode parar dele, e a vantagem de \",(0,o.jsx)(e.code,{children:\"forEach()\"}),\" \\xE9 que ele \\xE9 mais conciso que o la\\xE7o \",(0,o.jsx)(e.code,{children:\"for\"}),\" porque voc\\xEA n\\xE3o precisa de uma vari\\xE1vel contadora. Com a declara\\xE7\\xE3o \",(0,o.jsx)(e.code,{children:\"for...of\"}),\", voc\\xEA obt\\xE9m a capacidade de quebrar de um la\\xE7o e uma sintaxe mais concisa.\"]}),`\n`,(0,o.jsxs)(e.p,{children:[\"A maioria das vezes, prefira o m\\xE9todo \",(0,o.jsx)(e.code,{children:\".forEach\"}),\", mas realmente depende do que voc\\xEA est\\xE1 tentando fazer. Antes do ES2015, usamos la\\xE7os \",(0,o.jsx)(e.code,{children:\"for\"}),\" quando precis\\xE1vamos encerrar prematuramente o la\\xE7o usando \",(0,o.jsx)(e.code,{children:\"break\"}),\". Mas agora com ES2015, podemos fazer isso com a declara\\xE7\\xE3o \",(0,o.jsx)(e.code,{children:\"for...of\"}),\". Use la\\xE7os \",(0,o.jsx)(e.code,{children:\"for\"}),\" quando voc\\xEA precisar de mais flexibilidade, como incrementar o iterador mais de uma vez por la\\xE7o.\"]}),`\n`,(0,o.jsxs)(e.p,{children:[\"Al\\xE9m disso, ao usar o \",(0,o.jsx)(e.code,{children:\"for...of\"}),\" declara\\xE7\\xE3o, se voc\\xEA precisar acessar o \\xEDndice e o valor de cada elemento de matriz, voc\\xEA pode fazer isso com ES2015 \",(0,o.jsx)(e.code,{children:\"Array.prototype.entries()\"}),\":\"]}),`\n`,(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:\"language-js\",children:`const arr = ['a', 'b', 'c'];\n\nfor (let [index, elem] of arr.entries()) {\n  console.log(index, ': ', elem);\n}\n`})}),`\n`,(0,o.jsx)(e.p,{children:(0,o.jsxs)(e.em,{children:[\"Refer\\xEAncia: \",(0,o.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of\",children:\"for...of - JavaScript | MDN\"})]})})]})}function O(r={}){let{wrapper:e}=r.components||{};return e?(0,o.jsx)(e,Object.assign({},r,{children:(0,o.jsx)(l,r)})):l(r)}var z=O;return g(S);})();\n;return Component;"
}