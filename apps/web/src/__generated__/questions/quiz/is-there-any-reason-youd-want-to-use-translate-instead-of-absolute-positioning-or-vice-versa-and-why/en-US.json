{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [
      "bytedance"
    ],
    "created": 1630800000,
    "difficulty": "hard",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/is-there-any-reason-youd-want-to-use-translate-instead-of-absolute-positioning-or-vice-versa-and-why",
    "importance": "high",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "is-there-any-reason-youd-want-to-use-translate-instead-of-absolute-positioning-or-vice-versa-and-why",
    "subtitle": null,
    "title": "Is there any reason you'd want to use `translate()` instead of `absolute` positioning, or vice-versa? And why?",
    "topics": [
      "css",
      "performance"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/front-end-interview-handbook/blob/main/packages/quiz/questions/is-there-any-reason-youd-want-to-use-translate-instead-of-absolute-positioning-or-vice-versa-and-why/en-US.mdx"
  },
  "solution": "var Component=(()=>{var g=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var w=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=>{for(var o in e)i(t,o,{get:e[o],enumerable:!0})},a=(t,e,o,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of u(e))!m.call(t,r)&&r!==o&&i(t,r,{get:()=>e[r],enumerable:!(s=p(e,r))||s.enumerable});return t};var x=(t,e,o)=>(o=t!=null?g(f(t)):{},a(e||!t||!t.__esModule?i(o,\"default\",{value:t,enumerable:!0}):o,t)),y=t=>a(i({},\"__esModule\",{value:!0}),t);var l=w((C,c)=>{c.exports=_jsx_runtime});var v={};b(v,{default:()=>d,frontmatter:()=>_});var n=x(l()),_={title:\"Is there any reason you'd want to use `translate()` instead of `absolute` positioning, or vice-versa? And why?\"};function h(t){let e={code:\"code\",p:\"p\",...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"translate()\"}),\" is a possible value of the CSS \",(0,n.jsx)(e.code,{children:\"transform\"}),\" property. When using \",(0,n.jsx)(e.code,{children:\"translate()\"}),\", the element still occupies its original space (sort of like \",(0,n.jsx)(e.code,{children:\"position: relative\"}),\"). But when changing the absolute positioning of elements, the elements are removed from the flow of the page and the positioning of the surrounding elements will be affected. Hence the page layout will have to be recalculated.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Changing \",(0,n.jsx)(e.code,{children:\"transform\"}),\" or \",(0,n.jsx)(e.code,{children:\"opacity\"}),\" does not trigger browser reflows or repaints but does trigger compositions; On the other hand, changing the absolute positioning triggers \",(0,n.jsx)(e.code,{children:\"reflow\"}),\". \",(0,n.jsx)(e.code,{children:\"transform\"}),\" causes the browser to create a GPU layer for the element but changing absolute positioning properties uses the CPU. Hence \",(0,n.jsx)(e.code,{children:\"translate()\"}),\" is more efficient and will result in shorter paint times for smoother animations.\"]})]})}function d(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(h,{...t})}):h(t)}return y(v);})();\n;return Component;"
}