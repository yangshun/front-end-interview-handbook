{
  "description": null,
  "info": {
    "excerpt": null,
    "title": "Explique delegação do evento"
  },
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [
      "linkedin"
    ],
    "created": 1630800000,
    "difficulty": "medium",
    "duration": 5,
    "featured": true,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/explain-event-delegation",
    "importance": "high",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 50,
    "similarQuestions": [],
    "slug": "explain-event-delegation",
    "subtitle": null,
    "topics": [
      "web-api",
      "javascript"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/explain-event-delegation/pt-BR.mdx"
  },
  "solution": "var Component=(()=>{var m=Object.create;var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var g=(o,e)=>()=>(e||o((e={exports:{}}).exports,e),e.exports),f=(o,e)=>{for(var i in e)a(o,i,{get:e[i],enumerable:!0})},l=(o,e,i,d)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of v(e))!p.call(o,t)&&t!==i&&a(o,t,{get:()=>e[t],enumerable:!(d=u(e,t))||d.enumerable});return o};var x=(o,e,i)=>(i=o!=null?m(h(o)):{},l(e||!o||!o.__esModule?a(i,\"default\",{value:o,enumerable:!0}):i,o)),E=o=>l(a({},\"__esModule\",{value:!0}),o);var r=g((M,s)=>{s.exports=_jsx_runtime});var D={};f(D,{default:()=>q,frontmatter:()=>b});var n=x(r()),b={title:\"Explique delega\\xE7\\xE3o do evento\"};function c(o){let e=Object.assign({p:\"p\",h2:\"h2\",ol:\"ol\",li:\"li\",strong:\"strong\",pre:\"pre\",code:\"code\",ul:\"ul\",a:\"a\"},o.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"A delega\\xE7\\xE3o de eventos \\xE9 um conceito fundamental no desenvolvimento web que permite gerenciar e tratar eventos eficientemente em v\\xE1rios elementos filhos, anexando um \\xFAnico ouvinte de eventos a um elemento ancestral comum. Em vez de atribuir ouvintes de eventos a cada elemento filho individualmente, voc\\xEA delega a responsabilidade de lidar com eventos ao elemento pai ou ancestral, que intercepta os eventos \\xE0 medida que eles sobem na \\xE1rvore DOM e identifica o alvo do evento.\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Benef\\xEDcios da delega\\xE7\\xE3o de eventos\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Efici\\xEAncia\"}),\": A delega\\xE7\\xE3o de eventos reduz significativamente o n\\xFAmero de ouvintes de eventos em seu c\\xF3digo, tornando-o mais eficiente em termos de mem\\xF3ria e melhorando o desempenho, especialmente ao lidar com um grande n\\xFAmero de elementos semelhantes. Isso resulta em um c\\xF3digo mais limpo e de f\\xE1cil manuten\\xE7\\xE3o.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Elementos Din\\xE2micos\"}),\": A delega\\xE7\\xE3o de eventos funciona perfeitamente com elementos gerados ou removidos dinamicamente no DOM. Voc\\xEA n\\xE3o precisa anexar ou remover ouvintes de eventos toda vez que novos elementos s\\xE3o adicionados ou removidos. O ouvinte de eventos delegado os trata automaticamente.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Exemplo\"}),`\n`,(0,n.jsx)(e.p,{children:\"Vamos ilustrar a delega\\xE7\\xE3o de eventos com um exemplo moderno usando a sintaxe do ES6:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`// HTML:\n// <ul id=\"item-list\">\n//   <li>Item 1</li>\n//   <li>Item 2</li>\n//   <li>Item 3</li>\n// </ul>\n\nconst itemList = document.getElementById('item-list');\n\nitemList.addEventListener('click', (event) => {\n  if (event.target.tagName === 'LI') {\n    console.log(\\`Clicou em \\${event.target.textContent}\\`);\n  }\n});\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Neste exemplo, um \\xFAnico ouvinte de eventos de clique \\xE9 anexado ao elemento \",(0,n.jsx)(e.code,{children:\"<ul>\"}),\". Quando ocorre um evento de clique em um elemento \",(0,n.jsx)(e.code,{children:\"<li>\"}),\", o evento se propaga at\\xE9 o elemento \",(0,n.jsx)(e.code,{children:\"<ul>\"}),\", onde o ouvinte de eventos verifica o nome da tag do alvo para identificar qual item da lista foi clicado.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Casos de uso\"}),`\n`,(0,n.jsx)(e.p,{children:\"A delega\\xE7\\xE3o de eventos \\xE9 comumente usada em v\\xE1rias situa\\xE7\\xF5es, incluindo:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Gerenciamento de listas, menus ou tabelas com muitos itens ou linhas.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Manipula\\xE7\\xE3o de conte\\xFAdo din\\xE2mico em aplicativos de p\\xE1gina \\xFAnica.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Simplifica\\xE7\\xE3o do c\\xF3digo, evitando a necessidade de anexar e remover ouvintes de eventos para elementos que mudam.\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Recursos\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/pt-BR/docs/Learn/JavaScript/Building_blocks/Events#event_delegation\",children:\"MDN Web Docs sobre Delega\\xE7\\xE3o de Eventos\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://javascript.info/event-delegation\",children:\"JavaScript.info - Delega\\xE7\\xE3o de Eventos\"})}),`\n`]})]})}function j(o={}){let{wrapper:e}=o.components||{};return e?(0,n.jsx)(e,Object.assign({},o,{children:(0,n.jsx)(c,o)})):c(o)}var q=j;return E(D);})();\n;return Component;"
}