{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "easy",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/whats-the-difference-between-an-attribute-and-a-property",
    "importance": "medium",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "whats-the-difference-between-an-attribute-and-a-property",
    "subtitle": null,
    "title": "What's the difference between an \"attribute\" and a \"property\" in the DOM?",
    "topics": [
      "web-api",
      "javascript",
      "html"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/whats-the-difference-between-an-attribute-and-a-property/en-US.mdx"
  },
  "solution": "var Component=(()=>{var u=Object.create;var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var b=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),f=(n,e)=>{for(var i in e)l(n,i,{get:e[i],enumerable:!0})},c=(n,e,i,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of m(e))!v.call(n,r)&&r!==i&&l(n,r,{get:()=>e[r],enumerable:!(a=p(e,r))||a.enumerable});return n};var y=(n,e,i)=>(i=n!=null?u(g(n)):{},c(e||!n||!n.__esModule?l(i,\"default\",{value:n,enumerable:!0}):i,n)),A=n=>c(l({},\"__esModule\",{value:!0}),n);var o=b((M,h)=>{h.exports=_jsx_runtime});var E={};f(E,{default:()=>d,frontmatter:()=>x});var t=y(o()),x={title:`What's the difference between an \"attribute\" and a \"property\" in the DOM?`};function s(n){let e={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Attributes are defined in the HTML and provide initial values for properties. Properties are part of the DOM and represent the current state of an element. For example, the \",(0,t.jsx)(e.code,{children:\"value\"}),\" attribute of an \",(0,t.jsx)(e.code,{children:\"<input>\"}),\" element sets its initial value, while the \",(0,t.jsx)(e.code,{children:\"value\"}),\" property reflects the current value as the user interacts with it.\"]}),`\n`,(0,t.jsx)(e.hr,{}),`\n`,(0,t.jsx)(e.h2,{children:'Difference between an \"attribute\" and a \"property\" in the DOM'}),`\n`,(0,t.jsx)(e.h3,{children:\"Attributes\"}),`\n`,(0,t.jsx)(e.p,{children:\"Attributes are defined in the HTML markup and provide initial values for elements. They are static and do not change once the page is loaded unless explicitly modified using JavaScript.\"}),`\n`,(0,t.jsx)(e.h4,{children:\"Example\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-html\",children:`<input type=\"text\" value=\"initial value\" />\n`})}),`\n`,(0,t.jsxs)(e.p,{children:[\"In this example, \",(0,t.jsx)(e.code,{children:'value=\"initial value\"'}),\" is an attribute.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Properties\"}),`\n`,(0,t.jsx)(e.p,{children:\"Properties are part of the DOM and represent the current state of an element. They are dynamic and can change as the user interacts with the page or through JavaScript.\"}),`\n`,(0,t.jsx)(e.h4,{children:\"Example\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-javascript\",children:`const inputElement = document.querySelector('input');\nconsole.log(inputElement.value); // Logs the current value of the input element\ninputElement.value = 'new value'; // Changes the current value of the input element\n`})}),`\n`,(0,t.jsxs)(e.p,{children:[\"In this example, \",(0,t.jsx)(e.code,{children:\"value\"}),\" is a property of the \",(0,t.jsx)(e.code,{children:\"inputElement\"}),\" object.\"]}),`\n`,(0,t.jsx)(e.h3,{children:\"Key differences\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"Initialization\"}),\": Attributes initialize DOM properties.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"State\"}),\": Attributes are static, while properties are dynamic.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"Access\"}),\": Attributes can be accessed using \",(0,t.jsx)(e.code,{children:\"getAttribute\"}),\" and \",(0,t.jsx)(e.code,{children:\"setAttribute\"}),\" methods, while properties can be accessed directly on the DOM object.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h4,{children:\"Example\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-html\",children:`<input id=\"myInput\" type=\"text\" value=\"initial value\" />\n`})}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-javascript\",children:`const inputElement = document.getElementById('myInput');\n\n// Accessing attribute\nconsole.log(inputElement.getAttribute('value')); // \"initial value\"\n\n// Accessing property\nconsole.log(inputElement.value); // \"initial value\"\n\n// Changing property\ninputElement.value = 'new value';\nconsole.log(inputElement.value); // \"new value\"\nconsole.log(inputElement.getAttribute('value')); // \"initial value\"\n`})}),`\n`,(0,t.jsxs)(e.p,{children:[\"In this example, changing the \",(0,t.jsx)(e.code,{children:\"value\"}),\" property does not affect the \",(0,t.jsx)(e.code,{children:\"value\"}),\" attribute.\"]}),`\n`,(0,t.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\",children:\"MDN Web Docs: Element.getAttribute()\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute\",children:\"MDN Web Docs: Element.setAttribute()\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes#html_attributes_vs_dom_properties\",children:\"MDN Web Docs: HTML attributes vs. DOM properties\"})}),`\n`]})]})}function d(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(s,{...n})}):s(n)}return A(E);})();\n;return Component;"
}