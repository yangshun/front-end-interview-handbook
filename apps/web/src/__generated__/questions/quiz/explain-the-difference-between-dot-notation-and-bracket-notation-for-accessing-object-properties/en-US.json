{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "easy",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/explain-the-difference-between-dot-notation-and-bracket-notation-for-accessing-object-properties",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "explain-the-difference-between-dot-notation-and-bracket-notation-for-accessing-object-properties",
    "subtitle": null,
    "title": "Explain the difference between dot notation and bracket notation for accessing object properties",
    "topics": [
      "javascript"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/explain-the-difference-between-dot-notation-and-bracket-notation-for-accessing-object-properties/en-US.mdx"
  },
  "solution": "var Component=(()=>{var p=Object.create;var a=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var f=(o,e)=>()=>(e||o((e={exports:{}}).exports,e),e.exports),j=(o,e)=>{for(var t in e)a(o,t,{get:e[t],enumerable:!0})},c=(o,e,t,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of u(e))!g.call(o,r)&&r!==t&&a(o,r,{get:()=>e[r],enumerable:!(i=m(e,r))||i.enumerable});return o};var v=(o,e,t)=>(t=o!=null?p(b(o)):{},c(e||!o||!o.__esModule?a(t,\"default\",{value:o,enumerable:!0}):t,o)),y=o=>c(a({},\"__esModule\",{value:!0}),o);var s=f((k,l)=>{l.exports=_jsx_runtime});var w={};j(w,{default:()=>d,frontmatter:()=>x});var n=v(s()),x={title:\"Explain the difference between dot notation and bracket notation for accessing object properties\"};function h(o){let e={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",ul:\"ul\",...o.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsx)(e.p,{children:\"Dot notation and bracket notation are two ways to access properties of an object in JavaScript. Dot notation is more concise and readable but can only be used with valid JavaScript identifiers. Bracket notation is more flexible and can be used with property names that are not valid identifiers, such as those containing spaces or special characters.\"}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const obj = { name: 'Alice', 'favorite color': 'blue' };\n\n// Dot notation\nconsole.log(obj.name); // Alice\n\n// Bracket notation\nconsole.log(obj['favorite color']); // blue\n`})}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsx)(e.h2,{children:\"Dot notation vs. bracket notation\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Dot notation\"}),`\n`,(0,n.jsx)(e.p,{children:\"Dot notation is the most common and straightforward way to access object properties. It is concise and easy to read but has some limitations.\"}),`\n`,(0,n.jsx)(e.h4,{children:\"Syntax\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`object.property;\n`})}),`\n`,(0,n.jsx)(e.h4,{children:\"Example\"}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const person = {\n  name: 'Alice',\n  age: 30,\n};\n\nconsole.log(person.name); // Alice\nconsole.log(person.age); // 30\n`})}),`\n`,(0,n.jsx)(e.h4,{children:\"Limitations\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Property names must be valid JavaScript identifiers (e.g., no spaces, special characters, or starting with a number)\"}),`\n`,(0,n.jsx)(e.li,{children:\"Property names cannot be dynamic (i.e., they must be hardcoded)\"}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Bracket notation\"}),`\n`,(0,n.jsx)(e.p,{children:\"Bracket notation is more flexible and can be used in situations where dot notation cannot.\"}),`\n`,(0,n.jsx)(e.h4,{children:\"Syntax\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`object['property'];\n`})}),`\n`,(0,n.jsx)(e.h4,{children:\"Example\"}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const person = {\n  name: 'Alice',\n  'favorite color': 'blue',\n  1: 'one',\n};\n\nconsole.log(person['name']); // Alice\nconsole.log(person['favorite color']); // blue\nconsole.log(person[1]); // one\n`})}),`\n`,(0,n.jsx)(e.h4,{children:\"Advantages\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Can access properties with names that are not valid JavaScript identifiers\"}),`\n`,(0,n.jsx)(e.li,{children:\"Can use variables or expressions to dynamically determine the property name\"}),`\n`]}),`\n`,(0,n.jsx)(e.h4,{children:\"Example with dynamic property names\"}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const person = {\n  name: 'Alice',\n  age: 30,\n};\n\nconst property = 'name';\nconsole.log(person[property]); // Alice\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects\",children:\"MDN Web Docs: Working with objects\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://javascript.info/object\",children:\"JavaScript.info: Objects\"})}),`\n`]})]})}function d(o={}){let{wrapper:e}=o.components||{};return e?(0,n.jsx)(e,{...o,children:(0,n.jsx)(h,{...o})}):h(o)}return y(w);})();\n;return Component;"
}