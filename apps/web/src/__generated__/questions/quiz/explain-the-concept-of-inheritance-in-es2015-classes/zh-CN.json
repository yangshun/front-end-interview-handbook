{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "easy",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/explain-the-concept-of-inheritance-in-es2015-classes",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "explain-the-concept-of-inheritance-in-es2015-classes",
    "subtitle": null,
    "title": "解释 ES2015 类中的继承概念",
    "topics": [
      "javascript",
      "oop"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/explain-the-concept-of-inheritance-in-es2015-classes/zh-CN.mdx"
  },
  "solution": "var Component=(()=>{var d=Object.create;var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var x=(s,n)=>()=>(n||s((n={exports:{}}).exports,n),n.exports),k=(s,n)=>{for(var r in n)c(s,r,{get:n[r],enumerable:!0})},o=(s,n,r,l)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let a of m(n))!u.call(s,a)&&a!==r&&c(s,a,{get:()=>n[a],enumerable:!(l=p(n,a))||l.enumerable});return s};var b=(s,n,r)=>(r=s!=null?d(g(s)):{},o(n||!s||!s.__esModule?c(r,\"default\",{value:s,enumerable:!0}):r,s)),C=s=>o(c({},\"__esModule\",{value:!0}),s);var i=x((S,t)=>{t.exports=_jsx_runtime});var _={};k(_,{default:()=>f,frontmatter:()=>D});var e=b(i()),D={title:\"\\u89E3\\u91CA ES2015 \\u7C7B\\u4E2D\\u7684\\u7EE7\\u627F\\u6982\\u5FF5\"};function h(s){let n=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",pre:\"pre\",hr:\"hr\",h3:\"h3\",ul:\"ul\",li:\"li\",a:\"a\"},s.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h2,{children:\"TL;DR\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"ES2015 \\u7C7B\\u4E2D\\u7684\\u7EE7\\u627F\\u5141\\u8BB8\\u4E00\\u4E2A\\u7C7B\\u6269\\u5C55\\u53E6\\u4E00\\u4E2A\\u7C7B\\uFF0C\\u4F7F\\u5B50\\u7C7B\\u80FD\\u591F\\u4ECE\\u7236\\u7C7B\\u7EE7\\u627F\\u5C5E\\u6027\\u548C\\u65B9\\u6CD5\\u3002\\u8FD9\\u662F\\u4F7F\\u7528 \",(0,e.jsx)(n.code,{children:\"extends\"}),\" \\u5173\\u952E\\u5B57\\u5B8C\\u6210\\u7684\\u3002\",(0,e.jsx)(n.code,{children:\"super\"}),\" \\u5173\\u952E\\u5B57\\u7528\\u4E8E\\u8C03\\u7528\\u7236\\u7C7B\\u7684\\u6784\\u9020\\u51FD\\u6570\\u548C\\u65B9\\u6CD5\\u3002\\u8FD9\\u662F\\u4E00\\u4E2A\\u5FEB\\u901F\\u793A\\u4F8B\\uFF1A\"]}),`\n`,(0,e.jsx)(n.pre,{live:!0,children:(0,e.jsx)(n.code,{className:\"language-js\",children:`class Animal {\n  constructor(name) {\n    this.name = name;\n  }\n\n  speak() {\n    console.log(\\`\\${this.name} makes a noise.\\`);\n  }\n}\n\nclass Dog extends Animal {\n  constructor(name, breed) {\n    super(name);\n    this.breed = breed;\n  }\n\n  speak() {\n    console.log(\\`\\${this.name} barks.\\`);\n  }\n}\n\nconst dog = new Dog('Rex', 'German Shepherd');\ndog.speak(); // Rex barks.\n`})}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.h2,{children:\"ES2015 \\u7C7B\\u4E2D\\u7684\\u7EE7\\u627F\"}),`\n`,(0,e.jsx)(n.h3,{children:\"\\u57FA\\u672C\\u6982\\u5FF5\"}),`\n`,(0,e.jsx)(n.p,{children:\"ES2015 \\u7C7B\\u4E2D\\u7684\\u7EE7\\u627F\\u5141\\u8BB8\\u4E00\\u4E2A\\u7C7B\\uFF08\\u5B50\\u7C7B\\uFF09\\u4ECE\\u53E6\\u4E00\\u4E2A\\u7C7B\\uFF08\\u7236\\u7C7B\\uFF09\\u7EE7\\u627F\\u5C5E\\u6027\\u548C\\u65B9\\u6CD5\\u3002\\u8FD9\\u4FC3\\u8FDB\\u4E86\\u4EE3\\u7801\\u91CD\\u7528\\u548C\\u5206\\u5C42\\u7C7B\\u7ED3\\u6784\\u3002\"}),`\n`,(0,e.jsxs)(n.h3,{children:[\"\\u4F7F\\u7528 \",(0,e.jsx)(n.code,{children:\"extends\"}),\" \\u5173\\u952E\\u5B57\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"\\u4F7F\\u7528 \",(0,e.jsx)(n.code,{children:\"extends\"}),\" \\u5173\\u952E\\u5B57\\u53EF\\u4EE5\\u521B\\u5EFA\\u4E00\\u4E2A\\u4F5C\\u4E3A\\u53E6\\u4E00\\u4E2A\\u7C7B\\u5B50\\u7C7B\\u7684\\u7C7B\\u3002\\u5B50\\u7C7B\\u7EE7\\u627F\\u7236\\u7C7B\\u7684\\u6240\\u6709\\u5C5E\\u6027\\u548C\\u65B9\\u6CD5\\u3002\"]}),`\n`,(0,e.jsx)(n.pre,{live:!0,children:(0,e.jsx)(n.code,{className:\"language-js\",children:`class ParentClass {\n  constructor() {\n    this.parentProperty = 'I am a parent property';\n  }\n\n  parentMethod() {\n    console.log('This is a parent method');\n  }\n}\n\nclass ChildClass extends ParentClass {\n  constructor() {\n    super(); // Calls the parent class constructor\n    this.childProperty = 'I am a child property';\n  }\n\n  childMethod() {\n    console.log('This is a child method');\n  }\n}\n\nconst child = new ChildClass();\nconsole.log(child.parentProperty); // I am a parent property\nchild.parentMethod(); // This is a parent method\n`})}),`\n`,(0,e.jsxs)(n.h3,{children:[\"\\u4F7F\\u7528 \",(0,e.jsx)(n.code,{children:\"super\"}),\" \\u5173\\u952E\\u5B57\"]}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"super\"}),\" \\u5173\\u952E\\u5B57\\u7528\\u4E8E\\u8C03\\u7528\\u7236\\u7C7B\\u7684\\u6784\\u9020\\u51FD\\u6570\\u5E76\\u8BBF\\u95EE\\u5176\\u65B9\\u6CD5\\u3002\\u5F53\\u60A8\\u60F3\\u5728\\u5B50\\u7C7B\\u4E2D\\u521D\\u59CB\\u5316\\u7236\\u7C7B\\u5C5E\\u6027\\u65F6\\uFF0C\\u8FD9\\u662F\\u5FC5\\u9700\\u7684\\u3002\"]}),`\n`,(0,e.jsx)(n.pre,{live:!0,children:(0,e.jsx)(n.code,{className:\"language-js\",children:`class Animal {\n  constructor(name) {\n    this.name = name;\n  }\n\n  speak() {\n    console.log(\\`\\${this.name} makes a noise.\\`);\n  }\n}\n\nclass Dog extends Animal {\n  constructor(name, breed) {\n    super(name); // Calls the parent class constructor\n    this.breed = breed;\n  }\n\n  speak() {\n    super.speak(); // Calls the parent class method\n    console.log(\\`\\${this.name} barks.\\`);\n  }\n}\n\nconst dog = new Dog('Rex', 'German Shepherd');\ndog.speak();\n// Rex makes a noise.\n// Rex barks.\n`})}),`\n`,(0,e.jsx)(n.h3,{children:\"\\u65B9\\u6CD5\\u91CD\\u5199\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\u5B50\\u7C7B\\u53EF\\u4EE5\\u91CD\\u5199\\u7236\\u7C7B\\u4E2D\\u7684\\u65B9\\u6CD5\\u3002\\u8FD9\\u5141\\u8BB8\\u5B50\\u7C7B\\u63D0\\u4F9B\\u5DF2\\u7ECF\\u5728\\u7236\\u7C7B\\u4E2D\\u5B9A\\u4E49\\u7684\\u65B9\\u6CD5\\u7684\\u7279\\u5B9A\\u5B9E\\u73B0\\u3002\"}),`\n`,(0,e.jsx)(n.pre,{live:!0,children:(0,e.jsx)(n.code,{className:\"language-js\",children:`class Animal {\n  speak() {\n    console.log('Animal makes a noise.');\n  }\n}\n\nclass Dog extends Animal {\n  speak() {\n    console.log('Dog barks.');\n  }\n}\n\nconst dog = new Dog();\ndog.speak(); // Dog barks.\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u5EF6\\u4F38\\u9605\\u8BFB\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes\",children:\"MDN Web \\u6587\\u6863\\uFF1A\\u7C7B\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\",children:\"MDN Web \\u6587\\u6863\\uFF1A\\u7EE7\\u627F\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"https://zh.javascript.info/class-inheritance\",children:\"JavaScript.info\\uFF1A\\u7C7B\\u7EE7\\u627F\"})}),`\n`]})]})}function j(s={}){let{wrapper:n}=s.components||{};return n?(0,e.jsx)(n,Object.assign({},s,{children:(0,e.jsx)(h,s)})):h(s)}var f=j;return C(_);})();\n;return Component;"
}