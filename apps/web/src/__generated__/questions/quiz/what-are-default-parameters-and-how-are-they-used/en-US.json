{
  "description": null,
  "info": {
    "excerpt": null,
    "title": "What are default parameters and how are they used?",
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/what-are-default-parameters-and-how-are-they-used/en-US.mdx"
  },
  "solution": "var Component=(()=>{var u=Object.create;var l=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var g=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),v=(a,e)=>{for(var t in e)l(a,t,{get:e[t],enumerable:!0})},s=(a,e,t,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of p(e))!m.call(a,r)&&r!==t&&l(a,r,{get:()=>e[r],enumerable:!(i=h(e,r))||i.enumerable});return a};var b=(a,e,t)=>(t=a!=null?u(f(a)):{},s(e||!a||!a.__esModule?l(t,\"default\",{value:a,enumerable:!0}):t,a)),x=a=>s(l({},\"__esModule\",{value:!0}),a);var o=g((D,d)=>{d.exports=_jsx_runtime});var A={};v(A,{default:()=>j,frontmatter:()=>w});var n=b(o()),w={title:\"What are default parameters and how are they used?\"};function c(a){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",pre:\"pre\",hr:\"hr\",h3:\"h3\",ul:\"ul\",li:\"li\",a:\"a\"},a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Default parameters in JavaScript allow you to set default values for function parameters if no value or \",(0,n.jsx)(e.code,{children:\"undefined\"}),\" is passed. This helps avoid \",(0,n.jsx)(e.code,{children:\"undefined\"}),\" values and makes your code more robust. You can define default parameters by assigning a value to the parameter in the function definition.\"]}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function greet(name = 'Guest') {\n  console.log(\\`Hello, \\${name}!\\`);\n}\n\ngreet(); // Output: Hello, Guest!\ngreet('Alice'); // Output: Hello, Alice!\n`})}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsx)(e.h2,{children:\"Default parameters\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Default parameters in JavaScript provide a way to set default values for function parameters. This feature was introduced in ECMAScript 2015 (ES6) and helps to make functions more robust and easier to work with by avoiding \",(0,n.jsx)(e.code,{children:\"undefined\"}),\" values when no arguments are passed.\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"Syntax\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"You can define default parameters by assigning a value to the parameter in the function definition. If no value or \",(0,n.jsx)(e.code,{children:\"undefined\"}),\" is passed for that parameter, the default value will be used.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function functionName(parameter1 = defaultValue1, parameter2 = defaultValue2) {\n  // function body\n}\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Example\"}),`\n`,(0,n.jsx)(e.p,{children:\"Here is a simple example to illustrate how default parameters work:\"}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function greet(name = 'Guest') {\n  console.log(\\`Hello, \\${name}!\\`);\n}\n\ngreet(); // Output: Hello, Guest!\ngreet('Alice'); // Output: Hello, Alice!\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"In this example, the \",(0,n.jsx)(e.code,{children:\"greet\"}),\" function has a default parameter \",(0,n.jsx)(e.code,{children:\"name\"}),\" with a default value of \",(0,n.jsx)(e.code,{children:\"'Guest'\"}),\". When the function is called without any arguments, it uses the default value. When an argument is provided, it overrides the default value.\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"Multiple default parameters\"}),`\n`,(0,n.jsx)(e.p,{children:\"You can also define multiple default parameters in a function:\"}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function createUser(username = 'Anonymous', age = 18) {\n  console.log(\\`Username: \\${username}, Age: \\${age}\\`);\n}\n\ncreateUser(); // Output: Username: Anonymous, Age: 18\ncreateUser('John'); // Output: Username: John, Age: 18\ncreateUser('John', 25); // Output: Username: John, Age: 25\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"In this example, the \",(0,n.jsx)(e.code,{children:\"createUser\"}),\" function has two default parameters: \",(0,n.jsx)(e.code,{children:\"username\"}),\" and \",(0,n.jsx)(e.code,{children:\"age\"}),\". If no arguments are passed, both default values are used. If only one argument is passed, the second parameter uses its default value.\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"Using expressions as default values\"}),`\n`,(0,n.jsx)(e.p,{children:\"You can also use expressions as default values for parameters:\"}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function add(a = 0, b = a + 1) {\n  return a + b;\n}\n\nconsole.log(add()); // Output: 1\nconsole.log(add(5)); // Output: 11\nconsole.log(add(5, 10)); // Output: 15\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"In this example, the default value for \",(0,n.jsx)(e.code,{children:\"b\"}),\" is an expression that depends on the value of \",(0,n.jsx)(e.code,{children:\"a\"}),\". If no arguments are passed, \",(0,n.jsx)(e.code,{children:\"a\"}),\" is \",(0,n.jsx)(e.code,{children:\"0\"}),\" and \",(0,n.jsx)(e.code,{children:\"b\"}),\" is \",(0,n.jsx)(e.code,{children:\"1\"}),\". If only \",(0,n.jsx)(e.code,{children:\"a\"}),\" is passed, \",(0,n.jsx)(e.code,{children:\"b\"}),\" is \",(0,n.jsx)(e.code,{children:\"a + 1\"}),\". If both \",(0,n.jsx)(e.code,{children:\"a\"}),\" and \",(0,n.jsx)(e.code,{children:\"b\"}),\" are passed, the provided values are used.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters\",children:\"MDN Web Docs: Default parameters\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://javascript.info/function-basics#default-values\",children:\"JavaScript.info: Default parameters\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://www.ecma-international.org/ecma-262/6.0/#sec-function-definitions\",children:\"ECMAScript 2015 (ES6) specification\"})}),`\n`]})]})}function y(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,Object.assign({},a,{children:(0,n.jsx)(c,a)})):c(a)}var j=y;return x(A);})();\n;return Component;"
}