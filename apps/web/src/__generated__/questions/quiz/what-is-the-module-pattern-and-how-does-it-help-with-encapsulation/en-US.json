{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "easy",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/what-is-the-module-pattern-and-how-does-it-help-with-encapsulation",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "what-is-the-module-pattern-and-how-does-it-help-with-encapsulation",
    "subtitle": null,
    "title": "What is the Module pattern and how does it help with encapsulation?",
    "topics": [
      "javascript"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/what-is-the-module-pattern-and-how-does-it-help-with-encapsulation/en-US.mdx"
  },
  "solution": "var Component=(()=>{var p=Object.create;var o=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var b=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),f=(t,e)=>{for(var a in e)o(t,a,{get:e[a],enumerable:!0})},l=(t,e,a,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of m(e))!v.call(t,i)&&i!==a&&o(t,i,{get:()=>e[i],enumerable:!(r=u(e,i))||r.enumerable});return t};var M=(t,e,a)=>(a=t!=null?p(g(t)):{},l(e||!t||!t.__esModule?o(a,\"default\",{value:t,enumerable:!0}):a,t)),y=t=>l(o({},\"__esModule\",{value:!0}),t);var c=b((j,d)=>{d.exports=_jsx_runtime});var I={};f(I,{default:()=>h,frontmatter:()=>w});var n=M(c()),w={title:\"What is the Module pattern and how does it help with encapsulation?\"};function s(t){let e={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",ul:\"ul\",...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsx)(e.p,{children:\"The Module pattern in JavaScript is a design pattern used to create self-contained modules of code. It helps with encapsulation by allowing you to define private and public members within a module. Private members are not accessible from outside the module, while public members are exposed through a returned object. This pattern helps in organizing code, avoiding global namespace pollution, and maintaining a clean separation of concerns.\"}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`var myModule = (function () {\n  var privateVar = 'I am private';\n\n  function privateMethod() {\n    console.log(privateVar);\n  }\n\n  return {\n    publicMethod: function () {\n      privateMethod();\n    },\n  };\n})();\n\nmyModule.publicMethod(); // Logs: I am private\n`})}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsx)(e.h2,{children:\"What is the Module pattern and how does it help with encapsulation?\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Introduction to the Module pattern\"}),`\n`,(0,n.jsx)(e.p,{children:\"The Module pattern is a design pattern used in JavaScript to create modules of code that are self-contained. It leverages closures to create private and public members, allowing for better organization and encapsulation of code.\"}),`\n`,(0,n.jsx)(e.h3,{children:\"How the Module pattern works\"}),`\n`,(0,n.jsx)(e.p,{children:\"The Module pattern typically involves an immediately-invoked function expression (IIFE) that returns an object. This object contains methods and properties that are exposed as the public API of the module. Inside the IIFE, you can define private variables and functions that are not accessible from outside the module.\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Example of the Module pattern\"}),`\n`,(0,n.jsx)(e.p,{children:\"Here is a simple example of the Module pattern:\"}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`var myModule = (function () {\n  // Private members\n  var privateVar = 'I am private';\n\n  function privateMethod() {\n    console.log(privateVar);\n  }\n\n  // Public members\n  return {\n    publicMethod: function () {\n      privateMethod();\n    },\n  };\n})();\n\nmyModule.publicMethod(); // Logs: I am private\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"In this example:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"privateVar\"}),\" and \",(0,n.jsx)(e.code,{children:\"privateMethod\"}),\" are private members and cannot be accessed directly from outside the module.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"publicMethod\"}),\" is a public member and can be accessed from outside the module. It can interact with the private members.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Benefits of using the Module pattern\"}),`\n`,(0,n.jsx)(e.h4,{children:\"Encapsulation\"}),`\n`,(0,n.jsx)(e.p,{children:\"The Module pattern helps in encapsulating code by hiding the internal implementation details and exposing only the necessary parts. This makes the code more modular and easier to maintain.\"}),`\n`,(0,n.jsx)(e.h4,{children:\"Avoiding global namespace pollution\"}),`\n`,(0,n.jsx)(e.p,{children:\"By using the Module pattern, you can avoid polluting the global namespace with variables and functions. This reduces the risk of naming collisions and makes the code more robust.\"}),`\n`,(0,n.jsx)(e.h4,{children:\"Separation of concerns\"}),`\n`,(0,n.jsx)(e.p,{children:\"The Module pattern promotes a clean separation of concerns by allowing you to group related functionality together. This makes the code more organized and easier to understand.\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Conclusion\"}),`\n`,(0,n.jsx)(e.p,{children:\"The Module pattern is a powerful tool in JavaScript for creating self-contained modules of code. It helps with encapsulation by allowing you to define private and public members, making the code more modular, maintainable, and organized.\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://toddmotto.com/mastering-the-module-pattern/\",children:\"JavaScript Module Pattern: In-Depth\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures\",children:\"MDN Web Docs: Closures\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://addyosmani.com/resources/essentialjsdesignpatterns/book/#modulepatternjavascript\",children:\"Addy Osmani's Learning JavaScript Design Patterns\"})}),`\n`]})]})}function h(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(s,{...t})}):s(t)}return y(I);})();\n;return Component;"
}