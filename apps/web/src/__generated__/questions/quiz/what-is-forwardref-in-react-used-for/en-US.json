{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "medium",
    "duration": 5,
    "excerpt": null,
    "featured": true,
    "format": "quiz",
    "frameworkDefault": "react",
    "frameworks": [
      {
        "framework": "react",
        "href": "/questions/quiz/what-is-forwardref-in-react-used-for"
      }
    ],
    "href": "/questions/quiz/what-is-forwardref-in-react-used-for",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 210,
    "similarQuestions": [],
    "slug": "what-is-forwardref-in-react-used-for",
    "subtitle": null,
    "title": "What is `forwardRef()` in React used for?",
    "topics": [
      "react"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-reactjs-interview-questions/blob/main/questions/what-is-forwardref-in-react-used-for/en-US.mdx"
  },
  "solution": "var Component=(()=>{var f=Object.create;var c=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var R=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),g=(r,e)=>{for(var t in e)c(r,t,{get:e[t],enumerable:!0})},d=(r,e,t,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of p(e))!w.call(r,o)&&o!==t&&c(r,o,{get:()=>e[o],enumerable:!(i=u(e,o))||i.enumerable});return r};var y=(r,e,t)=>(t=r!=null?f(m(r)):{},d(e||!r||!r.__esModule?c(t,\"default\",{value:r,enumerable:!0}):t,r)),x=r=>d(c({},\"__esModule\",{value:!0}),r);var a=R((T,l)=>{l.exports=_jsx_runtime});var M={};g(M,{default:()=>s,frontmatter:()=>I});var n=y(a()),I={title:\"What is `forwardRef()` in React used for?\"};function h(r){let e={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"forwardRef()\"}),\" in React is used to pass a ref through a component to one of its child components. This is useful when you need to access a DOM element or a child component's instance directly from a parent component. You wrap your functional component with \",(0,n.jsx)(e.code,{children:\"forwardRef()\"}),\" and use the \",(0,n.jsx)(e.code,{children:\"ref\"}),\" parameter to forward the ref to the desired child element.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`import React, { forwardRef } from 'react';\n\nconst MyComponent = forwardRef((props, ref) => <input ref={ref} {...props} />);\n`})}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsxs)(e.h2,{children:[\"What is \",(0,n.jsx)(e.code,{children:\"forwardRef()\"}),\" in React used for?\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"Introduction\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"In React, \",(0,n.jsx)(e.code,{children:\"forwardRef()\"}),\" is a higher-order function that allows you to forward a ref through a component to one of its child components. This is particularly useful when you need to access a DOM element or a child component's instance directly from a parent component.\"]}),`\n`,(0,n.jsxs)(e.h3,{children:[\"Why use \",(0,n.jsx)(e.code,{children:\"forwardRef()\"}),\"?\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"There are several scenarios where \",(0,n.jsx)(e.code,{children:\"forwardRef()\"}),\" is beneficial:\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Accessing DOM elements\"}),\": When you need to manipulate a DOM element directly, such as focusing an input field.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Interacting with child components\"}),\": When you need to call methods or access properties of a child component instance.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.h3,{children:[\"How to use \",(0,n.jsx)(e.code,{children:\"forwardRef()\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"To use \",(0,n.jsx)(e.code,{children:\"forwardRef()\"}),\", you wrap your functional component with it and use the \",(0,n.jsx)(e.code,{children:\"ref\"}),\" parameter to forward the ref to the desired child element.\"]}),`\n`,(0,n.jsx)(e.h4,{children:\"Example\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Here is a simple example demonstrating how to use \",(0,n.jsx)(e.code,{children:\"forwardRef()\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-jsx\",children:`import React, { forwardRef, useRef } from 'react';\n\n// Define a functional component and wrap it with forwardRef\nconst MyInput = forwardRef((props, ref) => <input ref={ref} {...props} />);\n\nconst ParentComponent = () => {\n  const inputRef = useRef(null);\n\n  const focusInput = () => {\n    // Access the input element and focus it\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  return (\n    <div>\n      <MyInput ref={inputRef} placeholder=\"Type here...\" />\n      <button onClick={focusInput}>Focus Input</button>\n    </div>\n  );\n};\n\nexport default ParentComponent;\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"In this example:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"MyInput\"}),\" is a functional component wrapped with \",(0,n.jsx)(e.code,{children:\"forwardRef()\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"The \",(0,n.jsx)(e.code,{children:\"ref\"}),\" parameter is forwarded to the \",(0,n.jsx)(e.code,{children:\"input\"}),\" element inside \",(0,n.jsx)(e.code,{children:\"MyInput\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"In \",(0,n.jsx)(e.code,{children:\"ParentComponent\"}),\", a ref (\",(0,n.jsx)(e.code,{children:\"inputRef\"}),\") is created using \",(0,n.jsx)(e.code,{children:\"useRef()\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"The \",(0,n.jsx)(e.code,{children:\"inputRef\"}),\" is passed to \",(0,n.jsx)(e.code,{children:\"MyInput\"}),\", allowing the parent component to access the input element directly.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"The \",(0,n.jsx)(e.code,{children:\"focusInput\"}),\" function uses the ref to focus the input element when the button is clicked.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Important considerations\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Functional components only\"}),\": \",(0,n.jsx)(e.code,{children:\"forwardRef()\"}),\" is used with functional components. Class components can directly use refs without \",(0,n.jsx)(e.code,{children:\"forwardRef()\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Ref forwarding\"}),\": Ensure that the ref is forwarded to a DOM element or a class component instance, not another functional component.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://react.dev/reference/react/forwardRef\",children:[\"React documentation on \",(0,n.jsx)(e.code,{children:\"forwardRef()\"})]})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://react.dev/reference/react/useRef\",children:[\"Using the \",(0,n.jsx)(e.code,{children:\"useRef\"}),\" Hook\"]})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://react.dev/learn/manipulating-the-dom-with-refs\",children:\"Refs and the DOM\"})}),`\n`]})]})}function s(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(h,{...r})}):h(r)}return x(M);})();\n;return Component;"
}