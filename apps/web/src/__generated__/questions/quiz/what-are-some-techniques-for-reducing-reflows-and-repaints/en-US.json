{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "easy",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/what-are-some-techniques-for-reducing-reflows-and-repaints",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "what-are-some-techniques-for-reducing-reflows-and-repaints",
    "subtitle": null,
    "title": "What are some techniques for reducing reflows and repaints?",
    "topics": [
      "browser",
      "javascript",
      "performance"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/what-are-some-techniques-for-reducing-reflows-and-repaints/en-US.mdx"
  },
  "solution": "var Component=(()=>{var m=Object.create;var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var w=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),y=(i,e)=>{for(var t in e)r(i,t,{get:e[t],enumerable:!0})},c=(i,e,t,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of u(e))!f.call(i,l)&&l!==t&&r(i,l,{get:()=>e[l],enumerable:!(a=g(e,l))||a.enumerable});return i};var x=(i,e,t)=>(t=i!=null?m(p(i)):{},c(e||!i||!i.__esModule?r(t,\"default\",{value:i,enumerable:!0}):t,i)),v=i=>c(r({},\"__esModule\",{value:!0}),i);var s=w((b,o)=>{o.exports=_jsx_runtime});var M={};y(M,{default:()=>d,frontmatter:()=>D});var n=x(s()),D={title:\"What are some techniques for reducing reflows and repaints?\"};function h(i){let e={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",ul:\"ul\",...i.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"To reduce reflows and repaints, you can minimize DOM manipulations, batch DOM changes, use CSS classes for style changes, avoid complex CSS selectors, and use \",(0,n.jsx)(e.code,{children:\"requestAnimationFrame\"}),\" for animations. Additionally, consider using \",(0,n.jsx)(e.code,{children:\"will-change\"}),\" for elements that will change frequently and avoid layout thrashing by reading and writing to the DOM separately.\"]}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsx)(e.h2,{children:\"Techniques for reducing reflows and repaints\"}),`\n`,(0,n.jsx)(e.h3,{children:\"Minimize DOM manipulations\"}),`\n`,(0,n.jsx)(e.p,{children:\"Frequent changes to the DOM can cause multiple reflows and repaints. To minimize this:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Use \",(0,n.jsx)(e.code,{children:\"documentFragment\"}),\" to batch DOM updates\"]}),`\n`,(0,n.jsx)(e.li,{children:\"Clone nodes, make changes, and then replace the original node\"}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Batch DOM changes\"}),`\n`,(0,n.jsx)(e.p,{children:\"Grouping multiple DOM changes together can reduce the number of reflows and repaints:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"Use \",(0,n.jsx)(e.code,{children:\"innerHTML\"}),\" to update multiple elements at once\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Use \",(0,n.jsx)(e.code,{children:\"requestAnimationFrame\"}),\" to batch updates\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Use CSS classes for style changes\"}),`\n`,(0,n.jsx)(e.p,{children:\"Instead of changing styles directly via JavaScript, use CSS classes:\"}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const element = document.createElement('h1');\nelement.classList.add('text-center');\n\nconsole.log(element); // Notice that the class has been added.\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Avoid complex CSS selectors\"}),`\n`,(0,n.jsx)(e.p,{children:\"Complex selectors can slow down the rendering process:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Use simple and direct selectors\"}),`\n`,(0,n.jsx)(e.li,{children:\"Avoid deep nesting\"}),`\n`]}),`\n`,(0,n.jsxs)(e.h3,{children:[\"Use \",(0,n.jsx)(e.code,{children:\"requestAnimationFrame\"}),\" for animations\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Using \",(0,n.jsx)(e.code,{children:\"requestAnimationFrame\"}),\" ensures that animations are synchronized with the browser's repaint cycle:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function animate() {\n  // Animation logic\n  requestAnimationFrame(animate);\n}\nrequestAnimationFrame(animate);\n`})}),`\n`,(0,n.jsxs)(e.h3,{children:[\"Use \",(0,n.jsx)(e.code,{children:\"will-change\"}),\" for frequently changing elements\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"will-change\"}),\" property can hint to the browser about which elements will change, allowing it to optimize rendering:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`.element {\n  will-change: transform;\n}\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Avoid layout thrashing\"}),`\n`,(0,n.jsx)(e.p,{children:\"Reading and writing to the DOM separately can prevent layout thrashing:\"}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`// Mock div element\nconst element = document.createElement('div');\n\nconst height = element.offsetHeight; // Read\nelement.style.height = \\`\\${height + 10}px\\`; // Write\n\nconsole.log(element);\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Glossary/Reflow\",children:\"MDN Web Docs: Reflow\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing\",children:\"Google Developers: Avoid large, complex layouts and layout thrashing\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://css-tricks.com/debouncing-throttling-explained-examples/\",children:\"CSS-Tricks: Debouncing and Throttling Explained Through Examples\"})}),`\n`]})]})}function d(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,{...i,children:(0,n.jsx)(h,{...i})}):h(i)}return v(M);})();\n;return Component;"
}