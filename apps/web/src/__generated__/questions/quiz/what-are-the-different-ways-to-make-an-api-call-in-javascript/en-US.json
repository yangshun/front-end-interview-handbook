{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "easy",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/what-are-the-different-ways-to-make-an-api-call-in-javascript",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "what-are-the-different-ways-to-make-an-api-call-in-javascript",
    "subtitle": null,
    "title": "What are the different ways to make an API call in JavaScript?",
    "topics": [
      "javascript",
      "networking"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/what-are-the-different-ways-to-make-an-api-call-in-javascript/en-US.mdx"
  },
  "solution": "var Component=(()=>{var d=Object.create;var a=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var f=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),g=(r,e)=>{for(var t in e)a(r,t,{get:e[t],enumerable:!0})},i=(r,e,t,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of m(e))!x.call(r,o)&&o!==t&&a(r,o,{get:()=>e[o],enumerable:!(s=p(e,o))||s.enumerable});return r};var y=(r,e,t)=>(t=r!=null?d(u(r)):{},i(e||!r||!r.__esModule?a(t,\"default\",{value:r,enumerable:!0}):t,r)),A=r=>i(a({},\"__esModule\",{value:!0}),r);var l=f((k,c)=>{c.exports=_jsx_runtime});var I={};g(I,{default:()=>b,frontmatter:()=>j});var n=y(l()),j={title:\"What are the different ways to make an API call in JavaScript?\"};function h(r){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",hr:\"hr\",h3:\"h3\",pre:\"pre\",ul:\"ul\",li:\"li\",a:\"a\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"In JavaScript, you can make API calls using several methods. The most common ones are \",(0,n.jsx)(e.code,{children:\"XMLHttpRequest\"}),\", \",(0,n.jsx)(e.code,{children:\"fetch\"}),\", and third-party libraries like \",(0,n.jsx)(e.code,{children:\"Axios\"}),\". \",(0,n.jsx)(e.code,{children:\"XMLHttpRequest\"}),\" is the traditional way but is more verbose. \",(0,n.jsx)(e.code,{children:\"fetch\"}),\" is modern and returns promises, making it easier to work with. \",(0,n.jsx)(e.code,{children:\"Axios\"}),\" is a popular third-party library that simplifies API calls and provides additional features.\"]}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsx)(e.h2,{children:\"Different ways to make an API call in JavaScript\"}),`\n`,(0,n.jsx)(e.h3,{children:\"XMLHttpRequest\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"XMLHttpRequest\"}),\" is the traditional way to make API calls in JavaScript. It is more verbose and requires more code compared to modern methods.\"]}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const xhr = new XMLHttpRequest();\nxhr.open('GET', 'https://jsonplaceholder.typicode.com/todos/1', true);\nxhr.onreadystatechange = function () {\n  if (xhr.readyState === 4 && xhr.status === 200) {\n    console.log(JSON.parse(xhr.responseText));\n  }\n};\nxhr.send();\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Fetch API\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"fetch\"}),\" is a modern and more convenient way to make API calls. It returns a promise, making it easier to handle asynchronous operations.\"]}),`\n`,(0,n.jsx)(e.pre,{live:!0,children:(0,n.jsx)(e.code,{className:\"language-js\",children:`fetch('https://jsonplaceholder.typicode.com/todos/1')\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  })\n  .then((data) => console.log(data))\n  .catch((error) =>\n    console.error('There was a problem with the fetch operation:', error),\n  );\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Axios\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"Axios\"}),\" is a popular third-party library that simplifies making API calls. It provides additional features like interceptors, automatic JSON transformation, and more.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`axios\n  .get('https://api.example.com/data')\n  .then((response) => console.log(response.data))\n  .catch((error) =>\n    console.error('There was a problem with the Axios request:', error),\n  );\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"jQuery AJAX\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"jQuery\"}),\" also provides an \",(0,n.jsx)(e.code,{children:\"ajax\"}),\" method to make API calls. This method is less common in modern development but still used in some legacy projects.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`$.ajax({\n  url: 'https://api.example.com/data',\n  method: 'GET',\n  success: function (data) {\n    console.log(data);\n  },\n  error: function (error) {\n    console.error('There was a problem with the jQuery AJAX request:', error);\n  },\n});\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\",children:\"MDN Web Docs: XMLHttpRequest\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\",children:\"MDN Web Docs: Fetch API\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/axios/axios\",children:\"Axios GitHub Repository\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://api.jquery.com/jquery.ajax/\",children:\"jQuery AJAX Documentation\"})}),`\n`]})]})}function w(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(h,r)})):h(r)}var b=w;return A(I);})();\n;return Component;"
}