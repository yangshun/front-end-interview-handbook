{
  "description": null,
  "info": {
    "excerpt": null,
    "title": "Para que servem os atributos `data-`?",
    "gitHubEditUrl": "https://github.com/yangshun/front-end-interview-handbook/blob/main/packages/quiz/questions/what-are-data-attributes-good-for/pt-BR.mdx"
  },
  "solution": "var Component=(()=>{var l=Object.create;var n=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var h=(e,a)=>()=>(a||e((a={exports:{}}).exports,a),a.exports),f=(e,a)=>{for(var r in a)n(e,r,{get:a[r],enumerable:!0})},d=(e,a,r,s)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let t of p(a))!g.call(e,t)&&t!==r&&n(e,t,{get:()=>a[t],enumerable:!(s=u(a,t))||s.enumerable});return e};var v=(e,a,r)=>(r=e!=null?l(b(e)):{},d(a||!e||!e.__esModule?n(r,\"default\",{value:e,enumerable:!0}):r,e)),x=e=>d(n({},\"__esModule\",{value:!0}),e);var m=h((_,i)=>{i.exports=_jsx_runtime});var z={};f(z,{default:()=>j,frontmatter:()=>M});var o=v(m()),M={title:\"Para que servem os atributos `data-`?\"};function c(e){let a=Object.assign({p:\"p\",code:\"code\",a:\"a\",pre:\"pre\",strong:\"strong\"},e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.p,{children:\"Antes de os frameworks JavaScript se tornarem populares, os desenvolvedores usavam atributos data- para armazenar dados extras dentro do pr\\xF3prio DOM, sem outros hacks, como atributos n\\xE3o padr\\xE3o e propriedades extras no DOM. S\\xE3o destinados a armazenar dados personalizados privados para a p\\xE1gina ou aplica\\xE7\\xE3o, quando n\\xE3o h\\xE1 mais atributos ou elementos apropriados para isso.\"}),`\n`,(0,o.jsxs)(a.p,{children:[\"Outro caso comum de uso dos atributos \",(0,o.jsx)(a.code,{children:\"data-\"}),\" \\xE9 armazenar informa\\xE7\\xF5es usadas por bibliotecas ou frameworks de terceiros. Por exemplo, a biblioteca Bootstrap usa atributos de dados para causar \",(0,o.jsx)(a.code,{children:\"<button>\"}),\"s executar a\\xE7\\xF5es em um modal em outro lugar na p\\xE1gina (\",(0,o.jsx)(a.a,{href:\"https://getbootstrap.com/docs/5.2/components/modal/#via-data-attributes\",children:\"example\"}),\").\"]}),`\n`,(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:\"language-html\",children:`<button type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#myModal\">\n  Iniciar modal\n</button>\n...\n<div class=\"modal fade\" id=\"myModal\">Conte\\xFAdo Modal</div>\n`})}),`\n`,(0,o.jsxs)(a.p,{children:[\"Hoje em dia, usar atributos \",(0,o.jsx)(a.code,{children:\"data-\"}),' geralmente n\\xE3o \\xE9 recomendado. Uma raz\\xE3o \\xE9 que os usu\\xE1rios podem modificar o atributo dos dados facilmente usando \"inspecionar elemento\" no navegador. O modelo de dados \\xE9 melhor armazenado dentro do ambiente JavaScript e mantido em sincronia com o DOM por meio de reconcilia\\xE7\\xE3o virtual do DOM ou binding de dados bidirecional, possivelmente por meio de uma biblioteca ou framework.']}),`\n`,(0,o.jsxs)(a.p,{children:[\"No entanto, um uso perfeitamente v\\xE1lido de atributos de dados \\xE9 adicionar um identificador para frameworks de teste \",(0,o.jsx)(a.strong,{children:\"end-to-end\"}),\" (por exemplo, Playwright, Puppeteer, Selenium), sem adicionar classes ou atributos ID apenas para testes que s\\xE3o principalmente para outros fins. O elemento precisa de uma maneira de ser selecionado e algo como \",(0,o.jsx)(a.code,{children:'data-test-id=\"meu-element\"'}),\" \\xE9 uma maneira v\\xE1lida de faz\\xEA-lo sem convoluir a marca\\xE7\\xE3o sem\\xE2ntica.\"]})]})}function O(e={}){let{wrapper:a}=e.components||{};return a?(0,o.jsx)(a,Object.assign({},e,{children:(0,o.jsx)(c,e)})):c(e)}var j=O;return x(z);})();\n;return Component;"
}