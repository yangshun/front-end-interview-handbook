{
  "description": null,
  "info": {
    "excerpt": null,
    "title": "How do `<iframe>` on a page communicate?",
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/how-do-iframe-on-a-page-communicate/en-US.mdx"
  },
  "solution": "var Component=(()=>{var l=Object.create;var a=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var u=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),w=(t,e)=>{for(var s in e)a(t,s,{get:e[s],enumerable:!0})},o=(t,e,s,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of g(e))!f.call(t,r)&&r!==s&&a(t,r,{get:()=>e[r],enumerable:!(i=m(e,r))||i.enumerable});return t};var v=(t,e,s)=>(s=t!=null?l(p(t)):{},o(e||!t||!t.__esModule?a(s,\"default\",{value:t,enumerable:!0}):s,t)),y=t=>o(a({},\"__esModule\",{value:!0}),t);var d=u((H,c)=>{c.exports=_jsx_runtime});var I={};w(I,{default:()=>b,frontmatter:()=>x});var n=v(d()),x={title:\"How do `<iframe>` on a page communicate?\"};function h(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",pre:\"pre\",hr:\"hr\",h3:\"h3\",h4:\"h4\",ul:\"ul\",li:\"li\",strong:\"strong\",a:\"a\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"<iframe>\"}),\" elements on a page can communicate using the \",(0,n.jsx)(e.code,{children:\"postMessage\"}),\" API. This allows for secure cross-origin communication between the parent page and the iframe. The \",(0,n.jsx)(e.code,{children:\"postMessage\"}),\" method sends a message, and the \",(0,n.jsx)(e.code,{children:\"message\"}),\" event listener receives it. Here's a simple example:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`// In the parent page\nconst iframe = document.querySelector('iframe');\niframe.contentWindow.postMessage('Hello from parent', '*');\n\n// In the iframe\nwindow.addEventListener('message', (event) => {\n  console.log(event.data); // 'Hello from parent'\n});\n`})}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsxs)(e.h2,{children:[\"How do \",(0,n.jsx)(e.code,{children:\"<iframe>\"}),\" on a page communicate?\"]}),`\n`,(0,n.jsxs)(e.h3,{children:[\"Using the \",(0,n.jsx)(e.code,{children:\"postMessage\"}),\" API\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"postMessage\"}),\" API is the most common and secure way for iframes to communicate with each other or with their parent page. This method allows for cross-origin communication, which is essential for modern web applications.\"]}),`\n`,(0,n.jsx)(e.h4,{children:\"Sending a message\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"To send a message from the parent page to the iframe, you can use the \",(0,n.jsx)(e.code,{children:\"postMessage\"}),\" method. Here\\u2019s an example:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`// In the parent page\nconst iframe = document.querySelector('iframe');\niframe.contentWindow.postMessage('Hello from parent', '*');\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"In this example, the parent page selects the iframe and sends a message to it. The second parameter, \",(0,n.jsx)(e.code,{children:\"'*'\"}),\", is the target origin. It specifies the origin of the target window. Using \",(0,n.jsx)(e.code,{children:\"'*'\"}),\" means the message can be received by any origin, but for security reasons, it's better to specify the exact origin.\"]}),`\n`,(0,n.jsx)(e.h4,{children:\"Receiving a message\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"To receive a message in the iframe, you need to add an event listener for the \",(0,n.jsx)(e.code,{children:\"message\"}),\" event:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`// In the iframe\nwindow.addEventListener('message', (event) => {\n  console.log(event.data); // 'Hello from parent'\n});\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"event\"}),\" object contains the \",(0,n.jsx)(e.code,{children:\"data\"}),\" property, which holds the message sent by the parent page.\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"Security considerations\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"When using \",(0,n.jsx)(e.code,{children:\"postMessage\"}),\", it's crucial to consider security:\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Specify the target origin\"}),\": Instead of using \",(0,n.jsx)(e.code,{children:\"'*'\"}),\", specify the exact origin to ensure that only messages from trusted sources are received.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Validate the message\"}),\": Always validate the message content to prevent malicious data from being processed.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Example with target origin\"}),`\n`,(0,n.jsx)(e.p,{children:\"Here\\u2019s an example with a specified target origin:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`// In the parent page\nconst iframe = document.querySelector('iframe');\nconst targetOrigin = 'https://example.com';\niframe.contentWindow.postMessage('Hello from parent', targetOrigin);\n\n// In the iframe\nwindow.addEventListener('message', (event) => {\n  if (event.origin === 'https://parent.com') {\n    console.log(event.data); // 'Hello from parent'\n  }\n});\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"In this example, the parent page sends a message only to \",(0,n.jsx)(e.code,{children:\"https://example.com\"}),\", and the iframe processes the message only if it comes from \",(0,n.jsx)(e.code,{children:\"https://parent.com\"}),\".\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\",children:\"MDN Web Docs: Window.postMessage()\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://html.spec.whatwg.org/multipage/web-messaging.html#dom-window-postmessage\",children:\"HTML Living Standard: postMessage\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage#cross-document_messaging\",children:\"Cross-document messaging\"})}),`\n`]})]})}function M(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(h,t)})):h(t)}var b=M;return y(I);})();\n;return Component;"
}