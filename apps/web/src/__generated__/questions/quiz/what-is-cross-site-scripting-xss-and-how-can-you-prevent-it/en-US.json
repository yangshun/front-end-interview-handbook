{
  "description": null,
  "info": {
    "excerpt": null,
    "title": "What is Cross-Site Scripting (XSS) and how can you prevent it?"
  },
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "easy",
    "duration": 5,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/what-is-cross-site-scripting-xss-and-how-can-you-prevent-it",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "what-is-cross-site-scripting-xss-and-how-can-you-prevent-it",
    "subtitle": null,
    "topics": [
      "javascript",
      "security"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/what-is-cross-site-scripting-xss-and-how-can-you-prevent-it/en-US.mdx"
  },
  "solution": "var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var S=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var m=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=>{for(var i in e)r(t,i,{get:e[i],enumerable:!0})},c=(t,e,i,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of p(e))!g.call(t,s)&&s!==i&&r(t,s,{get:()=>e[s],enumerable:!(a=u(e,s))||a.enumerable});return t};var f=(t,e,i)=>(i=t!=null?d(S(t)):{},c(e||!t||!t.__esModule?r(i,\"default\",{value:t,enumerable:!0}):i,t)),b=t=>c(r({},\"__esModule\",{value:!0}),t);var l=m((k,o)=>{o.exports=_jsx_runtime});var T={};y(T,{default:()=>C,frontmatter:()=>v});var n=f(l()),v={title:\"What is Cross-Site Scripting (XSS) and how can you prevent it?\"};function h(t){let e=Object.assign({h2:\"h2\",p:\"p\",hr:\"hr\",h3:\"h3\",ul:\"ul\",li:\"li\",ol:\"ol\",strong:\"strong\",h4:\"h4\",pre:\"pre\",code:\"code\",a:\"a\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsx)(e.p,{children:\"Cross-Site Scripting (XSS) is a security vulnerability that allows attackers to inject malicious scripts into web pages viewed by other users. This can lead to data theft, session hijacking, and other malicious activities. To prevent XSS, you should validate and sanitize user inputs, use Content Security Policy (CSP), and escape data before rendering it in the browser.\"}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsx)(e.h2,{children:\"What is Cross-Site Scripting (XSS) and how can you prevent it?\"}),`\n`,(0,n.jsx)(e.h3,{children:\"What is Cross-Site Scripting (XSS)?\"}),`\n`,(0,n.jsx)(e.p,{children:\"Cross-Site Scripting (XSS) is a type of security vulnerability typically found in web applications. It allows attackers to inject malicious scripts into content from otherwise trusted websites. These scripts can then be executed in the context of the user's browser, leading to various malicious activities such as:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Stealing cookies and session tokens\"}),`\n`,(0,n.jsx)(e.li,{children:\"Defacing websites\"}),`\n`,(0,n.jsx)(e.li,{children:\"Redirecting users to malicious sites\"}),`\n`,(0,n.jsx)(e.li,{children:\"Logging keystrokes\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"There are three main types of XSS attacks:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Stored XSS\"}),\": The malicious script is permanently stored on the target server, such as in a database, comment field, or forum post.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Reflected XSS\"}),\": The malicious script is reflected off a web server, such as in an error message, search result, or any other response that includes some or all of the input sent to the server.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"DOM-based XSS\"}),\": The vulnerability exists in the client-side code rather than the server-side code. The malicious script is executed as a result of modifying the DOM environment in the victim's browser.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"How can you prevent XSS?\"}),`\n`,(0,n.jsx)(e.h4,{children:\"Validate and sanitize user inputs\"}),`\n`,(0,n.jsx)(e.p,{children:\"Always validate and sanitize user inputs to ensure they do not contain malicious code. Use libraries and frameworks that provide built-in functions for input validation and sanitization.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const sanitizeHtml = require('sanitize-html');\n\nconst cleanInput = sanitizeHtml(userInput);\n`})}),`\n`,(0,n.jsx)(e.h4,{children:\"Use Content Security Policy (CSP)\"}),`\n`,(0,n.jsx)(e.p,{children:\"A Content Security Policy (CSP) is a security feature that helps prevent XSS attacks by specifying which dynamic resources are allowed to load. This can be done by setting HTTP headers.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-http\",children:`Content-Security-Policy: default-src 'self'; script-src 'self' https://trusted.cdn.com;\n`})}),`\n`,(0,n.jsx)(e.h4,{children:\"Escape data before rendering\"}),`\n`,(0,n.jsx)(e.p,{children:\"Always escape data before rendering it in the browser to prevent the execution of malicious scripts. Use functions provided by your framework or library to escape HTML, JavaScript, and other content.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const escapeHtml = (str) => {\n  return str\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;');\n};\n\nconst safeOutput = escapeHtml(userInput);\n`})}),`\n`,(0,n.jsx)(e.h4,{children:\"Use HTTP-only cookies\"}),`\n`,(0,n.jsx)(e.p,{children:\"Set cookies to be HTTP-only to prevent client-side scripts from accessing them. This can help mitigate the risk of session hijacking.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-http\",children:`Set-Cookie: sessionId=abc123; HttpOnly;\n`})}),`\n`,(0,n.jsx)(e.h4,{children:\"Regularly update dependencies\"}),`\n`,(0,n.jsx)(e.p,{children:\"Keep your libraries and frameworks up to date to ensure you have the latest security patches and features.\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://cheatsheetseries.owasp.org/cheatsheets/XSS_Prevention_Cheat_Sheet.html\",children:\"OWASP XSS Prevention Cheat Sheet\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP\",children:\"MDN Web Docs: Content Security Policy (CSP)\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developers.google.com/web/fundamentals/security/csp\",children:\"Google Web Fundamentals: Preventing XSS\"})}),`\n`]})]})}function w(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(h,t)})):h(t)}var C=w;return b(T);})();\n;return Component;"
}