{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "hard",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/have-you-ever-worked-with-retina-graphics-if-so-when-and-what-techniques-did-you-use",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "have-you-ever-worked-with-retina-graphics-if-so-when-and-what-techniques-did-you-use",
    "subtitle": "Em caso afirmativo, quando e que técnicas utilizou?",
    "title": "Você já trabalhou com gráficos de retina?",
    "topics": [
      "css"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/front-end-interview-handbook/blob/main/packages/quiz/questions/have-you-ever-worked-with-retina-graphics-if-so-when-and-what-techniques-did-you-use/pt-BR.mdx"
  },
  "solution": "var Component=(()=>{var p=Object.create;var i=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var v=(o,e)=>()=>(e||o((e={exports:{}}).exports,e),e.exports),x=(o,e)=>{for(var a in e)i(o,a,{get:e[a],enumerable:!0})},t=(o,e,a,n)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of u(e))!h.call(o,r)&&r!==a&&i(o,r,{get:()=>e[r],enumerable:!(n=l(e,r))||n.enumerable});return o};var f=(o,e,a)=>(a=o!=null?p(g(o)):{},t(e||!o||!o.__esModule?i(a,\"default\",{value:o,enumerable:!0}):a,o)),j=o=>t(i({},\"__esModule\",{value:!0}),o);var d=v((M,m)=>{m.exports=_jsx_runtime});var z={};x(z,{default:()=>w,frontmatter:()=>q});var s=f(d()),q={title:\"Voc\\xEA j\\xE1 trabalhou com gr\\xE1ficos de retina?\",subtitle:\"Em caso afirmativo, quando e que t\\xE9cnicas utilizou?\"};function c(o){let e=Object.assign({p:\"p\",em:\"em\",code:\"code\",pre:\"pre\",a:\"a\"},o.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.em,{children:\"Retina\"}),\" \\xE9 apenas um termo de marketing usado para se referir a telas de alta resolu\\xE7\\xE3o com uma propor\\xE7\\xE3o de pixels maior do que 1. O ponto chave a saber \\xE9 que o uso de uma taxa de pixels significa que essas telas est\\xE3o emulando uma tela de resolu\\xE7\\xE3o mais baixa para mostrar elementos com o mesmo tamanho. Hoje em dia, consideramos todos os dispositivos m\\xF3veis \",(0,s.jsx)(e.em,{children:\"retina\"}),\" por padr\\xE3o.\"]}),`\n`,(0,s.jsx)(e.p,{children:\"Os navegadores, por padr\\xE3o, renderizam elementos do DOM de acordo com a resolu\\xE7\\xE3o do dispositivo, exceto para imagens.\"}),`\n`,(0,s.jsx)(e.p,{children:\"Para ter gr\\xE1ficos n\\xEDtidos e com boa apar\\xEAncia que aproveitem ao m\\xE1ximo as telas retina, precisamos usar imagens de alta resolu\\xE7\\xE3o sempre que poss\\xEDvel. No entanto, usar sempre imagens com a maior resolu\\xE7\\xE3o ter\\xE1 um impacto no desempenho, j\\xE1 que mais bytes precisar\\xE3o ser enviados pela rede.\"}),`\n`,(0,s.jsxs)(e.p,{children:[\"Para superar esse problema, podemos usar imagens responsivas, como especificado no HTML5. Ele requer disponibilizar diferentes arquivos de resolu\\xE7\\xE3o da mesma imagem para o navegador e deix\\xE1-lo decidir qual imagem \\xE9 a melhor, usando o atributo html \",(0,s.jsx)(e.code,{children:\"srcset\"}),\" e opcionalmente \",(0,s.jsx)(e.code,{children:\"sizes\"}),\", por exemplo:\"]}),`\n`,(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:\"language-html\",children:`<div responsive-background-image>\n  <img\n    src=\"/images/test-1600.jpg\"\n    sizes=\"\n      (min-width: 768px) 50vw,\n      (min-width: 1024px) 66vw,\n      100vw\"\n    srcset=\"\n      /images/test-400.jpg   400w,\n      /images/test-800.jpg   800w,\n      /images/test-1200.jpg 1200w\n    \" />\n</div>\n`})}),`\n`,(0,s.jsxs)(e.p,{children:[\"\\xC9 importante notar que os navegadores que n\\xE3o suportam o \",(0,s.jsx)(e.code,{children:\"srcset\"}),\" do HTML5 (ou seja, IE11) v\\xE3o ignor\\xE1-lo e usar o \",(0,s.jsx)(e.code,{children:\"src\"}),\" em vez disso. Se realmente precisarmos oferecer suporte ao IE11 e quisermos fornecer esse recurso por motivos de desempenho, podemos usar um polyfill JavaScript, como o \",(0,s.jsx)(e.a,{href:\"https://scottjehl.github.io/picturefill/\",children:\"Picturefill\"}),\".\"]}),`\n`,(0,s.jsx)(e.p,{children:\"Para \\xEDcones, \\xE9 recomendado usar SVGs sempre que poss\\xEDvel, pois eles s\\xE3o renderizados com muita nitidez independentemente da resolu\\xE7\\xE3o.\"})]})}function b(o={}){let{wrapper:e}=o.components||{};return e?(0,s.jsx)(e,Object.assign({},o,{children:(0,s.jsx)(c,o)})):c(o)}var w=b;return j(z);})();\n;return Component;"
}