{
  "description": null,
  "metadata": {
    "access": "free",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "easy",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/what-is-the-purpose-of-the-new-keyword",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "what-is-the-purpose-of-the-new-keyword",
    "subtitle": null,
    "title": "What is the purpose of the `new` keyword?",
    "topics": [
      "javascript",
      "oop"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/top-javascript-interview-questions/blob/main/questions/what-is-the-purpose-of-the-new-keyword/en-US.mdx"
  },
  "solution": "var Component=(()=>{var d=Object.create;var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var g=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=>{for(var o in e)c(t,o,{get:e[o],enumerable:!0})},s=(t,e,o,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of u(e))!w.call(t,r)&&r!==o&&c(t,r,{get:()=>e[r],enumerable:!(i=p(e,r))||i.enumerable});return t};var f=(t,e,o)=>(o=t!=null?d(m(t)):{},s(e||!t||!t.__esModule?c(o,\"default\",{value:t,enumerable:!0}):o,t)),j=t=>s(c({},\"__esModule\",{value:!0}),t);var h=g((C,a)=>{a.exports=_jsx_runtime});var x={};y(x,{default:()=>T,frontmatter:()=>b});var n=f(h()),b={title:\"What is the purpose of the `new` keyword?\"};function l(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",pre:\"pre\",hr:\"hr\",h3:\"h3\",ul:\"ul\",li:\"li\",a:\"a\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"new\"}),\" keyword in JavaScript is used to create an instance of a user-defined object type or one of the built-in object types that has a constructor function. When you use \",(0,n.jsx)(e.code,{children:\"new\"}),\", it does four things: it creates a new object, sets the prototype, binds \",(0,n.jsx)(e.code,{children:\"this\"}),\" to the new object, and returns the new object.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function Person(name) {\n  this.name = name;\n}\n\nconst person1 = new Person('Alice');\nconsole.log(person1.name); // Alice\n`})}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsxs)(e.h2,{children:[\"The purpose of the \",(0,n.jsx)(e.code,{children:\"new\"}),\" keyword\"]}),`\n`,(0,n.jsx)(e.h3,{children:\"Creating a new object\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"new\"}),\" keyword is used to create a new instance of an object. When you call a constructor function with \",(0,n.jsx)(e.code,{children:\"new\"}),\", it creates a new object.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function Car(model) {\n  this.model = model;\n}\n\nconst myCar = new Car('Toyota');\nconsole.log(myCar.model); // Toyota\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Setting the prototype\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The new object\\u2019s internal \",(0,n.jsx)(e.code,{children:\"[[Prototype]]\"}),\" property is set to the constructor function\\u2019s \",(0,n.jsx)(e.code,{children:\"prototype\"}),\" property. This allows the new object to inherit properties and methods from the constructor\\u2019s prototype.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function Animal(type) {\n  this.type = type;\n}\n\nAnimal.prototype.speak = function () {\n  console.log(\\`\\${this.type} makes a sound\\`);\n};\n\nconst dog = new Animal('Dog');\ndog.speak(); // Dog makes a sound\n`})}),`\n`,(0,n.jsxs)(e.h3,{children:[\"Binding \",(0,n.jsx)(e.code,{children:\"this\"}),\" to the new object\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Inside the constructor function, \",(0,n.jsx)(e.code,{children:\"this\"}),\" refers to the new object that is being created. This allows you to add properties and methods to the new object.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function Book(title) {\n  this.title = title;\n}\n\nconst myBook = new Book('JavaScript Essentials');\nconsole.log(myBook.title); // JavaScript Essentials\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Returning the new object\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"new\"}),\" keyword implicitly returns the new object created by the constructor function. If the constructor function explicitly returns an object, that object will be returned instead.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`function Gadget(name) {\n  this.name = name;\n  return { type: 'Electronic' };\n}\n\nconst myGadget = new Gadget('Smartphone');\nconsole.log(myGadget.type); // Electronic\nconsole.log(myGadget.name); // undefined\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new\",children:\"MDN Web Docs: new operator\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://javascript.info/constructor-new\",children:'JavaScript.info: Constructor, operator \"new\"'})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://eloquentjavascript.net/06_object.html#h_XTmO7z7MPq\",children:\"Eloquent JavaScript: Constructors\"})}),`\n`]})]})}function k(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(l,t)})):l(t)}var T=k;return j(x);})();\n;return Component;"
}